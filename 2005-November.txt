From aurelienc at berlios.de  Wed Nov  2 10:11:20 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Wed, 2 Nov 2005 10:11:20 +0100
Subject: [Maay-svncheckins] r262 - trunk/maay/configuration
Message-ID: <200511020911.jA29BK84012867@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-02 10:11:19 +0100 (Wed, 02 Nov 2005)
New Revision: 262

Added:
   trunk/maay/configuration/image.ini
Log:
Config file for the image stuff.


Added: trunk/maay/configuration/image.ini
===================================================================
--- trunk/maay/configuration/image.ini	2005-10-31 20:54:39 UTC (rev 261)
+++ trunk/maay/configuration/image.ini	2005-11-02 09:11:19 UTC (rev 262)
@@ -0,0 +1 @@
+thumbnails-dir=.maay_thumbnails
\ No newline at end of file



From aurelienc at berlios.de  Wed Nov  2 10:45:01 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Wed, 2 Nov 2005 10:45:01 +0100
Subject: [Maay-svncheckins] r263 - in trunk/maay: . test
Message-ID: <200511020945.jA29j1Zu020789@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-02 10:44:50 +0100 (Wed, 02 Nov 2005)
New Revision: 263

Modified:
   trunk/maay/configuration.py
   trunk/maay/test/test_configuration.py
Log:
-sanitize the get_config_dirs method (it no longer returns inexistant config dirs)
-parametrize Configuration with alternative config name (allows to provide alternat. to default 'maay' as used in '/etc/maay' and '~/.maay')


Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-02 09:11:19 UTC (rev 262)
+++ trunk/maay/configuration.py	2005-11-02 09:44:50 UTC (rev 263)
@@ -18,7 +18,7 @@
 
 __revision__ = '$Id$'
 
-import os
+import os, os.path as osp
 import sys
 
 from logilab.common.configuration import Configuration as BaseConfiguration
@@ -76,16 +76,22 @@
     assert os.path.exists(path), "cannot find %s"%path
     return path
 
-    
+def _filter_accessible_files(file_list):
+    res = [file_obj for file_obj in file_list]
+    for file_obj in file_list:
+        if os.access(file_obj, os.R_OK):
+            res.append(file_obj)
+    return res
 
 class Configuration(BaseConfiguration):
     options = []
     config_file = None
 
-    def __init__(self, name=None):
+    def __init__(self, name=None, alternative_config_name=None):
         BaseConfiguration.__init__(self, options=self.options,
                                    config_file=self.config_file,
                                    name=name)
+        self.config_name = alternative_config_name or 'maay'
 
     def load(self):
         if self.config_file:
@@ -97,10 +103,12 @@
     
 
     def get_config_dirs(self):
-        if sys.platform == "win32":
+        if sys.platform == "win32": # XXX: fix Win32 with self.config_dir attr
             return [os.path.normpath(os.path.join(_get_data_dir(), '..'))]
         else:
-            return ['/etc/maay', os.path.expanduser('~/.maay'), '.']
+            return _filter_accessible_files([osp.join('/etc/', self.config_name),
+                                             os.path.expanduser('~/.' + self.config_name),
+                                            '.'])
 
     def __getattr__(self, attrname):
         """delegate to self.config when accessing attr on

Modified: trunk/maay/test/test_configuration.py
===================================================================
--- trunk/maay/test/test_configuration.py	2005-11-02 09:11:19 UTC (rev 262)
+++ trunk/maay/test/test_configuration.py	2005-11-02 09:44:50 UTC (rev 263)
@@ -58,6 +58,10 @@
         self.assertEquals(config.db_host, 'truc')
         self.assertEquals(config.db_name, 'muche')
 
+    def testFilterAccessibleFiles(self): #XXX: what about Win32 ?
+        files = ['.', '/this/should/never/be/found/to/exist']
+        result = configuration._filter_accessible_files(files)
+        self.assertEquals(result, ['.'])
 
 if sys.platform == 'win32':
     class Win32ConfigTC(unittest.TestCase):



From aurelienc at berlios.de  Wed Nov  2 10:47:59 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Wed, 2 Nov 2005 10:47:59 +0100
Subject: [Maay-svncheckins] r264 - trunk/maay
Message-ID: <200511020947.jA29lx9e021282@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-02 10:47:58 +0100 (Wed, 02 Nov 2005)
New Revision: 264

Modified:
   trunk/maay/configuration.py
Log:
Fix spurious thing in previous patch.


Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-02 09:44:50 UTC (rev 263)
+++ trunk/maay/configuration.py	2005-11-02 09:47:58 UTC (rev 264)
@@ -77,7 +77,7 @@
     return path
 
 def _filter_accessible_files(file_list):
-    res = [file_obj for file_obj in file_list]
+    res = []
     for file_obj in file_list:
         if os.access(file_obj, os.R_OK):
             res.append(file_obj)



From aurelienc at berlios.de  Wed Nov  2 10:49:48 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Wed, 2 Nov 2005 10:49:48 +0100
Subject: [Maay-svncheckins] r265 - trunk/maay
Message-ID: <200511020949.jA29nmPs022044@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-02 10:49:47 +0100 (Wed, 02 Nov 2005)
New Revision: 265

Modified:
   trunk/maay/configuration.py
Log:
Ask a good question :)


Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-02 09:47:58 UTC (rev 264)
+++ trunk/maay/configuration.py	2005-11-02 09:49:47 UTC (rev 265)
@@ -106,6 +106,7 @@
         if sys.platform == "win32": # XXX: fix Win32 with self.config_dir attr
             return [os.path.normpath(os.path.join(_get_data_dir(), '..'))]
         else:
+            #XXX: should '.' really be an acceptable config dir ?
             return _filter_accessible_files([osp.join('/etc/', self.config_name),
                                              os.path.expanduser('~/.' + self.config_name),
                                             '.'])



From aurelienc at berlios.de  Wed Nov  2 10:52:22 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Wed, 2 Nov 2005 10:52:22 +0100
Subject: [Maay-svncheckins] r266 - trunk/maay
Message-ID: <200511020952.jA29qMAg022746@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-02 10:52:18 +0100 (Wed, 02 Nov 2005)
New Revision: 266

Modified:
   trunk/maay/configuration.py
Log:
one more minuscule config comment cleanup


Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-02 09:49:47 UTC (rev 265)
+++ trunk/maay/configuration.py	2005-11-02 09:52:18 UTC (rev 266)
@@ -103,7 +103,7 @@
     
 
     def get_config_dirs(self):
-        if sys.platform == "win32": # XXX: fix Win32 with self.config_dir attr
+        if sys.platform == "win32": # XXX: fix Win32 with self.config_name attr
             return [os.path.normpath(os.path.join(_get_data_dir(), '..'))]
         else:
             #XXX: should '.' really be an acceptable config dir ?



From aurelienc at berlios.de  Wed Nov  2 12:02:48 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Wed, 2 Nov 2005 12:02:48 +0100
Subject: [Maay-svncheckins] r268 - trunk/maay
Message-ID: <200511021102.jA2B2miq007304@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-02 12:02:45 +0100 (Wed, 02 Nov 2005)
New Revision: 268

Modified:
   trunk/maay/image.py
   trunk/maay/indexer.py
Log:
Fix config. parts.


Modified: trunk/maay/image.py
===================================================================
--- trunk/maay/image.py	2005-11-02 10:58:17 UTC (rev 267)
+++ trunk/maay/image.py	2005-11-02 11:02:45 UTC (rev 268)
@@ -28,7 +28,7 @@
     pass
         
 class ImageConfiguration(Configuration):
-    options = [
+    options = Configuration.options + [
         ('thumbnails-dir',
          {'type' : "string", 'metavar' : "--thumbnailsdir", 'short' : "-thumbs",
           'help' : "Thumbnail files repository",

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-02 10:58:17 UTC (rev 267)
+++ trunk/maay/indexer.py	2005-11-02 11:02:45 UTC (rev 268)
@@ -226,7 +226,7 @@
 ## main() ##################################################
 
 class IndexerConfiguration(Configuration):
-    options = [
+    options = Configuration.options + [
         ('host',
          {'type' : "string", 'metavar' : "<host>", 'short' : "H",
           'help' : "where Maay node can be found",



From aurelienc at berlios.de  Wed Nov  2 11:58:20 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Wed, 2 Nov 2005 11:58:20 +0100
Subject: [Maay-svncheckins] r267 - trunk/maay
Message-ID: <200511021058.jA2AwKB2005955@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-02 11:58:17 +0100 (Wed, 02 Nov 2005)
New Revision: 267

Modified:
   trunk/maay/configuration.py
   trunk/maay/server.py
Log:
-add cmd option to specify file options
-fix server config


Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-02 09:52:18 UTC (rev 266)
+++ trunk/maay/configuration.py	2005-11-02 10:58:17 UTC (rev 267)
@@ -84,14 +84,20 @@
     return res
 
 class Configuration(BaseConfiguration):
-    options = []
+    options = [
+        ('config-name',
+         {'type' : "string", 'metavar' : "<config-name>", 'short' : "C",
+         'help' : "allow to specify a config directory name",
+          'default' : "maay",
+        })]
     config_file = None
 
-    def __init__(self, name=None, alternative_config_name=None):
+    def __init__(self, name=None):
         BaseConfiguration.__init__(self, options=self.options,
                                    config_file=self.config_file,
                                    name=name)
-        self.config_name = alternative_config_name or 'maay'
+        self.load_command_line_configuration()
+        self.config_name = self['config-name']
 
     def load(self):
         if self.config_file:

Modified: trunk/maay/server.py
===================================================================
--- trunk/maay/server.py	2005-11-02 09:52:18 UTC (rev 266)
+++ trunk/maay/server.py	2005-11-02 10:58:17 UTC (rev 267)
@@ -443,7 +443,7 @@
     """provide an interface in order to be able to remember webappconfig"""
 
 class WebappConfiguration(Configuration):
-    options = [
+    options = Configuration.options + [
         ('db-name',
          {'type' : "string", 'metavar' : "<dbname>", 'short' : "d",
           'help' : "name of the Maay database",
@@ -460,7 +460,6 @@
           'help': 'login of anonymous user to use to connect to the database',
           'default' : "maay",
           }),
-
         ('password',
          {'type': 'string',
           'metavar': '<password>', 'short' : "p",



From aurelienc at berlios.de  Wed Nov  2 14:57:49 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Wed, 2 Nov 2005 14:57:49 +0100
Subject: [Maay-svncheckins] r272 - trunk/maay
Message-ID: <200511021357.jA2DvnXw014833@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-02 14:57:46 +0100 (Wed, 02 Nov 2005)
New Revision: 272

Modified:
   trunk/maay/configuration.py
Log:
typo


Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-02 13:53:24 UTC (rev 271)
+++ trunk/maay/configuration.py	2005-11-02 13:57:46 UTC (rev 272)
@@ -119,7 +119,7 @@
                                       os.R_OK)
 
     def get_writable_config_dirs(self):
-        return _filter_files_with(self.getconfig_dirs(), os.W_OK)
+        return _filter_files_with(self.get_config_dirs(), os.W_OK)
 
     def __getattr__(self, attrname):
         """delegate to self.config when accessing attr on



From aurelienc at berlios.de  Wed Nov  2 14:53:27 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Wed, 2 Nov 2005 14:53:27 +0100
Subject: [Maay-svncheckins] r271 - in trunk/maay: . test
Message-ID: <200511021353.jA2DrRPN012587@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-02 14:53:24 +0100 (Wed, 02 Nov 2005)
New Revision: 271

Modified:
   trunk/maay/configuration.py
   trunk/maay/server.py
   trunk/maay/test/test_configuration.py
Log:
Gestion de node_id appelle get_writable_config_dir (sinon bug en perspective avec /etc/maay) pour placer le node_id. 


Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-02 11:48:45 UTC (rev 270)
+++ trunk/maay/configuration.py	2005-11-02 13:53:24 UTC (rev 271)
@@ -76,10 +76,10 @@
     assert os.path.exists(path), "cannot find %s"%path
     return path
 
-def _filter_accessible_files(file_list):
+def _filter_files_with(file_list, access_criterium):
     res = []
     for file_obj in file_list:
-        if os.access(file_obj, os.R_OK):
+        if os.access(file_obj, access_criterium):
             res.append(file_obj)
     return res
 
@@ -113,10 +113,14 @@
             return [os.path.normpath(os.path.join(_get_data_dir(), '..'))]
         else:
             #XXX: should '.' really be an acceptable config dir ?
-            return _filter_accessible_files([osp.join('/etc/', self.config_name),
-                                             os.path.expanduser('~/.' + self.config_name),
-                                            '.'])
+            return _filter_files_with([osp.join('/etc/', self.config_name),
+                                       os.path.expanduser('~/.' + self.config_name),
+                                       '.'],
+                                      os.R_OK)
 
+    def get_writable_config_dirs(self):
+        return _filter_files_with(self.getconfig_dirs(), os.W_OK)
+
     def __getattr__(self, attrname):
         """delegate to self.config when accessing attr on
         Configuration objects. (convenience method)

Modified: trunk/maay/server.py
===================================================================
--- trunk/maay/server.py	2005-11-02 11:48:45 UTC (rev 270)
+++ trunk/maay/server.py	2005-11-02 13:53:24 UTC (rev 271)
@@ -510,7 +510,7 @@
         return self.node_id
 
     def _read_node_id(self):
-        for directory in self.get_config_dirs():
+        for directory in self.get_writable_config_dirs():
             try:
                 filename = os.path.join(directory, self.nodeid_file)
                 f = open(filename,'r')
@@ -536,7 +536,7 @@
 
     def _write_node_id(self):
         node_id = self._generate_node_id()
-        for directory in self.get_config_dirs():
+        for directory in self.get_writable_config_dirs():
             try:
                 filename = os.path.join(directory, self.nodeid_file)
                 f = open(filename, 'w')

Modified: trunk/maay/test/test_configuration.py
===================================================================
--- trunk/maay/test/test_configuration.py	2005-11-02 11:48:45 UTC (rev 270)
+++ trunk/maay/test/test_configuration.py	2005-11-02 13:53:24 UTC (rev 271)
@@ -58,9 +58,9 @@
         self.assertEquals(config.db_host, 'truc')
         self.assertEquals(config.db_name, 'muche')
 
-    def testFilterAccessibleFiles(self): #XXX: what about Win32 ?
+    def testFilterFilesWith(self): #XXX: what about Win32 ?
         files = ['.', '/this/should/never/be/found/to/exist']
-        result = configuration._filter_accessible_files(files)
+        result = configuration._filter_files_with(files, os.R_OK)
         self.assertEquals(result, ['.'])
 
 if sys.platform == 'win32':



From aurelienc at berlios.de  Wed Nov  2 12:48:50 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Wed, 2 Nov 2005 12:48:50 +0100
Subject: [Maay-svncheckins] r270 - trunk/maay
Message-ID: <200511021148.jA2Bmots028950@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-02 12:48:45 +0100 (Wed, 02 Nov 2005)
New Revision: 270

Modified:
   trunk/maay/indexer.py
Log:
Replace the purge hack with a proper config options. Note : this triggers a strange bug when indexing image (thumbnail creation fails) with --purge=n explicit option.


Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-02 11:46:31 UTC (rev 269)
+++ trunk/maay/indexer.py	2005-11-02 11:48:45 UTC (rev 270)
@@ -77,6 +77,11 @@
             if self.verbose:
                 print "Got failure from server:", errmsg
             raise MaayAuthenticationError("Failed to connect as '%s'" % username)
+        # we might be asked to purge everything and just exit
+        if indexerConfig['purge']:
+            self._purgeEverything()
+            sys.exit(0)
+            
         
     def getFileIterator(self, isPrivate=True):
         if isPrivate:
@@ -282,6 +287,12 @@
           'help': 'enable verbose mode',
           "default": False,
           }),
+        ('purge',
+         {'type' : 'yn',
+          'help' : 'purge the set of indexed documents and returns immediately',
+          'metavar' : '<y or n>',
+          'default' : False,
+          }),
         ]
 
     config_file = 'indexer.ini'
@@ -290,10 +301,7 @@
         Configuration.__init__(self, name="Indexer")
 
 
-def purge():
-    run(purge=True)
-
-def run(purge=False):
+def run():
     indexerConfig = IndexerConfiguration()
     indexerConfig.load()
     try:
@@ -302,10 +310,7 @@
         except MaayAuthenticationError, exc:
             print "AuthenticationError:", exc
             sys.exit(1)
-        if not purge:
-            indexer.start()
-        else:
-            indexer._purgeEverything()
+        indexer.start()
     except socket.error, exc:
         print "Cannot contact server:", exc
         print "Check that the server is running on %s:%s" % \



From aurelienc at berlios.de  Wed Nov  2 12:46:37 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Wed, 2 Nov 2005 12:46:37 +0100
Subject: [Maay-svncheckins] r269 - trunk/maay
Message-ID: <200511021146.jA2Bkb7a027862@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-02 12:46:31 +0100 (Wed, 02 Nov 2005)
New Revision: 269

Modified:
   trunk/maay/texttool.py
Log:
fix print statement


Modified: trunk/maay/texttool.py
===================================================================
--- trunk/maay/texttool.py	2005-11-02 11:02:45 UTC (rev 268)
+++ trunk/maay/texttool.py	2005-11-02 11:46:31 UTC (rev 269)
@@ -30,7 +30,7 @@
 from sets import Set
 
 from maay.image import get_ustring_from_exif, make_thumbnail, \
-     ImageConfiguration as ImConfig, NoThumbnailsDir
+     ImageConfiguration as ImConfig, NoThumbnailsDir, ThumbnailCreationError
 
 WORD_MIN_LEN = 2
 WORD_MAX_LEN = 50
@@ -230,7 +230,8 @@
             try:
                 thumb = make_thumbnail(filepath, self.get_thumbnails_dir())
             except Exception, e:
-                print "Can't make thumbnail. Cause : %s", e
+                print "Can't make thumbnail. Cause : %s" % e
+                thumb = None
             return title, result, [thumb], 0
         except Exception, e:
             print "No EXIF nor thumbnails. Cause : %s" % e



From aurelienc at berlios.de  Wed Nov  2 18:18:01 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Wed, 2 Nov 2005 18:18:01 +0100
Subject: [Maay-svncheckins] r273 - trunk/maay
Message-ID: <200511021718.jA2HI1KS016339@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-02 18:18:00 +0100 (Wed, 02 Nov 2005)
New Revision: 273

Modified:
   trunk/maay/dbentity.py
Log:
class DBEntity made new-style (mainly to satisfy usefulness of type() function)


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-02 13:57:46 UTC (rev 272)
+++ trunk/maay/dbentity.py	2005-11-02 17:18:00 UTC (rev 273)
@@ -25,7 +25,7 @@
 
 from maay.texttool import normalizeText, WORD_MIN_LEN, WORD_MAX_LEN
 
-class DBEntity:
+class DBEntity(object):
     attributes = []
     tableName = None
     key = (None, )



From aurelienc at berlios.de  Wed Nov  2 18:22:37 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Wed, 2 Nov 2005 18:22:37 +0100
Subject: [Maay-svncheckins] r274 - trunk/maay
Message-ID: <200511021722.jA2HMbPH016670@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-02 18:22:36 +0100 (Wed, 02 Nov 2005)
New Revision: 274

Modified:
   trunk/maay/server.py
Log:
Distributed queries almost (basically) working. Need to understand xmlrpc serialization bug to make it actually work.


Modified: trunk/maay/server.py
===================================================================
--- trunk/maay/server.py	2005-11-02 17:18:00 UTC (rev 273)
+++ trunk/maay/server.py	2005-11-02 17:22:36 UTC (rev 274)
@@ -30,6 +30,7 @@
 import os
 import re
 import socket
+from xmlrpclib import ServerProxy
 
 from zope.interface import implements, Interface
 
@@ -189,11 +190,38 @@
     def child_peers(self, context):
         return PeersList(self.maayId, self.querier)
 
+    def _harvest_peer_results(self, query, context):
+        results = []
+        webappConfig = IWebappConfiguration(context)
+        peers = self.querier.getActiveNeighbors(webappConfig.get_node_id(), 10)
+        print "SearchForm child_search peers = ", peers
+        for peer in peers:
+            server = ServerProxy('http://%s:%s' % (peer.ip, peer.port),
+                                 allow_none=True,
+                                 encoding='utf-8')
+            try:
+                cnxid, errmsg = server.authenticate('', '')
+            except Exception, e:
+                errmsg = "%s" % e
+            if errmsg:
+                print "For reason '%s', we couldn't authenticate with node %s:%s" \
+                      % (errmsg, peer.ip, peer.port)
+                continue # for whatever reason, we couldn't authenticate
+            try: #XXX: xmlrpc serialization problems arise here
+                results += server.findDocuments(cnxid, query)
+            except Exception, e:
+                print "SearchForm _harvest_peer_results pb : %s", e
+        return results
+
     def child_search(self, context):
         # query = unicode(context.arg('words'))        
         offset = int(context.arg('offset', 0))
-        query = Query.fromRawQuery(unicode(context.arg('words'), 'utf-8'), offset)
-        results = self.querier.findDocuments(query)
+        rawQuery = unicode(context.arg('words'), 'utf-8')
+        query = Query.fromRawQuery(rawQuery, offset)
+        localResults = self.querier.findDocuments(query)
+        peerResults = self._harvest_peer_results(rawQuery, context)
+        print "Results from the peers :", peerResults
+        results = localResults + peerResults
         return ResultsPage(self.maayId, results, query)
 
     # XXX make sure that the requested document is really in the database
@@ -304,7 +332,7 @@
                     print "Building search form for", avatarId
                     resc = SearchForm(avatarId, querier)
                 return inevow.IResource, resc, resc.logout
-            # if we wer asked for a querier
+            # if we were asked for a querier
             elif iface is IQuerier:
                 querier = self._getQuerier(avatarId)
                 if querier is None:



From aurelienc at berlios.de  Thu Nov  3 09:40:35 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 3 Nov 2005 09:40:35 +0100
Subject: [Maay-svncheckins] r275 - trunk/maay
Message-ID: <200511030840.jA38eZ3N028151@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-03 09:40:28 +0100 (Thu, 03 Nov 2005)
New Revision: 275

Modified:
   trunk/maay/server.py
Log:
small beautification


Modified: trunk/maay/server.py
===================================================================
--- trunk/maay/server.py	2005-11-02 17:22:36 UTC (rev 274)
+++ trunk/maay/server.py	2005-11-03 08:40:28 UTC (rev 275)
@@ -624,8 +624,11 @@
                                           maayPortal))
     reactor.listenTCP(webappConfig.webserver_port, website)
     reactor.listenTCP(webappConfig.rpcserver_port, rpcserver)
-    print "In the mainloop ..."
-    reactor.run()
+    try:
+        print "-------------Server mainloop-------------"
+        reactor.run()
+    finally:
+        print "-----------Shutting down Server----------"
 
 if __name__ == '__main__':
     run()



From aurelienc at berlios.de  Thu Nov  3 10:38:43 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 3 Nov 2005 10:38:43 +0100
Subject: [Maay-svncheckins] r276 - trunk/maay
Message-ID: <200511030938.jA39ch5p026847@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-03 10:38:40 +0100 (Thu, 03 Nov 2005)
New Revision: 276

Modified:
   trunk/maay/registration.py
Log:
Add auto logout feature.


Modified: trunk/maay/registration.py
===================================================================
--- trunk/maay/registration.py	2005-11-03 08:40:28 UTC (rev 275)
+++ trunk/maay/registration.py	2005-11-03 09:38:40 UTC (rev 276)
@@ -27,10 +27,24 @@
 from twisted.protocols.basic import LineReceiver
 
 class RegistrationServer(LineReceiver):
-    _registeredUsers = {}
+    #_registeredUsers = {} why class member ?
     # TODO: auto logout after a given time to save memory
+
+    def __init__(self, autoExpirationDelayInSecs=3600):
+        self._autoExpirationDelayInSecs = autoExpirationDelayInSecs
+        self._registeredUsers = {}
+        self._ruTimestamp = {}
+
+    def _auto_logout_everybody(self):
+        """evicts registered nodes after some time
+        """
+        now = datetime.utcnow()
+        for nodeId, values in self._ruTimestamp.items():
+            dt = now - values
+            if dt.seconds > self._autoExpirationDelayInSecs:
+                del self._registeredUsers[nodeId]
+                del self._ruTimestamp[nodeId]
         
-        
     def lineReceived(self, line):
         """received lines should match the following format :
         action:parm1:param2:...:paramn
@@ -50,21 +64,25 @@
                     result = callback()
             else:
                 result = "received invalid action: <%s>" % action
+        self._auto_logout_everybody()
         
     def do_login(self, nodeId, ip, port, bandwidth):
         print "%s accepts %s" % (id(self), nodeId)
         if nodeId in self._registeredUsers:
             print "%s was already registered" % (nodeId,)
-        lastseen = datetime.utcnow().isoformat()
-        self._registeredUsers[nodeId] = (lastseen,
+        lastseen = datetime.utcnow()
+        self._ruTimestamp[nodeId] = lastseen
+        self._registeredUsers[nodeId] = (lastseen.isoformat(),
                                          nodeId,
                                          ip,
                                          port,
                                          bandwidth)
+        self._auto_logout_everybody()
 
     def do_logout(self, nodeId):
         try:
             del self._registeredUsers[nodeId]
+            del self._ruTimestamp[nodeId]
         except KeyError:
             print "%s was not registered" % (nodeId,)
 



From aurelienc at berlios.de  Thu Nov  3 11:16:35 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 3 Nov 2005 11:16:35 +0100
Subject: [Maay-svncheckins] r277 - trunk/maay
Message-ID: <200511031016.jA3AGZKE001057@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-03 11:16:33 +0100 (Thu, 03 Nov 2005)
New Revision: 277

Modified:
   trunk/maay/registrationclient.py
Log:
print update


Modified: trunk/maay/registrationclient.py
===================================================================
--- trunk/maay/registrationclient.py	2005-11-03 09:38:40 UTC (rev 276)
+++ trunk/maay/registrationclient.py	2005-11-03 10:16:33 UTC (rev 277)
@@ -62,7 +62,7 @@
         d.addCallback(RegistrationClient.login, nodeId, nodeIP, xmlrpcPort, bandwidth)
         d.addCallback(RegistrationClient.who)
     else:
-        print "No querier found => no registration / no P2P"
+        print "Login : no querier found => no registration / no P2P"
 
 
 def logout(reactor, regIp, regPort, nodeId):



From aurelienc at berlios.de  Thu Nov  3 11:18:05 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 3 Nov 2005 11:18:05 +0100
Subject: [Maay-svncheckins] r278 - trunk/maay
Message-ID: <200511031018.jA3AI5N5001360@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-03 11:18:02 +0100 (Thu, 03 Nov 2005)
New Revision: 278

Modified:
   trunk/maay/dbentity.py
Log:
Renaming. Now selectActive (form Node) will be able to really select active Nodes (not the merely registered ones).


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-03 10:16:33 UTC (rev 277)
+++ trunk/maay/dbentity.py	2005-11-03 10:18:02 UTC (rev 278)
@@ -402,20 +402,25 @@
                   'claim_count', 'affinity', 'bandwidth')
     key = ('node_id',)
 
-    def _selectActiveQuery(cls):
+    def _selectRegisteredNodesQuery(cls):
         query = cls._selectQuery()
         query += " WHERE node_id != %s ORDER BY last_seen_time DESC LIMIT %s"
         return query
     
-    _selectActiveQuery = classmethod(_selectActiveQuery)
+    _selectRegisteredNodesQuery = classmethod(_selectRegisteredNodesQuery)
 
-    def selectActive(cls, cursor, currentNodeId, maxResults):
-        query = cls._selectActiveQuery()
+    def selectRegistered(cls, cursor, currentNodeId, maxResults):
+        query = cls._selectRegisteredNodesQuery()
         cursor.execute(query, (currentNodeId, maxResults))
         results = cursor.fetchall()
         return [cls(**dict(zip(cls.attributes, row))) for row in results]
+    selectRegistered = classmethod(selectRegistered)
+
+    def selectActive(cls, cursor, currentNodeId, maxResults):
+        registered = cls.selectRegistered(cursor, currentNodeId, maxResults)
+        print "Node selectActive active :", registered
+        return registered
     selectActive = classmethod(selectActive)
-        
 
     def getRpcUrl(self):
         return 'http://%s:%s' % (self.ip, self.port)



From aurelienc at berlios.de  Thu Nov  3 11:22:14 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 3 Nov 2005 11:22:14 +0100
Subject: [Maay-svncheckins] r279 - trunk/maay
Message-ID: <200511031022.jA3AMEd8002493@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-03 11:22:13 +0100 (Thu, 03 Nov 2005)
New Revision: 279

Modified:
   trunk/maay/querier.py
Log:
Add selectRegistered to querier.


Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-03 10:18:02 UTC (rev 278)
+++ trunk/maay/querier.py	2005-11-03 10:22:13 UTC (rev 279)
@@ -273,6 +273,12 @@
         node.commit(cursor, update=True)
         cursor.close()
 
+    def getRegisteredNeighbors(self, nodeId, nbNodes):
+        cursor = self._cnx.cursor() 
+        nodes = Node.selectRegistered(cursor, nodeId, nbNodes) 
+        cursor.close()
+        return nodes
+
     def getActiveNeighbors(self, nodeId, nbNodes):
         cursor = self._cnx.cursor() 
         nodes = Node.selectActive(cursor, nodeId, nbNodes) 



From aurelienc at berlios.de  Thu Nov  3 11:59:00 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 3 Nov 2005 11:59:00 +0100
Subject: [Maay-svncheckins] r280 - trunk/maay
Message-ID: <200511031059.jA3Ax0G5010706@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-03 11:58:53 +0100 (Thu, 03 Nov 2005)
New Revision: 280

Modified:
   trunk/maay/dbentity.py
Log:
Add stub liveness check.


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-03 10:22:13 UTC (rev 279)
+++ trunk/maay/dbentity.py	2005-11-03 10:58:53 UTC (rev 280)
@@ -417,11 +417,27 @@
     selectRegistered = classmethod(selectRegistered)
 
     def selectActive(cls, cursor, currentNodeId, maxResults):
+        """idea : filter the registered Nodes to get only truly active ones
+           we should profit from this to also ask the registration server
+           about the Nodes it knows (the importance of the reg. server
+           shall decay in the future, when the network of live maay
+           peers will be vast enough so as to avoid its fragmentation into
+           small unconnected groups of Nodes)
+        """
         registered = cls.selectRegistered(cursor, currentNodeId, maxResults)
         print "Node selectActive active :", registered
-        return registered
+        active = []
+        for node in registered:
+            if node.isAlive():
+                active.append(node)
+        return active
     selectActive = classmethod(selectActive)
 
+    def isAlive(self):
+        """instant liveness check of a distant Node (stub)
+        """
+        return True
+
     def getRpcUrl(self):
         return 'http://%s:%s' % (self.ip, self.port)
 



From aurelienc at berlios.de  Thu Nov  3 12:04:10 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 3 Nov 2005 12:04:10 +0100
Subject: [Maay-svncheckins] r282 - trunk/maay
Message-ID: <200511031104.jA3B4A6D011477@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-03 12:03:25 +0100 (Thu, 03 Nov 2005)
New Revision: 282

Modified:
   trunk/maay/registrationclient.py
Log:
Typo and a few more fat prints.


Modified: trunk/maay/registrationclient.py
===================================================================
--- trunk/maay/registrationclient.py	2005-11-03 11:00:56 UTC (rev 281)
+++ trunk/maay/registrationclient.py	2005-11-03 11:03:25 UTC (rev 282)
@@ -24,12 +24,13 @@
         self.__callback = nodeRegistrationCallback
         
     def login(self, nodeId, ip, port, bandwidth) :
-        print "login to registration server"
+        print "login to registration server (node %s at %s:%s)" % (nodeId, ip, port)
         self.transport.write('login:%s:%s:%s:%s\r\n' % (nodeId, ip,
                                                      port, bandwidth))
         return self
 
     def logout(self, nodeId):
+        print "logout from registration server (node %s)" % nodeId
         self.transport.write('logout:%s\r\n' % nodeId)
         self.transport.loseConnection()
 
@@ -66,7 +67,7 @@
 
 
 def logout(reactor, regIp, regPort, nodeId):
+    print "Registration@%s:%s (node %s) wants to log out." % (regIp, regPort, nodeId)
     c = ClientCreator(reactor, RegistrationClient, None)
-    d = c.connectTCP(regIP, regPort)
+    d = c.connectTCP(regIp, regPort)
     d.addCallback(RegistrationClient.logout)
-



From aurelienc at berlios.de  Thu Nov  3 12:01:08 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 3 Nov 2005 12:01:08 +0100
Subject: [Maay-svncheckins] r281 - trunk/maay
Message-ID: <200511031101.jA3B18NR010990@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-03 12:00:56 +0100 (Thu, 03 Nov 2005)
New Revision: 281

Modified:
   trunk/maay/server.py
Log:
Add logout request (doesn't actually work, fault seems to reside in registrationclient.py)


Modified: trunk/maay/server.py
===================================================================
--- trunk/maay/server.py	2005-11-03 10:58:53 UTC (rev 280)
+++ trunk/maay/server.py	2005-11-03 11:00:56 UTC (rev 281)
@@ -162,7 +162,9 @@
 
     def data_peers(self, context, data):
         webappConfig = IWebappConfiguration(context)
-        peers = self.querier.getActiveNeighbors(webappConfig.get_node_id(), 10)
+        myNodeId = webappConfig.get_node_id()
+        print "PeerList data_peers : my_node_id =", myNodeId
+        peers = self.querier.getActiveNeighbors(myNodeId, 10)
         return peers
     
     def render_peer(self, context, peerNode):
@@ -629,6 +631,10 @@
         reactor.run()
     finally:
         print "-----------Shutting down Server----------"
+        registrationclient.logout(reactor,
+                                  webappConfig.registration_host,
+                                  webappConfig.registration_port,
+                                  webappConfig.get_node_id())
 
 if __name__ == '__main__':
     run()



From aurelienc at berlios.de  Thu Nov  3 14:23:02 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 3 Nov 2005 14:23:02 +0100
Subject: [Maay-svncheckins] r283 - trunk/maay
Message-ID: <200511031323.jA3DN2Sf029369@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-03 14:22:19 +0100 (Thu, 03 Nov 2005)
New Revision: 283

Modified:
   trunk/maay/texttool.py
Log:
Add request for a more complete abstract (hi, Fred :-)


Modified: trunk/maay/texttool.py
===================================================================
--- trunk/maay/texttool.py	2005-11-03 11:03:25 UTC (rev 282)
+++ trunk/maay/texttool.py	2005-11-03 13:22:19 UTC (rev 283)
@@ -375,7 +375,8 @@
     # Get the best excerpt for the abstract :
     # - excerpt for most words of the query
     # - first occurence of words
-    #
+    #   - would be even better : enough occurences (if available)
+    #     to fill a handful of lines
 
     # wordOccurrences[word] = #nb of occurences
     wordOccurrences = {}



From aurelienc at berlios.de  Thu Nov  3 14:32:29 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 3 Nov 2005 14:32:29 +0100
Subject: [Maay-svncheckins] r284 - trunk/maay
Message-ID: <200511031332.jA3DWTOa032393@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-03 14:31:12 +0100 (Thu, 03 Nov 2005)
New Revision: 284

Modified:
   trunk/maay/texttool.py
Log:
Split makeAbstract to help cope with it.


Modified: trunk/maay/texttool.py
===================================================================
--- trunk/maay/texttool.py	2005-11-03 13:22:19 UTC (rev 283)
+++ trunk/maay/texttool.py	2005-11-03 13:31:12 UTC (rev 284)
@@ -35,8 +35,8 @@
 WORD_MIN_LEN = 2
 WORD_MAX_LEN = 50
 
-MAX_EXCERPT = 3 
-EXCERPT_MAX_LEN = 70
+MAX_EXCERPT = 5
+EXCERPT_MAX_LEN = 50
 
 MAX_STORED_SIZE = 65535
 
@@ -358,16 +358,14 @@
     s.write(text[end:])
     return u"%s" % s.getvalue()
 
-def makeAbstract(text, words):
-    """return excerpts of the original text surrounding the word occurrences
-    XXX: this is a less quick and dirty implementation
-    """
+    
 
+def computeExcerptPositions(text, words):
     text = untagText(text)
     text_length = len(text)
 
-    EXCERPT_MAX_HALF_LEN = EXCERPT_MAX_LEN / 2
 
+
     # quick and dirty regex...
     rgx = re.compile('\W' + '\W|\W'.join(words) + '\W', re.I)
 
@@ -416,10 +414,17 @@
                 len(excerptPositions) == MAX_EXCERPT):
             break
 
-    #
-    # Build abstract
-    #
+    return excerptPositions
 
+
+def makeAbstract(text, words):
+    """return excerpts of the original text surrounding the word occurrences
+    XXX: this is a less quick and dirty implementation
+    """
+    excerptPositions = computeExcerptPositions(text, words)
+    text_length = len(text)
+    EXCERPT_MAX_HALF_LEN = EXCERPT_MAX_LEN / 2
+
     if not excerptPositions:
         if text_length >= 200:
             end = 200



From dnf at berlios.de  Thu Nov  3 17:56:32 2005
From: dnf at berlios.de (Frédéric DANG NGOC at BerliOS)
Date: Thu, 3 Nov 2005 17:56:32 +0100
Subject: [Maay-svncheckins] r285 - trunk/maay
Message-ID: <200511031656.jA3GuW7k010581@sheep.berlios.de>

Author: dnf
Date: 2005-11-03 17:56:31 +0100 (Thu, 03 Nov 2005)
New Revision: 285

Modified:
   trunk/maay/dbentity.py
Log:
Fix bug (cf mail bug in indexer) (?)
According to what I understand, I think that FutureDocument might implement the minimal number of methods (not to inherit from DBentity). What do you think ?



Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-03 13:31:12 UTC (rev 284)
+++ trunk/maay/dbentity.py	2005-11-03 16:56:31 UTC (rev 285)
@@ -125,12 +125,20 @@
         return str(self)
 
 
-class FutureDocument(DBEntity):
+class FutureDocument:
     """Represents a Document before it gets fed to the database"""
     attributes = ('filename', 'title', 'text', 'fileSize', 'lastModificationTime',
                   'content_hash', 'mime_type', 'state', 'file_state')
     key = ('content_hash',)
 
+    def __init__(self, **values):
+        for attrname, value in values.iteritems():
+            assert attrname in self.attributes, 'Unknown attribute %s' % attrname
+            setattr(self, attrname, value)
+        for keyattr in self.key:
+            assert keyattr in self.attributes, \
+                   "invalid value for key: %s" % keyattr
+
 class Document(DBEntity):
     """Represent a Document in the database
     A Document is different from a file, because several files can store



From dnf at berlios.de  Thu Nov  3 18:00:33 2005
From: dnf at berlios.de (Frédéric DANG NGOC at BerliOS)
Date: Thu, 3 Nov 2005 18:00:33 +0100
Subject: [Maay-svncheckins] r286 - trunk/maay
Message-ID: <200511031700.jA3H0Xr6010966@sheep.berlios.de>

Author: dnf
Date: 2005-11-03 18:00:33 +0100 (Thu, 03 Nov 2005)
New Revision: 286

Modified:
   trunk/maay/indexer.py
Log:
Add default values ([]) for private dir, public dir list.
This avoids indexer to crash if they are not set...



Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-03 16:56:31 UTC (rev 285)
+++ trunk/maay/indexer.py	2005-11-03 17:00:33 UTC (rev 286)
@@ -261,24 +261,28 @@
         ('private-index-dir',
          {'type': 'csv',
           'metavar': '<csv>', 'short': 'i',
-          'help': 'index this directory with the private indexer'
+          'help': 'index this directory with the private indexer',
+          'default' : []
           }),
          
         ('private-skip-dir',
          {'type': 'csv',
           'metavar': '<csv>', 'short': 's',
-          'help': 'the private indexer will skip this directory'
+          'help': 'the private indexer will skip this directory',
+          'default' : []
           }),
         ('public-index-dir',
          {'type': 'csv',
           'metavar': '<csv>', 'short': 'I',
-          'help': 'index this directory with the public indexer'
+          'help': 'index this directory with the public indexer',
+          'default' : []
           }),
          
         ('public-skip-dir',
          {'type': 'csv',
           'metavar': '<csv>', 'short': 'S',
-          'help': 'the public indexer will skip this directory'
+          'help': 'the public indexer will skip this directory',
+          'default' : []
           }),
 
         ('verbose',



From aurelienc at berlios.de  Thu Nov  3 18:14:45 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 3 Nov 2005 18:14:45 +0100
Subject: [Maay-svncheckins] r287 - in trunk/maay: . test
Message-ID: <200511031714.jA3HEjOP011798@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-03 18:14:44 +0100 (Thu, 03 Nov 2005)
New Revision: 287

Modified:
   trunk/maay/test/test_texttool.py
   trunk/maay/texttool.py
Log:
Split and fix makeAbstract, also its tests.


Modified: trunk/maay/test/test_texttool.py
===================================================================
--- trunk/maay/test/test_texttool.py	2005-11-03 17:00:33 UTC (rev 286)
+++ trunk/maay/test/test_texttool.py	2005-11-03 17:14:44 UTC (rev 287)
@@ -188,19 +188,23 @@
         # Check excerpt at the beginning of the text
 
         abstract = makeAbstract(self.text, [u"free"])
-        self.assertEquals(u'This program is <b>free</b> software; you can redistribute it and/or modify it under the terms of <b>...</b>  Public License as published by the <b>Free</b> Software Foundation; either version 2 of the License, or (at your <b>...</b>  this program; if not, write to the <b>Free</b> Software Foundation, Inc., 51 <b>...</b>', abstract)
+        expected = u'This program is <b>free</b> software; you can redistribute it and/or modify it under the terms of <b>...</b>  Public License as published by the <b>Free</b> Software Foundation; either version 2 of the License, or (at your <b>...</b>  this program; if not, write to the <b>Free</b> Software Foundation, Inc., 51 <b>...</b>'
+        self.assertEquals(expected, abstract)
 
     def testMixedCase(self):
         abstract = makeAbstract(self.text, [u"pUrPoSe"])
-        self.assertEquals(' <b>...</b>  or FITNESS FOR A PARTICULAR <b>PURPOSE</b>.  See the GNU General Public <b>...</b>', abstract)
+        expected = ' <b>...</b>  or FITNESS FOR A PARTICULAR <b>PURPOSE</b>.  See the GNU General Public <b>...</b>'
+        self.assertEquals(expected, abstract)
 
     def testUnknownWord(self):
         abstract = makeAbstract(self.text, [u"FOOBAR"])
-        self.assertEquals('This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, <b>...</b>', abstract)
+        expected = 'This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, <b>...</b>'
+        self.assertEquals(expected, abstract)
 
     def testWordAtEnd(self):
         abstract = makeAbstract(self.text, [u"Boston"])
-        self.assertEquals(' <b>...</b>  Inc., 51 Franklin St, Fifth Floor, <b>Boston</b>, MA  02110-1301 USA', abstract)
+        expected = ' <b>...</b>  Inc., 51 Franklin St, Fifth Floor, <b>Boston</b>, MA  02110-1301 USA'
+        self.assertEquals(expected, abstract)
 
 
 if __name__ == '__main__':

Modified: trunk/maay/texttool.py
===================================================================
--- trunk/maay/texttool.py	2005-11-03 17:00:33 UTC (rev 286)
+++ trunk/maay/texttool.py	2005-11-03 17:14:44 UTC (rev 287)
@@ -36,7 +36,7 @@
 WORD_MAX_LEN = 50
 
 MAX_EXCERPT = 5
-EXCERPT_MAX_LEN = 50
+EXCERPT_MAX_LEN = 70
 
 MAX_STORED_SIZE = 65535
 
@@ -361,13 +361,12 @@
     
 
 def computeExcerptPositions(text, words):
-    text = untagText(text)
     text_length = len(text)
 
 
 
     # quick and dirty regex...
-    rgx = re.compile('\W' + '\W|\W'.join(words) + '\W', re.I)
+    rgx = re.compile(r'\W' + r'\W|\W'.join(words) + r'\W', re.I)
 
     #
     # Get the best excerpt for the abstract :
@@ -384,7 +383,7 @@
 
     for occurence in rgx.finditer(text):
         foundWord = occurence.group(0)
-        start, end = occurence.start(), occurence.end()
+        start = occurence.start()
 
         if len(excerptPositions) >= MAX_EXCERPT:
             # remove one of excerpts which is the more frequent
@@ -394,12 +393,13 @@
 
             if wordOccurrences.get(foundWord) == max_occurence:
                 continue
-                
+                    
             for i in xrange(len(excerptPositions) - 1, 0, -1):
-                if wordOccurrences[excerptPositions[i][0]] == max_occurence:
-                    wordOccurrences[excerptPositions[i][0]] -= 1
-                    if wordOccurrences[excerptPositions[i][0]] == 0:
-                        del wordOccurrences[excerptPositions[i][0]]
+                word, position = excerptPositions[i]
+                if wordOccurrences[word] == max_occurence:
+                    wordOccurrences[word] -= 1
+                    if wordOccurrences[word] == 0:
+                        del wordOccurrences[word]
                     del excerptPositions[i]
 
         if wordOccurrences.has_key(foundWord):
@@ -409,8 +409,8 @@
 
         excerptPositions.append((foundWord, start))
 
-        if len(wordOccurrences.keys()) >= MAX_EXCERPT or \
-               (len(wordOccurrences.keys()) == len(words) and \
+        if len(wordOccurrences) >= MAX_EXCERPT or \
+               (len(wordOccurrences) == len(words) and \
                 len(excerptPositions) == MAX_EXCERPT):
             break
 
@@ -421,8 +421,11 @@
     """return excerpts of the original text surrounding the word occurrences
     XXX: this is a less quick and dirty implementation
     """
+    text = untagText(text)
     excerptPositions = computeExcerptPositions(text, words)
+
     text_length = len(text)
+
     EXCERPT_MAX_HALF_LEN = EXCERPT_MAX_LEN / 2
 
     if not excerptPositions:
@@ -439,32 +442,36 @@
     last_word = 0
 
     for word, position in excerptPositions:
-        if position - last_position < EXCERPT_MAX_LEN:
+        # merge snippets if they overlap
+        if position - last_position < EXCERPT_MAX_HALF_LEN:
             last_position = position
             last_word = word
             continue
-            
+
+        # in the general case (not first word)
         if start !=-1:
             end = last_position + EXCERPT_MAX_LEN + len(last_word)
-            if end >= text_length:
+            if end >= text_length: # address EOT
                 end = text_length
             else:
                 while text[end].isalpha():
-                   end -= 1
+                    end -= 1
 
             if start > 0:
                 s.write(" <b>...</b> ")
             s.write(boldifyText(text[start:end], words))
-
+            
         start = position - EXCERPT_MAX_HALF_LEN
-        if start < 0:
+        if start < 0: # address begining OT
             start = 0
         else:
-            while text[start].isalpha(): start += 1
+            while text[start].isalpha():
+                start += 1
 
         last_position = position
         last_word = word
 
+
     if start > 0:
         s.write(" <b>...</b> ")
     end = last_position + EXCERPT_MAX_HALF_LEN + len(word)
@@ -479,4 +486,3 @@
         s.write(" <b>...</b>")
 
     return u"%s" % s.getvalue()
-



From aurelienc at berlios.de  Thu Nov  3 18:16:16 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 3 Nov 2005 18:16:16 +0100
Subject: [Maay-svncheckins] r288 - trunk/maay
Message-ID: <200511031716.jA3HGGuM011931@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-03 18:16:16 +0100 (Thu, 03 Nov 2005)
New Revision: 288

Modified:
   trunk/maay/querier.py
Log:
Fix .close() call indentation.


Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-03 17:14:44 UTC (rev 287)
+++ trunk/maay/querier.py	2005-11-03 17:16:16 UTC (rev 288)
@@ -139,7 +139,7 @@
         print "Querier", self, "is being GCed ... "
         if self._cnx:
             print " connection stats :", self._cnx.stat()
-        self.close()
+            self.close()
 
     def findDocuments(self, query):
         """Find all indexed documents matching the query"""
@@ -256,6 +256,7 @@
 
 
     def registerNode(self, nodeId, ip, port, bandwidth, lastSeenTime=None):
+        print "AnonymousQuerier registerNode %s %s:%s" % (nodeId, ip, port)
         lastSeenTime = lastSeenTime or int(time.time())
         cursor = self._cnx.cursor()
         node = Node.selectOrInsertWhere(cursor, node_id=nodeId)[0]



From aurelienc at berlios.de  Thu Nov  3 18:18:30 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 3 Nov 2005 18:18:30 +0100
Subject: [Maay-svncheckins] r289 - trunk/maay
Message-ID: <200511031718.jA3HIUNs012739@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-03 18:18:29 +0100 (Thu, 03 Nov 2005)
New Revision: 289

Modified:
   trunk/maay/registration.py
   trunk/maay/registrationclient.py
Log:
print-fix


Modified: trunk/maay/registration.py
===================================================================
--- trunk/maay/registration.py	2005-11-03 17:16:16 UTC (rev 288)
+++ trunk/maay/registration.py	2005-11-03 17:18:29 UTC (rev 289)
@@ -80,6 +80,7 @@
         self._auto_logout_everybody()
 
     def do_logout(self, nodeId):
+        print "logout request from node %s" % nodeId
         try:
             del self._registeredUsers[nodeId]
             del self._ruTimestamp[nodeId]

Modified: trunk/maay/registrationclient.py
===================================================================
--- trunk/maay/registrationclient.py	2005-11-03 17:16:16 UTC (rev 288)
+++ trunk/maay/registrationclient.py	2005-11-03 17:18:29 UTC (rev 289)
@@ -67,7 +67,7 @@
 
 
 def logout(reactor, regIp, regPort, nodeId):
-    print "Registration@%s:%s (node %s) wants to log out." % (regIp, regPort, nodeId)
+    print "Registrator@%s:%s node %s wants to log out." % (regIp, regPort, nodeId)
     c = ClientCreator(reactor, RegistrationClient, None)
     d = c.connectTCP(regIp, regPort)
     d.addCallback(RegistrationClient.logout)



From aurelienc at berlios.de  Thu Nov  3 18:20:37 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 3 Nov 2005 18:20:37 +0100
Subject: [Maay-svncheckins] r290 - in trunk/maay: . test
Message-ID: <200511031720.jA3HKb3E012950@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-03 18:20:36 +0100 (Thu, 03 Nov 2005)
New Revision: 290

Added:
   trunk/maay/webapplication.py
Modified:
   trunk/maay/server.py
   trunk/maay/test/test_configuration.py
   trunk/maay/test/test_rpc.py
Log:
Big split of server into server and webapplication.


Modified: trunk/maay/server.py
===================================================================
--- trunk/maay/server.py	2005-11-03 17:18:29 UTC (rev 289)
+++ trunk/maay/server.py	2005-11-03 17:20:36 UTC (rev 290)
@@ -18,11 +18,6 @@
 
 __revision__ = '$Id$'
 
-from datetime import datetime
-import warnings
-warnings.filterwarnings("ignore", ".*", DeprecationWarning, "nevow.static")
-warnings.filterwarnings("ignore", ".*", DeprecationWarning, "twisted.python.reflect")
-warnings.filterwarnings("ignore", ".*", DeprecationWarning, "twisted.web.woven")
 
 import platform
 import sha
@@ -30,22 +25,18 @@
 import os
 import re
 import socket
-from xmlrpclib import ServerProxy
 
-from zope.interface import implements, Interface
+from zope.interface import implements
 
-from twisted.cred import portal, checkers, error
-from twisted.cred.checkers import ANONYMOUS, AllowAnonymousAccess, \
+from twisted.cred import portal, error
+from twisted.cred.checkers import AllowAnonymousAccess, \
      ICredentialsChecker
 from twisted.cred.credentials import IAnonymous, IUsernamePassword
 from twisted.internet import reactor, defer
 from twisted.web import server
-from twisted.web import static
 from twisted.python import failure
+from nevow import inevow, appserver, guard
 
-from nevow import inevow, rend, tags, guard, loaders, appserver
-from nevow.url import URL
-
 # These imports are not used, but they help py2exe tremendously.
 # Do not remove them (that is, unless we change the database backend
 # or drop twisted)
@@ -55,245 +46,14 @@
 import MySQLdb
 # end of py2exe helping imports
 
-from logilab.common.textutils import normalize_text
-
 from maay.querier import MaayQuerier, IQuerier, AnonymousQuerier, \
-     MaayAuthenticationError, ANONYMOUS_AVATARID, WEB_AVATARID
+     MaayAuthenticationError, WEB_AVATARID
 from maay.rpc import MaayRPCServer
-from maay.configuration import get_path_of, Configuration
-from maay.texttool import makeAbstract, WORDS_RGX, normalizeText, boldifyText
+from maay.configuration import Configuration
 from maay import registrationclient
-from maay.query import Query
+from maay.webapplication import Maay404, IServerConfiguration, SearchForm
 
 
-class MaayPage(rend.Page):
-    docFactory = loaders.xmlfile(get_path_of('skeleton.html'))
-    child_maaycss = static.File(get_path_of('maay.css'))
-    child_images = static.File(get_path_of('images/'))
-
-    def __init__(self, maayId=WEB_AVATARID):
-        rend.Page.__init__(self)
-        self.maayId = maayId
-
-#     def render_loginurl(self, context, data):
-#         url = URL.fromContext(context)
-#         store current URL into  'goThereAfter' to be able to return here
-#         after login
-#         goThereAfter = URL(url.scheme, url.netloc, url.pathList())
-#         if self.maayId != ANONYMOUS_AVATARID:
-#            goThereAfter = URL(url.scheme, url.netloc,
-#                               ['logout'] + url.pathList())
-#            context.fillSlots('actionlabel', 'Logout')
-#         else:
-#            goThereAfter = URL(url.scheme, url.netloc,
-#                               ['login'] + url.pathList())
-#            context.fillSlots('actionlabel', 'Login')            
-#         for param, value in url.queryList():
-#            goThereAfter = goThereAfter.add(param, value)
-#         context.fillSlots('loginurl', str(goThereAfter))
-#         return context.tag
-
-    def macro_body(self, context):
-        return self.bodyFactory
-
-    def child_login(self, context):
-        return LoginForm(self.maayId)
-
-    def child_logout(self, context):
-        print "sure we're not here ?"
-        req = inevow.IRequest(context)
-        req.getSession().expire()
-        req.redirect('/' + guard.LOGOUT_AVATAR)
-
-# class LoginForm(MaayPage):
-#     """a basic login form. This page is rendered until the user
-#     is logged.
-#     """
-#     # addSlash = True
-
-#     def path(self, context, data):
-#         here = URL.fromContext(context)
-#         # transform /login/somePathAndQuery into /__login__/somePathAndQuery
-#         # to benefit from nevow.guard redirection magic
-#         pathList = ['__login__'] + here.pathList()[1:]
-#         goThereAfter = URL(here.scheme, here.netloc,
-#                            pathList, here.queryList())
-#         return str(goThereAfter)
-
-#     bodyFactory = loaders.stan(
-#         tags.html[
-#             tags.head[tags.title["Maay Login Page",],
-#                       tags.link(rel='stylesheet', type='text/css', href='maay.css'),
-#                       tags.link(rel='shortcut icon', href='images/maay.ico'),
-#                       ],
-            
-#             tags.body[
-#                 # tags.form(action='/'+guard.LOGIN_AVATAR, render=path, method='post')[
-#                 tags.form(action=path, method='post')[
-#                     tags.table(_class="loginTable")[
-#                         tags.tr[
-#                             tags.td[ "Username :" ],
-#                             tags.td[ tags.input(type='text', name='username') ],
-#                             ],
-#                         tags.tr[
-#                             tags.td[ "Password :" ],
-#                             tags.td[ tags.input(type='password', name='password') ],
-#                             ]
-#                         ],
-#                     tags.input(type='submit'),
-#                     tags.p,
-#                     ]
-#                 ]
-#             ]
-#         )
-
-#     def childFactory(self, context, segments):
-#         print " child factory"
-#         return LoginForm()
-
-class PeersList(MaayPage):
-    """display list of registered peers"""
-    bodyFactory = loaders.xmlfile(get_path_of('peers.html'))
-    addSlash = True
-
-    def __init__(self, maayId, querier):
-        MaayPage.__init__(self, maayId)
-        self.querier = querier
-
-    def data_peers(self, context, data):
-        webappConfig = IWebappConfiguration(context)
-        myNodeId = webappConfig.get_node_id()
-        print "PeerList data_peers : my_node_id =", myNodeId
-        peers = self.querier.getActiveNeighbors(myNodeId, 10)
-        return peers
-    
-    def render_peer(self, context, peerNode):
-        # Note: might be convenient to register a special flattener for
-        #       Node objects
-        for attrname in ('node_id', 'ip', 'port', 'last_seen_time',
-                         'claim_count', 'affinity', 'bandwidth'):
-            context.fillSlots(attrname, getattr(peerNode, attrname, 'N/A'))
-        return context.tag
-                    
-class SearchForm(MaayPage):
-    """default search form"""
-    bodyFactory = loaders.xmlfile(get_path_of('searchform.html'))
-    addSlash = True
-
-    def __init__(self, maayId, querier):
-        MaayPage.__init__(self, maayId)
-        self.querier = querier
-
-    def logout(self):
-        print "Bye %s !" % (self.maayId,)
-        # XXX: logout message should be forwarded to registration server
-        return None
-
-    def child_peers(self, context):
-        return PeersList(self.maayId, self.querier)
-
-    def _harvest_peer_results(self, query, context):
-        results = []
-        webappConfig = IWebappConfiguration(context)
-        peers = self.querier.getActiveNeighbors(webappConfig.get_node_id(), 10)
-        print "SearchForm child_search peers = ", peers
-        for peer in peers:
-            server = ServerProxy('http://%s:%s' % (peer.ip, peer.port),
-                                 allow_none=True,
-                                 encoding='utf-8')
-            try:
-                cnxid, errmsg = server.authenticate('', '')
-            except Exception, e:
-                errmsg = "%s" % e
-            if errmsg:
-                print "For reason '%s', we couldn't authenticate with node %s:%s" \
-                      % (errmsg, peer.ip, peer.port)
-                continue # for whatever reason, we couldn't authenticate
-            try: #XXX: xmlrpc serialization problems arise here
-                results += server.findDocuments(cnxid, query)
-            except Exception, e:
-                print "SearchForm _harvest_peer_results pb : %s", e
-        return results
-
-    def child_search(self, context):
-        # query = unicode(context.arg('words'))        
-        offset = int(context.arg('offset', 0))
-        rawQuery = unicode(context.arg('words'), 'utf-8')
-        query = Query.fromRawQuery(rawQuery, offset)
-        localResults = self.querier.findDocuments(query)
-        peerResults = self._harvest_peer_results(rawQuery, context)
-        print "Results from the peers :", peerResults
-        results = localResults + peerResults
-        return ResultsPage(self.maayId, results, query)
-
-    # XXX make sure that the requested document is really in the database
-    # XXX don't forget to update the download statistics of the document
-    def child_download(self, context):
-        docid = context.arg('docid')
-        # query = unicode(context.arg('words'))
-        query = Query.fromRawQuery(unicode(context.arg('words'), 'utf-8'))
-        docurl = self.querier.notifyDownload(docid, query.words)
-        if docurl:
-            return static.File(docurl)
-        else:
-            return Maay404()
-
-
-class ResultsPage(MaayPage):
-    """default results page"""
-    bodyFactory = loaders.xmlfile(get_path_of('resultpage.html'))
-    addSlash = False
-    
-    def __init__(self, maayId, results, query):
-        MaayPage.__init__(self, maayId)
-        self.results = results
-        self.query = query.words # unicode(query)
-
-    def data_results(self, context, data):
-        return self.results
-
-    def render_title(self, context, data):
-        context.fillSlots('words', self.query)
-        return context.tag
-
-    def render_searchfield(self, context, data):
-        context.fillSlots('words', self.query)
-        return context.tag
-
-    def render_prevset_url(self, context, data):
-        words = WORDS_RGX.findall(normalizeText(unicode(context.arg('words'), 'utf-8')))
-        offset = int(context.arg('offset', 0))
-        if offset:
-            offset -= 15
-        return 'search?words=%s&offset=%s' % ('+'.join(words), offset)
-
-    def render_nextset_url(self, context, data):
-        words = WORDS_RGX.findall(normalizeText(unicode(context.arg('words'), 'utf-8')))
-        offset = int(context.arg('offset', 0)) + 15
-        return 'search?words=%s&offset=%s' % ('+'.join(words), offset)
-
-    
-    def render_row(self, context, data):
-        document = data
-	words = self.query.split()
-        context.fillSlots('mime_type', re.sub("/", "_", document.mime_type))
-        context.fillSlots('doctitle', tags.xml(boldifyText(document.title, words)))
-        # XXX abstract attribute should be a unicode string
-        try:
-            abstract = makeAbstract(document.text, words)
-            abstract = normalize_text(unicode(abstract))
-        except Exception, exc:
-            print exc
-            abstract = u'No abstract available for this document [%s]' % exc
-        context.fillSlots('abstract', tags.xml(abstract))
-        context.fillSlots('docid', document.db_document_id)
-        context.fillSlots('docurl', tags.xml(boldifyText(document.url, words)))
-        context.fillSlots('words', self.query)
-        context.fillSlots('readable_size', document.readable_size())
-        date = datetime.fromtimestamp(document.publication_time)
-        context.fillSlots('publication_date', date.strftime('%d %b %Y'))
-        return context.tag
-
 ## nevow app/server setup ############################################
 
 # MaayMindFactory might be helpful to access request informations
@@ -460,19 +220,9 @@
         return defer.succeed(creds.username)
 
 
-class Maay404(rend.FourOhFour):
-    """Maay specific resource for 404 errors"""
-    loader = loaders.xmlfile(get_path_of('notfound.html'))
 
-    def renderHTTP_notFound(self, context):
-        """Render a not found message to the given request.
-        """
-        return self.loader.load(context)[0]
 
-class IWebappConfiguration(Interface):
-    """provide an interface in order to be able to remember webappconfig"""
-
-class WebappConfiguration(Configuration):
+class ServerConfiguration(Configuration):
     options = Configuration.options + [
         ('db-name',
          {'type' : "string", 'metavar' : "<dbname>", 'short' : "d",
@@ -606,13 +356,13 @@
     
     
 def run():
-    webappConfig = WebappConfiguration()
+    webappConfig = ServerConfiguration()
     webappConfig.load()
     maayPortal = MaayPortal(webappConfig)
     website = appserver.NevowSite(MaaySessionWrapper(maayPortal,
                                                      mindFactory=MaayMindFactory))
     website.remember(Maay404(), inevow.ICanHandleNotFound)
-    website.remember(webappConfig, IWebappConfiguration)
+    website.remember(webappConfig, IServerConfiguration)
     registrationclient.login(reactor,
                              webappConfig.registration_host, webappConfig.registration_port,
                              maayPortal.webQuerier,
@@ -631,10 +381,13 @@
         reactor.run()
     finally:
         print "-----------Shutting down Server----------"
+        
         registrationclient.logout(reactor,
                                   webappConfig.registration_host,
                                   webappConfig.registration_port,
                                   webappConfig.get_node_id())
+        
+        
 
 if __name__ == '__main__':
     run()

Modified: trunk/maay/test/test_configuration.py
===================================================================
--- trunk/maay/test/test_configuration.py	2005-11-03 17:18:29 UTC (rev 289)
+++ trunk/maay/test/test_configuration.py	2005-11-03 17:20:36 UTC (rev 290)
@@ -23,7 +23,7 @@
 import re
 
 from maay import configuration
-from maay.server import WebappConfiguration
+from maay.server import ServerConfiguration
 
 class WebappConfigTC(unittest.TestCase):
 
@@ -34,7 +34,7 @@
                 ('maay --db-host foo --db-name maille', ('foo', 'maille')),
                 ]
         for cmdLine, (expectedHost, expectedDatabase) in data:
-            config = WebappConfiguration()
+            config = ServerConfiguration()
             sys.argv = cmdLine.split()
             config.load()
             self.assertEquals(config.db_host, expectedHost)
@@ -44,14 +44,14 @@
     #      this test needs to be run first. This is a BUG that I
     #      could not fix easily.
     def test0FromConfigFile(self):
-        config = WebappConfiguration()
+        config = ServerConfiguration()
         config.config_file = osp.join(osp.dirname(__file__), 'data', 'webapp1.ini')
         config.load()
         self.assertEquals(config.db_host, 'eusebius')
         self.assertEquals(config.db_name, 'maay')
 
     def testFromBoth(self):
-        config = WebappConfiguration()
+        config = ServerConfiguration()
         sys.argv = 'maay --db-host truc'.split()
         config.config_file = osp.join(osp.dirname(__file__), 'data', 'webapp2.ini')
         config.load()

Modified: trunk/maay/test/test_rpc.py
===================================================================
--- trunk/maay/test/test_rpc.py	2005-11-03 17:18:29 UTC (rev 289)
+++ trunk/maay/test/test_rpc.py	2005-11-03 17:20:36 UTC (rev 290)
@@ -35,7 +35,7 @@
 from maay import rpc
 from maay.dbentity import Document
 from maay.querier import MaayQuerier, AnonymousQuerier, ANONYMOUS_AVATARID
-from maay.server import MaayPortal, WebappConfiguration
+from maay.server import MaayPortal, ServerConfiguration
 
 class FakeConnection:
     def cursor(self):
@@ -72,7 +72,7 @@
 
 class RPCServerTC(unittest.TestCase):
     def setUp(self):
-        portal = MaayPortal(WebappConfiguration())
+        portal = MaayPortal(ServerConfiguration())
         portal.registerChecker(FakeChecker(portal.realm))
         self.portal = portal
         rpcserver = server.Site(rpc.MaayRPCServer(None, portal))

Added: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-03 17:18:29 UTC (rev 289)
+++ trunk/maay/webapplication.py	2005-11-03 17:20:36 UTC (rev 290)
@@ -0,0 +1,278 @@
+#     Copyright (C) 2005 France Telecom R&D
+#
+#     This program is free software; you can redistribute it and/or modify
+#     it under the terms of the GNU General Public License as published by
+#     the Free Software Foundation; either version 2 of the License, or
+#     (at your option) any later version.
+#
+#     This program is distributed in the hope that it will be useful,
+#     but WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#     GNU General Public License for more details.
+#
+#     You should have received a copy of the GNU General Public License
+#     along with this program; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+
+
+"""maay local web UI script"""
+
+__revision__ = '$Id: server.py 281 2005-11-03 11:00:56Z aurelienc $'
+
+from datetime import datetime
+import re
+from xmlrpclib import ServerProxy
+
+from zope.interface import Interface
+from twisted.web import static
+from nevow import rend, tags, loaders
+
+from logilab.common.textutils import normalize_text
+
+from maay.querier import WEB_AVATARID
+from maay.configuration import get_path_of
+from maay.texttool import makeAbstract, WORDS_RGX, normalizeText, boldifyText
+from maay.query import Query
+
+class IServerConfiguration(Interface):
+    """provide an interface in order to be able to remember webappconfig"""
+
+
+class Maay404(rend.FourOhFour):
+    """Maay specific resource for 404 errors"""
+    loader = loaders.xmlfile(get_path_of('notfound.html'))
+
+    def renderHTTP_notFound(self, context):
+        """Render a not found message to the given request.
+        """
+        return self.loader.load(context)[0]
+
+class MaayPage(rend.Page):
+    docFactory = loaders.xmlfile(get_path_of('skeleton.html'))
+    child_maaycss = static.File(get_path_of('maay.css'))
+    child_images = static.File(get_path_of('images/'))
+
+    def __init__(self, maayId=WEB_AVATARID):
+        rend.Page.__init__(self)
+        self.maayId = maayId
+
+#     def render_loginurl(self, context, data):
+#         url = URL.fromContext(context)
+#         store current URL into  'goThereAfter' to be able to return here
+#         after login
+#         goThereAfter = URL(url.scheme, url.netloc, url.pathList())
+#         if self.maayId != ANONYMOUS_AVATARID:
+#            goThereAfter = URL(url.scheme, url.netloc,
+#                               ['logout'] + url.pathList())
+#            context.fillSlots('actionlabel', 'Logout')
+#         else:
+#            goThereAfter = URL(url.scheme, url.netloc,
+#                               ['login'] + url.pathList())
+#            context.fillSlots('actionlabel', 'Login')            
+#         for param, value in url.queryList():
+#            goThereAfter = goThereAfter.add(param, value)
+#         context.fillSlots('loginurl', str(goThereAfter))
+#         return context.tag
+
+    def macro_body(self, context):
+        return self.bodyFactory
+
+#     def child_login(self, context):
+#         return LoginForm(self.maayId)
+
+#     def child_logout(self, context):
+#         print "sure we're not here ?"
+#         req = inevow.IRequest(context)
+#         req.getSession().expire()
+#         req.redirect('/' + guard.LOGOUT_AVATAR)
+
+class LoginForm(MaayPage):
+    """a basic login form. This page is rendered until the user
+    is logged.
+    """
+    # addSlash = True
+
+#     def path(self, context, data):
+#         here = URL.fromContext(context)
+#         # transform /login/somePathAndQuery into /__login__/somePathAndQuery
+#         # to benefit from nevow.guard redirection magic
+#         pathList = ['__login__'] + here.pathList()[1:]
+#         goThereAfter = URL(here.scheme, here.netloc,
+#                            pathList, here.queryList())
+#         return str(goThereAfter)
+
+#     bodyFactory = loaders.stan(
+#         tags.html[
+#             tags.head[tags.title["Maay Login Page",],
+#                       tags.link(rel='stylesheet', type='text/css', href='maay.css'),
+#                       tags.link(rel='shortcut icon', href='images/maay.ico'),
+#                       ],
+            
+#             tags.body[
+#                 # tags.form(action='/'+guard.LOGIN_AVATAR, render=path, method='post')[
+#                 tags.form(action=path, method='post')[
+#                     tags.table(_class="loginTable")[
+#                         tags.tr[
+#                             tags.td[ "Username :" ],
+#                             tags.td[ tags.input(type='text', name='username') ],
+#                             ],
+#                         tags.tr[
+#                             tags.td[ "Password :" ],
+#                             tags.td[ tags.input(type='password', name='password') ],
+#                             ]
+#                         ],
+#                     tags.input(type='submit'),
+#                     tags.p,
+#                     ]
+#                 ]
+#             ]
+#         )
+
+#     def childFactory(self, context, segments):
+#         print " child factory"
+#         return LoginForm()
+
+class PeersList(MaayPage):
+    """display list of registered peers"""
+    bodyFactory = loaders.xmlfile(get_path_of('peers.html'))
+    addSlash = True
+
+    def __init__(self, maayId, querier):
+        MaayPage.__init__(self, maayId)
+        self.querier = querier
+
+    def data_peers(self, context, data):
+        webappConfig = IServerConfiguration(context)
+        myNodeId = webappConfig.get_node_id()
+        print "PeerList data_peers : my_node_id =", myNodeId
+        peers = self.querier.getActiveNeighbors(myNodeId, 10)
+        return peers
+    
+    def render_peer(self, context, peerNode):
+        # Note: might be convenient to register a special flattener for
+        #       Node objects
+        for attrname in ('node_id', 'ip', 'port', 'last_seen_time',
+                         'claim_count', 'affinity', 'bandwidth'):
+            context.fillSlots(attrname, getattr(peerNode, attrname, 'N/A'))
+        return context.tag
+                    
+class SearchForm(MaayPage):
+    """default search form"""
+    bodyFactory = loaders.xmlfile(get_path_of('searchform.html'))
+    addSlash = True
+
+    def __init__(self, maayId, querier):
+        MaayPage.__init__(self, maayId)
+        self.querier = querier
+
+    def logout(self):
+        print "Bye %s !" % (self.maayId,)
+        # XXX: logout message should be forwarded to registration server
+        return None
+
+    def child_peers(self, context):
+        return PeersList(self.maayId, self.querier)
+
+    def _harvest_peer_results(self, query, context):
+        results = []
+        webappConfig = IServerConfiguration(context)
+        peers = self.querier.getActiveNeighbors(webappConfig.get_node_id(), 10)
+        print "SearchForm child_search peers = ", peers
+        for peer in peers:
+            server = ServerProxy('http://%s:%s' % (peer.ip, peer.port),
+                                 allow_none=True,
+                                 encoding='utf-8')
+            try:
+                cnxid, errmsg = server.authenticate('', '')
+            except Exception, e:
+                errmsg = "%s" % e
+            if errmsg:
+                print "For reason '%s', we couldn't authenticate with node %s:%s" \
+                      % (errmsg, peer.ip, peer.port)
+                continue # for whatever reason, we couldn't authenticate
+            try: #XXX: xmlrpc serialization problems arise here
+                results += server.findDocuments(cnxid, query)
+            except Exception, e:
+                print "SearchForm _harvest_peer_results pb : %s", e
+        return results
+
+    def child_search(self, context):
+        # query = unicode(context.arg('words'))        
+        offset = int(context.arg('offset', 0))
+        rawQuery = unicode(context.arg('words'), 'utf-8')
+        query = Query.fromRawQuery(rawQuery, offset)
+        localResults = self.querier.findDocuments(query)
+        peerResults = self._harvest_peer_results(rawQuery, context)
+        print "Results from the peers :", peerResults
+        results = localResults + peerResults
+        return ResultsPage(self.maayId, results, query)
+
+    # XXX make sure that the requested document is really in the database
+    # XXX don't forget to update the download statistics of the document
+    def child_download(self, context):
+        docid = context.arg('docid')
+        # query = unicode(context.arg('words'))
+        query = Query.fromRawQuery(unicode(context.arg('words'), 'utf-8'))
+        docurl = self.querier.notifyDownload(docid, query.words)
+        if docurl:
+            return static.File(docurl)
+        else:
+            return Maay404()
+
+
+class ResultsPage(MaayPage):
+    """default results page"""
+    bodyFactory = loaders.xmlfile(get_path_of('resultpage.html'))
+    addSlash = False
+    
+    def __init__(self, maayId, results, query):
+        MaayPage.__init__(self, maayId)
+        self.results = results
+        self.query = query.words # unicode(query)
+
+    def data_results(self, context, data):
+        return self.results
+
+    def render_title(self, context, data):
+        context.fillSlots('words', self.query)
+        return context.tag
+
+    def render_searchfield(self, context, data):
+        context.fillSlots('words', self.query)
+        return context.tag
+
+    def render_prevset_url(self, context, data):
+        words = WORDS_RGX.findall(normalizeText(unicode(context.arg('words'), 'utf-8')))
+        offset = int(context.arg('offset', 0))
+        if offset:
+            offset -= 15
+        return 'search?words=%s&offset=%s' % ('+'.join(words), offset)
+
+    def render_nextset_url(self, context, data):
+        words = WORDS_RGX.findall(normalizeText(unicode(context.arg('words'), 'utf-8')))
+        offset = int(context.arg('offset', 0)) + 15
+        return 'search?words=%s&offset=%s' % ('+'.join(words), offset)
+
+    
+    def render_row(self, context, data):
+        document = data
+        words = self.query.split()
+        context.fillSlots('mime_type', re.sub("/", "_", document.mime_type))
+        context.fillSlots('doctitle',
+                          tags.xml(boldifyText(document.title, words)))
+        # XXX abstract attribute should be a unicode string
+        try:
+            abstract = makeAbstract(document.text, words)
+            abstract = normalize_text(unicode(abstract))
+        except Exception, exc:
+            print exc
+            abstract = u'No abstract available for this document [%s]' % exc
+        context.fillSlots('abstract', tags.xml(abstract))
+        context.fillSlots('docid', document.db_document_id)
+        context.fillSlots('docurl', tags.xml(boldifyText(document.url, words)))
+        context.fillSlots('words', self.query)
+        context.fillSlots('readable_size', document.readable_size())
+        date = datetime.fromtimestamp(document.publication_time)
+        context.fillSlots('publication_date', date.strftime('%d %b %Y'))
+        return context.tag
+



From aurelienc at berlios.de  Thu Nov  3 18:57:31 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 3 Nov 2005 18:57:31 +0100
Subject: [Maay-svncheckins] r292 - trunk/maay
Message-ID: <200511031757.jA3HvV5i004446@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-03 18:57:30 +0100 (Thu, 03 Nov 2005)
New Revision: 292

Modified:
   trunk/maay/texttool.py
Log:
Small formatting enhancement. Exposes some makeAbstract bugs.


Modified: trunk/maay/texttool.py
===================================================================
--- trunk/maay/texttool.py	2005-11-03 17:37:53 UTC (rev 291)
+++ trunk/maay/texttool.py	2005-11-03 17:57:30 UTC (rev 292)
@@ -460,6 +460,7 @@
             if start > 0:
                 s.write(" <b>...</b> ")
             s.write(boldifyText(text[start:end], words))
+            s.write(" <b>...</b><br> ")
             
         start = position - EXCERPT_MAX_HALF_LEN
         if start < 0: # address begining OT



From aurelienc at berlios.de  Thu Nov  3 18:58:09 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 3 Nov 2005 18:58:09 +0100
Subject: [Maay-svncheckins] r293 - trunk/maay
Message-ID: <200511031758.jA3Hw9dM004480@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-03 18:58:08 +0100 (Thu, 03 Nov 2005)
New Revision: 293

Modified:
   trunk/maay/webapplication.py
Log:
Remove dead code.


Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-03 17:57:30 UTC (rev 292)
+++ trunk/maay/webapplication.py	2005-11-03 17:58:08 UTC (rev 293)
@@ -56,82 +56,10 @@
         rend.Page.__init__(self)
         self.maayId = maayId
 
-#     def render_loginurl(self, context, data):
-#         url = URL.fromContext(context)
-#         store current URL into  'goThereAfter' to be able to return here
-#         after login
-#         goThereAfter = URL(url.scheme, url.netloc, url.pathList())
-#         if self.maayId != ANONYMOUS_AVATARID:
-#            goThereAfter = URL(url.scheme, url.netloc,
-#                               ['logout'] + url.pathList())
-#            context.fillSlots('actionlabel', 'Logout')
-#         else:
-#            goThereAfter = URL(url.scheme, url.netloc,
-#                               ['login'] + url.pathList())
-#            context.fillSlots('actionlabel', 'Login')            
-#         for param, value in url.queryList():
-#            goThereAfter = goThereAfter.add(param, value)
-#         context.fillSlots('loginurl', str(goThereAfter))
-#         return context.tag
-
     def macro_body(self, context):
         return self.bodyFactory
 
-#     def child_login(self, context):
-#         return LoginForm(self.maayId)
 
-#     def child_logout(self, context):
-#         print "sure we're not here ?"
-#         req = inevow.IRequest(context)
-#         req.getSession().expire()
-#         req.redirect('/' + guard.LOGOUT_AVATAR)
-
-class LoginForm(MaayPage):
-    """a basic login form. This page is rendered until the user
-    is logged.
-    """
-    # addSlash = True
-
-#     def path(self, context, data):
-#         here = URL.fromContext(context)
-#         # transform /login/somePathAndQuery into /__login__/somePathAndQuery
-#         # to benefit from nevow.guard redirection magic
-#         pathList = ['__login__'] + here.pathList()[1:]
-#         goThereAfter = URL(here.scheme, here.netloc,
-#                            pathList, here.queryList())
-#         return str(goThereAfter)
-
-#     bodyFactory = loaders.stan(
-#         tags.html[
-#             tags.head[tags.title["Maay Login Page",],
-#                       tags.link(rel='stylesheet', type='text/css', href='maay.css'),
-#                       tags.link(rel='shortcut icon', href='images/maay.ico'),
-#                       ],
-            
-#             tags.body[
-#                 # tags.form(action='/'+guard.LOGIN_AVATAR, render=path, method='post')[
-#                 tags.form(action=path, method='post')[
-#                     tags.table(_class="loginTable")[
-#                         tags.tr[
-#                             tags.td[ "Username :" ],
-#                             tags.td[ tags.input(type='text', name='username') ],
-#                             ],
-#                         tags.tr[
-#                             tags.td[ "Password :" ],
-#                             tags.td[ tags.input(type='password', name='password') ],
-#                             ]
-#                         ],
-#                     tags.input(type='submit'),
-#                     tags.p,
-#                     ]
-#                 ]
-#             ]
-#         )
-
-#     def childFactory(self, context, segments):
-#         print " child factory"
-#         return LoginForm()
-
 class PeersList(MaayPage):
     """display list of registered peers"""
     bodyFactory = loaders.xmlfile(get_path_of('peers.html'))



From aurelienc at berlios.de  Thu Nov  3 19:06:06 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 3 Nov 2005 19:06:06 +0100
Subject: [Maay-svncheckins] r294 - trunk/maay
Message-ID: <200511031806.jA3I66vI008456@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-03 19:06:01 +0100 (Thu, 03 Nov 2005)
New Revision: 294

Modified:
   trunk/maay/texttool.py
Log:
Unfix makeAbstract (quite hard to satisfy the tests, grumble).


Modified: trunk/maay/texttool.py
===================================================================
--- trunk/maay/texttool.py	2005-11-03 17:58:08 UTC (rev 293)
+++ trunk/maay/texttool.py	2005-11-03 18:06:01 UTC (rev 294)
@@ -460,7 +460,6 @@
             if start > 0:
                 s.write(" <b>...</b> ")
             s.write(boldifyText(text[start:end], words))
-            s.write(" <b>...</b><br> ")
             
         start = position - EXCERPT_MAX_HALF_LEN
         if start < 0: # address begining OT



From aurelienc at berlios.de  Thu Nov  3 19:07:38 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 3 Nov 2005 19:07:38 +0100
Subject: [Maay-svncheckins] r295 - trunk/maay
Message-ID: <200511031807.jA3I7cw9008845@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-03 19:07:35 +0100 (Thu, 03 Nov 2005)
New Revision: 295

Modified:
   trunk/maay/server.py
Log:
Remove dead code, add notification of bug.


Modified: trunk/maay/server.py
===================================================================
--- trunk/maay/server.py	2005-11-03 18:06:01 UTC (rev 294)
+++ trunk/maay/server.py	2005-11-03 18:07:35 UTC (rev 295)
@@ -88,11 +88,8 @@
             # if we were asked for a web resource
             if iface is inevow.IResource:
                 querier = self._getQuerier(avatarId)
-                if querier is None:
-                    return inevow.IResource, LoginForm(), lambda: None
-                else:
-                    print "Building search form for", avatarId
-                    resc = SearchForm(avatarId, querier)
+                print "Building search form for", avatarId
+                resc = SearchForm(avatarId, querier)
                 return inevow.IResource, resc, resc.logout
             # if we were asked for a querier
             elif iface is IQuerier:
@@ -381,7 +378,8 @@
         reactor.run()
     finally:
         print "-----------Shutting down Server----------"
-        
+        # the following can't work : the reactor is dead when we want to logout
+        # for a fix, have a look at addSystemEventTrigger (twisted internet interfaces)
         registrationclient.logout(reactor,
                                   webappConfig.registration_host,
                                   webappConfig.registration_port,



From dnf at berlios.de  Thu Nov  3 19:25:35 2005
From: dnf at berlios.de (Frédéric DANG NGOC at BerliOS)
Date: Thu, 3 Nov 2005 19:25:35 +0100
Subject: [Maay-svncheckins] r296 - trunk/maay
Message-ID: <200511031825.jA3IPZ3C016914@sheep.berlios.de>

Author: dnf
Date: 2005-11-03 19:25:18 +0100 (Thu, 03 Nov 2005)
New Revision: 296

Modified:
   trunk/maay/indexer.py
Log:
Ugly patch in FileIterator to check if the filename should be encoded in utf-8 or iso-8859-1. A better solution is welcome...
(This avoids the FileIterator to crash when encounter the special file in /usr/share/doc/console-tools/examples/)



Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-03 18:07:35 UTC (rev 295)
+++ trunk/maay/indexer.py	2005-11-03 18:25:18 UTC (rev 296)
@@ -210,11 +210,13 @@
                     except UnicodeError:
                         dirpath = unicode(dirpath, 'iso-8859-1')
                     for filename in filenames:
+                    # FIXME: ugly patch to check if the filename should be encoded in utf-8 or iso-8859-1. A better solution is welcome...
+                        try:
+                            os.access(os.path.join(dirpath, unicode(filename, 'utf-8')), os.R_OK)
+                            filename = unicode(filename, 'utf-8')
+                        except UnicodeError:
+                            filename = unicode(filename, 'iso-8859-1')
                         if os.access(os.path.join(dirpath, filename), os.R_OK): # Can we open it ?
-                            try:
-                                filename = unicode(filename, 'utf-8')
-                            except UnicodeError:
-                                filename = unicode(filename, 'iso-8859-1')
                             yield os.path.join(dirpath, filename)
                     
     def _removeSkippedDirnames(self, dirpath, dirnames):



From dnf at berlios.de  Thu Nov  3 19:28:57 2005
From: dnf at berlios.de (Frédéric DANG NGOC at BerliOS)
Date: Thu, 3 Nov 2005 19:28:57 +0100
Subject: [Maay-svncheckins] r297 - trunk/maay
Message-ID: <200511031828.jA3ISvm9017681@sheep.berlios.de>

Author: dnf
Date: 2005-11-03 19:28:55 +0100 (Thu, 03 Nov 2005)
New Revision: 297

Modified:
   trunk/maay/converter.py
Log:
Fix in CommandBasedConverter to catch the IOError raise by GZIP parser.



Modified: trunk/maay/converter.py
===================================================================
--- trunk/maay/converter.py	2005-11-03 18:25:18 UTC (rev 296)
+++ trunk/maay/converter.py	2005-11-03 18:28:55 UTC (rev 297)
@@ -175,8 +175,11 @@
         try:
             if errcode == 0: # OK
                 parser = self.getParser()
-                return parser.parseFile(outputFile, osp.basename(filepath),
+                try:
+                    return parser.parseFile(outputFile, osp.basename(filepath),
                                         self.OUTPUT_ENCODING)
+                except IOError:
+                    raise IndexationFailure('Unable to index %r' % filepath)
             else:
                 raise IndexationFailure('Unable to index %r' % filepath)
         finally:



From aurelienc at berlios.de  Fri Nov  4 10:57:25 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 4 Nov 2005 10:57:25 +0100
Subject: [Maay-svncheckins] r298 - trunk/maay
Message-ID: <200511040957.jA49vPC4007080@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-04 10:57:23 +0100 (Fri, 04 Nov 2005)
New Revision: 298

Modified:
   trunk/maay/exif.py
   trunk/maay/image.py
Log:
Don't crash on missing PIL.


Modified: trunk/maay/exif.py
===================================================================
--- trunk/maay/exif.py	2005-11-03 18:28:55 UTC (rev 297)
+++ trunk/maay/exif.py	2005-11-04 09:57:23 UTC (rev 298)
@@ -4,9 +4,12 @@
 """
 
 #XXX: robustify this against missing PIL
-import Image
+try:
+    import Image
+except:
+    print "Python Imaging Library not installed for your version of Python.",
+    print "EXIF support will not work."
     
-    
 # Mapping from number to (descriptor, type)
 exif_dict = {
     256 : ('ImageWidth', int),

Modified: trunk/maay/image.py
===================================================================
--- trunk/maay/image.py	2005-11-03 18:28:55 UTC (rev 297)
+++ trunk/maay/image.py	2005-11-04 09:57:23 UTC (rev 298)
@@ -1,6 +1,11 @@
 """Some utilities to manipulate images"""
 
-import Image
+try:
+    import Image
+except:
+    print "Python Imaging Library not installed for your version of Python.",
+    print "Thumbnail support will not work."
+
 from tempfile import mkdtemp
 import stat, os, os.path as osp
 from maay.exif import *



From aurelienc at berlios.de  Fri Nov  4 10:59:04 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 4 Nov 2005 10:59:04 +0100
Subject: [Maay-svncheckins] r299 - trunk/maay
Message-ID: <200511040959.jA49x4Oh007667@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-04 10:58:53 +0100 (Fri, 04 Nov 2005)
New Revision: 299

Modified:
   trunk/maay/indexer.py
Log:
Ten lines of crud removed to make FileIterator not choke on strange filenames.


Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-04 09:57:23 UTC (rev 298)
+++ trunk/maay/indexer.py	2005-11-04 09:58:53 UTC (rev 299)
@@ -181,8 +181,7 @@
             else:
                 print "Error indexing %s: %s" % (futureDoc.filename.encode('iso-8859-1'), exc)
         
-    
-     
+
 class FileIterator:
     """provide a simple way to walk through indexed dirs"""
     def __init__(self, indexed, skipped=None):
@@ -205,17 +204,7 @@
                 for dirpath, dirnames, filenames in os.walk(path):
                     # print "looking in", dirpath
                     self._removeSkippedDirnames(dirpath, dirnames)
-                    try:
-                        dirpath = unicode(dirpath, 'utf-8')
-                    except UnicodeError:
-                        dirpath = unicode(dirpath, 'iso-8859-1')
                     for filename in filenames:
-                    # FIXME: ugly patch to check if the filename should be encoded in utf-8 or iso-8859-1. A better solution is welcome...
-                        try:
-                            os.access(os.path.join(dirpath, unicode(filename, 'utf-8')), os.R_OK)
-                            filename = unicode(filename, 'utf-8')
-                        except UnicodeError:
-                            filename = unicode(filename, 'iso-8859-1')
                         if os.access(os.path.join(dirpath, filename), os.R_OK): # Can we open it ?
                             yield os.path.join(dirpath, filename)
                     



From aurelien.campeas at logilab.fr  Fri Nov  4 11:01:32 2005
From: aurelien.campeas at logilab.fr (=?iso-8859-1?Q?Aur=E9lien_Camp=E9as?=)
Date: Fri, 4 Nov 2005 11:01:32 +0100
Subject: [Maay-svncheckins] r296 - trunk/maay
In-Reply-To: <200511031825.jA3IPZ3C016914@sheep.berlios.de>
References: <200511031825.jA3IPZ3C016914@sheep.berlios.de>
Message-ID: <20051104100131.GB1219@logilab.fr>

On Thu, Nov 03, 2005 at 07:25:35PM +0100, Fr?d?ric DANG NGOC at BerliOS wrote:
> Author: dnf
> Date: 2005-11-03 19:25:18 +0100 (Thu, 03 Nov 2005)
> New Revision: 296
> 
> Modified:
>    trunk/maay/indexer.py
> Log:
> Ugly patch in FileIterator to check if the filename should be
encoded in utf-8 or iso-8859-1. A better solution is welcome...

A better solution was to remove *all* the bogus unicode conversions :)

> (This avoids the FileIterator to crash when encounter the special
  file in /usr/share/doc/console-tools/examples/)

I've added the file with a garbled name to test/data. Now, have to write a test.

Aur?lien.


From aurelienc at berlios.de  Fri Nov  4 11:15:47 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 4 Nov 2005 11:15:47 +0100
Subject: [Maay-svncheckins] r300 - trunk/maay
Message-ID: <200511041015.jA4AFls0010155@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-04 11:15:44 +0100 (Fri, 04 Nov 2005)
New Revision: 300

Modified:
   trunk/maay/DEPENDS
Log:
nevow version >= 0.5


Modified: trunk/maay/DEPENDS
===================================================================
--- trunk/maay/DEPENDS	2005-11-04 09:58:53 UTC (rev 299)
+++ trunk/maay/DEPENDS	2005-11-04 10:15:44 UTC (rev 300)
@@ -1,6 +1,6 @@
 python-twisted (>= 2.0.1)
 python-twisted-web
-python-nevow (SVN)
+python-nevow (>= 0.5)
 python-zopeinterface (>= 3.0.1)
 logilab-common (not yet release version, for unicode support in dbapi)
 python-mysqldb



From aurelienc at berlios.de  Fri Nov  4 11:17:03 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 4 Nov 2005 11:17:03 +0100
Subject: [Maay-svncheckins] r301 - trunk/maay
Message-ID: <200511041017.jA4AH3Hi010264@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-04 11:16:58 +0100 (Fri, 04 Nov 2005)
New Revision: 301

Modified:
   trunk/maay/converter.py
Log:
Add IOError check.


Modified: trunk/maay/converter.py
===================================================================
--- trunk/maay/converter.py	2005-11-04 10:15:44 UTC (rev 300)
+++ trunk/maay/converter.py	2005-11-04 10:16:58 UTC (rev 301)
@@ -100,7 +100,9 @@
             return parser.parseFile(filepath, osp.basename(filepath),
                                     self.OUTPUT_ENCODING)
         except ParsingError, exc:
-            raise IndexationFailure("Cannot index document %s (%s)" % (filepath, exc))
+            raise IndexationFailure("Cannot parse document %s (because %s)" % (filepath, exc))
+        except IOError, exc:
+            raise IndexationFailure("Cannot read document %s (because %s)" % (filepath, exc))
 
 
 class RawTextConverter(BaseConverter):



From aurelienc at berlios.de  Fri Nov  4 11:18:42 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 4 Nov 2005 11:18:42 +0100
Subject: [Maay-svncheckins] r302 - trunk/maay/test/data
Message-ID: <200511041018.jA4AIgn4010376@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-04 11:18:39 +0100 (Fri, 04 Nov 2005)
New Revision: 302

Added:
   trunk/maay/test/data/?\195?\162?\194?\153?\194?\170?\195?\162?\194?\153?\194?\172
   trunk/maay/test/data/bogus.txt.gz
Log:
Two new test files.


/usr/local/bin/commit-email.pl: `/usr/bin/svnlook diff /svnroot/repos/maay -r 302' failed with this output:
svnlook: Can't convert string from 'UTF-8' to native encoding:
svnlook: /tmp/svnlook.1/trunk/maay/test/data/?\195?\162?\194?\153?\194?\170?\195?\162?\194?\153?\194?\172


From aurelienc at berlios.de  Fri Nov  4 11:36:01 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 4 Nov 2005 11:36:01 +0100
Subject: [Maay-svncheckins] r303 - trunk/maay/test
Message-ID: <200511041036.jA4Aa1rc012281@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-04 11:35:59 +0100 (Fri, 04 Nov 2005)
New Revision: 303

Modified:
   trunk/maay/test/test_converter.py
   trunk/maay/test/test_fileiteration.py
Log:
two more tests


Modified: trunk/maay/test/test_converter.py
===================================================================
--- trunk/maay/test/test_converter.py	2005-11-04 10:18:39 UTC (rev 302)
+++ trunk/maay/test/test_converter.py	2005-11-04 10:35:59 UTC (rev 303)
@@ -72,6 +72,9 @@
     def testIndexationFailure(self):
         self.assertRaises(converter.IndexationFailure, converter.extractWordsFromFile,
                           'AUTHORS')
+        self.assertRaises(converter.IndexationFailure, converter.extractWordsFromFile,
+                          'bogus.txt.gz')
 
+
 if __name__ == '__main__':
     unittest.main()

Modified: trunk/maay/test/test_fileiteration.py
===================================================================
--- trunk/maay/test/test_fileiteration.py	2005-11-04 10:18:39 UTC (rev 302)
+++ trunk/maay/test/test_fileiteration.py	2005-11-04 10:35:59 UTC (rev 303)
@@ -115,7 +115,14 @@
                         abspath(join(DATADIR, 'b', 'c', 'e', 'foobar')),
                         ])
         self.assertEquals(Set(it), expected)
+
+    def testDontChokeOnWeirdFilename(self):
+        """we should iter without pain on everything in DATADIR, including
+           the file whose name begins with an &acirc;
+        """
+        it = FileIterator(DATADIR)
+        for filename in it:
+            pass
         
-        
 if __name__ == '__main__':
     unittest.main()



From dnf at berlios.de  Fri Nov  4 15:38:08 2005
From: dnf at berlios.de (Frédéric DANG NGOC at BerliOS)
Date: Fri, 4 Nov 2005 15:38:08 +0100
Subject: [Maay-svncheckins] r304 - trunk/maay
Message-ID: <200511041438.jA4Ec8Uj007626@sheep.berlios.de>

Author: dnf
Date: 2005-11-04 15:38:07 +0100 (Fri, 04 Nov 2005)
New Revision: 304

Modified:
   trunk/maay/registration.py
Log:
make the _registeredUsers a static class member.
reason : a new instance of RegistrationServer is created after each request



Modified: trunk/maay/registration.py
===================================================================
--- trunk/maay/registration.py	2005-11-04 10:35:59 UTC (rev 303)
+++ trunk/maay/registration.py	2005-11-04 14:38:07 UTC (rev 304)
@@ -27,12 +27,13 @@
 from twisted.protocols.basic import LineReceiver
 
 class RegistrationServer(LineReceiver):
-    #_registeredUsers = {} why class member ?
+    # define this as a static class member since a new instance of the class
+    # is created after each request
+    _registeredUsers = {} 
     # TODO: auto logout after a given time to save memory
 
     def __init__(self, autoExpirationDelayInSecs=3600):
         self._autoExpirationDelayInSecs = autoExpirationDelayInSecs
-        self._registeredUsers = {}
         self._ruTimestamp = {}
 
     def _auto_logout_everybody(self):
@@ -42,7 +43,7 @@
         for nodeId, values in self._ruTimestamp.items():
             dt = now - values
             if dt.seconds > self._autoExpirationDelayInSecs:
-                del self._registeredUsers[nodeId]
+                del RegistrationServer._registeredUsers[nodeId]
                 del self._ruTimestamp[nodeId]
         
     def lineReceived(self, line):
@@ -68,11 +69,11 @@
         
     def do_login(self, nodeId, ip, port, bandwidth):
         print "%s accepts %s" % (id(self), nodeId)
-        if nodeId in self._registeredUsers:
+        if nodeId in RegistrationServer._registeredUsers:
             print "%s was already registered" % (nodeId,)
         lastseen = datetime.utcnow()
         self._ruTimestamp[nodeId] = lastseen
-        self._registeredUsers[nodeId] = (lastseen.isoformat(),
+        RegistrationServer._registeredUsers[nodeId] = (lastseen.isoformat(),
                                          nodeId,
                                          ip,
                                          port,
@@ -82,14 +83,14 @@
     def do_logout(self, nodeId):
         print "logout request from node %s" % nodeId
         try:
-            del self._registeredUsers[nodeId]
+            del RegistrationServer._registeredUsers[nodeId]
             del self._ruTimestamp[nodeId]
         except KeyError:
             print "%s was not registered" % (nodeId,)
 
     def do_who(self):
         """returns the list of logged in nodes"""
-        nodes = self._registeredUsers.values()
+        nodes = RegistrationServer._registeredUsers.values()
         nodes.sort()
         nodes.reverse()
         for nodeinfo in nodes:



From dnf at berlios.de  Fri Nov  4 15:42:41 2005
From: dnf at berlios.de (Frédéric DANG NGOC at BerliOS)
Date: Fri, 4 Nov 2005 15:42:41 +0100
Subject: [Maay-svncheckins] r305 - trunk/maay/configuration
Message-ID: <200511041442.jA4EgfCB008120@sheep.berlios.de>

Author: dnf
Date: 2005-11-04 15:42:41 +0100 (Fri, 04 Nov 2005)
New Revision: 305

Modified:
   trunk/maay/configuration/indexer.ini
Log:
Just fix some variable names.



Modified: trunk/maay/configuration/indexer.ini
===================================================================
--- trunk/maay/configuration/indexer.ini	2005-11-04 14:38:07 UTC (rev 304)
+++ trunk/maay/configuration/indexer.ini	2005-11-04 14:42:41 UTC (rev 305)
@@ -19,10 +19,10 @@
 #
 # You can use a comma separated list of values to specify several
 # directories in each configuration variable. 
-private-index-dirs=c:\
-private-skip-dirs=c:\windows
-public-index-dirs=
-private-index-dirs=
+private-index-dir=c:\
+private-skip-dir=c:\windows
+public-index-dir=
+private-index-dir=
 
 # print messages in the console
 verbose=yes



From aurelienc at berlios.de  Fri Nov  4 16:29:17 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 4 Nov 2005 16:29:17 +0100
Subject: [Maay-svncheckins] r306 - trunk/maay
Message-ID: <200511041529.jA4FTHv5013402@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-04 16:29:17 +0100 (Fri, 04 Nov 2005)
New Revision: 306

Modified:
   trunk/maay/server.py
Log:
Remove dead code


Modified: trunk/maay/server.py
===================================================================
--- trunk/maay/server.py	2005-11-04 14:42:41 UTC (rev 305)
+++ trunk/maay/server.py	2005-11-04 15:29:17 UTC (rev 306)
@@ -378,14 +378,7 @@
         reactor.run()
     finally:
         print "-----------Shutting down Server----------"
-        # the following can't work : the reactor is dead when we want to logout
-        # for a fix, have a look at addSystemEventTrigger (twisted internet interfaces)
-        registrationclient.logout(reactor,
-                                  webappConfig.registration_host,
-                                  webappConfig.registration_port,
-                                  webappConfig.get_node_id())
         
-        
 
 if __name__ == '__main__':
     run()



From aurelienc at berlios.de  Fri Nov  4 16:32:46 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 4 Nov 2005 16:32:46 +0100
Subject: [Maay-svncheckins] r307 - trunk/maay
Message-ID: <200511041532.jA4FWkBU014004@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-04 16:32:45 +0100 (Fri, 04 Nov 2005)
New Revision: 307

Modified:
   trunk/maay/registrationclient.py
Log:
Ultraverbosification.


Modified: trunk/maay/registrationclient.py
===================================================================
--- trunk/maay/registrationclient.py	2005-11-04 15:29:17 UTC (rev 306)
+++ trunk/maay/registrationclient.py	2005-11-04 15:32:45 UTC (rev 307)
@@ -20,33 +20,47 @@
 from time import mktime
 
 class RegistrationClient(LineReceiver):
+    """Client-side stuff to ask/request things from the registration server.
+       Tightly coupled with registration.py
+    """
+    
     def __init__(self, nodeRegistrationCallback):
-        self.__callback = nodeRegistrationCallback
+        self._callback = nodeRegistrationCallback
+        self._lineCount = 0
         
     def login(self, nodeId, ip, port, bandwidth) :
-        print "login to registration server (node %s at %s:%s)" % (nodeId, ip, port)
-        self.transport.write('login:%s:%s:%s:%s\r\n' % (nodeId, ip,
-                                                     port, bandwidth))
+        print "RegistrationClient login to registration server (node %s at %s:%s)" \
+              % (nodeId, ip, port)
+        self.transport.write('login:%s:%s:%s:%s\r\n' \
+                             % (nodeId, ip, port, bandwidth))
         return self
 
     def logout(self, nodeId):
-        print "logout from registration server (node %s)" % nodeId
+        print "RegistrationClient logout from registration server (node %s)" % nodeId
         self.transport.write('logout:%s\r\n' % nodeId)
         self.transport.loseConnection()
 
     def who(self):
-        print "querying registration server"
+        print "RegistrationClient who"
         self.transport.write('who:\r\n')
 
     def lineReceived(self, data):
+        """receiving end of the client
+           for each method of RegisterClient, we might get
+           an int (=len(registered nodes)) number of lines,
+           to be properly transformed back
+           to complete node identification data
+           WE are responsible for the correct unpacking of said data here
+           """
+        self._lineCount += 1
         data = data.strip()
-        print "registration server said", data
+        print "RegistrationClient lineReceived (%s) said %s" % (self._lineCount, data)
         if data.startswith('EOT'):
             self.transport.loseConnection()
             return
         time, nodeId, nodeIP, nodePort, nodeBandwidth = data.split('\t')
         lastSeenTime = parseTime(time)
-        self.__callback(nodeId, nodeIP, nodePort, nodeBandwidth, lastSeenTime)
+        self._callback(nodeId, nodeIP, nodePort, nodeBandwidth, lastSeenTime)
         
 
 def parseTime(isodatetime):
@@ -57,6 +71,8 @@
 
 
 def login(reactor, regIP, regPort, querier, nodeId, nodeIP, xmlrpcPort, bandwidth):
+    """registers and transmits the node catalog to querier.registerNode
+    """
     if querier is not None:
         c = ClientCreator(reactor, RegistrationClient, querier.registerNode)
         d = c.connectTCP(regIP, regPort)
@@ -65,6 +81,11 @@
     else:
         print "Login : no querier found => no registration / no P2P"
 
+def askWho(reactor, regIp, regPort, callback):
+    """transmits node catalog to the callback"""
+    c = ClientCreator(reactor, RegistrationClient, callback)
+    d = c.connectTCP(regIp, regPort)
+    d.addCallback(RegistrationClient.who)
 
 def logout(reactor, regIp, regPort, nodeId):
     print "Registrator@%s:%s node %s wants to log out." % (regIp, regPort, nodeId)



From aurelienc at berlios.de  Fri Nov  4 16:36:53 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 4 Nov 2005 16:36:53 +0100
Subject: [Maay-svncheckins] r308 - trunk/maay
Message-ID: <200511041536.jA4FarA7014318@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-04 16:36:53 +0100 (Fri, 04 Nov 2005)
New Revision: 308

Modified:
   trunk/maay/dbentity.py
Log:
Add notice about how to manage registered vs active/live nodes


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-04 15:32:45 UTC (rev 307)
+++ trunk/maay/dbentity.py	2005-11-04 15:36:53 UTC (rev 308)
@@ -428,9 +428,12 @@
            shall decay in the future, when the network of live maay
            peers will be vast enough so as to avoid its fragmentation into
            small unconnected groups of Nodes)
+           how to proceed : it would be nice to ask the registrar and ping
+           all registered nodes at once, then wait until everybody has answered
+           (in short : use futures) ... even nicer, add a timeout constraint,
+           especially on the 'ping registered nodes' part
         """
         registered = cls.selectRegistered(cursor, currentNodeId, maxResults)
-        print "Node selectActive active :", registered
         active = []
         for node in registered:
             if node.isAlive():



From aurelienc at berlios.de  Fri Nov  4 16:38:42 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 4 Nov 2005 16:38:42 +0100
Subject: [Maay-svncheckins] r309 - trunk/maay
Message-ID: <200511041538.jA4FcgE0014456@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-04 16:38:42 +0100 (Fri, 04 Nov 2005)
New Revision: 309

Modified:
   trunk/maay/querier.py
Log:
Add docstring


Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-04 15:36:53 UTC (rev 308)
+++ trunk/maay/querier.py	2005-11-04 15:38:42 UTC (rev 309)
@@ -256,7 +256,8 @@
 
 
     def registerNode(self, nodeId, ip, port, bandwidth, lastSeenTime=None):
-        print "AnonymousQuerier registerNode %s %s:%s" % (nodeId, ip, port)
+        """this will be used as a callback in registrationclient/login"""
+        print "AnonymousQuerier registerNode (callback) %s %s:%s" % (nodeId, ip, port)
         lastSeenTime = lastSeenTime or int(time.time())
         cursor = self._cnx.cursor()
         node = Node.selectOrInsertWhere(cursor, node_id=nodeId)[0]



From aurelienc at berlios.de  Fri Nov  4 18:19:45 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 4 Nov 2005 18:19:45 +0100
Subject: [Maay-svncheckins] r310 - trunk/maay
Message-ID: <200511041719.jA4HJjAB012882@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-04 18:19:45 +0100 (Fri, 04 Nov 2005)
New Revision: 310

Modified:
   trunk/maay/rpc.py
Log:
Remove dead code


Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-04 15:38:42 UTC (rev 309)
+++ trunk/maay/rpc.py	2005-11-04 17:19:45 UTC (rev 310)
@@ -97,12 +97,6 @@
             querier = self._sessions[cnxId]
             return querier.getIndexedFiles()
         return []
-
-    def xmlrpc_findDocuments(self, cnxId, query):
-        if self.cnxIsValid(cnxId):
-            queryAsObj = Query.fromRawQuery(query)
-            return self._sessions[cnxId].findDocuments(queryAsObj)
-        return []
         
     def xmlrpc_removeFileInfo(self, cnxId, filename):
         if self.cnxIsValid(cnxId):
@@ -150,7 +144,7 @@
         return self.nodeId
 
     def xmlrpc_distributedQueryAnswer(self, queryId, senderId, documents):
-        answer = P2pAnswer()
+        answer = P2pAnswer() # FIXME: fill in objects
         d = reactor.callLater(.01, self._p2pQuerier.receiveAnswer,answer)
         return self.nodeId
                          



From aurelienc at berlios.de  Fri Nov  4 18:20:30 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 4 Nov 2005 18:20:30 +0100
Subject: [Maay-svncheckins] r311 - trunk/maay
Message-ID: <200511041720.jA4HKU98012935@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-04 18:20:30 +0100 (Fri, 04 Nov 2005)
New Revision: 311

Modified:
   trunk/maay/p2pquerier.py
Log:
Small nbNodes fix


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-04 17:19:45 UTC (rev 310)
+++ trunk/maay/p2pquerier.py	2005-11-04 17:20:30 UTC (rev 311)
@@ -81,13 +81,14 @@
     """
     _queries = {} 
     
-    def __init__(self, nodeId, querier):  # about those ? 
+    def __init__(self, nodeId, querier):
         self.nodeId = nodeId  
         self.querier = querier
 
     def sendQuery(self, query):
         for neighbor in self._selectTargetNeighbors(query):
             proxy = Proxy(neighbor.getRpcUrl())
+            # below : returns a deferred
             d = proxy.callRemote('distributedQuery', query.asKwargs())
             d.addCallback(self.querier.registerNodeActivity)
             print "sent %s to %s" % (query, neighbor)
@@ -117,7 +118,7 @@
         
         for document in answer.documents:
             # TODO: record answer in database if local is False
-            if query.isKnown(document):
+            if not query.isKnown(document):
                 self.query.addMatch(document)
                 toSend.append(document.asDictionnary())
         
@@ -136,7 +137,7 @@
     def _selectTargetNeighbors(self, query):
         """return a list of nodes to which the query will be sent.
         """
-        nbNodes = 2**(max(0, 5-query.ttl))
+        nbNodes = 2**(max(5, query.ttl))
         # TODO: use the neighbors' profiles to route requests
         return self.querier.getActiveNeighbors(self.nodeId, nbNodes)
         



From aurelienc at berlios.de  Fri Nov  4 18:22:04 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 4 Nov 2005 18:22:04 +0100
Subject: [Maay-svncheckins] r312 - trunk/maay
Message-ID: <200511041722.jA4HM4SH013055@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-04 18:22:04 +0100 (Fri, 04 Nov 2005)
New Revision: 312

Modified:
   trunk/maay/dbentity.py
Log:
Cleanup my own mess (my plan was already overfulfilled with Alf's nice p2pquerier stuff)


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-04 17:20:30 UTC (rev 311)
+++ trunk/maay/dbentity.py	2005-11-04 17:22:04 UTC (rev 312)
@@ -422,30 +422,8 @@
     selectRegistered = classmethod(selectRegistered)
 
     def selectActive(cls, cursor, currentNodeId, maxResults):
-        """idea : filter the registered Nodes to get only truly active ones
-           we should profit from this to also ask the registration server
-           about the Nodes it knows (the importance of the reg. server
-           shall decay in the future, when the network of live maay
-           peers will be vast enough so as to avoid its fragmentation into
-           small unconnected groups of Nodes)
-           how to proceed : it would be nice to ask the registrar and ping
-           all registered nodes at once, then wait until everybody has answered
-           (in short : use futures) ... even nicer, add a timeout constraint,
-           especially on the 'ping registered nodes' part
-        """
-        registered = cls.selectRegistered(cursor, currentNodeId, maxResults)
-        active = []
-        for node in registered:
-            if node.isAlive():
-                active.append(node)
-        return active
-    selectActive = classmethod(selectActive)
+        return cls.selectRegistered(cursor, currentNodeId, maxResults)
 
-    def isAlive(self):
-        """instant liveness check of a distant Node (stub)
-        """
-        return True
-
     def getRpcUrl(self):
         return 'http://%s:%s' % (self.ip, self.port)
 



From aurelienc at berlios.de  Fri Nov  4 18:22:30 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 4 Nov 2005 18:22:30 +0100
Subject: [Maay-svncheckins] r313 - trunk/maay
Message-ID: <200511041722.jA4HMUJL013087@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-04 18:22:29 +0100 (Fri, 04 Nov 2005)
New Revision: 313

Modified:
   trunk/maay/TODO.txt
Log:
Typo


Modified: trunk/maay/TODO.txt
===================================================================
--- trunk/maay/TODO.txt	2005-11-04 17:22:04 UTC (rev 312)
+++ trunk/maay/TODO.txt	2005-11-04 17:22:29 UTC (rev 313)
@@ -6,7 +6,7 @@
 #B   _ ajouter d'autres convertisseurs (XML, code source) (2005.09.30)
 #B   X traiter les changements d'?tat des fichiers index?s (en particulier suppression) (2005.09.27)
 #B   X Faire fonctionner le xmlrpc avec utf-8 (2005.09.27)
-#B   X v?rifier qu'on utiliser de l'UTF-8 partout (2005.09.27)
+#B   X v?rifier qu'on utilise de l'UTF-8 partout (2005.09.27)
 #B   X g?rer les documents compress?s (2005.09.28)
 #B   X Regarder la conversion pdf->html (2005.09.28)
 #B   _ utiliser des macros pour g?rer l'aspect commun de toutes les pages (2005.10.18)



From adimasci at berlios.de  Sat Nov  5 19:35:42 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Sat, 5 Nov 2005 19:35:42 +0100
Subject: [Maay-svncheckins] r314 - in trunk/maay: . test
Message-ID: <200511051835.jA5IZgZU031411@sheep.berlios.de>

Author: adimasci
Date: 2005-11-05 19:35:32 +0100 (Sat, 05 Nov 2005)
New Revision: 314

Modified:
   trunk/maay/configuration.py
   trunk/maay/test/test_fileiteration.py
Log:
just a few comsetic changes I thought of after having read
the last checkins



Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-04 17:22:29 UTC (rev 313)
+++ trunk/maay/configuration.py	2005-11-05 18:35:32 UTC (rev 314)
@@ -77,11 +77,8 @@
     return path
 
 def _filter_files_with(file_list, access_criterium):
-    res = []
-    for file_obj in file_list:
-        if os.access(file_obj, access_criterium):
-            res.append(file_obj)
-    return res
+    return [file_obj for file_obj in file_list
+            if os.access(file_obj, access_criterium)]
 
 class Configuration(BaseConfiguration):
     options = [

Modified: trunk/maay/test/test_fileiteration.py
===================================================================
--- trunk/maay/test/test_fileiteration.py	2005-11-04 17:22:29 UTC (rev 313)
+++ trunk/maay/test/test_fileiteration.py	2005-11-05 18:35:32 UTC (rev 314)
@@ -120,9 +120,7 @@
         """we should iter without pain on everything in DATADIR, including
            the file whose name begins with an &acirc;
         """
-        it = FileIterator(DATADIR)
-        for filename in it:
-            pass
+        l = list(FileIterator(DATADIR))
         
 if __name__ == '__main__':
     unittest.main()



From frederic.dangngoc at gmail.com  Fri Nov  4 15:26:20 2005
From: frederic.dangngoc at gmail.com (=?ISO-8859-1?Q?Fr=E9d=E9ric_Dang_Ngoc?=)
Date: Fri, 4 Nov 2005 15:26:20 +0100
Subject: [Maay-svncheckins] r289 - trunk/maay
In-Reply-To: <200511031718.jA3HIUNs012739@sheep.berlios.de>
References: <200511031718.jA3HIUNs012739@sheep.berlios.de>
Message-ID: <35cde7700511040626w49616c8dm6376047ab07beb24@mail.gmail.com>

Hi,

I start the registration server (twistd -noy registration.py).
Then when I start two maay servers, they jut receive a
list containing their own address from the registration server.
If I print the reference of the RegistrationServer object, I
see a different reference after each request.
I suspect that a new instance of the RegistrationServer is
created after receiving each request. Consequently, the local
variable self._registeredUsers does not store the addresses of
previous nodes that did registered.

Fr?d?ric

On 11/3/05, Aur?lien Camp?as at BerliOS <aurelienc at berlios.de> wrote:
> Author: aurelienc
> Date: 2005-11-03 18:18:29 +0100 (Thu, 03 Nov 2005)
> New Revision: 289
>
> Modified:
>    trunk/maay/registration.py
>    trunk/maay/registrationclient.py
> Log:
> print-fix
>
>
> Modified: trunk/maay/registration.py
> ===================================================================
> --- trunk/maay/registration.py  2005-11-03 17:16:16 UTC (rev 288)
> +++ trunk/maay/registration.py  2005-11-03 17:18:29 UTC (rev 289)
> @@ -80,6 +80,7 @@
>          self._auto_logout_everybody()
>
>      def do_logout(self, nodeId):
> +        print "logout request from node %s" % nodeId
>          try:
>              del self._registeredUsers[nodeId]
>              del self._ruTimestamp[nodeId]
>
> Modified: trunk/maay/registrationclient.py
> ===================================================================
> --- trunk/maay/registrationclient.py    2005-11-03 17:16:16 UTC (rev 288)
> +++ trunk/maay/registrationclient.py    2005-11-03 17:18:29 UTC (rev 289)
> @@ -67,7 +67,7 @@
>
>
>  def logout(reactor, regIp, regPort, nodeId):
> -    print "Registration@%s:%s (node %s) wants to log out." % (regIp, regPort, nodeId)
> +    print "Registrator@%s:%s node %s wants to log out." % (regIp, regPort, nodeId)
>      c = ClientCreator(reactor, RegistrationClient, None)
>      d = c.connectTCP(regIp, regPort)
>      d.addCallback(RegistrationClient.logout)
>
> _______________________________________________
> Maay-svncheckins mailing list
> Maay-svncheckins at lists.berlios.de
> http://lists.berlios.de/mailman/listinfo/maay-svncheckins
>


--
Fr?d?ric Dang Ngoc
France T?l?com Division R&D / LRI
38-40, rue du G?n?ral Leclerc
92130 Issy-Les-Moulineaux


From frederic.dangngoc at gmail.com  Fri Nov  4 15:31:52 2005
From: frederic.dangngoc at gmail.com (=?ISO-8859-1?Q?Fr=E9d=E9ric_Dang_Ngoc?=)
Date: Fri, 4 Nov 2005 15:31:52 +0100
Subject: [Maay-svncheckins] r289 - trunk/maay
In-Reply-To: <35cde7700511040626w49616c8dm6376047ab07beb24@mail.gmail.com>
References: <200511031718.jA3HIUNs012739@sheep.berlios.de>
	 <35cde7700511040626w49616c8dm6376047ab07beb24@mail.gmail.com>
Message-ID: <35cde7700511040631r7996b735k87dae586656fb373@mail.gmail.com>

I have not read the comment at the beginning of the RegistrationServer class :
    #_registeredUsers = {} why class member ?

I now have the answer to this question ;-) (cf previous message)

So make the _registeredUsers a class member.

On 11/4/05, Fr?d?ric Dang Ngoc <frederic.dangngoc at gmail.com> wrote:
> Hi,
>
> I start the registration server (twistd -noy registration.py).
> Then when I start two maay servers, they jut receive a
> list containing their own address from the registration server.
> If I print the reference of the RegistrationServer object, I
> see a different reference after each request.
> I suspect that a new instance of the RegistrationServer is
> created after receiving each request. Consequently, the local
> variable self._registeredUsers does not store the addresses of
> previous nodes that did registered.
>
> Fr?d?ric
>
> On 11/3/05, Aur?lien Camp?as at BerliOS <aurelienc at berlios.de> wrote:
> > Author: aurelienc
> > Date: 2005-11-03 18:18:29 +0100 (Thu, 03 Nov 2005)
> > New Revision: 289
> >
> > Modified:
> >    trunk/maay/registration.py
> >    trunk/maay/registrationclient.py
> > Log:
> > print-fix
> >
> >
> > Modified: trunk/maay/registration.py
> > ===================================================================
> > --- trunk/maay/registration.py  2005-11-03 17:16:16 UTC (rev 288)
> > +++ trunk/maay/registration.py  2005-11-03 17:18:29 UTC (rev 289)
> > @@ -80,6 +80,7 @@
> >          self._auto_logout_everybody()
> >
> >      def do_logout(self, nodeId):
> > +        print "logout request from node %s" % nodeId
> >          try:
> >              del self._registeredUsers[nodeId]
> >              del self._ruTimestamp[nodeId]
> >
> > Modified: trunk/maay/registrationclient.py
> > ===================================================================
> > --- trunk/maay/registrationclient.py    2005-11-03 17:16:16 UTC (rev 288)
> > +++ trunk/maay/registrationclient.py    2005-11-03 17:18:29 UTC (rev 289)
> > @@ -67,7 +67,7 @@
> >
> >
> >  def logout(reactor, regIp, regPort, nodeId):
> > -    print "Registration@%s:%s (node %s) wants to log out." % (regIp, regPort, nodeId)
> > +    print "Registrator@%s:%s node %s wants to log out." % (regIp, regPort, nodeId)
> >      c = ClientCreator(reactor, RegistrationClient, None)
> >      d = c.connectTCP(regIp, regPort)
> >      d.addCallback(RegistrationClient.logout)
> >
> > _______________________________________________
> > Maay-svncheckins mailing list
> > Maay-svncheckins at lists.berlios.de
> > http://lists.berlios.de/mailman/listinfo/maay-svncheckins
> >
>
>
> --
> Fr?d?ric Dang Ngoc
> France T?l?com Division R&D / LRI
> 38-40, rue du G?n?ral Leclerc
> 92130 Issy-Les-Moulineaux
>


--
Fr?d?ric Dang Ngoc
France T?l?com Division R&D / LRI
38-40, rue du G?n?ral Leclerc
92130 Issy-Les-Moulineaux


From afayolle at berlios.de  Mon Nov  7 09:52:56 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Mon, 7 Nov 2005 09:52:56 +0100
Subject: [Maay-svncheckins] r315 - in trunk/maay/test: . data
Message-ID: <200511070852.jA78qu8c022137@sheep.berlios.de>

Author: afayolle
Date: 2005-11-07 09:52:47 +0100 (Mon, 07 Nov 2005)
New Revision: 315

Removed:
   trunk/maay/test/data/?\195?\162?\194?\153?\194?\170?\195?\162?\194?\153?\194?\172
Modified:
   trunk/maay/test/test_fileiteration.py
Log:
removed weird file name from svn repo to prenvent 7up from failing on MacOS X. The file is created in the test case

/usr/local/bin/commit-email.pl: `/usr/bin/svnlook diff /svnroot/repos/maay -r 315' failed with this output:
svnlook: Can't convert string from 'UTF-8' to native encoding:
svnlook: /tmp/svnlook.1/trunk/maay/test/data/?\195?\162?\194?\153?\194?\170?\195?\162?\194?\153?\194?\172


From afayolle at berlios.de  Mon Nov  7 11:00:27 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Mon, 7 Nov 2005 11:00:27 +0100
Subject: [Maay-svncheckins] r316 - trunk/maay/test
Message-ID: <200511071000.jA7A0Rh5027064@sheep.berlios.de>

Author: afayolle
Date: 2005-11-07 11:00:24 +0100 (Mon, 07 Nov 2005)
New Revision: 316

Modified:
   trunk/maay/test/test_fileiteration.py
Log:
bugfix in test

Modified: trunk/maay/test/test_fileiteration.py
===================================================================
--- trunk/maay/test/test_fileiteration.py	2005-11-07 08:52:47 UTC (rev 315)
+++ trunk/maay/test/test_fileiteration.py	2005-11-07 10:00:24 UTC (rev 316)
@@ -139,8 +139,10 @@
         """we should iter without pain on everything in DATADIR, including
            the file whose name begins with an &acirc;
         """
-        l = list(FileIterator(DATADIR))
-        self.assertEquals(l, [])
+        try:
+            l = list(FileIterator([DATADIR]))
+        except:
+            self.fail("Exception while iterating on %s"%DATADIR)
         
 if __name__ == '__main__':
     unittest.main()



From aurelienc at berlios.de  Mon Nov  7 11:17:10 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Mon, 7 Nov 2005 11:17:10 +0100
Subject: [Maay-svncheckins] r317 - trunk/maay
Message-ID: <200511071017.jA7AHAe1031459@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-07 11:17:07 +0100 (Mon, 07 Nov 2005)
New Revision: 317

Modified:
   trunk/maay/indexer.py
Log:
=Add type check on FileIterator.__init__

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-07 10:00:24 UTC (rev 316)
+++ trunk/maay/indexer.py	2005-11-07 10:17:07 UTC (rev 317)
@@ -184,9 +184,10 @@
 
 class FileIterator:
     """provide a simple way to walk through indexed dirs"""
-    def __init__(self, indexed, skipped=None):
+    def __init__(self, indexed, skipped=[]):
+        assert((type(indexed)==list or type(indexed)==tuple) and \
+               (type(skipped)==list or type(skipped)==tuple))
         self.indexed = [os.path.abspath(os.path.expanduser(p)) for p in indexed]
-        skipped = skipped or []
         self.skipped = [os.path.abspath(os.path.expanduser(p)) for p in skipped]
         self.skipped = [self.normalizeCase(p) for p in self.skipped]
         



From aurelienc at berlios.de  Mon Nov  7 11:29:21 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Mon, 7 Nov 2005 11:29:21 +0100
Subject: [Maay-svncheckins] r318 - in trunk/maay: . test
Message-ID: <200511071029.jA7ATLlQ001428@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-07 11:29:20 +0100 (Mon, 07 Nov 2005)
New Revision: 318

Modified:
   trunk/maay/indexer.py
   trunk/maay/test/test_fileiteration.py
Log:
=Rewritten typecheck and a test for it.

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-07 10:17:07 UTC (rev 317)
+++ trunk/maay/indexer.py	2005-11-07 10:29:20 UTC (rev 318)
@@ -185,8 +185,8 @@
 class FileIterator:
     """provide a simple way to walk through indexed dirs"""
     def __init__(self, indexed, skipped=[]):
-        assert((type(indexed)==list or type(indexed)==tuple) and \
-               (type(skipped)==list or type(skipped)==tuple))
+        assert((type(indexed) in (list, tuple)) and
+               (type(skipped) in (list,tuple)))
         self.indexed = [os.path.abspath(os.path.expanduser(p)) for p in indexed]
         self.skipped = [os.path.abspath(os.path.expanduser(p)) for p in skipped]
         self.skipped = [self.normalizeCase(p) for p in self.skipped]

Modified: trunk/maay/test/test_fileiteration.py
===================================================================
--- trunk/maay/test/test_fileiteration.py	2005-11-07 10:17:07 UTC (rev 317)
+++ trunk/maay/test/test_fileiteration.py	2005-11-07 10:29:20 UTC (rev 318)
@@ -143,6 +143,13 @@
             l = list(FileIterator([DATADIR]))
         except:
             self.fail("Exception while iterating on %s"%DATADIR)
+
+    def testValidateFileIteratorTypeCheckOnInit(self):
+        """FileIterator.__init__ type checks ints indexed and skipped
+           parameters : ensure it does
+        """
+        ofBogusType = "foo"
+        self.assertRaises(AssertionError, FileIterator, ofBogusType)
         
 if __name__ == '__main__':
     unittest.main()



From afayolle at berlios.de  Mon Nov  7 11:55:13 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Mon, 7 Nov 2005 11:55:13 +0100
Subject: [Maay-svncheckins] r319 - trunk/doc
Message-ID: <200511071055.jA7AtDPn006813@sheep.berlios.de>

Author: afayolle
Date: 2005-11-07 11:55:11 +0100 (Mon, 07 Nov 2005)
New Revision: 319

Added:
   trunk/doc/CR_20051107.rest
Log:
minutes of today's meeting

Added: trunk/doc/CR_20051107.rest
===================================================================
--- trunk/doc/CR_20051107.rest	2005-11-07 10:29:20 UTC (rev 318)
+++ trunk/doc/CR_20051107.rest	2005-11-07 10:55:11 UTC (rev 319)
@@ -0,0 +1,110 @@
+=========================================
+Compte rendu de la r?union du 7 Nov. 2005
+=========================================
+
+Participants
+~~~~~~~~~~~~
+
+Joaquin Keller (FTRD)
+Fr?d?ric Dang Ngoc (FTRD)
+Alexandre Fayolle (Logilab)
+
+But de la r?union
+~~~~~~~~~~~~~~~~~
+
+Dang NGoc a du temps pour travailler sur le code de Maay. La r?union
+vise a identifier les t?ches et ? les r?partir entre FTRD et Logilab.
+
+?ch?ances
+~~~~~~~~~~
+
+D?monstration publique le 30 Nov. 
+
+On a besoin d'une version distribuable le 15 Nov.
+
+Points abord?s
+~~~~~~~~~~~~~~
+
+Installeurs
+----------
+
+Keller a install? Maay r?cemment sur une machine RedHat Fedora. Il a
+trouv? la t?che ardue en raison des d?pendances requises dans des
+versions r?centes. 
+
+Fayolle mentionne un travail en cours sur des paquets Debian.
+
+Keller note certains probl?mes avec la d?sinstallation de Maay sous
+Windows (?chec si Maay est en cours d'ex?cution, fichiers de la base
+de donn?es MySQL encore pr?sents sur le disque apr?s la
+d?sinstallation).
+
+L'installeur windows doit configurer automatiquement les r?pertoires
+index?s :
+
+ * r?pertoire public : "bureau\Maay Documents" (? cr?er lors de
+   l'installation)
+
+ * r?pertoires priv?s : bureau de l'utilisateur, "Mes Documents"
+
+Requ?tes distribu?es
+--------------------
+
+Keller demande ce qui se passe si un Noeud Maay pervertit le protocol,
+par exemple en ne fermant pas une connexion r?seau suite ? un appel
+xmlrpc. Fayolle r?pond que la r?ponse n'est pas connue. Il est conclu
+de noter ce probl?me mais de ne pas le traiter pour le moment.
+
+Il faut s'assurer que l'?chec de connexion ? un noeud est trait?
+correctement.
+
+Pour ce qui est des r?ponses ? une requ?te distribu?e :
+
+ * ne renvoyer que le texte correspondant au contexte de la requ?te et
+   pas tout le texte du document stock? en base
+
+ * ne renvoyer que les 10 documents les plus r?cents
+
+L'affichage des r?sultats doit se faire par un m?canisme de
+rafra?chissement de l'affichage par le navigateur web: premier
+affichage 1,5 secondes apr?s l'envoi de la requ?te distribu?e,
+deuxi?me affichage 5 secondes plus tard, troisi?me et dernier
+affichage 15 secondes plus tard. Veiller ? ne pas r??mettre la requ?te
+lors des demandes de rafra?chissement.
+
+Les documents affich?s sur l'interface web doivent ?tre tri?s par
+date, les plus r?cents ?tant affich?s en premier (? d?faut de
+ranking).
+
+Serveur d'enregistrement
+-------------------
+
+Keller dit que le serveur d'enregistrement devrait ?tre un serveur de
+pr?sence. L'id?e qu'un noeud se d?senregistre est abandonn?e. Par
+contre chaque noeud devra envoyer un message de pr?sence toutes les
+heures, et le serveur d'enregistrement nettoiera les noeuds inactifs
+depuis plus d'une heure.
+
+Divers
+------
+
+Il faudrait changer les endroits o? l'on parle de serveur (server)
+pour utiliser le terme noeud (node). 
+
+Conclusion de la r?union
+~~~~~~~~~~~~~~~~~~~~~~~~
+
+Logilab s'occupe des requ?tes distribu?es et du renommage de server en
+node.
+
+FTRD s'occupe de transformer le serveur d'enregistrement en serveur de
+pr?sence. 
+
+Les questions concernant les installeurs seront trait?es une fois que
+les pr?cents points auront ?t? r?solus.
+
+La prochaine r?union aura lieu par t?l?phone le 9 Nov. ? 14h30.
+
+ -- Alexandre Fayolle <alexandre.fayolle at logilab.fr>  Mon,  7 Nov 2005 11:53:09 +0100
+
+



From afayolle at berlios.de  Mon Nov  7 12:05:31 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Mon, 7 Nov 2005 12:05:31 +0100
Subject: [Maay-svncheckins] r320 - trunk/doc
Message-ID: <200511071105.jA7B5ViG008977@sheep.berlios.de>

Author: afayolle
Date: 2005-11-07 12:05:24 +0100 (Mon, 07 Nov 2005)
New Revision: 320

Modified:
   trunk/doc/CR_20051107.rest
Log:
typo fixes

Modified: trunk/doc/CR_20051107.rest
===================================================================
--- trunk/doc/CR_20051107.rest	2005-11-07 10:55:11 UTC (rev 319)
+++ trunk/doc/CR_20051107.rest	2005-11-07 11:05:24 UTC (rev 320)
@@ -39,7 +39,7 @@
 de donn?es MySQL encore pr?sents sur le disque apr?s la
 d?sinstallation).
 
-L'installeur windows doit configurer automatiquement les r?pertoires
+L'installeur Windows doit configurer automatiquement les r?pertoires
 index?s :
 
  * r?pertoire public : "bureau\Maay Documents" (? cr?er lors de
@@ -50,7 +50,7 @@
 Requ?tes distribu?es
 --------------------
 
-Keller demande ce qui se passe si un Noeud Maay pervertit le protocol,
+Keller demande ce qui se passe si un Noeud Maay pervertit le protocole,
 par exemple en ne fermant pas une connexion r?seau suite ? un appel
 xmlrpc. Fayolle r?pond que la r?ponse n'est pas connue. Il est conclu
 de noter ce probl?me mais de ne pas le traiter pour le moment.
@@ -66,7 +66,7 @@
  * ne renvoyer que les 10 documents les plus r?cents
 
 L'affichage des r?sultats doit se faire par un m?canisme de
-rafra?chissement de l'affichage par le navigateur web: premier
+rafra?chissement de l'affichage par le navigateur web : premier
 affichage 1,5 secondes apr?s l'envoi de la requ?te distribu?e,
 deuxi?me affichage 5 secondes plus tard, troisi?me et dernier
 affichage 15 secondes plus tard. Veiller ? ne pas r??mettre la requ?te
@@ -101,7 +101,7 @@
 pr?sence. 
 
 Les questions concernant les installeurs seront trait?es une fois que
-les pr?cents points auront ?t? r?solus.
+les pr?c?dents points auront ?t? r?solus.
 
 La prochaine r?union aura lieu par t?l?phone le 9 Nov. ? 14h30.
 



From afayolle at berlios.de  Mon Nov  7 12:06:57 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Mon, 7 Nov 2005 12:06:57 +0100
Subject: [Maay-svncheckins] r321 - trunk/doc
Message-ID: <200511071106.jA7B6vPg009290@sheep.berlios.de>

Author: afayolle
Date: 2005-11-07 12:06:57 +0100 (Mon, 07 Nov 2005)
New Revision: 321

Modified:
   trunk/doc/CR_20051107.rest
Log:
typo fixes

Modified: trunk/doc/CR_20051107.rest
===================================================================
--- trunk/doc/CR_20051107.rest	2005-11-07 11:05:24 UTC (rev 320)
+++ trunk/doc/CR_20051107.rest	2005-11-07 11:06:57 UTC (rev 321)
@@ -26,7 +26,7 @@
 ~~~~~~~~~~~~~~
 
 Installeurs
-----------
+-----------
 
 Keller a install? Maay r?cemment sur une machine RedHat Fedora. Il a
 trouv? la t?che ardue en raison des d?pendances requises dans des



From dnf at berlios.de  Mon Nov  7 16:27:02 2005
From: dnf at berlios.de (Frédéric DANG NGOC at BerliOS)
Date: Mon, 7 Nov 2005 16:27:02 +0100
Subject: [Maay-svncheckins] r322 - trunk/maay
Message-ID: <200511071527.jA7FR2S0003077@sheep.berlios.de>

Author: dnf
Date: 2005-11-07 16:27:01 +0100 (Mon, 07 Nov 2005)
New Revision: 322

Modified:
   trunk/maay/registrationclient.py
Log:
merge version


Modified: trunk/maay/registrationclient.py
===================================================================
--- trunk/maay/registrationclient.py	2005-11-07 11:06:57 UTC (rev 321)
+++ trunk/maay/registrationclient.py	2005-11-07 15:27:01 UTC (rev 322)
@@ -19,29 +19,28 @@
 from twisted.protocols.basic import LineReceiver
 from time import mktime
 
-class RegistrationClient(LineReceiver):
-    """Client-side stuff to ask/request things from the registration server.
-       Tightly coupled with registration.py
+class PresenceClient(LineReceiver):
+    """Client-side stuff to ask/request things from the presence server.
+       Tightly coupled with presenceserver.py
     """
-    
-    def __init__(self, nodeRegistrationCallback):
-        self._callback = nodeRegistrationCallback
+ 
+    def __init__(self, nodePresenceCallback):
+        self.__callback = nodePresenceCallback
         self._lineCount = 0
         
-    def login(self, nodeId, ip, port, bandwidth) :
-        print "RegistrationClient login to registration server (node %s at %s:%s)" \
-              % (nodeId, ip, port)
-        self.transport.write('login:%s:%s:%s:%s\r\n' \
-                             % (nodeId, ip, port, bandwidth))
+    def notify(self, nodeId, ip, port, bandwidth) :
+        print "notify to presence server (node %s at %s:%s)" % (nodeId, ip, port)
+        self.transport.write('notify:%s:%s:%s:%s\r\n' % (nodeId, ip,
+                                                     port, bandwidth))
         return self
 
     def logout(self, nodeId):
-        print "RegistrationClient logout from registration server (node %s)" % nodeId
+        print "logout from presence server (node %s)" % nodeId
         self.transport.write('logout:%s\r\n' % nodeId)
         self.transport.loseConnection()
 
     def who(self):
-        print "RegistrationClient who"
+        print "PresenceClient who"
         self.transport.write('who:\r\n')
 
     def lineReceived(self, data):
@@ -54,7 +53,7 @@
            """
         self._lineCount += 1
         data = data.strip()
-        print "RegistrationClient lineReceived (%s) said %s" % (self._lineCount, data)
+        print "PresenceClient lineReceived (%s) said %s" % (self._lineCount, data)
         if data.startswith('EOT'):
             self.transport.loseConnection()
             return
@@ -70,16 +69,16 @@
     return mktime(tuple(date+time+[0,0,0]))
 
 
-def login(reactor, regIP, regPort, querier, nodeId, nodeIP, xmlrpcPort, bandwidth):
+def notify(reactor, regIP, regPort, querier, nodeId, nodeIP, xmlrpcPort, bandwidth):
     """registers and transmits the node catalog to querier.registerNode
     """
     if querier is not None:
-        c = ClientCreator(reactor, RegistrationClient, querier.registerNode)
+        c = ClientCreator(reactor, PresenceClient, querier.registerNode)
         d = c.connectTCP(regIP, regPort)
-        d.addCallback(RegistrationClient.login, nodeId, nodeIP, xmlrpcPort, bandwidth)
-        d.addCallback(RegistrationClient.who)
+        d.addCallback(PresenceClient.notify, nodeId, nodeIP, xmlrpcPort, bandwidth)
+        d.addCallback(PresenceClient.who)
     else:
-        print "Login : no querier found => no registration / no P2P"
+        print "Login : no querier found => no presence / no P2P"
 
 def askWho(reactor, regIp, regPort, callback):
     """transmits node catalog to the callback"""
@@ -88,7 +87,7 @@
     d.addCallback(RegistrationClient.who)
 
 def logout(reactor, regIp, regPort, nodeId):
-    print "Registrator@%s:%s node %s wants to log out." % (regIp, regPort, nodeId)
-    c = ClientCreator(reactor, RegistrationClient, None)
+    print "PresenceClient@%s:%s node %s wants to log out." % (regIp, regPort, nodeId)
+    c = ClientCreator(reactor, PresenceClient, None)
     d = c.connectTCP(regIp, regPort)
-    d.addCallback(RegistrationClient.logout)
+    d.addCallback(PresenceClient.logout)



From dnf at berlios.de  Mon Nov  7 16:28:08 2005
From: dnf at berlios.de (Frédéric DANG NGOC at BerliOS)
Date: Mon, 7 Nov 2005 16:28:08 +0100
Subject: [Maay-svncheckins] r323 - trunk/maay
Message-ID: <200511071528.jA7FS8G0003222@sheep.berlios.de>

Author: dnf
Date: 2005-11-07 16:28:07 +0100 (Mon, 07 Nov 2005)
New Revision: 323

Modified:
   trunk/maay/registration.py
   trunk/maay/registration.tac
Log:
some fix. mostly renaming.


Modified: trunk/maay/registration.py
===================================================================
--- trunk/maay/registration.py	2005-11-07 15:27:01 UTC (rev 322)
+++ trunk/maay/registration.py	2005-11-07 15:28:07 UTC (rev 323)
@@ -14,37 +14,43 @@
 #     along with this program; if not, write to the Free Software
 #     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
 
-"""this module defines the central registration server.
+"""this module defines the central presence server.
 
-The Registration server keeps track of every connected
+The Presence server keeps track of every connected
 node.
 """
 
+verbose = 1
+
 __revision__ = '$Id$'
 
 from datetime import datetime
 
 from twisted.protocols.basic import LineReceiver
 
-class RegistrationServer(LineReceiver):
+class PresenceServer(LineReceiver):
     # define this as a static class member since a new instance of the class
     # is created after each request
     _registeredUsers = {} 
+    _ruTimestamp = {}
     # TODO: auto logout after a given time to save memory
 
     def __init__(self, autoExpirationDelayInSecs=3600):
         self._autoExpirationDelayInSecs = autoExpirationDelayInSecs
-        self._ruTimestamp = {}
 
     def _auto_logout_everybody(self):
         """evicts registered nodes after some time
         """
         now = datetime.utcnow()
-        for nodeId, values in self._ruTimestamp.items():
+        for nodeId, values in PresenceServer._ruTimestamp.items():
             dt = now - values
             if dt.seconds > self._autoExpirationDelayInSecs:
-                del RegistrationServer._registeredUsers[nodeId]
-                del self._ruTimestamp[nodeId]
+                if verbose:
+                    print "%s removed" % str(PresenceServer._registeredUsers[nodeId])
+                del PresenceServer._registeredUsers[nodeId]
+                del PresenceServer._ruTimestamp[nodeId]
+            elif verbose:
+                print "keep: %s (%s)" % (str(PresenceServer._registeredUsers[nodeId]), str(values))
         
     def lineReceived(self, line):
         """received lines should match the following format :
@@ -67,34 +73,45 @@
                 result = "received invalid action: <%s>" % action
         self._auto_logout_everybody()
         
-    def do_login(self, nodeId, ip, port, bandwidth):
-        print "%s accepts %s" % (id(self), nodeId)
-        if nodeId in RegistrationServer._registeredUsers:
+    def do_notify(self, nodeId, ip, port, bandwidth):
+        # For the moment, take IP and port from the TCP socket and not
+        # those given by the client.
+        # (to prevent client to give private address...)
+        # TODO:
+        # - if the server detect that the IP given by the client is a
+        # private IP address, use those from the TCP socket
+        # - the presence server tries to connect to the client to test
+        # the information...
+        h = self.transport.getHost()
+        ip = h.host
+        port = str(h.port)
+        if verbose:
+           print "Notification from %s:%s (id:%s)" % (ip, port, nodeId)
+        if nodeId in PresenceServer._registeredUsers:
             print "%s was already registered" % (nodeId,)
         lastseen = datetime.utcnow()
-        self._ruTimestamp[nodeId] = lastseen
-        RegistrationServer._registeredUsers[nodeId] = (lastseen.isoformat(),
+        PresenceServer._ruTimestamp[nodeId] = lastseen
+        PresenceServer._registeredUsers[nodeId] = (lastseen.isoformat(),
                                          nodeId,
                                          ip,
                                          port,
                                          bandwidth)
-        self._auto_logout_everybody()
 
     def do_logout(self, nodeId):
-        print "logout request from node %s" % nodeId
         try:
-            del RegistrationServer._registeredUsers[nodeId]
-            del self._ruTimestamp[nodeId]
+            print "%s logout" % str(PresenceServer._registeredUsers[nodeId])
+            del PresenceServer._registeredUsers[nodeId]
+            del PresenceServer._ruTimestamp[nodeId]
         except KeyError:
             print "%s was not registered" % (nodeId,)
 
     def do_who(self):
         """returns the list of logged in nodes"""
-        nodes = RegistrationServer._registeredUsers.values()
+        nodes = PresenceServer._registeredUsers.values()
         nodes.sort()
         nodes.reverse()
         for nodeinfo in nodes:
             self.sendLine("\t".join(nodeinfo))
-            print nodeinfo
+            print "list: %s" % str(nodeinfo)
         self.sendLine('EOT')
         print 'EOT'

Modified: trunk/maay/registration.tac
===================================================================
--- trunk/maay/registration.tac	2005-11-07 15:27:01 UTC (rev 322)
+++ trunk/maay/registration.tac	2005-11-07 15:28:07 UTC (rev 323)
@@ -19,9 +19,9 @@
 from twisted.application import service, internet
 from twisted.internet.protocol import ServerFactory
 
-from maay.registration import RegistrationServer
+from maay.presenceserver import PresenceServer
 
-application = service.Application("registrationServer")
+application = service.Application("presenceServer")
 factory = ServerFactory()
-factory.protocol = RegistrationServer
+factory.protocol = PresenceServer
 internet.TCPServer(2345, factory, interface='').setServiceParent(application)



From dnf at berlios.de  Mon Nov  7 16:29:46 2005
From: dnf at berlios.de (Frédéric DANG NGOC at BerliOS)
Date: Mon, 7 Nov 2005 16:29:46 +0100
Subject: [Maay-svncheckins] r324 - trunk/maay
Message-ID: <200511071529.jA7FTk7w003766@sheep.berlios.de>

Author: dnf
Date: 2005-11-07 16:29:42 +0100 (Mon, 07 Nov 2005)
New Revision: 324

Added:
   trunk/maay/presenceclient.py
   trunk/maay/presenceserver.py
   trunk/maay/presenceserver.tac
Log:
rename files.


Copied: trunk/maay/presenceclient.py (from rev 322, trunk/maay/registrationclient.py)

Copied: trunk/maay/presenceserver.py (from rev 323, trunk/maay/registration.py)

Copied: trunk/maay/presenceserver.tac (from rev 323, trunk/maay/registration.tac)



From aurelienc at berlios.de  Mon Nov  7 16:55:23 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Mon, 7 Nov 2005 16:55:23 +0100
Subject: [Maay-svncheckins] r325 - trunk/maay
Message-ID: <200511071555.jA7FtNL5009240@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-07 16:55:22 +0100 (Mon, 07 Nov 2005)
New Revision: 325

Modified:
   trunk/maay/dbentity.py
Log:
Fix missing classmethod declaration.


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-07 15:29:42 UTC (rev 324)
+++ trunk/maay/dbentity.py	2005-11-07 15:55:22 UTC (rev 325)
@@ -423,6 +423,7 @@
 
     def selectActive(cls, cursor, currentNodeId, maxResults):
         return cls.selectRegistered(cursor, currentNodeId, maxResults)
+    selectActive = classmethod(selectActive)
 
     def getRpcUrl(self):
         return 'http://%s:%s' % (self.ip, self.port)



From dnf at berlios.de  Mon Nov  7 17:14:38 2005
From: dnf at berlios.de (Frédéric DANG NGOC at BerliOS)
Date: Mon, 7 Nov 2005 17:14:38 +0100
Subject: [Maay-svncheckins] r326 - trunk/maay
Message-ID: <200511071614.jA7GEc9D012453@sheep.berlios.de>

Author: dnf
Date: 2005-11-07 17:14:38 +0100 (Mon, 07 Nov 2005)
New Revision: 326

Removed:
   trunk/maay/registration.py
   trunk/maay/registration.tac
   trunk/maay/registrationclient.py
Log:
del old stuff... 



Deleted: trunk/maay/registration.py
===================================================================
--- trunk/maay/registration.py	2005-11-07 15:55:22 UTC (rev 325)
+++ trunk/maay/registration.py	2005-11-07 16:14:38 UTC (rev 326)
@@ -1,117 +0,0 @@
-#     Copyright (C) 2005 France Telecom R&D
-#
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
-#
-#     This program is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
-#
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
-
-"""this module defines the central presence server.
-
-The Presence server keeps track of every connected
-node.
-"""
-
-verbose = 1
-
-__revision__ = '$Id$'
-
-from datetime import datetime
-
-from twisted.protocols.basic import LineReceiver
-
-class PresenceServer(LineReceiver):
-    # define this as a static class member since a new instance of the class
-    # is created after each request
-    _registeredUsers = {} 
-    _ruTimestamp = {}
-    # TODO: auto logout after a given time to save memory
-
-    def __init__(self, autoExpirationDelayInSecs=3600):
-        self._autoExpirationDelayInSecs = autoExpirationDelayInSecs
-
-    def _auto_logout_everybody(self):
-        """evicts registered nodes after some time
-        """
-        now = datetime.utcnow()
-        for nodeId, values in PresenceServer._ruTimestamp.items():
-            dt = now - values
-            if dt.seconds > self._autoExpirationDelayInSecs:
-                if verbose:
-                    print "%s removed" % str(PresenceServer._registeredUsers[nodeId])
-                del PresenceServer._registeredUsers[nodeId]
-                del PresenceServer._ruTimestamp[nodeId]
-            elif verbose:
-                print "keep: %s (%s)" % (str(PresenceServer._registeredUsers[nodeId]), str(values))
-        
-    def lineReceived(self, line):
-        """received lines should match the following format :
-        action:parm1:param2:...:paramn
-        """
-        try:
-            action, param = line.split(':', 1)
-        except ValueError:
-            result = "unable to decode action: <%s>" % line
-        else:
-            callback = getattr(self, 'do_%s' % action, None)
-            if callback:
-                param = param.strip()
-                if param:
-                    args = param.split(':')
-                    result = callback(*args)
-                else:
-                    result = callback()
-            else:
-                result = "received invalid action: <%s>" % action
-        self._auto_logout_everybody()
-        
-    def do_notify(self, nodeId, ip, port, bandwidth):
-        # For the moment, take IP and port from the TCP socket and not
-        # those given by the client.
-        # (to prevent client to give private address...)
-        # TODO:
-        # - if the server detect that the IP given by the client is a
-        # private IP address, use those from the TCP socket
-        # - the presence server tries to connect to the client to test
-        # the information...
-        h = self.transport.getHost()
-        ip = h.host
-        port = str(h.port)
-        if verbose:
-           print "Notification from %s:%s (id:%s)" % (ip, port, nodeId)
-        if nodeId in PresenceServer._registeredUsers:
-            print "%s was already registered" % (nodeId,)
-        lastseen = datetime.utcnow()
-        PresenceServer._ruTimestamp[nodeId] = lastseen
-        PresenceServer._registeredUsers[nodeId] = (lastseen.isoformat(),
-                                         nodeId,
-                                         ip,
-                                         port,
-                                         bandwidth)
-
-    def do_logout(self, nodeId):
-        try:
-            print "%s logout" % str(PresenceServer._registeredUsers[nodeId])
-            del PresenceServer._registeredUsers[nodeId]
-            del PresenceServer._ruTimestamp[nodeId]
-        except KeyError:
-            print "%s was not registered" % (nodeId,)
-
-    def do_who(self):
-        """returns the list of logged in nodes"""
-        nodes = PresenceServer._registeredUsers.values()
-        nodes.sort()
-        nodes.reverse()
-        for nodeinfo in nodes:
-            self.sendLine("\t".join(nodeinfo))
-            print "list: %s" % str(nodeinfo)
-        self.sendLine('EOT')
-        print 'EOT'

Deleted: trunk/maay/registration.tac
===================================================================
--- trunk/maay/registration.tac	2005-11-07 15:55:22 UTC (rev 325)
+++ trunk/maay/registration.tac	2005-11-07 16:14:38 UTC (rev 326)
@@ -1,27 +0,0 @@
-#!/usr/bin/twistd2.3 -noy 
-#     Copyright (C) 2005 France Telecom R&D
-#
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
-#
-#     This program is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
-#
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
-
-
-from twisted.application import service, internet
-from twisted.internet.protocol import ServerFactory
-
-from maay.presenceserver import PresenceServer
-
-application = service.Application("presenceServer")
-factory = ServerFactory()
-factory.protocol = PresenceServer
-internet.TCPServer(2345, factory, interface='').setServiceParent(application)

Deleted: trunk/maay/registrationclient.py
===================================================================
--- trunk/maay/registrationclient.py	2005-11-07 15:55:22 UTC (rev 325)
+++ trunk/maay/registrationclient.py	2005-11-07 16:14:38 UTC (rev 326)
@@ -1,93 +0,0 @@
-#     Copyright (C) 2005 France Telecom R&D
-#
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
-#
-#     This program is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
-#
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
-
-from twisted.internet import reactor
-from twisted.internet.protocol import ClientCreator
-from twisted.protocols.basic import LineReceiver
-from time import mktime
-
-class PresenceClient(LineReceiver):
-    """Client-side stuff to ask/request things from the presence server.
-       Tightly coupled with presenceserver.py
-    """
- 
-    def __init__(self, nodePresenceCallback):
-        self.__callback = nodePresenceCallback
-        self._lineCount = 0
-        
-    def notify(self, nodeId, ip, port, bandwidth) :
-        print "notify to presence server (node %s at %s:%s)" % (nodeId, ip, port)
-        self.transport.write('notify:%s:%s:%s:%s\r\n' % (nodeId, ip,
-                                                     port, bandwidth))
-        return self
-
-    def logout(self, nodeId):
-        print "logout from presence server (node %s)" % nodeId
-        self.transport.write('logout:%s\r\n' % nodeId)
-        self.transport.loseConnection()
-
-    def who(self):
-        print "PresenceClient who"
-        self.transport.write('who:\r\n')
-
-    def lineReceived(self, data):
-        """receiving end of the client
-           for each method of RegisterClient, we might get
-           an int (=len(registered nodes)) number of lines,
-           to be properly transformed back
-           to complete node identification data
-           WE are responsible for the correct unpacking of said data here
-           """
-        self._lineCount += 1
-        data = data.strip()
-        print "PresenceClient lineReceived (%s) said %s" % (self._lineCount, data)
-        if data.startswith('EOT'):
-            self.transport.loseConnection()
-            return
-        time, nodeId, nodeIP, nodePort, nodeBandwidth = data.split('\t')
-        lastSeenTime = parseTime(time)
-        self._callback(nodeId, nodeIP, nodePort, nodeBandwidth, lastSeenTime)
-        
-
-def parseTime(isodatetime):
-    date, time = isodatetime.split('T')
-    date = [int(s) for s in date.split('-')]
-    time = [int(float(s)) for s in time.split(':')]
-    return mktime(tuple(date+time+[0,0,0]))
-
-
-def notify(reactor, regIP, regPort, querier, nodeId, nodeIP, xmlrpcPort, bandwidth):
-    """registers and transmits the node catalog to querier.registerNode
-    """
-    if querier is not None:
-        c = ClientCreator(reactor, PresenceClient, querier.registerNode)
-        d = c.connectTCP(regIP, regPort)
-        d.addCallback(PresenceClient.notify, nodeId, nodeIP, xmlrpcPort, bandwidth)
-        d.addCallback(PresenceClient.who)
-    else:
-        print "Login : no querier found => no presence / no P2P"
-
-def askWho(reactor, regIp, regPort, callback):
-    """transmits node catalog to the callback"""
-    c = ClientCreator(reactor, RegistrationClient, callback)
-    d = c.connectTCP(regIp, regPort)
-    d.addCallback(RegistrationClient.who)
-
-def logout(reactor, regIp, regPort, nodeId):
-    print "PresenceClient@%s:%s node %s wants to log out." % (regIp, regPort, nodeId)
-    c = ClientCreator(reactor, PresenceClient, None)
-    d = c.connectTCP(regIp, regPort)
-    d.addCallback(PresenceClient.logout)



From dnf at berlios.de  Mon Nov  7 18:39:17 2005
From: dnf at berlios.de (Frédéric DANG NGOC at BerliOS)
Date: Mon, 7 Nov 2005 18:39:17 +0100
Subject: [Maay-svncheckins] r327 - trunk/maay
Message-ID: <200511071739.jA7HdH4J029678@sheep.berlios.de>

Author: dnf
Date: 2005-11-07 18:39:09 +0100 (Mon, 07 Nov 2005)
New Revision: 327

Modified:
   trunk/maay/server.py
Log:
finish renaming.


Modified: trunk/maay/server.py
===================================================================
--- trunk/maay/server.py	2005-11-07 16:14:38 UTC (rev 326)
+++ trunk/maay/server.py	2005-11-07 17:39:09 UTC (rev 327)
@@ -50,7 +50,7 @@
      MaayAuthenticationError, WEB_AVATARID
 from maay.rpc import MaayRPCServer
 from maay.configuration import Configuration
-from maay import registrationclient
+from maay import presenceclient
 from maay.webapplication import Maay404, IServerConfiguration, SearchForm
 
 
@@ -360,7 +360,7 @@
                                                      mindFactory=MaayMindFactory))
     website.remember(Maay404(), inevow.ICanHandleNotFound)
     website.remember(webappConfig, IServerConfiguration)
-    registrationclient.login(reactor,
+    presenceclient.login(reactor,
                              webappConfig.registration_host, webappConfig.registration_port,
                              maayPortal.webQuerier,
                              webappConfig.get_node_id(),



From aurelienc at berlios.de  Mon Nov  7 18:59:40 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Mon, 7 Nov 2005 18:59:40 +0100
Subject: [Maay-svncheckins] r328 - trunk/maay
Message-ID: <200511071759.jA7HxenM010640@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-07 18:59:39 +0100 (Mon, 07 Nov 2005)
New Revision: 328

Modified:
   trunk/maay/rpc.py
Log:
More verbosity


Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-07 17:39:09 UTC (rev 327)
+++ trunk/maay/rpc.py	2005-11-07 17:59:39 UTC (rev 328)
@@ -134,6 +134,8 @@
         return 0
 
     def xmlrpc_distributedQuery(self, queryId, sender, ttl, words, mime_type):
+        print "MaayRPCServer distributedQuery : %s %s %s %s %s" % \
+              (queryId, sender, ttl, words, mime_type)
         query = P2pQuery(queryId,
                          sender,
                          ttl,
@@ -144,6 +146,8 @@
         return self.nodeId
 
     def xmlrpc_distributedQueryAnswer(self, queryId, senderId, documents):
+        print "MaayRPCServer distributedQueryAnswer : %s %s %s" % \
+              (queryId, senderId, documents)
         answer = P2pAnswer() # FIXME: fill in objects
         d = reactor.callLater(.01, self._p2pQuerier.receiveAnswer,answer)
         return self.nodeId



From adimasci at berlios.de  Mon Nov  7 21:06:15 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Mon, 7 Nov 2005 21:06:15 +0100
Subject: [Maay-svncheckins] r329 - trunk/maay
Message-ID: <200511072006.jA7K6FVW028622@sheep.berlios.de>

Author: adimasci
Date: 2005-11-07 21:06:14 +0100 (Mon, 07 Nov 2005)
New Revision: 329

Modified:
   trunk/maay/server.py
Log:
remove (hopefully !!!) the last bug related to registrationclient / presenceclient
migration


Modified: trunk/maay/server.py
===================================================================
--- trunk/maay/server.py	2005-11-07 17:59:39 UTC (rev 328)
+++ trunk/maay/server.py	2005-11-07 20:06:14 UTC (rev 329)
@@ -360,14 +360,14 @@
                                                      mindFactory=MaayMindFactory))
     website.remember(Maay404(), inevow.ICanHandleNotFound)
     website.remember(webappConfig, IServerConfiguration)
-    presenceclient.login(reactor,
-                             webappConfig.registration_host, webappConfig.registration_port,
-                             maayPortal.webQuerier,
-                             webappConfig.get_node_id(),
-                             socket.gethostbyname(socket.gethostname()),
-                             webappConfig.rpcserver_port,
-                             webappConfig.bandwidth)
-                                                  
+    presenceclient.notify(reactor,
+                          webappConfig.registration_host, webappConfig.registration_port,
+                          maayPortal.webQuerier,
+                          webappConfig.get_node_id(),
+                          socket.gethostbyname(socket.gethostname()),
+                          webappConfig.rpcserver_port,
+                          webappConfig.bandwidth)
+    
                              
     rpcserver = server.Site(MaayRPCServer(webappConfig.get_node_id(),
                                           maayPortal))



From aurelienc at berlios.de  Tue Nov  8 09:59:16 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Tue, 8 Nov 2005 09:59:16 +0100
Subject: [Maay-svncheckins] r330 - trunk/maay/test
Message-ID: <200511080859.jA88xGMR022281@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-08 09:59:16 +0100 (Tue, 08 Nov 2005)
New Revision: 330

Modified:
   trunk/maay/test/test_configuration.py
Log:
New docstring.


Modified: trunk/maay/test/test_configuration.py
===================================================================
--- trunk/maay/test/test_configuration.py	2005-11-07 20:06:14 UTC (rev 329)
+++ trunk/maay/test/test_configuration.py	2005-11-08 08:59:16 UTC (rev 330)
@@ -28,6 +28,9 @@
 class WebappConfigTC(unittest.TestCase):
 
     def testFromCommandLine(self):
+        """For this test to not fail, the configuration file must
+           define the database as being 'maay'
+        """
         data = [('maay', ('localhost', 'maay')),
                 ('maay --db-name maille', ('localhost', 'maille')),
                 ('maay --db-host foo', ('foo', 'maay')),



From aurelienc at berlios.de  Tue Nov  8 10:01:04 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Tue, 8 Nov 2005 10:01:04 +0100
Subject: [Maay-svncheckins] r331 - trunk/maay
Message-ID: <200511080901.jA8914kr022465@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-08 10:01:03 +0100 (Tue, 08 Nov 2005)
New Revision: 331

Modified:
   trunk/maay/p2pquerier.py
Log:
One bug fix and verbosification.


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-08 08:59:16 UTC (rev 330)
+++ trunk/maay/p2pquerier.py	2005-11-08 09:01:03 UTC (rev 331)
@@ -34,17 +34,17 @@
         self.sender = sender
         self.ttl = ttl
         self.query = query
-        self.query.searchtype = 'p2p'
-        self.documents = set()
+        #self.query.searchtype = 'p2p'
+        self.documents_ids = set()
 
     def hop(self):
         self.ttl -= 1
 
     def addMatch(self, document):
-        self.documents.add(document.document_id)
+        self.documents_ids.add(document.document_id)
 
     def isKnown(self, document):
-        return document.document_id in self.documents
+        return document.document_id in self.documents_ids
  
     def asKwargs(self):
         """return a dictionnary of arguments suitable for use as a
@@ -65,6 +65,7 @@
         self.queryId = queryId
         self.documents = documents
 
+
 class P2pQuerier:
     """The P2pQuerier class is responsible for managing P2P queries.
 
@@ -86,14 +87,16 @@
         self.querier = querier
 
     def sendQuery(self, query):
+        print "P2pQuerier sendQuery : %s" % query
         for neighbor in self._selectTargetNeighbors(query):
-            proxy = Proxy(neighbor.getRpcUrl())
+            proxy = Proxy(str(neighbor.getRpcUrl())) # chokes on unicode
             # below : returns a deferred
             d = proxy.callRemote('distributedQuery', query.asKwargs())
             d.addCallback(self.querier.registerNodeActivity)
-            print "sent %s to %s" % (query, neighbor)
+            print " ... sent to %s" % neighbor
 
     def receiveQuery(self, query):
+        print "P2pQuerier receiveQuery : %s" % query
         if query.id in self._queries: 
             return
         
@@ -107,11 +110,12 @@
         self.receiveAnswer(P2pAnswer(query.id, documents))
 
     def receiveAnswer(self, answer, local=False):
+        print "P2pQuerier receiveAnswer : %s" % answer
         """record and forward answers to a query.
         If local is True, then the answers come from a local query,
         and thus must not be recorded in the database"""
         query = self._queries.get(answer.queryId)
-        if query is None:
+        if query is None: # would be a bug or something nasty
             return
         
         toSend = []
@@ -122,8 +126,9 @@
                 self.query.addMatch(document)
                 toSend.append(document.asDictionnary())
         
-        if query.sender != self.nodeId:
+        if query.sender != self.nodeId: 
             try:
+                # getNodeUrl seems not to exist yet
                 senderUrl = self.querier.getNodeUrl(query.sender)
                 proxy = Proxy(senderUrl)
                 d = proxy.callRemote('distributedQueryAnswer',



From aurelienc at berlios.de  Tue Nov  8 10:02:44 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Tue, 8 Nov 2005 10:02:44 +0100
Subject: [Maay-svncheckins] r332 - trunk/maay
Message-ID: <200511080902.jA892ikX022568@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-08 10:02:44 +0100 (Tue, 08 Nov 2005)
New Revision: 332

Modified:
   trunk/maay/webapplication.py
Log:
Introduction of p2p operations.


Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-08 09:01:03 UTC (rev 331)
+++ trunk/maay/webapplication.py	2005-11-08 09:02:44 UTC (rev 332)
@@ -33,6 +33,7 @@
 from maay.configuration import get_path_of
 from maay.texttool import makeAbstract, WORDS_RGX, normalizeText, boldifyText
 from maay.query import Query
+from maay.p2pquerier import P2pQuerier, P2pQuery
 
 class IServerConfiguration(Interface):
     """provide an interface in order to be able to remember webappconfig"""
@@ -92,6 +93,7 @@
     def __init__(self, maayId, querier):
         MaayPage.__init__(self, maayId)
         self.querier = querier
+        self.p2pquerier = None # no webappconfig yet to get our node_id
 
     def logout(self):
         print "Bye %s !" % (self.maayId,)
@@ -101,28 +103,17 @@
     def child_peers(self, context):
         return PeersList(self.maayId, self.querier)
 
-    def _harvest_peer_results(self, query, context):
-        results = []
+    def _askForPeerResults(self, query, context):
+        """Launches a P2P cascade of queries
+           The result of this shall be used ~ 5 and 15 secs. later
+           by the ResultPage
+        """
         webappConfig = IServerConfiguration(context)
-        peers = self.querier.getActiveNeighbors(webappConfig.get_node_id(), 10)
-        print "SearchForm child_search peers = ", peers
-        for peer in peers:
-            server = ServerProxy('http://%s:%s' % (peer.ip, peer.port),
-                                 allow_none=True,
-                                 encoding='utf-8')
-            try:
-                cnxid, errmsg = server.authenticate('', '')
-            except Exception, e:
-                errmsg = "%s" % e
-            if errmsg:
-                print "For reason '%s', we couldn't authenticate with node %s:%s" \
-                      % (errmsg, peer.ip, peer.port)
-                continue # for whatever reason, we couldn't authenticate
-            try: #XXX: xmlrpc serialization problems arise here
-                results += server.findDocuments(cnxid, query)
-            except Exception, e:
-                print "SearchForm _harvest_peer_results pb : %s", e
-        return results
+        nodeId = webappConfig.get_node_id()
+        if not self.p2pquerier:
+            self.p2pquerier = P2pQuerier(nodeId, self.querier)
+        theDistributedQuery = P2pQuery(123, nodeId, 3, query)
+        self.p2pquerier.sendQuery(theDistributedQuery)
 
     def child_search(self, context):
         # query = unicode(context.arg('words'))        
@@ -130,10 +121,8 @@
         rawQuery = unicode(context.arg('words'), 'utf-8')
         query = Query.fromRawQuery(rawQuery, offset)
         localResults = self.querier.findDocuments(query)
-        peerResults = self._harvest_peer_results(rawQuery, context)
-        print "Results from the peers :", peerResults
-        results = localResults + peerResults
-        return ResultsPage(self.maayId, results, query)
+        self._askForPeerResults(query, context)
+        return ResultsPage(self.maayId, localResults, query)
 
     # XXX make sure that the requested document is really in the database
     # XXX don't forget to update the download statistics of the document
@@ -153,6 +142,7 @@
     bodyFactory = loaders.xmlfile(get_path_of('resultpage.html'))
     addSlash = False
     
+    
     def __init__(self, maayId, results, query):
         MaayPage.__init__(self, maayId)
         self.results = results



From aurelienc at berlios.de  Tue Nov  8 10:51:10 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Tue, 8 Nov 2005 10:51:10 +0100
Subject: [Maay-svncheckins] r333 - trunk/maay
Message-ID: <200511080951.jA89pAhP022770@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-08 10:51:09 +0100 (Tue, 08 Nov 2005)
New Revision: 333

Modified:
   trunk/maay/presenceclient.py
Log:
Typo


Modified: trunk/maay/presenceclient.py
===================================================================
--- trunk/maay/presenceclient.py	2005-11-08 09:02:44 UTC (rev 332)
+++ trunk/maay/presenceclient.py	2005-11-08 09:51:09 UTC (rev 333)
@@ -59,7 +59,7 @@
             return
         time, nodeId, nodeIP, nodePort, nodeBandwidth = data.split('\t')
         lastSeenTime = parseTime(time)
-        self._callback(nodeId, nodeIP, nodePort, nodeBandwidth, lastSeenTime)
+        self.__callback(nodeId, nodeIP, nodePort, nodeBandwidth, lastSeenTime)
         
 
 def parseTime(isodatetime):



From aurelienc at berlios.de  Tue Nov  8 11:03:32 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Tue, 8 Nov 2005 11:03:32 +0100
Subject: [Maay-svncheckins] r334 - trunk/maay/test
Message-ID: <200511081003.jA8A3WsP005135@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-08 11:03:32 +0100 (Tue, 08 Nov 2005)
New Revision: 334

Modified:
   trunk/maay/test/test_p2p.py
   trunk/maay/test/test_querier.py
Log:
Minor fixes


Modified: trunk/maay/test/test_p2p.py
===================================================================
--- trunk/maay/test/test_p2p.py	2005-11-08 09:51:09 UTC (rev 333)
+++ trunk/maay/test/test_p2p.py	2005-11-08 10:03:32 UTC (rev 334)
@@ -38,7 +38,7 @@
     def testAddMatch(self):
         doc = Document(document_id = '0'*40)
         self.query.addMatch(doc)
-        self.failUnless('0'*40 in self.query.documents)
+        self.failUnless('0'*40 in self.query.documents_ids)
 
     def testIsKnown(self):
         doc = Document(document_id = '0'*40)

Modified: trunk/maay/test/test_querier.py
===================================================================
--- trunk/maay/test/test_querier.py	2005-11-08 09:51:09 UTC (rev 333)
+++ trunk/maay/test/test_querier.py	2005-11-08 10:03:32 UTC (rev 334)
@@ -28,9 +28,9 @@
 
 class QuerierTC(unittest.TestCase):
     def setUp(self):
-        self.cnx = get_connection(driver='mysql', host='crater',
-                                  database='maay_test', user='adim',
-                                  password='adim')
+        self.cnx = get_connection(driver='mysql', host='localhost',
+                                  database='maay_test', user='maay',
+                                  password='maay')
         self.querier = MaayQuerier(connection=self.cnx)
         self.nodeId = '0'*40
         self.querier.registerNode(self.nodeId, "127.0.0.1", 6789, 10)



From aurelienc at berlios.de  Tue Nov  8 11:45:53 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Tue, 8 Nov 2005 11:45:53 +0100
Subject: [Maay-svncheckins] r335 - trunk/maay
Message-ID: <200511081045.jA8Ajr90020270@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-08 11:45:53 +0100 (Tue, 08 Nov 2005)
New Revision: 335

Modified:
   trunk/maay/presenceserver.py
Log:
The transport host will match the presence server coordinates. Do not use this to override client supplied values.


Modified: trunk/maay/presenceserver.py
===================================================================
--- trunk/maay/presenceserver.py	2005-11-08 10:03:32 UTC (rev 334)
+++ trunk/maay/presenceserver.py	2005-11-08 10:45:53 UTC (rev 335)
@@ -35,7 +35,7 @@
     _ruTimestamp = {}
     # TODO: auto logout after a given time to save memory
 
-    def __init__(self, autoExpirationDelayInSecs=3600):
+    def __init__(self, autoExpirationDelayInSecs=3600*24):
         self._autoExpirationDelayInSecs = autoExpirationDelayInSecs
 
     def _auto_logout_everybody(self):
@@ -82,9 +82,6 @@
         # private IP address, use those from the TCP socket
         # - the presence server tries to connect to the client to test
         # the information...
-        h = self.transport.getHost()
-        ip = h.host
-        port = str(h.port)
         if verbose:
            print "Notification from %s:%s (id:%s)" % (ip, port, nodeId)
         if nodeId in PresenceServer._registeredUsers:



From aurelienc at berlios.de  Tue Nov  8 12:14:36 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Tue, 8 Nov 2005 12:14:36 +0100
Subject: [Maay-svncheckins] r336 - trunk/maay
Message-ID: <200511081114.jA8BEa85022452@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-08 12:14:36 +0100 (Tue, 08 Nov 2005)
New Revision: 336

Modified:
   trunk/maay/p2pquerier.py
Log:
Renaming (receiveAnswer -> sendAnswer) and buglet fix.


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-08 10:45:53 UTC (rev 335)
+++ trunk/maay/p2pquerier.py	2005-11-08 11:14:36 UTC (rev 336)
@@ -65,6 +65,11 @@
         self.queryId = queryId
         self.documents = documents
 
+def sendQueryProblem(*args):
+    """Politely displays any problem (bug, unavailability) related
+       to an attempt to send a query.
+    """
+    print " ... problem sending the query : %s" % args
 
 class P2pQuerier:
     """The P2pQuerier class is responsible for managing P2P queries.
@@ -93,11 +98,13 @@
             # below : returns a deferred
             d = proxy.callRemote('distributedQuery', query.asKwargs())
             d.addCallback(self.querier.registerNodeActivity)
+            d.addErrback(sendQueryProblem)
             print " ... sent to %s" % neighbor
 
     def receiveQuery(self, query):
         print "P2pQuerier receiveQuery : %s" % query
-        if query.id in self._queries: 
+        if query.id in self._queries:
+            print " ... we already know this query"
             return
         
         self._queries[query.id] = query 
@@ -107,13 +114,13 @@
             self.sendQuery(query)
 
         documents = self.querier.findDocuments(query.query)
-        self.receiveAnswer(P2pAnswer(query.id, documents))
+        self.sendAnswer(P2pAnswer(query.id, documents))
 
-    def receiveAnswer(self, answer, local=False):
-        print "P2pQuerier receiveAnswer : %s" % answer
+    def sendAnswer(self, answer, local=False): # local still unused
         """record and forward answers to a query.
         If local is True, then the answers come from a local query,
         and thus must not be recorded in the database"""
+        print "P2pQuerier sendAnswer : %s" % answer
         query = self._queries.get(answer.queryId)
         if query is None: # would be a bug or something nasty
             return
@@ -129,7 +136,9 @@
         if query.sender != self.nodeId: 
             try:
                 # getNodeUrl seems not to exist yet
-                senderUrl = self.querier.getNodeUrl(query.sender)
+                #senderUrl = self.querier.getNodeUrl(query.sender)
+                senderUrl = 'http://%s:%s' % (query.sender.ip,
+                                              query.sender.port)
                 proxy = Proxy(senderUrl)
                 d = proxy.callRemote('distributedQueryAnswer',
                                      query.id,



From aurelienc at berlios.de  Tue Nov  8 12:16:52 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Tue, 8 Nov 2005 12:16:52 +0100
Subject: [Maay-svncheckins] r337 - trunk/maay
Message-ID: <200511081116.jA8BGqCV022789@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-08 12:16:51 +0100 (Tue, 08 Nov 2005)
New Revision: 337

Modified:
   trunk/maay/rpc.py
   trunk/maay/server.py
   trunk/maay/webapplication.py
Log:
Mainly propagate p2p querier knowledge downto were it is used (the webapp).


Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-08 11:14:36 UTC (rev 336)
+++ trunk/maay/rpc.py	2005-11-08 11:16:51 UTC (rev 337)
@@ -36,17 +36,23 @@
 
 
 class MaayRPCServer(XMLRPC):
+    theP2pQuerier = None
 
     def __init__(self, nodeId, portal):
         XMLRPC.__init__(self)
-        print "init of MaayRPCServer, nodeId = ", nodeId
+        print "MaayRPCServer init %s %s" % (nodeId, portal)
         assert nodeId == portal.config.get_node_id ()
         self._sessions = {}
         self.portal = portal
         self.nodeId = portal.config.get_node_id() 
         self._sessions[WEB_AVATARID] = portal.webQuerier 
         self._sessions[ANONYMOUS_AVATARID] = portal.anonymousQuerier
-        self._p2pQuerier = P2pQuerier(nodeId, portal.webQuerier)
+        #self._p2pQuerier = P2pQuerier(nodeId, portal.webQuerier)
+        MaayRPCServer.theP2pQuerier = P2pQuerier(nodeId, portal.webQuerier)
+
+    def getP2pQuerier(self):
+        assert (MaayRPCServer.theP2pQuerier) is not None
+        return MaayRPCServer.theP2pQuerier
         
     def _attachUser(self, (interface, querier, logout), username, password):
         print "MaayRPCServer _attachUser", username, type(querier)
@@ -55,7 +61,7 @@
             print errmsg
             return '',  errmsg # raise UnauthorizedLogin()
         digest = make_uid(username, password)
-        print "Registering querier for %s (digest=%s)" % (username, digest)
+        print " ... registering querier for %s (digest=%s)" % (username, digest)
         self._sessions[digest] = querier
         return digest, ''
 
@@ -133,23 +139,23 @@
 
         return 0
 
-    def xmlrpc_distributedQuery(self, queryId, sender, ttl, words, mime_type):
-        print "MaayRPCServer distributedQuery : %s %s %s %s %s" % \
-              (queryId, sender, ttl, words, mime_type)
-        query = P2pQuery(queryId,
-                         sender,
-                         ttl,
-                         Query(words, filetype=mime_type))
+    #def xmlrpc_distributedQuery(self, queryId, sender, ttl, words, mime_type):
+    def xmlrpc_distributedQuery(self, queryDict):
+        print "MaayRPCServer distributedQuery : %s " % queryDict
+        query = P2pQuery(queryDict['id'],
+                         queryDict['sender'],
+                         queryDict['ttl'],
+                         Query(queryDict['words'], filetype=queryDict['mime_type']))
         # schedule the query for later processing and return immediately
         # this enables the sender to query several nodes in a row
-        d = reactor.callLater(.01, self._p2pQuerier.receiveQuery, query)
+        d = reactor.callLater(.01, self.getP2pQuerier().receiveQuery, query)
         return self.nodeId
 
     def xmlrpc_distributedQueryAnswer(self, queryId, senderId, documents):
         print "MaayRPCServer distributedQueryAnswer : %s %s %s" % \
               (queryId, senderId, documents)
-        answer = P2pAnswer() # FIXME: fill in objects
-        d = reactor.callLater(.01, self._p2pQuerier.receiveAnswer,answer)
+        answer = P2pAnswer(queryId, documents)
+        d = reactor.callLater(.01, self.getP2pQuerier().sendAnswer, answer)
         return self.nodeId
                          
     

Modified: trunk/maay/server.py
===================================================================
--- trunk/maay/server.py	2005-11-08 11:14:36 UTC (rev 336)
+++ trunk/maay/server.py	2005-11-08 11:16:51 UTC (rev 337)
@@ -84,12 +84,13 @@
 
         Both kind of avatars rely on a querier instance
         """
+        print "MaayRealm requestAvatar %s" % avatarId
         for iface in interfaces:
             # if we were asked for a web resource
             if iface is inevow.IResource:
                 querier = self._getQuerier(avatarId)
-                print "Building search form for", avatarId
-                resc = SearchForm(avatarId, querier)
+                assert(MaayRPCServer.theP2pQuerier is not None)
+                resc = SearchForm(avatarId, querier, MaayRPCServer.theP2pQuerier)
                 return inevow.IResource, resc, resc.logout
             # if we were asked for a querier
             elif iface is IQuerier:

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-08 11:14:36 UTC (rev 336)
+++ trunk/maay/webapplication.py	2005-11-08 11:16:51 UTC (rev 337)
@@ -90,10 +90,10 @@
     bodyFactory = loaders.xmlfile(get_path_of('searchform.html'))
     addSlash = True
 
-    def __init__(self, maayId, querier):
+    def __init__(self, maayId, querier, p2pquerier=None):
         MaayPage.__init__(self, maayId)
         self.querier = querier
-        self.p2pquerier = None # no webappconfig yet to get our node_id
+        self.p2pquerier = p2pquerier
 
     def logout(self):
         print "Bye %s !" % (self.maayId,)
@@ -111,7 +111,8 @@
         webappConfig = IServerConfiguration(context)
         nodeId = webappConfig.get_node_id()
         if not self.p2pquerier:
-            self.p2pquerier = P2pQuerier(nodeId, self.querier)
+            print "BUG ? We don't have a P2pQuerier"
+            return
         theDistributedQuery = P2pQuery(123, nodeId, 3, query)
         self.p2pquerier.sendQuery(theDistributedQuery)
 



From aurelienc at berlios.de  Tue Nov  8 12:18:07 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Tue, 8 Nov 2005 12:18:07 +0100
Subject: [Maay-svncheckins] r338 - trunk/maay
Message-ID: <200511081118.jA8BI719022864@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-08 12:18:07 +0100 (Tue, 08 Nov 2005)
New Revision: 338

Modified:
   trunk/maay/presenceclient.py
Log:
Verbosify


Modified: trunk/maay/presenceclient.py
===================================================================
--- trunk/maay/presenceclient.py	2005-11-08 11:16:51 UTC (rev 337)
+++ trunk/maay/presenceclient.py	2005-11-08 11:18:07 UTC (rev 338)
@@ -72,6 +72,7 @@
 def notify(reactor, regIP, regPort, querier, nodeId, nodeIP, xmlrpcPort, bandwidth):
     """registers and transmits the node catalog to querier.registerNode
     """
+    print "PresenceClient notify %s %s" % (nodeIP, xmlrpcPort)
     if querier is not None:
         c = ClientCreator(reactor, PresenceClient, querier.registerNode)
         d = c.connectTCP(regIP, regPort)



From aurelienc at berlios.de  Tue Nov  8 15:04:57 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Tue, 8 Nov 2005 15:04:57 +0100
Subject: [Maay-svncheckins] r339 - trunk/maay
Message-ID: <200511081404.jA8E4vHG028428@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-08 15:04:56 +0100 (Tue, 08 Nov 2005)
New Revision: 339

Modified:
   trunk/maay/querier.py
Log:
Robustify against non unicode query words


Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-08 11:18:07 UTC (rev 338)
+++ trunk/maay/querier.py	2005-11-08 14:04:56 UTC (rev 339)
@@ -144,7 +144,7 @@
     def findDocuments(self, query):
         """Find all indexed documents matching the query"""
         # TODO: order results using document_scores information
-        words = WORDS_RGX.findall(normalizeText(query.words))
+        words = WORDS_RGX.findall(normalizeText(unicode(query.words)))
         self._updateQueryStatistics(words)
         try:
             cursor = self._cnx.cursor()



From afayolle at berlios.de  Tue Nov  8 15:29:32 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Tue, 8 Nov 2005 15:29:32 +0100
Subject: [Maay-svncheckins] r340 - trunk/maay
Message-ID: <200511081429.jA8ETWjt029903@sheep.berlios.de>

Author: afayolle
Date: 2005-11-08 15:29:31 +0100 (Tue, 08 Nov 2005)
New Revision: 340

Modified:
   trunk/maay/image.py
Log:
fixed thumbnail dir permissions

Modified: trunk/maay/image.py
===================================================================
--- trunk/maay/image.py	2005-11-08 14:04:56 UTC (rev 339)
+++ trunk/maay/image.py	2005-11-08 14:29:31 UTC (rev 340)
@@ -50,8 +50,7 @@
                         self.get('thumbnails-dir'))
         if not os.access(path, os.W_OK):
             try:
-                os.makedirs(path, os.W_OK)
-                os.chmod(path, stat.S_IRWXG)
+                os.makedirs(path, stat.S_IRWXU)
             except Exception, e:
                 raise NoThumbnailsDir("Impossible to access or create %s. "
                                       "Cause : %e" % (path, e))



From afayolle at berlios.de  Tue Nov  8 16:03:45 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Tue, 8 Nov 2005 16:03:45 +0100
Subject: [Maay-svncheckins] r341 - trunk/maay
Message-ID: <200511081503.jA8F3jIZ000564@sheep.berlios.de>

Author: afayolle
Date: 2005-11-08 16:03:45 +0100 (Tue, 08 Nov 2005)
New Revision: 341

Modified:
   trunk/maay/indexer.py
Log:
fixed encoding error

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-08 14:29:31 UTC (rev 340)
+++ trunk/maay/indexer.py	2005-11-08 15:03:45 UTC (rev 341)
@@ -169,7 +169,7 @@
             futureDoc.title = removeControlChar(futureDoc.title) 
             futureDoc.text = removeControlChar(futureDoc.text)
             if self.verbose:
-                print u'('+futureDoc.title.encode('utf-8')+u')'
+                print '('+futureDoc.title.encode('utf-8')+')'
             self.serverProxy.indexDocument(self.cnxId, futureDoc)
 
         except (Fault, ProtocolError), exc:
@@ -203,7 +203,7 @@
             # test path not in self.skipped (dummy config files)
             if path not in self.skipped:
                 for dirpath, dirnames, filenames in os.walk(path):
-                    # print "looking in", dirpath
+##                     print "looking in", dirpath
                     self._removeSkippedDirnames(dirpath, dirnames)
                     for filename in filenames:
                         if os.access(os.path.join(dirpath, filename), os.R_OK): # Can we open it ?



From afayolle at berlios.de  Tue Nov  8 18:17:36 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Tue, 8 Nov 2005 18:17:36 +0100
Subject: [Maay-svncheckins] r342 - trunk/maay
Message-ID: <200511081717.jA8HHad6014052@sheep.berlios.de>

Author: afayolle
Date: 2005-11-08 18:17:35 +0100 (Tue, 08 Nov 2005)
New Revision: 342

Modified:
   trunk/maay/converter.py
Log:
ms word converter fix

Modified: trunk/maay/converter.py
===================================================================
--- trunk/maay/converter.py	2005-11-08 15:03:45 UTC (rev 341)
+++ trunk/maay/converter.py	2005-11-08 17:17:35 UTC (rev 342)
@@ -212,7 +212,7 @@
     OUTPUT_TYPE = 'html'
     MIME_TYPES = ('text/rtf',)
 
-class MSWordConverter(CommandBasedConverter):
+class MSWordConverter(CommandBasedConverter, RawTextConverter):
     COMMAND = 'antiword "%(input)s" > "%(output)s"'
     MIME_TYPES = ('application/msword',)
 



From dnf at berlios.de  Tue Nov  8 18:49:06 2005
From: dnf at berlios.de (Frédéric DANG NGOC at BerliOS)
Date: Tue, 8 Nov 2005 18:49:06 +0100
Subject: [Maay-svncheckins] r343 - trunk/maay/data/images
Message-ID: <200511081749.jA8Hn6Lc000963@sheep.berlios.de>

Author: dnf
Date: 2005-11-08 18:49:05 +0100 (Tue, 08 Nov 2005)
New Revision: 343

Added:
   trunk/maay/data/images/logoFT.png
Log:
Add FT logo in images directory.


Added: trunk/maay/data/images/logoFT.png
===================================================================
(Binary files differ)


Property changes on: trunk/maay/data/images/logoFT.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From dnf at berlios.de  Tue Nov  8 18:53:07 2005
From: dnf at berlios.de (Frédéric DANG NGOC at BerliOS)
Date: Tue, 8 Nov 2005 18:53:07 +0100
Subject: [Maay-svncheckins] r344 - in trunk/maay: . data
Message-ID: <200511081753.jA8Hr7Jk004898@sheep.berlios.de>

Author: dnf
Date: 2005-11-08 18:52:57 +0100 (Tue, 08 Nov 2005)
New Revision: 344

Added:
   trunk/maay/data/indexationpage.html
Modified:
   trunk/maay/data/skeleton.html
   trunk/maay/indexer.py
   trunk/maay/webapplication.py
Log:
Add feature to start indexer from web pages. (one task removed from the TODO list ;-)
Some esthetic modifications on the result page.



Added: trunk/maay/data/indexationpage.html
===================================================================
--- trunk/maay/data/indexationpage.html	2005-11-08 17:49:05 UTC (rev 343)
+++ trunk/maay/data/indexationpage.html	2005-11-08 17:52:57 UTC (rev 344)
@@ -0,0 +1,8 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
+"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<nevow:invisible xmlns="http://www.w3.org/1999/xhtml" lang="en" xmlns:nevow="http://nevow.com/ns/nevow/0.1">
+<h1>Indexation Page</h1>
+  <div class="message" nevow:render="message">"<nevow:slot name="msg" />"</div><br /><br />
+<a href="/indexation?start=1">Index now</a><br /><br />
+<a href="/">return to search page</a>
+</nevow:invisible>

Modified: trunk/maay/data/skeleton.html
===================================================================
--- trunk/maay/data/skeleton.html	2005-11-08 17:49:05 UTC (rev 343)
+++ trunk/maay/data/skeleton.html	2005-11-08 17:52:57 UTC (rev 344)
@@ -10,10 +10,11 @@
   <body>
     <nevow:invisible nevow:macro="body" />
       <hr />
-        <a href="http://maay.netofpeers.net/">Maay Home page</a> 
-        <a href="http://developer.berlios.de/projects/maay/">
-          <img src="http://developer.berlios.de/images/berliOS_logo.png"
-            width="124" height="32" border="0" alt="BerliOS Logo" />
-        </a>
+        <table width="100%">
+        <tr>
+          <td valign="top"><small><a href="http://maay.netofpeers.net/">Maay Home page</a> </small></td>
+          <td align="right"><img src="/images/logoFT.png" /></td>
+        </tr>
+      </table>
   </body>  
 </html>

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-08 17:49:05 UTC (rev 343)
+++ trunk/maay/indexer.py	2005-11-08 17:52:57 UTC (rev 344)
@@ -32,13 +32,14 @@
 import mimetypes
 import socket
 
+import maay.indexer
 from maay import converter
 from maay.configuration import Configuration
 from maay.dbentity import FutureDocument, Document, FileInfo
 from maay.querier import MaayAuthenticationError
 from maay.texttool import removeControlChar
+from thread import start_new_thread
 
-
 def makeDocumentId(filename):
     """return the SHA hash value from of the contents of the file"""
     stream = file(filename, 'rb')
@@ -313,6 +314,21 @@
               (indexerConfig.host, indexerConfig.port)
         sys.exit(1)
 
+running = False
+
+def _run_thread():
+    maay.indexer.running = True
+    try:
+        run()
+    finally:    
+        maay.indexer.running = False
+
+def start_as_thread():
+    if maay.indexer.running:
+        print "Indexer already running"
+        return
+    start_new_thread(_run_thread, ())
+
 if __name__ == '__main__':
     run()
 

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-08 17:49:05 UTC (rev 343)
+++ trunk/maay/webapplication.py	2005-11-08 17:52:57 UTC (rev 344)
@@ -34,6 +34,7 @@
 from maay.texttool import makeAbstract, WORDS_RGX, normalizeText, boldifyText
 from maay.query import Query
 from maay.p2pquerier import P2pQuerier, P2pQuery
+import maay.indexer
 
 class IServerConfiguration(Interface):
     """provide an interface in order to be able to remember webappconfig"""
@@ -103,6 +104,22 @@
     def child_peers(self, context):
         return PeersList(self.maayId, self.querier)
 
+    def child_indexation(self, context):
+        start = int(context.arg('start', 0))
+        if start == 0:
+            if maay.indexer.running:
+                msg = "Indexer running"
+            else:
+                msg = "Indexer not running"
+        else:
+            if maay.indexer.running:    
+                msg = "Indexer already running"
+            else:
+                msg = "Indexer started"
+                maay.indexer.start_as_thread()
+
+        return IndexationPage(msg)
+
     def _askForPeerResults(self, query, context):
         """Launches a P2P cascade of queries
            The result of this shall be used ~ 5 and 15 secs. later
@@ -138,6 +155,20 @@
             return Maay404()
 
 
+class IndexationPage(MaayPage):
+    # just for the demo. Should be moved to a adminpanel interface later.
+    """index page"""
+    bodyFactory = loaders.xmlfile(get_path_of('indexationpage.html'))
+    addSlash = False
+    
+    def __init__(self, msg = "No message"):
+        MaayPage.__init__(self)
+        self.__msg = msg
+
+    def render_message(self, context, data):
+        context.fillSlots('msg', self.__msg)
+        return context.tag
+
 class ResultsPage(MaayPage):
     """default results page"""
     bodyFactory = loaders.xmlfile(get_path_of('resultpage.html'))



From dnf at berlios.de  Tue Nov  8 18:57:34 2005
From: dnf at berlios.de (Frédéric DANG NGOC at BerliOS)
Date: Tue, 8 Nov 2005 18:57:34 +0100
Subject: [Maay-svncheckins] r345 - trunk/maay/data
Message-ID: <200511081757.jA8HvY7I007203@sheep.berlios.de>

Author: dnf
Date: 2005-11-08 18:57:27 +0100 (Tue, 08 Nov 2005)
New Revision: 345

Modified:
   trunk/maay/data/searchform.html
Log:
add link to the indexation page.



Modified: trunk/maay/data/searchform.html
===================================================================
--- trunk/maay/data/searchform.html	2005-11-08 17:52:57 UTC (rev 344)
+++ trunk/maay/data/searchform.html	2005-11-08 17:57:27 UTC (rev 345)
@@ -21,5 +21,6 @@
         </td>
       </tr>
     </table>
+  <small><p align="right"><a href="/indexation">Indexation page</a></p></small>
   </nevow:invisible>
-  
\ No newline at end of file
+  



From aurelienc at berlios.de  Tue Nov  8 18:58:07 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Tue, 8 Nov 2005 18:58:07 +0100
Subject: [Maay-svncheckins] r346 - trunk/maay/test
Message-ID: <200511081758.jA8Hw7Rl007323@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-08 18:58:06 +0100 (Tue, 08 Nov 2005)
New Revision: 346

Modified:
   trunk/maay/test/test_p2p.py
Log:
Update according to P2pQuery interfaces changes (to follow).


Modified: trunk/maay/test/test_p2p.py
===================================================================
--- trunk/maay/test/test_p2p.py	2005-11-08 17:57:27 UTC (rev 345)
+++ trunk/maay/test/test_p2p.py	2005-11-08 17:58:06 UTC (rev 346)
@@ -25,9 +25,8 @@
 
 class P2pQueryTC(unittest.TestCase):
     def setUp(self):
-        self.query = P2pQuery(queryId='1'*40,
-                              sender='http://localhost:3423',
-                              ttl=2,
+        self.query = P2pQuery(sender='http://localhost:3423', # should be a hash (auc)
+                              port=3423,
                               query=Query.fromRawQuery("foo"))
 
     def testHop(self):
@@ -48,20 +47,22 @@
 
     def testSimpleQueryAsKwargs(self):
         self.assertEquals(self.query.asKwargs(),
-                          {'id' : '1'*40,
+                          {'qid' : 0,
                            'sender' : 'http://localhost:3423',
-                           'ttl' : 2,
+                           'port' : 3423,
+                           'ttl' : 5, # default value
                            'words' : 'foo',
                            'mime_type' : ''})
 
     def testComplexQueryAsKwargs(self):
-        query = P2pQuery(queryId='1'*40,
-                         sender='http://localhost:3423',
+        query = P2pQuery(sender='http://localhost:3423',
+                         port = 3423,
                          ttl=2,
                          query=Query.fromRawQuery("foo bar filetype:pdf"))
         self.assertEquals(query.asKwargs(),
-                          {'id' : '1'*40,
+                          {'qid' : 0,
                            'sender' : 'http://localhost:3423',
+                           'port' : 3423,
                            'ttl' : 2,
                            'words' : 'foo bar',
                            'mime_type' : 'application/pdf'})
@@ -70,9 +71,9 @@
 
 class P2pQuerierTC(unittest.TestCase):
     def setUp(self):
-        self.querier = P2pQuerier('0'*40, None)  #XXX: How can we get a querier ?
-        self.query = P2pQuery(queryId='1'*40,
-                              sender='http://localhost:3423',
+        self.querier = P2pQuerier('0'*40, None) 
+        self.query = P2pQuery(sender='http://localhost:3423',
+                              port=3423,
                               ttl=2,
                               query=Query.fromRawQuery("foo"))
 



From aurelienc at berlios.de  Tue Nov  8 18:59:15 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Tue, 8 Nov 2005 18:59:15 +0100
Subject: [Maay-svncheckins] r347 - trunk/maay
Message-ID: <200511081759.jA8HxFZL007496@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-08 18:59:11 +0100 (Tue, 08 Nov 2005)
New Revision: 347

Modified:
   trunk/maay/dbentity.py
Log:
Revert to old-style to allow marshalling with XMLRPC stuff


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-08 17:58:06 UTC (rev 346)
+++ trunk/maay/dbentity.py	2005-11-08 17:59:11 UTC (rev 347)
@@ -25,7 +25,7 @@
 
 from maay.texttool import normalizeText, WORD_MIN_LEN, WORD_MAX_LEN
 
-class DBEntity(object):
+class DBEntity:
     attributes = []
     tableName = None
     key = (None, )



From aurelienc at berlios.de  Tue Nov  8 19:03:54 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Tue, 8 Nov 2005 19:03:54 +0100
Subject: [Maay-svncheckins] r348 - trunk/maay
Message-ID: <200511081803.jA8I3sgQ008187@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-08 19:03:51 +0100 (Tue, 08 Nov 2005)
New Revision: 348

Modified:
   trunk/maay/p2pquerier.py
   trunk/maay/rpc.py
   trunk/maay/webapplication.py
Log:
Big update : p2p almost working.


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-08 17:59:11 UTC (rev 347)
+++ trunk/maay/p2pquerier.py	2005-11-08 18:03:51 UTC (rev 348)
@@ -23,18 +23,41 @@
 
 from twisted.web.xmlrpc import Proxy
 
+#TODO: add test for this
+SEQ_DICT = {}
+
+def incrementSequence(item):
+    """Returns a growing monotone value for the
+       associated item (starting from 0 when
+       item is seen first)
+    """
+    if not SEQ_DICT.has_key(item):
+        SEQ_DICT[item] = 0
+    count = SEQ_DICT[item]
+    SEQ_DICT[item] = count + 1
+    return count
+
+
 # XXX should P2pQuery derive from query.Query?
 class P2pQuery:
-    def __init__(self, queryId, sender, ttl, query):
+    def __init__(self, sender, port, query, ttl=5, qid=None):
         """
+        :param sender: really a nodeId
+        :type sender: str
+        :param port: the originator rpc port
+        :type port: int
         :param query: the query to wrap
         :type query: `maay.query.Query`
+
         """
-        self.id = queryId
+        if qid:
+            self.qid = qid
+        else:
+            self.qid = incrementSequence(sender.__hash__)
         self.sender = sender
+        self.port = port
         self.ttl = ttl
         self.query = query
-        #self.query.searchtype = 'p2p'
         self.documents_ids = set()
 
     def hop(self):
@@ -53,8 +76,9 @@
         #       None can't be sent via XMLRPC.
         #       (Well, it can be in Twisted, but then I guess that
         #       we have to restrict to Twisted and Python world)
-        return {'id':self.id,
+        return {'qid':self.qid,
                 'sender':self.sender,
+                'port':self.port,
                 'ttl':self.ttl,
                 'words': self.query.words,
                 'mime_type': self.query.filetype or '',
@@ -65,11 +89,11 @@
         self.queryId = queryId
         self.documents = documents
 
-def sendQueryProblem(*args):
+def sendQueryProblem(self, *args):
     """Politely displays any problem (bug, unavailability) related
-       to an attempt to send a query.
+    to an attempt to send a query.
     """
-    print " ... problem sending the query : %s" % args
+    print " ... problem sending the query :", args
 
 class P2pQuerier:
     """The P2pQuerier class is responsible for managing P2P queries.
@@ -85,68 +109,93 @@
     the statistical information available about the neighbors'
     documents.
     """
-    _queries = {} 
+    _receivedQueries = {} # key : queryId, val : query
+    _sentQueries = {}     
+    _answerCallbacks = []
     
     def __init__(self, nodeId, querier):
         self.nodeId = nodeId  
         self.querier = querier
 
     def sendQuery(self, query):
+        """
+        :type query: `maay.p2pquerier.P2pQuery`
+        """        
         print "P2pQuerier sendQuery : %s" % query
         for neighbor in self._selectTargetNeighbors(query):
-            proxy = Proxy(str(neighbor.getRpcUrl())) # chokes on unicode
-            # below : returns a deferred
+            proxy = Proxy(str(neighbor.getRpcUrl())) 
             d = proxy.callRemote('distributedQuery', query.asKwargs())
             d.addCallback(self.querier.registerNodeActivity)
             d.addErrback(sendQueryProblem)
+            self._sentQueries[query.qid] = query
             print " ... sent to %s" % neighbor
 
+    def addAnswerCallback(self, callback):
+        P2pQuerier._answerCallbacks.append(callback)
+
+    def _notifyAnswerCallbacks(self, results):
+        for cb in P2pQuerier._answerCallbacks:
+            apply(cb, results)
+
     def receiveQuery(self, query):
+        """
+        :type query: `maay.p2pquerier.P2pQuery`
+        """
         print "P2pQuerier receiveQuery : %s" % query
-        if query.id in self._queries:
-            print " ... we already know this query"
+        if query.qid in self._receivedQueries or \
+           query.qid in self._sentQueries:
+            print " ... we already know this query, this ends the trip"
             return
         
-        self._queries[query.id] = query 
+        self._receivedQueries[query.qid] = query 
 
         query.hop()        
         if query.ttl > 0:
             self.sendQuery(query)
 
         documents = self.querier.findDocuments(query.query)
-        self.sendAnswer(P2pAnswer(query.id, documents))
+        self.relayAnswer(P2pAnswer(query.qid, documents))
 
-    def sendAnswer(self, answer, local=False): # local still unused
+    def relayAnswer(self, answer, local=False): # local still unused
         """record and forward answers to a query.
         If local is True, then the answers come from a local query,
         and thus must not be recorded in the database"""
-        print "P2pQuerier sendAnswer : %s" % answer
-        query = self._queries.get(answer.queryId)
-        if query is None: # would be a bug or something nasty
+        print "P2pQuerier relayAnswer : %s documents" % len(answer.documents)
+        query = self._receivedQueries.get(answer.queryId)
+        if query is None: 
+            print " ... bailing out : we had no query for this answer"
             return
         
         toSend = []
         
         for document in answer.documents:
             # TODO: record answer in database if local is False
+            # auc : to cache them ?
             if not query.isKnown(document):
-                self.query.addMatch(document)
-                toSend.append(document.asDictionnary())
+                query.addMatch(document)
+                #toSend.append(document.asDictionnary())
+                # above was meant to be like .asKwargs() ?
+                # anyway, this stuff is xmlrpc-serializable (auc)
+                toSend.append(document)
         
         if query.sender != self.nodeId: 
             try:
                 # getNodeUrl seems not to exist yet
                 #senderUrl = self.querier.getNodeUrl(query.sender)
-                senderUrl = 'http://%s:%s' % (query.sender.ip,
-                                              query.sender.port)
+                host = query.host 
+                port = query.port
+                print " ... will send answer to %s:%s" % (host, port)
+                senderUrl = 'http://%s:%s' % (host, port)
                 proxy = Proxy(senderUrl)
                 d = proxy.callRemote('distributedQueryAnswer',
-                                     query.id,
+                                     query.qid,
                                      self.nodeId,
                                      toSend)
                 d.addCallback(self.querier.registerNodeActivity)
             except ValueError:
                 print "unknown node %s" % query.sender
+        else: # local would be true ? don't waste the answers ...
+            self._notifyAnswerCallbacks(toSend)
     
     def _selectTargetNeighbors(self, query):
         """return a list of nodes to which the query will be sent.

Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-08 17:59:11 UTC (rev 347)
+++ trunk/maay/rpc.py	2005-11-08 18:03:51 UTC (rev 348)
@@ -26,7 +26,7 @@
 
 from maay.querier import MaayQuerier, IQuerier, ANONYMOUS_AVATARID, WEB_AVATARID
 from maay.dbentity import FutureDocument, Document
-from maay.p2pquerier import P2pQuerier, P2pQuery
+from maay.p2pquerier import P2pQuerier, P2pQuery, P2pAnswer
 from maay.query import Query
 
 def make_uid(username, password):
@@ -36,6 +36,8 @@
 
 
 class MaayRPCServer(XMLRPC):
+    #XXX: should be in instance, but this simplifies greatly
+    #     access from webapplication (who can't see the instance)
     theP2pQuerier = None
 
     def __init__(self, nodeId, portal):
@@ -47,9 +49,14 @@
         self.nodeId = portal.config.get_node_id() 
         self._sessions[WEB_AVATARID] = portal.webQuerier 
         self._sessions[ANONYMOUS_AVATARID] = portal.anonymousQuerier
+        self._lastClient = None
         #self._p2pQuerier = P2pQuerier(nodeId, portal.webQuerier)
         MaayRPCServer.theP2pQuerier = P2pQuerier(nodeId, portal.webQuerier)
 
+    def render(self, request):
+        self._lastClient = request.transport.getPeer()
+        return XMLRPC.render(self, request)
+
     def getP2pQuerier(self):
         assert (MaayRPCServer.theP2pQuerier) is not None
         return MaayRPCServer.theP2pQuerier
@@ -142,10 +149,12 @@
     #def xmlrpc_distributedQuery(self, queryId, sender, ttl, words, mime_type):
     def xmlrpc_distributedQuery(self, queryDict):
         print "MaayRPCServer distributedQuery : %s " % queryDict
-        query = P2pQuery(queryDict['id'],
-                         queryDict['sender'],
+        query = P2pQuery(queryDict['sender'],
+                         queryDict['port'],
+                         Query(queryDict['words'], filetype=queryDict['mime_type']),
                          queryDict['ttl'],
-                         Query(queryDict['words'], filetype=queryDict['mime_type']))
+                         queryDict['qid'])
+        query.host = self._lastClient.host
         # schedule the query for later processing and return immediately
         # this enables the sender to query several nodes in a row
         d = reactor.callLater(.01, self.getP2pQuerier().receiveQuery, query)
@@ -155,7 +164,7 @@
         print "MaayRPCServer distributedQueryAnswer : %s %s %s" % \
               (queryId, senderId, documents)
         answer = P2pAnswer(queryId, documents)
-        d = reactor.callLater(.01, self.getP2pQuerier().sendAnswer, answer)
+        d = reactor.callLater(.01, self.getP2pQuerier().relayAnswer, answer)
         return self.nodeId
                          
     

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-08 17:59:11 UTC (rev 347)
+++ trunk/maay/webapplication.py	2005-11-08 18:03:51 UTC (rev 348)
@@ -85,6 +85,7 @@
                          'claim_count', 'affinity', 'bandwidth'):
             context.fillSlots(attrname, getattr(peerNode, attrname, 'N/A'))
         return context.tag
+
                     
 class SearchForm(MaayPage):
     """default search form"""
@@ -125,22 +126,32 @@
            The result of this shall be used ~ 5 and 15 secs. later
            by the ResultPage
         """
-        webappConfig = IServerConfiguration(context)
-        nodeId = webappConfig.get_node_id()
         if not self.p2pquerier:
             print "BUG ? We don't have a P2pQuerier"
             return
-        theDistributedQuery = P2pQuery(123, nodeId, 3, query)
+        webappConfig = IServerConfiguration(context)
+        theDistributedQuery = P2pQuery(webappConfig.get_node_id(),
+                                       webappConfig.rpcserver_port,
+                                       query)
         self.p2pquerier.sendQuery(theDistributedQuery)
+        self.p2pquerier.addAnswerCallback(self.newStuff)
+        self.oldContext = context
 
-    def child_search(self, context):
+    def newStuff(self, results):
+        print "newStuff, great !"
+        self.child_search(oldContext, results)
+
+    def child_search(self, context, results=None):
         # query = unicode(context.arg('words'))        
         offset = int(context.arg('offset', 0))
-        rawQuery = unicode(context.arg('words'), 'utf-8')
-        query = Query.fromRawQuery(rawQuery, offset)
-        localResults = self.querier.findDocuments(query)
-        self._askForPeerResults(query, context)
-        return ResultsPage(self.maayId, localResults, query)
+        if not results:
+            rawQuery = unicode(context.arg('words'), 'utf-8')
+            query = Query.fromRawQuery(rawQuery, offset)
+            localResults = self.querier.findDocuments(query)
+            self._askForPeerResults(query, context)
+            return ResultsPage(self.maayId, localResults, query)
+        else:
+            return ResultsPage(self.maayId, results, query)
 
     # XXX make sure that the requested document is really in the database
     # XXX don't forget to update the download statistics of the document



From dnf at berlios.de  Tue Nov  8 19:05:01 2005
From: dnf at berlios.de (Frédéric DANG NGOC at BerliOS)
Date: Tue, 8 Nov 2005 19:05:01 +0100
Subject: [Maay-svncheckins] r349 - trunk/maay/data
Message-ID: <200511081805.jA8I51mq008358@sheep.berlios.de>

Author: dnf
Date: 2005-11-08 19:04:59 +0100 (Tue, 08 Nov 2005)
New Revision: 349

Modified:
   trunk/maay/data/maay.css
   trunk/maay/data/resultpage.html
Log:
Some esthetic modifications...



Modified: trunk/maay/data/maay.css
===================================================================
--- trunk/maay/data/maay.css	2005-11-08 18:03:51 UTC (rev 348)
+++ trunk/maay/data/maay.css	2005-11-08 18:04:59 UTC (rev 349)
@@ -4,7 +4,6 @@
 h2 {  font-family: Arial, Helvetica, sans-serif; font-size: 12pt; font-style:italic ; font-weight: bold ; color: #444444}
 h3 {  font-family: Arial, Helvetica, sans-serif; font-size: 10pt; font-weight: bold; color: #888888}
 
-
 /** login page ********/
 table.loginTable {
   width: 100%;
@@ -49,6 +48,7 @@
 
 div.prevnext {
   width: 100%;
+  font-size: 10px;
 }
 
 div.prevnext a {
@@ -73,6 +73,10 @@
   background: lightgrey;
 }
 
+image{
+  border: 0px;
+}
+
 /** icon *******/
 div.text_html {
   /* display: block; */

Modified: trunk/maay/data/resultpage.html
===================================================================
--- trunk/maay/data/resultpage.html	2005-11-08 18:03:51 UTC (rev 348)
+++ trunk/maay/data/resultpage.html	2005-11-08 18:04:59 UTC (rev 349)
@@ -6,7 +6,7 @@
     <form action="search" accept-charset="utf-8">
       <table>
         <tr>
-          <td><img src="images/smallmaay.png" /></td>
+          <td><a href="/"><img border="0" src="images/smallmaay.png" /></a></td>
           <td><input type="text" name="words" nevow:render="searchfield"><nevow:attr name="value" ><nevow:slot name="words" /></nevow:attr></input></td>
           <td><input type="submit" class="searchButton" value="search" /></td>
 	</tr>
@@ -25,7 +25,10 @@
       </td>
     </tr>
   </table>
+  <br />
+  <center>
   <div class="prevnext"><a><nevow:attr name="href"
   nevow:render="prevset_url"/>Previous</a> - <a><nevow:attr
   name="href" nevow:render="nextset_url"/>Next</a></div>
+  </center>
 </nevow:invisible>



From dnf at berlios.de  Tue Nov  8 19:23:41 2005
From: dnf at berlios.de (Frédéric DANG NGOC at BerliOS)
Date: Tue, 8 Nov 2005 19:23:41 +0100
Subject: [Maay-svncheckins] r350 - in trunk/maay: . data
Message-ID: <200511081823.jA8INfVo018173@sheep.berlios.de>

Author: dnf
Date: 2005-11-08 19:23:37 +0100 (Tue, 08 Nov 2005)
New Revision: 350

Modified:
   trunk/maay/data/maay.css
   trunk/maay/data/resultpage.html
   trunk/maay/webapplication.py
Log:
Add range (e.g. 1-15) in results.



Modified: trunk/maay/data/maay.css
===================================================================
--- trunk/maay/data/maay.css	2005-11-08 18:04:59 UTC (rev 349)
+++ trunk/maay/data/maay.css	2005-11-08 18:23:37 UTC (rev 350)
@@ -40,7 +40,7 @@
 }
 
 span.resultUrl {
-  font-size: 90%;
+  font-size: 80%;
   font-family: "New Century Schoolbook", serif;
   color: green;
   text-decoration: none;
@@ -48,7 +48,7 @@
 
 div.prevnext {
   width: 100%;
-  font-size: 10px;
+  font-size: 80%;
 }
 
 div.prevnext a {

Modified: trunk/maay/data/resultpage.html
===================================================================
--- trunk/maay/data/resultpage.html	2005-11-08 18:04:59 UTC (rev 349)
+++ trunk/maay/data/resultpage.html	2005-11-08 18:23:37 UTC (rev 350)
@@ -13,7 +13,7 @@
       </table>
     </form>      
   </div>
-  <div class="message" nevow:render="title">Results for "<nevow:slot name="words" />"</div>
+  <div class="message" nevow:render="title">Results <nevow:slot name="start_result" /> - <nevow:slot name="end_result" /> for <b><nevow:slot name="words" /></b>.</div>
   <table class="results" nevow:render="sequence" nevow:data="results">
     <tr nevow:pattern="item" nevow:render="row">
       <td>

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-08 18:04:59 UTC (rev 349)
+++ trunk/maay/webapplication.py	2005-11-08 18:23:37 UTC (rev 350)
@@ -149,9 +149,9 @@
             query = Query.fromRawQuery(rawQuery, offset)
             localResults = self.querier.findDocuments(query)
             self._askForPeerResults(query, context)
-            return ResultsPage(self.maayId, localResults, query)
+            return ResultsPage(self.maayId, localResults, query, offset)
         else:
-            return ResultsPage(self.maayId, results, query)
+            return ResultsPage(self.maayId, results, query, offset)
 
     # XXX make sure that the requested document is really in the database
     # XXX don't forget to update the download statistics of the document
@@ -186,16 +186,19 @@
     addSlash = False
     
     
-    def __init__(self, maayId, results, query):
+    def __init__(self, maayId, results, query, offset):
         MaayPage.__init__(self, maayId)
         self.results = results
         self.query = query.words # unicode(query)
+        self.offset = offset
 
     def data_results(self, context, data):
         return self.results
 
     def render_title(self, context, data):
         context.fillSlots('words', self.query)
+        context.fillSlots('start_result', min(len(self.results), self.offset + 1))
+        context.fillSlots('end_result', self.offset + len(self.results))
         return context.tag
 
     def render_searchfield(self, context, data):



From afayolle at berlios.de  Wed Nov  9 08:41:09 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Wed, 9 Nov 2005 08:41:09 +0100
Subject: [Maay-svncheckins] r351 - trunk/debian
Message-ID: <200511090741.jA97f9TF030558@sheep.berlios.de>

Author: afayolle
Date: 2005-11-09 08:41:07 +0100 (Wed, 09 Nov 2005)
New Revision: 351

Modified:
   trunk/debian/control
Log:
updated dependencies

Modified: trunk/debian/control
===================================================================
--- trunk/debian/control	2005-11-08 18:23:37 UTC (rev 350)
+++ trunk/debian/control	2005-11-09 07:41:07 UTC (rev 351)
@@ -7,20 +7,35 @@
 
 Package: maay
 Architecture: all
-Depends: ${shlibs:Depends}, ${misc:Depends}, mysql-server-4.1, python, python-mysql, python-nevow, python-twisted
-Recommends: antiword, unrtf, pdftohtml, 
+Depends: ${misc:Depends}, mysql-server-4.1, python, python-mysql, python-nevow (>= 0.6.0), python-twisted (>= 2.0), python-logilab-common (>=0.12.0-3)
+Recommends: antiword, unrtf, pdftohtml, python-imaging
 Description: peer to peer indexation and search engine
  Maay can index files on your computer, and export them to other
  members of the Maay P2P network. You can also issue searches which
  will look for documents on your computer as well as on other nodes of
  the P2P network.
  .
- Maay can index raw text, html, pdf, ms word and rtf documents. Other
- formats are planned for a future release.
+ Maay can index raw text, html, pdf, Microsoft word and rtf
+ documents. Other formats are planned for a future release.
  .
  Queries are issued using a web interface. In the current version
- queries are ontly dispatched on the current node, i.e. the P2P
+ queries are only dispatched on the current node, i.e. the P2P
  functionnality is not available for now.
  . 
  Homepage: http://maay.netofpeers.net/
 
+Package: maay-registration-server
+Architecture: all
+Depends: ${misc:Depends}, python, python-twisted (>= 2.0)
+Description: registration server for maay P2P network
+ Maay can index files on your computer, and export them to other
+ members of the Maay P2P network. You can also issue searches which
+ will look for documents on your computer as well as on other nodes of
+ the P2P network.
+ .
+ The registration server is used to register maay nodes so that they
+ can initiate P2P connections and document searches. You need to
+ install this package if you intend to run Maay nodes on a local
+ network.
+ . 
+ Homepage: http://maay.netofpeers.net/



From afayolle at berlios.de  Wed Nov  9 09:37:20 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Wed, 9 Nov 2005 09:37:20 +0100
Subject: [Maay-svncheckins] r352 - trunk/maay
Message-ID: <200511090837.jA98bKBo024433@sheep.berlios.de>

Author: afayolle
Date: 2005-11-09 09:37:16 +0100 (Wed, 09 Nov 2005)
New Revision: 352

Modified:
   trunk/maay/querier.py
Log:
really close the cursor

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-09 07:41:07 UTC (rev 351)
+++ trunk/maay/querier.py	2005-11-09 08:37:16 UTC (rev 352)
@@ -205,7 +205,7 @@
             winfo = Word.selectOrInsertWhere(cursor, word=word)[0]
             winfo.claim_count += 1 / len(words)
             winfo.commit(cursor, update=True)
-        cursor.close
+        cursor.close()
         self._cnx.commit()
 
 



From adimasci at berlios.de  Wed Nov  9 09:43:01 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Wed, 9 Nov 2005 09:43:01 +0100
Subject: [Maay-svncheckins] r353 - in trunk/maay: . data
Message-ID: <200511090843.jA98h15B028459@sheep.berlios.de>

Author: adimasci
Date: 2005-11-09 09:42:54 +0100 (Wed, 09 Nov 2005)
New Revision: 353

Added:
   trunk/maay/data/liveresults.html
Modified:
   trunk/maay/webapplication.py
Log:
added an example (still in comment) of something that should serve
as a basis to implement the auto-update feature in the results page



Added: trunk/maay/data/liveresults.html
===================================================================
--- trunk/maay/data/liveresults.html	2005-11-09 08:37:16 UTC (rev 352)
+++ trunk/maay/data/liveresults.html	2005-11-09 08:42:54 UTC (rev 353)
@@ -0,0 +1,53 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xmlns:nevow="http://nevow.com/ns/nevow/0.1">
+  <head>
+    <title>Live results</title>
+    <link rel="stylesheet" type="text/css" href="maaycss"/>
+    <link rel="shortcut icon" href="images/maay.ico" />
+    <nevow:invisible nevow:render="liveglue" />
+    <script type='text/javascript' language='javascript'>
+function updateResults(source) {
+  alert("I'm alive .... alive !!!");
+  div = document.getElementById('resultsDiv');
+  div.innerHTML = source;
+}
+function startConnection() {
+  alert("Hello !");
+  var d = server.callRemote('foo');
+}
+    </script>
+
+  </head>
+ 
+  <body onload="startConnection()">
+  <!-- <a nevow:render="loginurl"><nevow:attr name="href"><nevow:slot name="loginurl" /></nevow:attr><nevow:slot name="actionlabel" /></a> -->
+  <div class="reSearch">
+    <form action="search" accept-charset="utf-8">
+      <table>
+        <tr>
+          <td><img src="images/smallmaay.png" /></td>
+          <td><input type="text" name="words" nevow:render="searchfield"><nevow:attr name="value" ><nevow:slot name="words" /></nevow:attr></input></td>
+          <td><input type="submit" class="searchButton" value="search" /></td>
+	</tr>
+      </table>
+    </form>      
+  </div>
+  <div class="message" nevow:render="title">Results for "<nevow:slot name="words" />"</div>
+  <div id="resultsDiv"></div>
+  <table class="results" nevow:render="sequence" nevow:data="results">
+    <tr nevow:pattern="item" nevow:render="row">
+      <td>
+	<div class="resultItem">
+	  <table><tr><td><div><nevow:attr name="class"><nevow:slot name="mime_type" /></nevow:attr></div></td><td><a class="docTitle"><nevow:attr name="href">/download?docid=<nevow:slot name="docid" />&amp;words=<nevow:slot name="words" /></nevow:attr><nevow:slot name="doctitle">DOC TITLE</nevow:slot></a></td></tr></table>
+	  <div class="resultDesc"><nevow:slot name="abstract" /></div>
+	  <span class="resultUrl"><nevow:attr name="href"><nevow:slot name="docurl" /></nevow:attr><nevow:slot name="docurl" /> - <nevow:slot name="readable_size" /> - <nevow:slot name="publication_date" /></span>
+	</div>
+      </td>
+    </tr>
+  </table>
+  <div class="prevnext"><a><nevow:attr name="href"
+  nevow:render="prevset_url"/>Previous</a> - <a><nevow:attr
+  name="href" nevow:render="nextset_url"/>Next</a></div>
+  </body>
+</html>
\ No newline at end of file

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-09 08:37:16 UTC (rev 352)
+++ trunk/maay/webapplication.py	2005-11-09 08:42:54 UTC (rev 353)
@@ -152,6 +152,7 @@
             return ResultsPage(self.maayId, localResults, query, offset)
         else:
             return ResultsPage(self.maayId, results, query, offset)
+        # return FACTORY.clientFactory(context, self.maayId, results, query)
 
     # XXX make sure that the requested document is really in the database
     # XXX don't forget to update the download statistics of the document
@@ -180,18 +181,19 @@
         context.fillSlots('msg', self.__msg)
         return context.tag
 
+
 class ResultsPage(MaayPage):
     """default results page"""
     bodyFactory = loaders.xmlfile(get_path_of('resultpage.html'))
-    addSlash = False
+    addSlash = False    
     
-    
     def __init__(self, maayId, results, query, offset):
         MaayPage.__init__(self, maayId)
         self.results = results
         self.query = query.words # unicode(query)
         self.offset = offset
 
+
     def data_results(self, context, data):
         return self.results
 
@@ -240,3 +242,107 @@
         context.fillSlots('publication_date', date.strftime('%d %b %Y'))
         return context.tag
 
+
+
+## from twisted.internet import reactor
+## from nevow import athena
+## class ResultsPage(athena.LivePage):
+##     """default results page"""
+##     child_maaycss = static.File(get_path_of('maay.css'))
+##     child_images = static.File(get_path_of('images/'))
+##     docFactory = loaders.xmlfile(get_path_of('liveresults.html'))
+##     addSlash = False
+    
+##     def __init__(self, maayId, results, query, offset):
+##         athena.LivePage.__init__(self)
+##         self.maayId = maayId
+##         self.results = results
+##         self.offset = offset
+##         self.query = query.words # unicode(query)
+##         reactor.callLater(5, self.updatePage)
+
+
+##     def data_results(self, context, data):
+##         return self.results
+
+##     def render_title(self, context, data):
+##         context.fillSlots('words', self.query)
+##         context.fillSlots('start_result', min(len(self.results), self.offset + 1))
+##         context.fillSlots('end_result', self.offset + len(self.results))
+##         return context.tag
+
+##     def render_searchfield(self, context, data):
+##         context.fillSlots('words', self.query)
+##         return context.tag
+
+##     def render_prevset_url(self, context, data):
+##         words = WORDS_RGX.findall(normalizeText(unicode(context.arg('words'), 'utf-8')))
+##         offset = int(context.arg('offset', 0))
+##         if offset:
+##             offset -= 15
+##         return 'search?words=%s&offset=%s' % ('+'.join(words), offset)
+
+##     def render_nextset_url(self, context, data):
+##         words = WORDS_RGX.findall(normalizeText(unicode(context.arg('words'), 'utf-8')))
+##         offset = int(context.arg('offset', 0)) + 15
+##         return 'search?words=%s&offset=%s' % ('+'.join(words), offset)
+
+    
+##     def render_row(self, context, data):
+##         document = data
+##         words = self.query.split()
+##         context.fillSlots('mime_type', re.sub("/", "_", document.mime_type))
+##         context.fillSlots('doctitle',
+##                           tags.xml(boldifyText(document.title, words)))
+##         # XXX abstract attribute should be a unicode string
+##         try:
+##             abstract = makeAbstract(document.text, words)
+##             abstract = normalize_text(unicode(abstract))
+##         except Exception, exc:
+##             print exc
+##             abstract = u'No abstract available for this document [%s]' % exc
+##         context.fillSlots('abstract', tags.xml(abstract))
+##         context.fillSlots('docid', document.db_document_id)
+##         context.fillSlots('docurl', tags.xml(boldifyText(document.url, words)))
+##         context.fillSlots('words', self.query)
+##         context.fillSlots('readable_size', document.readable_size())
+##         date = datetime.fromtimestamp(document.publication_time)
+##         context.fillSlots('publication_date', date.strftime('%d %b %Y'))
+##         return context.tag
+
+
+##     def updatePage(self):
+##         print "ZOUuuuuuuuuuuuuuuuuuuuuuuuuuuu"
+##         source = u"<h3>YO !!!!!!</h3>"
+##         self.callRemote('updateResults', source)
+
+##     def xmlrpc_foo(self):
+##         print "le client m'appelle !!"
+##         return 0
+
+
+## class ResultsPageFactory(athena.LivePageFactory):
+##     def clientFactory(self, context, maayId, results, query):
+##         livepageId = inevow.IRequest(context).getHeader('Livepage-Id')
+##         if livepageId is not None:
+##             livepage = self.clients.get(livepageId)
+##             if livepage is not None:
+##                 # A returning, known client.  Give them their page.
+##                 return livepage
+##             else:
+##                 # A really old, expired client.  Or maybe an evil
+##                 # hax0r.  Give them a fresh new page and log the
+##                 # occurrence.
+##                 if self.noisy:
+##                     log.msg("Unknown Livepage-Id: %r" % (livepageId,))
+##                 return self._manufactureClient(maayId, results, query)
+##         else:
+##             # A brand new client.  Give them a brand new page!
+##             return self._manufactureClient(maayId, results, query)
+
+##     def _manufactureClient(self, maayId, results, query):
+##         cl = self._pageFactory(maayId, results, query)
+##         cl.factory = self
+##         return cl
+
+## FACTORY = ResultsPageFactory(ResultsPage)



From afayolle at berlios.de  Wed Nov  9 09:44:50 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Wed, 9 Nov 2005 09:44:50 +0100
Subject: [Maay-svncheckins] r354 - trunk/maay
Message-ID: <200511090844.jA98ioKN030885@sheep.berlios.de>

Author: afayolle
Date: 2005-11-09 09:44:45 +0100 (Wed, 09 Nov 2005)
New Revision: 354

Modified:
   trunk/maay/querier.py
Log:
a few stylistic changes

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-09 08:42:54 UTC (rev 353)
+++ trunk/maay/querier.py	2005-11-09 08:44:45 UTC (rev 354)
@@ -31,8 +31,8 @@
 
 from logilab.common.db import get_dbapi_compliant_module
 
-from maay.dbentity import FutureDocument, Document, FileInfo, DocumentProvider, \
-     DocumentScore, Word, Node
+from maay.dbentity import FutureDocument, Document, FileInfo, \
+     DocumentProvider, DocumentScore, Word, Node
 from maay.texttool import normalizeText, WORDS_RGX, MAX_STORED_SIZE
 
 class MaayAuthenticationError(Exception):
@@ -93,7 +93,8 @@
 
     searchInPrivate = False
     
-    def __init__(self, host='', database='', user='', password='', connection=None):
+    def __init__(self, host='', database='', user='', password='',
+                 connection=None):
         if connection is None:
             dbapiMod = get_dbapi_compliant_module('mysql')
             try:
@@ -110,8 +111,8 @@
             except Exception, e:
                 import traceback
                 traceback.print_exc()
-                raise MaayAuthenticationError("Failed to authenticate user %r, cause is %s"
-                                              % (user, e))
+                raise MaayAuthenticationError(
+                    "Failed to authenticate user %r [%s]" % (user, e))
         self._cnx = connection
 
     def _execute(self, query, args=None):
@@ -190,7 +191,8 @@
             db_word.commit(cursor, update=False)
         
     def _getScoresDict(self, cursor, db_document_id):
-        _scores = DocumentScore.selectWhere(cursor, db_document_id=db_document_id)
+        _scores = DocumentScore.selectWhere(cursor,
+                                            db_document_id=db_document_id)
         db_scores = {}
         while _scores:
             score = _scores.pop()
@@ -237,11 +239,11 @@
                                                       word=word)[0]
 
         for winfo in wordInfo.itervalues():
-            winfo.download_count += 1/len(words)
+            winfo.download_count += 1 / len(words)
             winfo.commit(cursor, update=True)
 
         for word,score in scores.iteritems():
-            score.download_count = max(0, score.download_count) + 1/len(words)
+            score.download_count = max(0, score.download_count) + 1 / len(words)
             winfo_downloads = wordInfo[word].download_count
             
             score.popularity = score.download_count / winfo_downloads
@@ -257,7 +259,8 @@
 
     def registerNode(self, nodeId, ip, port, bandwidth, lastSeenTime=None):
         """this will be used as a callback in registrationclient/login"""
-        print "AnonymousQuerier registerNode (callback) %s %s:%s" % (nodeId, ip, port)
+        print "AnonymousQuerier registerNode (callback) %s %s:%s" % \
+                                                             (nodeId, ip, port)
         lastSeenTime = lastSeenTime or int(time.time())
         cursor = self._cnx.cursor()
         node = Node.selectOrInsertWhere(cursor, node_id=nodeId)[0]
@@ -313,7 +316,8 @@
     def removeFileInfo(self, filename):
         """remove filename from the database `files` table"""
         cursor = self._cnx.cursor()
-        rows = cursor.execute('DELETE FROM files WHERE file_name = %s', filename)
+        rows = cursor.execute('DELETE FROM files WHERE file_name = %s',
+                              filename)
         cursor.close()
         self._cnx.commit()
         #print "removed %s" % filename
@@ -326,12 +330,12 @@
         cursor = self._cnx.cursor()
         query1 = """DELETE documents
                     FROM documents LEFT JOIN files
-                                   ON documents.db_document_id = files.db_document_id
+                             ON documents.db_document_id = files.db_document_id
                     WHERE files.db_document_id IS NULL"""
         rows = cursor.execute(query1)
         query2 = """DELETE document_scores
                     FROM document_scores LEFT JOIN documents
-                                   ON document_scores.db_document_id = documents.db_document_id
+                       document_scores.db_document_id = documents.db_document_id
                     WHERE documents.db_document_id IS NULL"""
         rows += cursor.execute(query2)
         cursor.close()
@@ -343,7 +347,8 @@
         """Inserts or update information in table documents,
         file_info, document_score and word"""
         # XXX Decide if we can compute the content_hash and mime_type
-        # ourselves or if the indexer should do it and pass the values as an argument
+        # ourselves or if the indexer should do it and
+        # pass the values as an argument
         cursor = self._cnx.cursor()
         # insert or update in table file_info
         fileinfo = FileInfo.selectWhere(cursor, file_name=futureDoc.filename)
@@ -376,11 +381,13 @@
         else:
             # file unknown
             # try to find a Document with same hash value
-            doc = Document.selectWhere(cursor, document_id=futureDoc.content_hash)
+            doc = Document.selectWhere(cursor,
+                                       document_id=futureDoc.content_hash)
             if doc:
                 doc = doc[0]
                 doc.state = futureDoc.state
-                doc.publication_time = max(doc.publication_time, futureDoc.lastModificationTime)
+                doc.publication_time = max(doc.publication_time,
+                                           futureDoc.lastModificationTime)
                 doc.commit(cursor, update=True)
             else:
                 doc = self._createDocument(cursor, futureDoc)



From afayolle at berlios.de  Wed Nov  9 10:41:41 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Wed, 9 Nov 2005 10:41:41 +0100
Subject: [Maay-svncheckins] r355 - trunk/maay
Message-ID: <200511090941.jA99ffpE021562@sheep.berlios.de>

Author: afayolle
Date: 2005-11-09 10:41:28 +0100 (Wed, 09 Nov 2005)
New Revision: 355

Modified:
   trunk/maay/dbstats.py
Log:
play with matplotlib

Modified: trunk/maay/dbstats.py
===================================================================
--- trunk/maay/dbstats.py	2005-11-09 08:44:45 UTC (rev 354)
+++ trunk/maay/dbstats.py	2005-11-09 09:41:28 UTC (rev 355)
@@ -18,7 +18,7 @@
 """Helper script to display how many rows are stored in the various maay tables on localhost"""
 
 from MySQLdb import connect
-from Scientific.Statistics.Histogram import Histogram
+from pylab import hist, show
 
 cnx = connect(user='maay', passwd='maay', use_unicode=True, db='maay')
 cursor = cnx.cursor()
@@ -32,14 +32,12 @@
     size[table] = nbRows
     print "Table %s: %d rows" % (table, nbRows)
 
-r = """SELECT count(word) from document_scores group by word"""
+r = """SELECT count(word) FROM document_scores GROUP BY word LIMIT 10000"""
 cursor.execute(r)
-h = Histogram(cursor.fetchall(), 10)
+data = [int(e[0]) for e in cursor.fetchall() if int(e[0])!=1]
+print data
+h = hist(data, 1000)
+show()
 
-for i in range(10):
-    print h[i]
-
-
-
 cnx.close()
     



From adimasci at berlios.de  Wed Nov  9 10:45:41 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Wed, 9 Nov 2005 10:45:41 +0100
Subject: [Maay-svncheckins] r356 - trunk/maay
Message-ID: <200511090945.jA99jfjC022186@sheep.berlios.de>

Author: adimasci
Date: 2005-11-09 10:45:37 +0100 (Wed, 09 Nov 2005)
New Revision: 356

Modified:
   trunk/maay/TODO.txt
Log:
oops, forgot to checkin that 2 weeks ago

Modified: trunk/maay/TODO.txt
===================================================================
--- trunk/maay/TODO.txt	2005-11-09 09:41:28 UTC (rev 355)
+++ trunk/maay/TODO.txt	2005-11-09 09:45:37 UTC (rev 356)
@@ -9,7 +9,7 @@
 #B   X v?rifier qu'on utilise de l'UTF-8 partout (2005.09.27)
 #B   X g?rer les documents compress?s (2005.09.28)
 #B   X Regarder la conversion pdf->html (2005.09.28)
-#B   _ utiliser des macros pour g?rer l'aspect commun de toutes les pages (2005.10.18)
+#B   X utiliser des macros pour g?rer l'aspect commun de toutes les pages (2005.10.18)
 #B   _ s'assurer qu'on g?re correctement les child_* des diff?rentes ressources (2005.10.18)
 
 * Notes



From afayolle at berlios.de  Wed Nov  9 10:45:50 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Wed, 9 Nov 2005 10:45:50 +0100
Subject: [Maay-svncheckins] r357 - trunk/maay
Message-ID: <200511090945.jA99joVM022225@sheep.berlios.de>

Author: afayolle
Date: 2005-11-09 10:45:48 +0100 (Wed, 09 Nov 2005)
New Revision: 357

Modified:
   trunk/maay/converter.py
Log:
work around weird crash

Modified: trunk/maay/converter.py
===================================================================
--- trunk/maay/converter.py	2005-11-09 09:45:37 UTC (rev 356)
+++ trunk/maay/converter.py	2005-11-09 09:45:48 UTC (rev 357)
@@ -185,11 +185,14 @@
             else:
                 raise IndexationFailure('Unable to index %r' % filepath)
         finally:
-            if osp.isfile(outputFile):
-                os.remove(outputFile)
-            if osp.isfile(inputFile):
-                os.remove(inputFile)
-            os.rmdir(outputDir)
+            try:
+                if osp.isfile(outputFile):
+                    os.remove(outputFile)
+                if osp.isfile(inputFile):
+                    os.remove(inputFile)
+                os.rmdir(outputDir)
+            except OSError:
+                print "leaving %s behind" % outputDir
 
 
 class PDFConverter(CommandBasedConverter, HTMLConverter):



From afayolle at berlios.de  Wed Nov  9 10:46:11 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Wed, 9 Nov 2005 10:46:11 +0100
Subject: [Maay-svncheckins] r358 - trunk/maay
Message-ID: <200511090946.jA99kBxb022292@sheep.berlios.de>

Author: afayolle
Date: 2005-11-09 10:46:03 +0100 (Wed, 09 Nov 2005)
New Revision: 358

Modified:
   trunk/maay/server.py
Log:
removed unused method

Modified: trunk/maay/server.py
===================================================================
--- trunk/maay/server.py	2005-11-09 09:45:48 UTC (rev 357)
+++ trunk/maay/server.py	2005-11-09 09:46:03 UTC (rev 358)
@@ -349,8 +349,8 @@
         #d.addErrback(self._forceLoginPage)
         return d
 
-    def _forceLoginPage(self, *args):
-        return LoginForm(), ''
+##     def _forceLoginPage(self, *args):
+##         return LoginForm(), ''
     
     
 def run():



From adimasci at berlios.de  Wed Nov  9 10:51:23 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Wed, 9 Nov 2005 10:51:23 +0100
Subject: [Maay-svncheckins] r359 - trunk/maay
Message-ID: <200511090951.jA99pNKs022592@sheep.berlios.de>

Author: adimasci
Date: 2005-11-09 10:51:22 +0100 (Wed, 09 Nov 2005)
New Revision: 359

Modified:
   trunk/maay/presenceclient.py
Log:
try to avoid double underscores when not needed

Modified: trunk/maay/presenceclient.py
===================================================================
--- trunk/maay/presenceclient.py	2005-11-09 09:46:03 UTC (rev 358)
+++ trunk/maay/presenceclient.py	2005-11-09 09:51:22 UTC (rev 359)
@@ -25,7 +25,7 @@
     """
  
     def __init__(self, nodePresenceCallback):
-        self.__callback = nodePresenceCallback
+        self._callback = nodePresenceCallback
         self._lineCount = 0
         
     def notify(self, nodeId, ip, port, bandwidth) :
@@ -59,7 +59,7 @@
             return
         time, nodeId, nodeIP, nodePort, nodeBandwidth = data.split('\t')
         lastSeenTime = parseTime(time)
-        self.__callback(nodeId, nodeIP, nodePort, nodeBandwidth, lastSeenTime)
+        self._callback(nodeId, nodeIP, nodePort, nodeBandwidth, lastSeenTime)
         
 
 def parseTime(isodatetime):



From afayolle at berlios.de  Wed Nov  9 10:52:11 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Wed, 9 Nov 2005 10:52:11 +0100
Subject: [Maay-svncheckins] r360 - trunk/maay
Message-ID: <200511090952.jA99qBoS022726@sheep.berlios.de>

Author: afayolle
Date: 2005-11-09 10:52:10 +0100 (Wed, 09 Nov 2005)
New Revision: 360

Modified:
   trunk/maay/indexer.py
   trunk/maay/texttool.py
Log:
used filesystem encoding to handle file names

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-09 09:51:22 UTC (rev 359)
+++ trunk/maay/indexer.py	2005-11-09 09:52:10 UTC (rev 360)
@@ -68,6 +68,7 @@
         password = self.indexerConfig.password
         host = self.indexerConfig.host
         port = self.indexerConfig.port
+        self.filesystemEncoding = sys.getfilesystemencoding()
         print "Indexer connecting to server %s:%s" % (host, port)
         self.serverProxy = ServerProxy('http://%s:%s' % (host, port),
                                        allow_none=True,
@@ -102,7 +103,9 @@
         for filename in fileset:
             if self.verbose:
                 print "Requesting unindexation of %s" % filename
-            self.serverProxy.removeFileInfo(self.cnxId, filename)
+            self.serverProxy.removeFileInfo(self.cnxId,
+                                            unicode(filename,
+                                                    self.filesystemEncoding))
         if self.verbose:
             print "Requesting cleanup of unreferenced documents"
         self.serverProxy.removeUnreferencedDocuments(self.cnxId)
@@ -128,6 +131,7 @@
             state = Document.PUBLISHED_STATE
             
         for filename in self.getFileIterator(isPrivate):
+            print filename
             existingFiles.add(filename)
             if not self.isIndexable(filename):
                 continue
@@ -148,7 +152,9 @@
                 docId = makeDocumentId(filename)
                 mime_type = mimetypes.guess_type(filename)[0]
 
-                self.indexDocument(FutureDocument(filename=filename, title=title, text=text,
+                self.indexDocument(FutureDocument(filename=unicode(filename,
+                                                                   self.filesystemEncoding),
+                                                  title=title, text=text,
                                                   fileSize=fileSize,
                                                   lastModificationTime=lastModificationTime,
                                                   content_hash=docId, mime_type=mime_type,
@@ -156,6 +162,7 @@
         return existingFiles
         
     def getLastIndexationTimeAndState(self, filename):
+        filename = unicode(filename, self.filesystemEncoding)
         answer = self.serverProxy.lastIndexationTimeAndState(self.cnxId, filename)
         if answer is None:
             raise MaayAuthenticationError("Bad cnxId sent to the server")
@@ -204,10 +211,10 @@
             # test path not in self.skipped (dummy config files)
             if path not in self.skipped:
                 for dirpath, dirnames, filenames in os.walk(path):
-##                     print "looking in", dirpath
+                    print "looking in", dirpath
                     self._removeSkippedDirnames(dirpath, dirnames)
                     for filename in filenames:
-                        if os.access(os.path.join(dirpath, filename), os.R_OK): # Can we open it ?
+                        if os.access(os.path.join(dirpath, filename), os.R_OK): 
                             yield os.path.join(dirpath, filename)
                     
     def _removeSkippedDirnames(self, dirpath, dirnames):

Modified: trunk/maay/texttool.py
===================================================================
--- trunk/maay/texttool.py	2005-11-09 09:51:22 UTC (rev 359)
+++ trunk/maay/texttool.py	2005-11-09 09:52:10 UTC (rev 360)
@@ -23,6 +23,7 @@
 from HTMLParser import HTMLParser, HTMLParseError
 import codecs
 import re
+import sys
 import mimetypes
 import gzip
 import bz2
@@ -143,7 +144,7 @@
         try:
             title, result, links, offset = self.parseString(stream.read())
             if not title:
-                title = unicode(pristineFilename) 
+                title = unicode(pristineFilename, sys.getfilesystemencoding()) 
             return title, result, links, offset 
         finally:
             stream.close()



From afayolle at berlios.de  Wed Nov  9 11:30:01 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Wed, 9 Nov 2005 11:30:01 +0100
Subject: [Maay-svncheckins] r361 - trunk/maay
Message-ID: <200511091030.jA9AU1e5026150@sheep.berlios.de>

Author: afayolle
Date: 2005-11-09 11:30:01 +0100 (Wed, 09 Nov 2005)
New Revision: 361

Modified:
   trunk/maay/indexer.py
Log:
remove spurious print statement

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-09 09:52:10 UTC (rev 360)
+++ trunk/maay/indexer.py	2005-11-09 10:30:01 UTC (rev 361)
@@ -131,7 +131,6 @@
             state = Document.PUBLISHED_STATE
             
         for filename in self.getFileIterator(isPrivate):
-            print filename
             existingFiles.add(filename)
             if not self.isIndexable(filename):
                 continue



From aurelienc at berlios.de  Wed Nov  9 11:34:44 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Wed, 9 Nov 2005 11:34:44 +0100
Subject: [Maay-svncheckins] r362 - trunk/maay
Message-ID: <200511091034.jA9AYiFF027010@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-09 11:34:37 +0100 (Wed, 09 Nov 2005)
New Revision: 362

Modified:
   trunk/maay/p2pquerier.py
   trunk/maay/rpc.py
Log:
Lot of bug fixes. Seems to work (2 nodes).


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-09 10:30:01 UTC (rev 361)
+++ trunk/maay/p2pquerier.py	2005-11-09 10:34:37 UTC (rev 362)
@@ -32,7 +32,7 @@
        item is seen first)
     """
     if not SEQ_DICT.has_key(item):
-        SEQ_DICT[item] = 0
+        SEQ_DICT[item] = 1
     count = SEQ_DICT[item]
     SEQ_DICT[item] = count + 1
     return count
@@ -53,7 +53,7 @@
         if qid:
             self.qid = qid
         else:
-            self.qid = incrementSequence(sender.__hash__)
+            self.qid = incrementSequence(sender.__hash__())
         self.sender = sender
         self.port = port
         self.ttl = ttl
@@ -64,9 +64,20 @@
         self.ttl -= 1
 
     def addMatch(self, document):
-        self.documents_ids.add(document.document_id)
+        """this function suffers from horrible polymorphism
+           sometimes we get a Document, sometimes a plain dict
+        """
+        if isinstance(document, dict):
+            self.documents_ids.add(document['document_id'])
+        else:
+            self.documents_ids.add(document.document_id)
 
     def isKnown(self, document):
+        """this function suffers from horrible polymorphism
+           sometimes we get a Document, sometimes a plain dict
+        """
+        if isinstance(document, dict):
+            return document['document_id'] in self.documents_ids
         return document.document_id in self.documents_ids
  
     def asKwargs(self):
@@ -93,7 +104,7 @@
     """Politely displays any problem (bug, unavailability) related
     to an attempt to send a query.
     """
-    print " ... problem sending the query :", args
+    print " ... problem sending the query : %s" % (args,)
 
 class P2pQuerier:
     """The P2pQuerier class is responsible for managing P2P queries.
@@ -121,7 +132,12 @@
         """
         :type query: `maay.p2pquerier.P2pQuery`
         """        
-        print "P2pQuerier sendQuery : %s" % query
+        print "P2pQuerier sendQuery %s : %s" % (query.qid, query)
+        if self._sentQueries.has_key(query.qid):
+            print " ... my bad, we were going to send query %s to ourselves ..." \
+                  % query.qid
+            return
+        #FIXME: avoid to send query to the originator
         for neighbor in self._selectTargetNeighbors(query):
             proxy = Proxy(str(neighbor.getRpcUrl())) 
             d = proxy.callRemote('distributedQuery', query.asKwargs())
@@ -131,11 +147,13 @@
             print " ... sent to %s" % neighbor
 
     def addAnswerCallback(self, callback):
+        print "P2pQuerier : registering callback %s for results" \
+              % callback
         P2pQuerier._answerCallbacks.append(callback)
 
     def _notifyAnswerCallbacks(self, results):
         for cb in P2pQuerier._answerCallbacks:
-            apply(cb, results)
+            cb(results)
 
     def receiveQuery(self, query):
         """
@@ -144,11 +162,13 @@
         print "P2pQuerier receiveQuery : %s" % query
         if query.qid in self._receivedQueries or \
            query.qid in self._sentQueries:
-            print " ... we already know this query, this ends the trip"
+            print " ... we already know query %s, this ends the trip" % query.qid
             return
-        
-        self._receivedQueries[query.qid] = query 
 
+        if query.qid not in self._sentQueries:
+            print " ... %s is a new query, let's work ..." % query.qid
+            self._receivedQueries[query.qid] = query 
+
         query.hop()        
         if query.ttl > 0:
             self.sendQuery(query)
@@ -162,9 +182,15 @@
         and thus must not be recorded in the database"""
         print "P2pQuerier relayAnswer : %s documents" % len(answer.documents)
         query = self._receivedQueries.get(answer.queryId)
-        if query is None: 
-            print " ... bailing out : we had no query for this answer"
-            return
+        if query:
+            print " ... relaying Answer to originator ..."
+        else:
+            query = self._sentQueries.get(answer.queryId)
+            if query:
+                print " ... originator : we got mail :) ... "
+            else:
+                print " ... bailing out (bug?) : we had no query for this answer"
+                return
         
         toSend = []
         

Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-09 10:30:01 UTC (rev 361)
+++ trunk/maay/rpc.py	2005-11-09 10:34:37 UTC (rev 362)
@@ -54,6 +54,7 @@
         MaayRPCServer.theP2pQuerier = P2pQuerier(nodeId, portal.webQuerier)
 
     def render(self, request):
+        #XXX: check the correctness of this stuff
         self._lastClient = request.transport.getPeer()
         return XMLRPC.render(self, request)
 
@@ -146,23 +147,27 @@
 
         return 0
 
-    #def xmlrpc_distributedQuery(self, queryId, sender, ttl, words, mime_type):
     def xmlrpc_distributedQuery(self, queryDict):
+        """On node has sent a query (P2pQuerier.sendQuery)
+        """
         print "MaayRPCServer distributedQuery : %s " % queryDict
-        query = P2pQuery(queryDict['sender'],
-                         queryDict['port'],
-                         Query(queryDict['words'], filetype=queryDict['mime_type']),
-                         queryDict['ttl'],
-                         queryDict['qid'])
+        query = P2pQuery(sender=queryDict['sender'],
+                         port=queryDict['port'],
+                         query=Query(queryDict['words'],
+                                     filetype=queryDict['mime_type']),
+                         ttl=queryDict['ttl'],
+                         qid=queryDict['qid'])
         query.host = self._lastClient.host
+        print " ... QID : %s %s" % (queryDict['qid'], query.qid)
+        assert(queryDict['qid'] == query.qid)
         # schedule the query for later processing and return immediately
         # this enables the sender to query several nodes in a row
         d = reactor.callLater(.01, self.getP2pQuerier().receiveQuery, query)
         return self.nodeId
 
     def xmlrpc_distributedQueryAnswer(self, queryId, senderId, documents):
-        print "MaayRPCServer distributedQueryAnswer : %s %s %s" % \
-              (queryId, senderId, documents)
+        print "MaayRPCServer distributedQueryAnswer : %s %s, %s document(s)" % \
+              (queryId, senderId, len(documents))
         answer = P2pAnswer(queryId, documents)
         d = reactor.callLater(.01, self.getP2pQuerier().relayAnswer, answer)
         return self.nodeId



From adimasci at berlios.de  Wed Nov  9 11:36:39 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Wed, 9 Nov 2005 11:36:39 +0100
Subject: [Maay-svncheckins] r363 - in trunk/maay: . test
Message-ID: <200511091036.jA9Aad2V027284@sheep.berlios.de>

Author: adimasci
Date: 2005-11-09 11:36:38 +0100 (Wed, 09 Nov 2005)
New Revision: 363

Modified:
   trunk/maay/test/test_texttool.py
   trunk/maay/texttool.py
Log:
replaced cStringIOs with simple List buffers objects that expose
the same basic interface, but accept unicode strings that cannot
be encoded in ascii. Performance should not be affected.


Modified: trunk/maay/test/test_texttool.py
===================================================================
--- trunk/maay/test/test_texttool.py	2005-11-09 10:34:37 UTC (rev 362)
+++ trunk/maay/test/test_texttool.py	2005-11-09 10:36:38 UTC (rev 363)
@@ -23,7 +23,8 @@
 from os.path import join, dirname
 
 from maay.texttool import MaayHTMLParser, TextParser, guessEncoding, \
-     universalOpen, untagText, normalizeText, removeControlChar, makeAbstract
+     universalOpen, untagText, normalizeText, removeControlChar, makeAbstract, \
+     LStringIO
 
 RAW_TEXT = u"foo ?t? bar baz top bim bam boum"
 
@@ -181,6 +182,25 @@
         self.assertEquals(u"\t\n\r\uFFEFtoto\U00011234", norm)
         self.assertEquals(unicode, type(norm))
 
+    def testBasicLStringIO(self):
+        buf = LStringIO()
+        buf.write('foo')
+        buf.write('bar')
+        self.assertEquals(buf.getvalue(), 'foobar')
+        buf.write(u'baz')
+        self.assertEquals(buf.getvalue(), 'foobarbaz')
+
+    def testLStringIOWithUnicodeStrings(self):
+        buf = LStringIO()
+        buf.write(unicode('?t?', 'iso-8859-1'))
+        buf.write('foo')
+        buf.write(u'bar')
+        self.assertEquals(buf.getvalue(), unicode('?t?foobar', 'iso-8859-1'))
+        buf.write(u'baz')
+        self.assertEquals(buf.getvalue(), unicode('?t?foobarbaz', 'iso-8859-1'))
+
+
+
 class AbstractTC(unittest.TestCase):
     text = "This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA"
 

Modified: trunk/maay/texttool.py
===================================================================
--- trunk/maay/texttool.py	2005-11-09 10:34:37 UTC (rev 362)
+++ trunk/maay/texttool.py	2005-11-09 10:36:38 UTC (rev 363)
@@ -27,9 +27,21 @@
 import mimetypes
 import gzip
 import bz2
-from cStringIO import StringIO
 from sets import Set
 
+class LStringIO(list):
+    """simple StringIO-like objects using a list
+
+    Note: LStringIO should be more or less equivalent to cStrinIO speed-wise
+          but has the great advantage to accept any unicode string
+    """
+    def __init__(self):
+        list.__init__(self)
+    write = list.append
+    def getvalue(self):
+        return u''.join(self)
+
+
 from maay.image import get_ustring_from_exif, make_thumbnail, \
      ImageConfiguration as ImConfig, NoThumbnailsDir, ThumbnailCreationError
 
@@ -329,7 +341,7 @@
 def removeSpace(text):
     return text
     rgx = re.compile('\s+')
-    s = StringIO()
+    s = LStringIO()
     lastStart = 0
     end = 0
     for occurence in rgx.finditer(text):
@@ -341,19 +353,19 @@
         lastStart = end
 
     s.write(text[end:])
-    return u"%s" % s.getvalue()
+    return s.getvalue()
 
 
 def boldifyText(text, words):
     rgx = re.compile('|'.join(words), re.I)
-    s = StringIO()
+    s = LStringIO()
     lastStart = 0
     end = 0
     for occurence in rgx.finditer(text):
         wordFound = occurence.group(0)
         start, end = occurence.start(), occurence.end()
         s.write(text[lastStart:start])
-        s.write("<b>%s</b>" % wordFound)
+        s.write(u"<b>%s</b>" % wordFound)
         lastStart = end
 
     s.write(text[end:])
@@ -437,7 +449,7 @@
         else:
             return text
 
-    s = StringIO()
+    s = LStringIO()
     start = -1
     last_position = -100
     last_word = 0
@@ -459,7 +471,7 @@
                     end -= 1
 
             if start > 0:
-                s.write(" <b>...</b> ")
+                s.write(u" <b>...</b> ")
             s.write(boldifyText(text[start:end], words))
             
         start = position - EXCERPT_MAX_HALF_LEN
@@ -474,7 +486,7 @@
 
 
     if start > 0:
-        s.write(" <b>...</b> ")
+        s.write(u" <b>...</b> ")
     end = last_position + EXCERPT_MAX_HALF_LEN + len(word)
     if end >= text_length:
         end = text_length
@@ -484,6 +496,6 @@
     s.write(boldifyText(text[start:end], words))
 
     if end < text_length:
-        s.write(" <b>...</b>")
+        s.write(u" <b>...</b>")
 
-    return u"%s" % s.getvalue()
+    return s.getvalue()



From afayolle at berlios.de  Wed Nov  9 11:37:19 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Wed, 9 Nov 2005 11:37:19 +0100
Subject: [Maay-svncheckins] r364 - trunk/maay
Message-ID: <200511091037.jA9AbJAB027727@sheep.berlios.de>

Author: afayolle
Date: 2005-11-09 11:37:19 +0100 (Wed, 09 Nov 2005)
New Revision: 364

Modified:
   trunk/maay/converter.py
Log:
handle errors such as 'no space left on device' during uncompression of files

Modified: trunk/maay/converter.py
===================================================================
--- trunk/maay/converter.py	2005-11-09 10:36:38 UTC (rev 363)
+++ trunk/maay/converter.py	2005-11-09 10:37:19 UTC (rev 364)
@@ -166,15 +166,18 @@
 
         outputDir = mkdtemp()
 
-        inputFile = uncompressFile (filepath, outputDir)
-        outputFile = osp.join(outputDir, osp.basename(filepath))
+        try:
+            try:
+                inputFile = uncompressFile (filepath, outputDir)
+            except IOError,exc:
+                raise IndexationFailure("Unable to index %r [%s]" % (filename, exc))
+            outputFile = osp.join(outputDir, osp.basename(filepath))
 
-        command_args = {'input' : inputFile, 'output' : outputFile}
-        cmd = self.COMMAND % command_args
+            command_args = {'input' : inputFile, 'output' : outputFile}
+            cmd = self.COMMAND % command_args
 
-        #print "Executing %r" % cmd
-        errcode = os.system(cmd)
-        try:
+            #print "Executing %r" % cmd
+            errcode = os.system(cmd)
             if errcode == 0: # OK
                 parser = self.getParser()
                 try:



From afayolle at berlios.de  Wed Nov  9 11:45:19 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Wed, 9 Nov 2005 11:45:19 +0100
Subject: [Maay-svncheckins] r365 - trunk/maay
Message-ID: <200511091045.jA9AjJOr029751@sheep.berlios.de>

Author: afayolle
Date: 2005-11-09 11:45:05 +0100 (Wed, 09 Nov 2005)
New Revision: 365

Modified:
   trunk/maay/texttool.py
Log:
one more filename encoding bug

Modified: trunk/maay/texttool.py
===================================================================
--- trunk/maay/texttool.py	2005-11-09 10:37:19 UTC (rev 364)
+++ trunk/maay/texttool.py	2005-11-09 10:45:05 UTC (rev 365)
@@ -237,7 +237,7 @@
         TODO: port original code from htmltotext
         :param encoding: if None, then need to be guessed
         """
-        title = unicode(pristineFilename)
+        title = unicode(pristineFilename, sys.getfilesystemencoding())
         try:
             result = 'EXIF : ' + get_ustring_from_exif(filepath)
             try:



From afayolle at berlios.de  Wed Nov  9 12:45:33 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Wed, 9 Nov 2005 12:45:33 +0100
Subject: [Maay-svncheckins] r366 - trunk/maay
Message-ID: <200511091145.jA9BjXKU020045@sheep.berlios.de>

Author: afayolle
Date: 2005-11-09 12:45:18 +0100 (Wed, 09 Nov 2005)
New Revision: 366

Modified:
   trunk/maay/rpc.py
Log:
use anonymous querier for P2P requests

Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-09 10:45:05 UTC (rev 365)
+++ trunk/maay/rpc.py	2005-11-09 11:45:18 UTC (rev 366)
@@ -51,7 +51,7 @@
         self._sessions[ANONYMOUS_AVATARID] = portal.anonymousQuerier
         self._lastClient = None
         #self._p2pQuerier = P2pQuerier(nodeId, portal.webQuerier)
-        MaayRPCServer.theP2pQuerier = P2pQuerier(nodeId, portal.webQuerier)
+        MaayRPCServer.theP2pQuerier = P2pQuerier(nodeId, portal.anonymousQuerier)
 
     def render(self, request):
         #XXX: check the correctness of this stuff



From afayolle at berlios.de  Wed Nov  9 13:20:03 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Wed, 9 Nov 2005 13:20:03 +0100
Subject: [Maay-svncheckins] r367 - trunk/maay
Message-ID: <200511091220.jA9CK2TS004408@sheep.berlios.de>

Author: afayolle
Date: 2005-11-09 13:19:56 +0100 (Wed, 09 Nov 2005)
New Revision: 367

Modified:
   trunk/maay/dbentity.py
Log:
newer documents are returned first

Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-09 11:45:18 UTC (rev 366)
+++ trunk/maay/dbentity.py	2005-11-09 12:19:56 UTC (rev 367)
@@ -258,6 +258,7 @@
                  " %s "
                  "GROUP BY DS.db_document_id "
                  "HAVING count(DS.db_document_id) = %%s "
+                 "ORDER BY D.publication_time DESC "
                  "LIMIT 15 OFFSET %s" % \
                  (', '.join(['%s'] * len(words)), restriction, offset))
         return query, words + restrictionParams + [len(words)]



From afayolle at berlios.de  Wed Nov  9 13:24:55 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Wed, 9 Nov 2005 13:24:55 +0100
Subject: [Maay-svncheckins] r368 - trunk/maay
Message-ID: <200511091224.jA9COt0x006094@sheep.berlios.de>

Author: afayolle
Date: 2005-11-09 13:24:53 +0100 (Wed, 09 Nov 2005)
New Revision: 368

Modified:
   trunk/maay/query.py
Log:
removed cruft

Modified: trunk/maay/query.py
===================================================================
--- trunk/maay/query.py	2005-11-09 12:19:56 UTC (rev 367)
+++ trunk/maay/query.py	2005-11-09 12:24:53 UTC (rev 368)
@@ -23,18 +23,12 @@
 
 class Query(object):
     restrictions = ('filetype', 'filename', 'searchtype')
-    def __init__(self, words, offset=0, filetype=None, filename=None, searchtype='local'):
+    def __init__(self, words, offset=0, filetype=None, filename=None):
         self.words = words # unicode string 
         self.offset = offset
         self.filetype = normalizeMimetype(filetype)
         self.filename = filename
-        if searchtype.lower() not in ('local', 'p2p'):
-            searchtype = 'local'
-        self.searchtype = searchtype.lower()
 
-    def isDistributed(self):
-        return self.searchtype == 'p2p'
-
     def fromRawQuery(rawQuery, offset=0):
         """:type rawQuery: str"""
         rawWords = rawQuery.split()



From afayolle at berlios.de  Wed Nov  9 13:28:40 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Wed, 9 Nov 2005 13:28:40 +0100
Subject: [Maay-svncheckins] r369 - trunk/maay
Message-ID: <200511091228.jA9CSeRB008013@sheep.berlios.de>

Author: afayolle
Date: 2005-11-09 13:28:20 +0100 (Wed, 09 Nov 2005)
New Revision: 369

Modified:
   trunk/maay/p2pquerier.py
Log:
only send back abstract of the 15 first found documents

Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-09 12:24:53 UTC (rev 368)
+++ trunk/maay/p2pquerier.py	2005-11-09 12:28:20 UTC (rev 369)
@@ -22,9 +22,10 @@
 from logilab.common.compat import set
 
 from twisted.web.xmlrpc import Proxy
-
+from maay.texttool import makeAbstract, removeSpace, untagText
 #TODO: add test for this
 SEQ_DICT = {}
+MAX_P2P_ANSWER_LENGTH = 15
 
 def incrementSequence(item):
     """Returns a growing monotone value for the
@@ -95,6 +96,10 @@
                 'mime_type': self.query.filetype or '',
                 }
 
+    def getWords(self):
+        return self.query.words.split()
+
+
 class P2pAnswer:
     def __init__(self, queryId, documents):
         self.queryId = queryId
@@ -198,11 +203,15 @@
             # TODO: record answer in database if local is False
             # auc : to cache them ?
             if not query.isKnown(document):
+                abstract = makeAbstract(document.text, query.getWords())
+                document.text = untagText(removeSpace(abstract))
                 query.addMatch(document)
                 #toSend.append(document.asDictionnary())
                 # above was meant to be like .asKwargs() ?
                 # anyway, this stuff is xmlrpc-serializable (auc)
                 toSend.append(document)
+                if len(toSend) > MAX_P2P_ANSWER_LENGTH:
+                    break
         
         if query.sender != self.nodeId: 
             try:



From aurelienc at berlios.de  Wed Nov  9 13:31:18 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Wed, 9 Nov 2005 13:31:18 +0100
Subject: [Maay-svncheckins] r370 - trunk/maay
Message-ID: <200511091231.jA9CVILA008942@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-09 13:31:04 +0100 (Wed, 09 Nov 2005)
New Revision: 370

Modified:
   trunk/maay/rpc.py
Log:
Deverbosify, remove assertion


Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-09 12:28:20 UTC (rev 369)
+++ trunk/maay/rpc.py	2005-11-09 12:31:04 UTC (rev 370)
@@ -158,8 +158,6 @@
                          ttl=queryDict['ttl'],
                          qid=queryDict['qid'])
         query.host = self._lastClient.host
-        print " ... QID : %s %s" % (queryDict['qid'], query.qid)
-        assert(queryDict['qid'] == query.qid)
         # schedule the query for later processing and return immediately
         # this enables the sender to query several nodes in a row
         d = reactor.callLater(.01, self.getP2pQuerier().receiveQuery, query)



From afayolle at berlios.de  Wed Nov  9 13:31:35 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Wed, 9 Nov 2005 13:31:35 +0100
Subject: [Maay-svncheckins] r371 - trunk/maay
Message-ID: <200511091231.jA9CVZYt009236@sheep.berlios.de>

Author: afayolle
Date: 2005-11-09 13:31:29 +0100 (Wed, 09 Nov 2005)
New Revision: 371

Modified:
   trunk/maay/p2pquerier.py
Log:
use the right test

Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-09 12:31:04 UTC (rev 370)
+++ trunk/maay/p2pquerier.py	2005-11-09 12:31:29 UTC (rev 371)
@@ -210,7 +210,7 @@
                 # above was meant to be like .asKwargs() ?
                 # anyway, this stuff is xmlrpc-serializable (auc)
                 toSend.append(document)
-                if len(toSend) > MAX_P2P_ANSWER_LENGTH:
+                if len(toSend) >= MAX_P2P_ANSWER_LENGTH:
                     break
         
         if query.sender != self.nodeId: 



From aurelienc at berlios.de  Wed Nov  9 13:36:15 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Wed, 9 Nov 2005 13:36:15 +0100
Subject: [Maay-svncheckins] r372 - trunk/maay
Message-ID: <200511091236.jA9CaFjQ010949@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-09 13:36:07 +0100 (Wed, 09 Nov 2005)
New Revision: 372

Modified:
   trunk/maay/p2pquerier.py
Log:
Give the p2pqueries a decent id


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-09 12:31:29 UTC (rev 371)
+++ trunk/maay/p2pquerier.py	2005-11-09 12:36:07 UTC (rev 372)
@@ -19,26 +19,27 @@
 """
 __revision__ = '$Id$'
 
+import sha
+import platform
+import time
+
 from logilab.common.compat import set
 
 from twisted.web.xmlrpc import Proxy
 from maay.texttool import makeAbstract, removeSpace, untagText
-#TODO: add test for this
-SEQ_DICT = {}
 MAX_P2P_ANSWER_LENGTH = 15
 
-def incrementSequence(item):
+def hashIt(item):
     """Returns a growing monotone value for the
        associated item (starting from 0 when
        item is seen first)
     """
-    if not SEQ_DICT.has_key(item):
-        SEQ_DICT[item] = 1
-    count = SEQ_DICT[item]
-    SEQ_DICT[item] = count + 1
-    return count
+    hasher = sha.sha()
+    hasher.update(''.join(platform.uname()))
+    hasher.update('%s' % id(item))
+    hasher.update('%s' % time.time())
+    return hasher.hexdigest()
 
-
 # XXX should P2pQuery derive from query.Query?
 class P2pQuery:
     def __init__(self, sender, port, query, ttl=5, qid=None):
@@ -54,7 +55,7 @@
         if qid:
             self.qid = qid
         else:
-            self.qid = incrementSequence(sender.__hash__())
+            self.qid = hashIt(sender)
         self.sender = sender
         self.port = port
         self.ttl = ttl



From afayolle at berlios.de  Wed Nov  9 13:41:46 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Wed, 9 Nov 2005 13:41:46 +0100
Subject: [Maay-svncheckins] r373 - trunk/maay
Message-ID: <200511091241.jA9CfkrB013663@sheep.berlios.de>

Author: afayolle
Date: 2005-11-09 13:41:30 +0100 (Wed, 09 Nov 2005)
New Revision: 373

Modified:
   trunk/maay/p2pquerier.py
Log:
compute the abstract only on the local query. The max length is only performed in dbentity.py

Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-09 12:36:07 UTC (rev 372)
+++ trunk/maay/p2pquerier.py	2005-11-09 12:41:30 UTC (rev 373)
@@ -27,7 +27,6 @@
 
 from twisted.web.xmlrpc import Proxy
 from maay.texttool import makeAbstract, removeSpace, untagText
-MAX_P2P_ANSWER_LENGTH = 15
 
 def hashIt(item):
     """Returns a growing monotone value for the
@@ -180,6 +179,10 @@
             self.sendQuery(query)
 
         documents = self.querier.findDocuments(query.query)
+        for doc in documents:
+            abstract = makeAbstract(doc.text, query.getWords())
+            doc.text = untagText(removeSpace(abstract))
+            
         self.relayAnswer(P2pAnswer(query.qid, documents))
 
     def relayAnswer(self, answer, local=False): # local still unused
@@ -204,15 +207,11 @@
             # TODO: record answer in database if local is False
             # auc : to cache them ?
             if not query.isKnown(document):
-                abstract = makeAbstract(document.text, query.getWords())
-                document.text = untagText(removeSpace(abstract))
                 query.addMatch(document)
                 #toSend.append(document.asDictionnary())
                 # above was meant to be like .asKwargs() ?
                 # anyway, this stuff is xmlrpc-serializable (auc)
                 toSend.append(document)
-                if len(toSend) >= MAX_P2P_ANSWER_LENGTH:
-                    break
         
         if query.sender != self.nodeId: 
             try:



From afayolle at berlios.de  Wed Nov  9 13:58:12 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Wed, 9 Nov 2005 13:58:12 +0100
Subject: [Maay-svncheckins] r374 - trunk/maay
Message-ID: <200511091258.jA9CwClo019878@sheep.berlios.de>

Author: afayolle
Date: 2005-11-09 13:58:05 +0100 (Wed, 09 Nov 2005)
New Revision: 374

Modified:
   trunk/maay/p2pquerier.py
Log:
avoid calling uname each time which can cause 'interrupted system call' errors with twisted

Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-09 12:41:30 UTC (rev 373)
+++ trunk/maay/p2pquerier.py	2005-11-09 12:58:05 UTC (rev 374)
@@ -28,13 +28,9 @@
 from twisted.web.xmlrpc import Proxy
 from maay.texttool import makeAbstract, removeSpace, untagText
 
-def hashIt(item):
-    """Returns a growing monotone value for the
-       associated item (starting from 0 when
-       item is seen first)
-    """
+def hashIt(item, uname=''.join(platform.uname())):
     hasher = sha.sha()
-    hasher.update(''.join(platform.uname()))
+    hasher.update(uname)
     hasher.update('%s' % id(item))
     hasher.update('%s' % time.time())
     return hasher.hexdigest()



From aurelienc at berlios.de  Wed Nov  9 14:05:24 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Wed, 9 Nov 2005 14:05:24 +0100
Subject: [Maay-svncheckins] r375 - trunk/maay
Message-ID: <200511091305.jA9D5Ork022499@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-09 14:05:09 +0100 (Wed, 09 Nov 2005)
New Revision: 375

Modified:
   trunk/maay/p2pquerier.py
Log:
"fix" the class/dict multiple personnality disorder of document


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-09 12:58:05 UTC (rev 374)
+++ trunk/maay/p2pquerier.py	2005-11-09 13:05:09 UTC (rev 375)
@@ -61,21 +61,10 @@
         self.ttl -= 1
 
     def addMatch(self, document):
-        """this function suffers from horrible polymorphism
-           sometimes we get a Document, sometimes a plain dict
-        """
-        if isinstance(document, dict):
-            self.documents_ids.add(document['document_id'])
-        else:
-            self.documents_ids.add(document.document_id)
+        self.documents_ids.add(document['document_id'])
 
     def isKnown(self, document):
-        """this function suffers from horrible polymorphism
-           sometimes we get a Document, sometimes a plain dict
-        """
-        if isinstance(document, dict):
-            return document['document_id'] in self.documents_ids
-        return document.document_id in self.documents_ids
+        return document['document_id'] in self.documents_ids
  
     def asKwargs(self):
         """return a dictionnary of arguments suitable for use as a
@@ -200,9 +189,13 @@
         toSend = []
         
         for document in answer.documents:
+            if not isinstance(document, dict):
+                document = document.__dict__
             # TODO: record answer in database if local is False
             # auc : to cache them ?
             if not query.isKnown(document):
+                abstract = makeAbstract(document['text'], query.getWords())
+                document['text'] = untagText(removeSpace(abstract))
                 query.addMatch(document)
                 #toSend.append(document.asDictionnary())
                 # above was meant to be like .asKwargs() ?



From afayolle at berlios.de  Wed Nov  9 15:17:57 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Wed, 9 Nov 2005 15:17:57 +0100
Subject: [Maay-svncheckins] r376 - trunk/doc
Message-ID: <200511091417.jA9EHvHc030201@sheep.berlios.de>

Author: afayolle
Date: 2005-11-09 15:17:54 +0100 (Wed, 09 Nov 2005)
New Revision: 376

Added:
   trunk/doc/CR_20051109.rest
Log:
add minutes of today's meeting

Added: trunk/doc/CR_20051109.rest
===================================================================
--- trunk/doc/CR_20051109.rest	2005-11-09 13:05:09 UTC (rev 375)
+++ trunk/doc/CR_20051109.rest	2005-11-09 14:17:54 UTC (rev 376)
@@ -0,0 +1,79 @@
+=========================================
+Compte rendu de la r?union du 9 Nov. 2005
+=========================================
+
+Participants
+~~~~~~~~~~~~
+
+Joaquin Keller (FTRD)
+Fr?d?ric Dang Ngoc (FTRD)
+Alexandre Fayolle (Logilab)
+
+But de la r?union
+~~~~~~~~~~~~~~~~~
+
+Point sur les d?veloppements depuis la pr?c?dente r?union.
+
+?ch?ances
+~~~~~~~~~~
+
+D?monstration publique le 30 Nov. 
+
+On a besoin d'une version distribuable le 15 Nov.
+
+Points abord?s
+~~~~~~~~~~~~~~
+
+Installeurs
+-----------
+
+Dang Ngoc a rencontr? des probl?mes pour la g?n?ration de l'installeur
+windows (cf. messages sur la liste maay-dev). Fayolle regarde ce qui
+se passe. 
+
+Requ?tes distribu?es
+--------------------
+
+Les requ?tes distribu?es fonctionnent, mais la mise ? jour de
+l'affichage dans le navigateur ne se fait pas encore. Logilab
+travaille sur la question, et devrait avoir r?solu le probl?me d'ici
+le 14 Nov. 
+
+Ranking des r?sultats
+---------------------
+
+Dang Ngoc regarde pour le 14 Nov. s'il est possible d'obtenir un
+ranking plus ?labor? que la date d'indexation. 
+
+Terminologie : Serveur de pr?sence
+----------------------------------
+
+Le serveur de pr?sence fonctionne. Dang Ngoc se charge de modifier les
+noms des options de configuration pour refl?ter ce changement. 
+
+Terminologie: Noeud
+-------------------
+
+Logilab se chargera de faire les modifications de "server" en "node"
+dans le code, apr?s les modifications n?cessaires pour l'affichage des
+r?sultats P2P.
+
+Lancement de l'indexation depuis l'interface Web
+------------------------------------------------
+
+Le code de Dang Ngoc lance l'indexeur dans un thread plut?t que dans
+un processus. Les modifications seront effectu?es ult?rieurement si
+n?cessaire. 
+
+Conclusion de la r?union
+~~~~~~~~~~~~~~~~~~~~~~~~
+
+Il faut pour lundi 14 Nov. une version installable de Maay permettant
+de faire des recherches distribu?es. 
+
+La prochaine r?union aura lieu par t?l?phone le 14 Nov. ? 14h30.
+
+ -- Alexandre Fayolle <alexandre.fayolle at logilab.fr>  Wed,  9 Nov 2005 15:16:04 +0100
+
+
+



From aurelienc at berlios.de  Wed Nov  9 16:44:52 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Wed, 9 Nov 2005 16:44:52 +0100
Subject: [Maay-svncheckins] r377 - trunk/maay/test
Message-ID: <200511091544.jA9FiqgE000787@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-09 16:44:49 +0100 (Wed, 09 Nov 2005)
New Revision: 377

Modified:
   trunk/maay/test/test_dbentity.py
   trunk/maay/test/test_p2p.py
Log:
Fix tests.


Modified: trunk/maay/test/test_dbentity.py
===================================================================
--- trunk/maay/test/test_dbentity.py	2005-11-09 14:17:54 UTC (rev 376)
+++ trunk/maay/test/test_dbentity.py	2005-11-09 15:44:49 UTC (rev 377)
@@ -30,7 +30,7 @@
         for p in params[:-1]:
             self.assertEquals(type(p), unicode)
         self.assertEquals(len(params), params[-1] + 1)
-        expected = "SELECT D.db_document_id, D.document_id, D.title, D.size, D.text, D.url, D.mime_type, D.publication_time FROM documents D, document_scores DS WHERE DS.db_document_id=D.db_document_id AND DS.word IN (%s, %s, %s, %s) GROUP BY DS.db_document_id HAVING count(DS.db_document_id) = %s LIMIT 15 OFFSET 0"
+        expected = "SELECT D.db_document_id, D.document_id, D.title, D.size, D.text, D.url, D.mime_type, D.publication_time FROM documents D, document_scores DS WHERE DS.db_document_id=D.db_document_id AND DS.word IN (%s, %s, %s, %s) GROUP BY DS.db_document_id HAVING count(DS.db_document_id) = %s ORDER BY D.publication_time DESC LIMIT 15 OFFSET 0"
         self.assertEquals(query.split(), expected.split())
         q = query%tuple(params) # sanity check for argument count
         
@@ -41,7 +41,7 @@
         for p in params[:-1]:
             self.assertEquals(type(p), unicode)
         self.assertEquals(len(params), params[-1] + 1)
-        expected = "SELECT D.db_document_id, D.document_id, D.title, D.size, D.text, D.url, D.mime_type, D.publication_time FROM documents D, document_scores DS WHERE DS.db_document_id=D.db_document_id AND DS.word IN (%s, %s, %s, %s) GROUP BY DS.db_document_id HAVING count(DS.db_document_id) = %s LIMIT 15 OFFSET 15"
+        expected = "SELECT D.db_document_id, D.document_id, D.title, D.size, D.text, D.url, D.mime_type, D.publication_time FROM documents D, document_scores DS WHERE DS.db_document_id=D.db_document_id AND DS.word IN (%s, %s, %s, %s) GROUP BY DS.db_document_id HAVING count(DS.db_document_id) = %s ORDER BY D.publication_time DESC LIMIT 15 OFFSET 15"
         self.assertEquals(query.split(), expected.split())
         q = query%tuple(params) # sanity check for argument count
         
@@ -53,7 +53,7 @@
         for p in params[:-2]:
             self.assertEquals(type(p), unicode)
         self.assertEquals(len(params), params[-1] + 2)
-        expected = "SELECT D.db_document_id, D.document_id, D.title, D.size, D.text, D.url, D.mime_type, D.publication_time FROM documents D, document_scores DS WHERE DS.db_document_id=D.db_document_id AND DS.word IN (%s, %s, %s, %s) AND D.state!=%s GROUP BY DS.db_document_id HAVING count(DS.db_document_id) = %s LIMIT 15 OFFSET 15"
+        expected = "SELECT D.db_document_id, D.document_id, D.title, D.size, D.text, D.url, D.mime_type, D.publication_time FROM documents D, document_scores DS WHERE DS.db_document_id=D.db_document_id AND DS.word IN (%s, %s, %s, %s) AND D.state!=%s GROUP BY DS.db_document_id HAVING count(DS.db_document_id) = %s ORDER BY D.publication_time DESC LIMIT 15 OFFSET 15"
         self.assertEquals(query.split(), expected.split())
         q = query%tuple(params) # sanity check for argument count
         
@@ -67,7 +67,7 @@
         for p in params[:-1]:
             self.assertEquals(type(p), unicode)
         self.assertEquals(len(params), params[-1] + 2)
-        expected = "SELECT D.db_document_id, D.document_id, D.title, D.size, D.text, D.url, D.mime_type, D.publication_time FROM documents D, document_scores DS WHERE DS.db_document_id=D.db_document_id AND DS.word IN (%s, %s, %s, %s)   AND D.mime_type=%s  GROUP BY DS.db_document_id HAVING count(DS.db_document_id) = %s LIMIT 15 OFFSET 0"
+        expected = "SELECT D.db_document_id, D.document_id, D.title, D.size, D.text, D.url, D.mime_type, D.publication_time FROM documents D, document_scores DS WHERE DS.db_document_id=D.db_document_id AND DS.word IN (%s, %s, %s, %s)   AND D.mime_type=%s  GROUP BY DS.db_document_id HAVING count(DS.db_document_id) = %s ORDER BY D.publication_time DESC LIMIT 15 OFFSET 0"
         self.assertEquals(query.split(), expected.split())
         q = query%tuple(params) # sanity check for argument count
         

Modified: trunk/maay/test/test_p2p.py
===================================================================
--- trunk/maay/test/test_p2p.py	2005-11-09 14:17:54 UTC (rev 376)
+++ trunk/maay/test/test_p2p.py	2005-11-09 15:44:49 UTC (rev 377)
@@ -27,7 +27,8 @@
     def setUp(self):
         self.query = P2pQuery(sender='http://localhost:3423', # should be a hash (auc)
                               port=3423,
-                              query=Query.fromRawQuery("foo"))
+                              query=Query.fromRawQuery("foo"),
+                              qid=42)
 
     def testHop(self):
         ttl = self.query.ttl
@@ -36,18 +37,18 @@
 
     def testAddMatch(self):
         doc = Document(document_id = '0'*40)
-        self.query.addMatch(doc)
+        self.query.addMatch(doc.__dict__)
         self.failUnless('0'*40 in self.query.documents_ids)
 
     def testIsKnown(self):
         doc = Document(document_id = '0'*40)
-        self.query.addMatch(doc)
-        self.failUnless(self.query.isKnown(doc))
-        self.failIf(self.query.isKnown(Document(document_id = '1'*40)))
+        self.query.addMatch(doc.__dict__)
+        self.failUnless(self.query.isKnown(doc.__dict__))
+        self.failIf(self.query.isKnown(Document(document_id = '1'*40).__dict__))
 
     def testSimpleQueryAsKwargs(self):
         self.assertEquals(self.query.asKwargs(),
-                          {'qid' : 0,
+                          {'qid' : 42,
                            'sender' : 'http://localhost:3423',
                            'port' : 3423,
                            'ttl' : 5, # default value
@@ -58,9 +59,10 @@
         query = P2pQuery(sender='http://localhost:3423',
                          port = 3423,
                          ttl=2,
-                         query=Query.fromRawQuery("foo bar filetype:pdf"))
+                         query=Query.fromRawQuery("foo bar filetype:pdf"),
+                         qid=42)
         self.assertEquals(query.asKwargs(),
-                          {'qid' : 0,
+                          {'qid' : 42,
                            'sender' : 'http://localhost:3423',
                            'port' : 3423,
                            'ttl' : 2,



From aurelienc at berlios.de  Wed Nov  9 17:47:03 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Wed, 9 Nov 2005 17:47:03 +0100
Subject: [Maay-svncheckins] r378 - in trunk/maay: . test
Message-ID: <200511091647.jA9Gl3VR013296@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-09 17:46:59 +0100 (Wed, 09 Nov 2005)
New Revision: 378

Modified:
   trunk/maay/configuration.py
   trunk/maay/exif.py
   trunk/maay/image.py
   trunk/maay/indexer.py
   trunk/maay/server.py
   trunk/maay/test/test_configuration.py
   trunk/maay/test/test_rpc.py
Log:
- slight reorg. of the configuration stuff : moved config stuff into configuration.py, all changes reflect this.
- merged exif.py into image.py


Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-09 15:44:49 UTC (rev 377)
+++ trunk/maay/configuration.py	2005-11-09 16:46:59 UTC (rev 378)
@@ -20,6 +20,7 @@
 
 import os, os.path as osp
 import sys
+import re
 
 from logilab.common.configuration import Configuration as BaseConfiguration
 
@@ -127,3 +128,227 @@
         except KeyError:
             return getattr(self.config, attrname)
 
+################ Web server, rpc server stuff
+
+class WebappConfiguration(Configuration):
+    options = Configuration.options + [
+        ('db-name',
+         {'type' : "string", 'metavar' : "<dbname>", 'short' : "d",
+          'help' : "name of the Maay database",
+          'default' : "maay",
+          }),
+        ('db-host',
+         {'type' : "string", 'metavar' : "<dbhost>", 'short' : "H",
+          'help' : "which server hosts the database",
+          'default' : "localhost",
+          }),
+        ('user',
+         {'type': 'string',
+          'metavar': '<userid>', 'short': 'u',
+          'help': 'login of anonymous user to use to connect to the database',
+          'default' : "maay",
+          }),
+        ('password',
+         {'type': 'string',
+          'metavar': '<password>', 'short' : "p",
+          'help': 'password of anonymous user to use to connect to the database',
+          'default' : "maay",
+          }),
+        ('registration-host',
+         {'type' : "string", 'metavar' : "<registration_host>", 
+          'help' : "Host name or IP address of the registration server",
+          'default' : "localhost",
+          }),
+        ('registration-port',
+         {'type' : "int", 'metavar' : "<registration_port>", 
+          'help' : "Internet port on which the registration server is listening",
+          'default' : 2345,
+          }),
+        ('webserver-port',
+         {'type' : "int", 'metavar' : "<webserver_port>", 
+          'help' : "Internet port on which the web interface is listening",
+          'default' : 7777,
+          }),
+        ('rpcserver-port',
+         {'type' : "int", 'metavar' : "<rpcserver_port>", 
+          'help' : "Internet port on which the xmlrpc server is listening",
+          'default' : 6789,
+          }),
+        ('bandwidth',
+         {'type' : "int", 'metavar' : "<bandwidth>", 
+          'help' : "Internet port on which the xmlrpc server is listening",
+          'default' : 10,
+          }),
+        ('nodeid-file',
+         {'type' : "string", 'metavar' : "<node_id_file>",
+          'help' : "Maay will store the generated node id in this file",
+          'default' : "node_id",
+          }),
+        ]
+
+    config_file = 'webapp.ini'
+
+    def __init__(self):
+        Configuration.__init__(self, name="Server")
+        self.node_id = None
+
+    def get_node_id(self):
+        if not self.node_id:
+            self.node_id = self._read_node_id()
+        return self.node_id
+
+    def _read_node_id(self):
+        for directory in self.get_writable_config_dirs():
+            try:
+                filename = os.path.join(directory, self.nodeid_file)
+                f = open(filename,'r')
+                for line in f:
+                    line = line.strip()
+                    if not line or line.startswith('#'):
+                        continue
+                    node_id = line.strip()
+                    assert re.match('^[0-9a-fA-F]{40}$', node_id)
+                    f.close()
+                    return node_id
+            except IOError:
+                continue
+        self._write_node_id()
+        return self._read_node_id()
+
+    def _generate_node_id(self):
+        hasher = sha.sha()
+        hasher.update(''.join(platform.uname()))
+        hasher.update('%s' % id(self))
+        hasher.update('%s' % time.time())
+        return hasher.hexdigest()
+
+    def _write_node_id(self):
+        node_id = self._generate_node_id()
+        for directory in self.get_writable_config_dirs():
+            try:
+                filename = os.path.join(directory, self.nodeid_file)
+                f = open(filename, 'w')
+                lines = ['# This file contains the Node Identifier for your computer\n',
+                         '# Do not edit it or erase it, or this will corrupt the database\n',
+                         '# of your Maay instance.\n',
+                         '# This id was generated on %s\n' % time.asctime(),
+                         '%s\n' % node_id
+                         ]
+                f.writelines(lines)
+                f.close()
+                return
+            except IOError:
+                continue
+        raise ValueError('Unable to find a writable directory to store the node id')
+
+################ Image stuff 
+
+class NoThumbnailsDir(Exception):
+    """Represents impossibility to access or create RW the
+       maay thumbnails dir repository"""
+    pass
+
+class ImageConfiguration(Configuration):
+    options = Configuration.options + [
+        ('thumbnails-dir',
+         {'type' : "string", 'metavar' : "--thumbnailsdir", 'short' : "-thumbs",
+          'help' : "Thumbnail files repository",
+          'default' : '.maay_thumbnails'},)]
+    config_file = 'image.ini'
+
+    def __init__(self):
+        Configuration.__init__(self, name="Image")
+
+    def get_thumbnails_dir(self):
+        """Returns the complete path to Maay thumnails directory
+           XXX: It will try to create the dir if absent"""
+        path = osp.join(osp.expanduser('~'),
+                        self.get('thumbnails-dir'))
+        if not os.access(path, os.W_OK):
+            try:
+                os.makedirs(path, stat.S_IRWXU)
+            except Exception, e:
+                raise NoThumbnailsDir("Impossible to access or create %s. "
+                                      "Cause : %e" % (path, e))
+        if os.access(path, os.W_OK): # yes, I'm paranoId
+            return path
+        else:
+            raise NoThumbnailsDir("Access to %s is impossible." % path)
+
+
+
+################ Indexer stuff 
+
+class IndexerConfiguration(Configuration):
+    options = Configuration.options + [
+        ('host',
+         {'type' : "string", 'metavar' : "<host>", 'short' : "H",
+          'help' : "where Maay node can be found",
+          'default' : "localhost",
+          }),
+
+        ('port',
+         {'type' : "int", 'metavar' : "<int>", 'short' : "P",
+          'help' : "which port to use",
+          'default' : 6789,
+        }),
+
+        ('user',
+         {'type': 'string',
+          'metavar': '<userid>', 'short': 'u',
+          'help': 'identifier to use to connect to the database',
+          'default' : "maay",
+          }),
+
+        ('password',
+         {'type': 'string',
+          'metavar': '<password>', 'short' : "p",
+          'help': 'password to use to connect to the database',
+          'default' : "maay",
+          }),
+
+        ('private-index-dir',
+         {'type': 'csv',
+          'metavar': '<csv>', 'short': 'i',
+          'help': 'index this directory with the private indexer',
+          'default' : []
+          }),
+         
+        ('private-skip-dir',
+         {'type': 'csv',
+          'metavar': '<csv>', 'short': 's',
+          'help': 'the private indexer will skip this directory',
+          'default' : []
+          }),
+        ('public-index-dir',
+         {'type': 'csv',
+          'metavar': '<csv>', 'short': 'I',
+          'help': 'index this directory with the public indexer',
+          'default' : []
+          }),
+         
+        ('public-skip-dir',
+         {'type': 'csv',
+          'metavar': '<csv>', 'short': 'S',
+          'help': 'the public indexer will skip this directory',
+          'default' : []
+          }),
+
+        ('verbose',
+         {'type': 'yn',
+          'metavar': '<y or n>', 'short': 'v',
+          'help': 'enable verbose mode',
+          "default": False,
+          }),
+        ('purge',
+         {'type' : 'yn',
+          'help' : 'purge the set of indexed documents and returns immediately',
+          'metavar' : '<y or n>',
+          'default' : False,
+          }),
+        ]
+
+    config_file = 'indexer.ini'
+
+    def __init__(self):
+        Configuration.__init__(self, name="Indexer")

Modified: trunk/maay/exif.py
===================================================================
--- trunk/maay/exif.py	2005-11-09 15:44:49 UTC (rev 377)
+++ trunk/maay/exif.py	2005-11-09 16:46:59 UTC (rev 378)
@@ -10,62 +10,3 @@
     print "Python Imaging Library not installed for your version of Python.",
     print "EXIF support will not work."
     
-# Mapping from number to (descriptor, type)
-exif_dict = {
-    256 : ('ImageWidth', int),
-    257 : ('ImageLength', int),
-    258 : ('BitPerSample', int),
-    259 : ('Compression', int),
-    270 : ('ImageDescription', str),
-    271 : ('Make', str),
-    272 : ('Model', str),
-    274 : ('Orientation', int),
-    305 : ('Software', str),
-    306 : ('DateTime', str),
-    315 : ('Artist', str),
-
-
-    33434 : ('ExposureTime', (int, int)),
-
-    36864 : ('ExifVersion', None),
-    37122 : ('CompressedBitsPerPixel', (int, int)),
-
-#    37500 : ('MakerNote', None), too much garbage there
-
-    36867 : ('DateTimeOriginal', str),
-    36868 : ('DateTimeDigitized', str),
-
-    40962 : ('PixelXDimension', int),
-    40963 : ('PixelYDimension', int),
-    
-    }
-
-def raw_get_exif(file_path):
-    """gets a mapping from exif codes to values"""
-    return Image.open(file_path)._getexif()
-
-def get_exif(file_path):
-    """returns a mapping from exif attributes to values"""
-    res = {}
-    for k, v in raw_get_exif(file_path).items():
-        if exif_dict.has_key(k):
-            res[exif_dict[k][0]] = v
-    return res
-
-def get_string_from_exif(filepath):
-    """returns a well formed string from
-       exif attributes to values"""
-    d = get_exif(filepath)
-    res = ''
-    for k, v in d.items():
-        res += k+' : '+str(v)+'\n'
-    return res
-
-def get_ustring_from_exif(filepath):
-    """returns a well formed unicode string from
-       exif attributes to values"""
-    d = get_exif(filepath)
-    res = u''
-    for k, v in d.items():
-        res += unicode(k)+u' : '+unicode(v)+u'\n'
-    return res

Modified: trunk/maay/image.py
===================================================================
--- trunk/maay/image.py	2005-11-09 15:44:49 UTC (rev 377)
+++ trunk/maay/image.py	2005-11-09 16:46:59 UTC (rev 378)
@@ -9,8 +9,12 @@
 from tempfile import mkdtemp
 import stat, os, os.path as osp
 from maay.exif import *
-from maay.configuration import Configuration
+from maay.configuration import ImageConfiguration, \
+     NoThumbnailsDir
 
+
+############# Thumbnail bizness
+
 class ThumbnailCreationError(Exception):
     """Signals impossibility to create a thumbnail"""
     pass
@@ -27,37 +31,69 @@
     except Exception, e:
         raise ThumbnailCreationError("Cause : %e" % e)
 
-class NoThumbnailsDir(Exception):
-    """Represents impossibility to access or create RW the
-       maay thumbnails dir repository"""
-    pass
-        
-class ImageConfiguration(Configuration):
-    options = Configuration.options + [
-        ('thumbnails-dir',
-         {'type' : "string", 'metavar' : "--thumbnailsdir", 'short' : "-thumbs",
-          'help' : "Thumbnail files repository",
-          'default' : '.maay_thumbnails'},)]
-    config_file = 'image.ini'
 
-    def __init__(self):
-        Configuration.__init__(self, name="Image")
+############## EXIF stuff
 
-    def get_thumbnails_dir(self):
-        """Returns the complete path to Maay thumnails directory
-           XXX: It will try to create the dir if absent"""
-        path = osp.join(osp.expanduser('~'),
-                        self.get('thumbnails-dir'))
-        if not os.access(path, os.W_OK):
-            try:
-                os.makedirs(path, stat.S_IRWXU)
-            except Exception, e:
-                raise NoThumbnailsDir("Impossible to access or create %s. "
-                                      "Cause : %e" % (path, e))
-        if os.access(path, os.W_OK): # yes, I'm paranoId
-            return path
-        else:
-            raise NoThumbnailsDir("Access to %s is impossible." % path)
+# Mapping from number to (descriptor, type)
+exif_dict = {
+    256 : ('ImageWidth', int),
+    257 : ('ImageLength', int),
+    258 : ('BitPerSample', int),
+    259 : ('Compression', int),
+    270 : ('ImageDescription', str),
+    271 : ('Make', str),
+    272 : ('Model', str),
+    274 : ('Orientation', int),
+    305 : ('Software', str),
+    306 : ('DateTime', str),
+    315 : ('Artist', str),
 
+
+    33434 : ('ExposureTime', (int, int)),
+
+    36864 : ('ExifVersion', None),
+    37122 : ('CompressedBitsPerPixel', (int, int)),
+
+#    37500 : ('MakerNote', None), too much garbage there
+
+    36867 : ('DateTimeOriginal', str),
+    36868 : ('DateTimeDigitized', str),
+
+    40962 : ('PixelXDimension', int),
+    40963 : ('PixelYDimension', int),
     
+    }
+
+def raw_get_exif(file_path):
+    """gets a mapping from exif codes to values"""
+    return Image.open(file_path)._getexif()
+
+def get_exif(file_path):
+    """returns a mapping from exif attributes to values"""
+    res = {}
+    for k, v in raw_get_exif(file_path).items():
+        if exif_dict.has_key(k):
+            res[exif_dict[k][0]] = v
+    return res
+
+def get_string_from_exif(filepath):
+    """returns a well formed string from
+       exif attributes to values"""
+    d = get_exif(filepath)
+    res = ''
+    for k, v in d.items():
+        res += k+' : '+str(v)+'\n'
+    return res
+
+def get_ustring_from_exif(filepath):
+    """returns a well formed unicode string from
+       exif attributes to values"""
+    d = get_exif(filepath)
+    res = u''
+    for k, v in d.items():
+        res += unicode(k)+u' : '+unicode(v)+u'\n'
+    return res
+
+
+    
             

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-09 15:44:49 UTC (rev 377)
+++ trunk/maay/indexer.py	2005-11-09 16:46:59 UTC (rev 378)
@@ -34,7 +34,7 @@
 
 import maay.indexer
 from maay import converter
-from maay.configuration import Configuration
+from maay.configuration import IndexerConfiguration
 from maay.dbentity import FutureDocument, Document, FileInfo
 from maay.querier import MaayAuthenticationError
 from maay.texttool import removeControlChar
@@ -224,86 +224,8 @@
                 # print "skipping", dirname
                 dirnames.remove(dirname)
 
-
-
-
 ## main() ##################################################
 
-class IndexerConfiguration(Configuration):
-    options = Configuration.options + [
-        ('host',
-         {'type' : "string", 'metavar' : "<host>", 'short' : "H",
-          'help' : "where Maay node can be found",
-          'default' : "localhost",
-          }),
-
-        ('port',
-         {'type' : "int", 'metavar' : "<int>", 'short' : "P",
-          'help' : "which port to use",
-          'default' : 6789,
-        }),
-
-        ('user',
-         {'type': 'string',
-          'metavar': '<userid>', 'short': 'u',
-          'help': 'identifier to use to connect to the database',
-          'default' : "maay",
-          }),
-
-        ('password',
-         {'type': 'string',
-          'metavar': '<password>', 'short' : "p",
-          'help': 'password to use to connect to the database',
-          'default' : "maay",
-          }),
-
-        ('private-index-dir',
-         {'type': 'csv',
-          'metavar': '<csv>', 'short': 'i',
-          'help': 'index this directory with the private indexer',
-          'default' : []
-          }),
-         
-        ('private-skip-dir',
-         {'type': 'csv',
-          'metavar': '<csv>', 'short': 's',
-          'help': 'the private indexer will skip this directory',
-          'default' : []
-          }),
-        ('public-index-dir',
-         {'type': 'csv',
-          'metavar': '<csv>', 'short': 'I',
-          'help': 'index this directory with the public indexer',
-          'default' : []
-          }),
-         
-        ('public-skip-dir',
-         {'type': 'csv',
-          'metavar': '<csv>', 'short': 'S',
-          'help': 'the public indexer will skip this directory',
-          'default' : []
-          }),
-
-        ('verbose',
-         {'type': 'yn',
-          'metavar': '<y or n>', 'short': 'v',
-          'help': 'enable verbose mode',
-          "default": False,
-          }),
-        ('purge',
-         {'type' : 'yn',
-          'help' : 'purge the set of indexed documents and returns immediately',
-          'metavar' : '<y or n>',
-          'default' : False,
-          }),
-        ]
-
-    config_file = 'indexer.ini'
-
-    def __init__(self):
-        Configuration.__init__(self, name="Indexer")
-
-
 def run():
     indexerConfig = IndexerConfiguration()
     indexerConfig.load()

Modified: trunk/maay/server.py
===================================================================
--- trunk/maay/server.py	2005-11-09 15:44:49 UTC (rev 377)
+++ trunk/maay/server.py	2005-11-09 16:46:59 UTC (rev 378)
@@ -23,7 +23,6 @@
 import sha
 import time
 import os
-import re
 import socket
 
 from zope.interface import implements
@@ -49,7 +48,7 @@
 from maay.querier import MaayQuerier, IQuerier, AnonymousQuerier, \
      MaayAuthenticationError, WEB_AVATARID
 from maay.rpc import MaayRPCServer
-from maay.configuration import Configuration
+from maay.configuration import WebappConfiguration
 from maay import presenceclient
 from maay.webapplication import Maay404, IServerConfiguration, SearchForm
 
@@ -218,120 +217,6 @@
         return defer.succeed(creds.username)
 
 
-
-
-class ServerConfiguration(Configuration):
-    options = Configuration.options + [
-        ('db-name',
-         {'type' : "string", 'metavar' : "<dbname>", 'short' : "d",
-          'help' : "name of the Maay database",
-          'default' : "maay",
-          }),
-        ('db-host',
-         {'type' : "string", 'metavar' : "<dbhost>", 'short' : "H",
-          'help' : "which server hosts the database",
-          'default' : "localhost",
-          }),
-        ('user',
-         {'type': 'string',
-          'metavar': '<userid>', 'short': 'u',
-          'help': 'login of anonymous user to use to connect to the database',
-          'default' : "maay",
-          }),
-        ('password',
-         {'type': 'string',
-          'metavar': '<password>', 'short' : "p",
-          'help': 'password of anonymous user to use to connect to the database',
-          'default' : "maay",
-          }),
-        ('registration-host',
-         {'type' : "string", 'metavar' : "<registration_host>", 
-          'help' : "Host name or IP address of the registration server",
-          'default' : "localhost",
-          }),
-        ('registration-port',
-         {'type' : "int", 'metavar' : "<registration_port>", 
-          'help' : "Internet port on which the registration server is listening",
-          'default' : 2345,
-          }),
-        ('webserver-port',
-         {'type' : "int", 'metavar' : "<webserver_port>", 
-          'help' : "Internet port on which the web interface is listening",
-          'default' : 7777,
-          }),
-        ('rpcserver-port',
-         {'type' : "int", 'metavar' : "<rpcserver_port>", 
-          'help' : "Internet port on which the xmlrpc server is listening",
-          'default' : 6789,
-          }),
-        ('bandwidth',
-         {'type' : "int", 'metavar' : "<bandwidth>", 
-          'help' : "Internet port on which the xmlrpc server is listening",
-          'default' : 10,
-          }),
-        ('nodeid-file',
-         {'type' : "string", 'metavar' : "<node_id_file>",
-          'help' : "Maay will store the generated node id in this file",
-          'default' : "node_id",
-          }),
-        ]
-
-    config_file = 'webapp.ini'
-
-    def __init__(self):
-        Configuration.__init__(self, name="Server")
-        self.node_id = None
-
-    def get_node_id(self):
-        if not self.node_id:
-            self.node_id = self._read_node_id()
-        return self.node_id
-
-    def _read_node_id(self):
-        for directory in self.get_writable_config_dirs():
-            try:
-                filename = os.path.join(directory, self.nodeid_file)
-                f = open(filename,'r')
-                for line in f:
-                    line = line.strip()
-                    if not line or line.startswith('#'):
-                        continue
-                    node_id = line.strip()
-                    assert re.match('^[0-9a-fA-F]{40}$', node_id)
-                    f.close()
-                    return node_id
-            except IOError:
-                continue
-        self._write_node_id()
-        return self._read_node_id()
-
-    def _generate_node_id(self):
-        hasher = sha.sha()
-        hasher.update(''.join(platform.uname()))
-        hasher.update('%s' % id(self))
-        hasher.update('%s' % time.time())
-        return hasher.hexdigest()
-
-    def _write_node_id(self):
-        node_id = self._generate_node_id()
-        for directory in self.get_writable_config_dirs():
-            try:
-                filename = os.path.join(directory, self.nodeid_file)
-                f = open(filename, 'w')
-                lines = ['# This file contains the Node Identifier for your computer\n',
-                         '# Do not edit it or erase it, or this will corrupt the database\n',
-                         '# of your Maay instance.\n',
-                         '# This id was generated on %s\n' % time.asctime(),
-                         '%s\n' % node_id
-                         ]
-                f.writelines(lines)
-                f.close()
-                return
-            except IOError:
-                continue
-        raise ValueError('Unable to find a writable directory to store the node id')
-
-
 class MaaySessionWrapper(guard.SessionWrapper):
     """override guard.SessionWrapper to add an explicit errBack on
     portal.login()
@@ -354,7 +239,7 @@
     
     
 def run():
-    webappConfig = ServerConfiguration()
+    webappConfig = WebappConfiguration()
     webappConfig.load()
     maayPortal = MaayPortal(webappConfig)
     website = appserver.NevowSite(MaaySessionWrapper(maayPortal,

Modified: trunk/maay/test/test_configuration.py
===================================================================
--- trunk/maay/test/test_configuration.py	2005-11-09 15:44:49 UTC (rev 377)
+++ trunk/maay/test/test_configuration.py	2005-11-09 16:46:59 UTC (rev 378)
@@ -23,7 +23,7 @@
 import re
 
 from maay import configuration
-from maay.server import ServerConfiguration
+from maay.configuration import WebappConfiguration
 
 class WebappConfigTC(unittest.TestCase):
 

Modified: trunk/maay/test/test_rpc.py
===================================================================
--- trunk/maay/test/test_rpc.py	2005-11-09 15:44:49 UTC (rev 377)
+++ trunk/maay/test/test_rpc.py	2005-11-09 16:46:59 UTC (rev 378)
@@ -35,7 +35,8 @@
 from maay import rpc
 from maay.dbentity import Document
 from maay.querier import MaayQuerier, AnonymousQuerier, ANONYMOUS_AVATARID
-from maay.server import MaayPortal, ServerConfiguration
+from maay.server import MaayPortal
+from maay.configuration import WebappConfiguration
 
 class FakeConnection:
     def cursor(self):
@@ -72,7 +73,7 @@
 
 class RPCServerTC(unittest.TestCase):
     def setUp(self):
-        portal = MaayPortal(ServerConfiguration())
+        portal = MaayPortal(WebappConfiguration())
         portal.registerChecker(FakeChecker(portal.realm))
         self.portal = portal
         rpcserver = server.Site(rpc.MaayRPCServer(None, portal))



From aurelienc at berlios.de  Wed Nov  9 18:02:19 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Wed, 9 Nov 2005 18:02:19 +0100
Subject: [Maay-svncheckins] r379 - trunk/maay
Message-ID: <200511091702.jA9H2Jbh017020@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-09 18:02:17 +0100 (Wed, 09 Nov 2005)
New Revision: 379

Modified:
   trunk/maay/p2pquerier.py
Log:
Add automatic periodic removal of old cached queries.


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-09 16:46:59 UTC (rev 378)
+++ trunk/maay/p2pquerier.py	2005-11-09 17:02:17 UTC (rev 379)
@@ -26,7 +26,9 @@
 from logilab.common.compat import set
 
 from twisted.web.xmlrpc import Proxy
+from twisted.internet import reactor
 from maay.texttool import makeAbstract, removeSpace, untagText
+from configuration import WebappConfiguration
 
 def hashIt(item, uname=''.join(platform.uname())):
     hasher = sha.sha()
@@ -110,6 +112,8 @@
     the statistical information available about the neighbors'
     documents.
     """
+    _EXPIRATION_TIME = 10 # secs, this is a min default guard value
+    _markedQueries = {}
     _receivedQueries = {} # key : queryId, val : query
     _sentQueries = {}     
     _answerCallbacks = []
@@ -117,7 +121,42 @@
     def __init__(self, nodeId, querier):
         self.nodeId = nodeId  
         self.querier = querier
+        reactor.callLater(20, self._markQueries)
+        # now, read a config. provided value for EXPIRATION_TIME
+        config = WebappConfiguration()
+        config.load()
+        P2pQuerier._EXPIRATION_TIME = max(config.query_life_time,
+                                          P2pQuerier._EXPIRATION_TIME)
 
+    def _markQueries(self):
+        queries = self._receivedQueries.keys() + self._sentQueries.keys()
+        stamp = time.time()
+        for q in queries:
+            if q not in self._markedQueries:
+                self._markedQueries[q] = stamp
+        reactor.callLater(self._EXPIRATION_TIME, self._expireQueries)
+        reactor.callLater(self._EXPIRATION_TIME+1, self._markQueries)
+
+    def _expireQueries(self):
+        curtime = time.time()
+        expiredQueries = []
+        for q in self._markedQueries:
+            if curtime - self._markedQueries[q] > self._EXPIRATION_TIME:
+                expiredQueries.append(q)
+                try:
+                    del self._receivedQueries[q]
+                except:
+                    pass
+                try:
+                    del self._sentQueries[q]
+                except:
+                    pass
+        for q in expiredQueries:
+            del self._markedQueries[q]
+        if len(expiredQueries) > 0:
+            print "P2pQuerier garbage collected old queries : %s" % \
+            expiredQueries
+
     def sendQuery(self, query):
         """
         :type query: `maay.p2pquerier.P2pQuery`



From afayolle at berlios.de  Wed Nov  9 18:18:44 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Wed, 9 Nov 2005 18:18:44 +0100
Subject: [Maay-svncheckins] r380 - in trunk: . maay maay/configuration maay/configuration/win32
Message-ID: <200511091718.jA9HIipH021194@sheep.berlios.de>

Author: afayolle
Date: 2005-11-09 18:18:43 +0100 (Wed, 09 Nov 2005)
New Revision: 380

Added:
   trunk/maay/configuration/win32/
   trunk/maay/configuration/win32/image.ini
   trunk/maay/configuration/win32/indexer.ini
   trunk/maay/configuration/win32/webapp.ini
   trunk/maay/updateconfig.py
Modified:
   trunk/maay.iss
   trunk/maay/server.py
   trunk/setup.py
Log:
first work block to update windows installer to newest developments

Added: trunk/maay/configuration/win32/image.ini
===================================================================
--- trunk/maay/configuration/win32/image.ini	2005-11-09 17:02:17 UTC (rev 379)
+++ trunk/maay/configuration/win32/image.ini	2005-11-09 17:18:43 UTC (rev 380)
@@ -0,0 +1 @@
+thumbnails-dir=maay_thumbnails
\ No newline at end of file

Added: trunk/maay/configuration/win32/indexer.ini
===================================================================
--- trunk/maay/configuration/win32/indexer.ini	2005-11-09 17:02:17 UTC (rev 379)
+++ trunk/maay/configuration/win32/indexer.ini	2005-11-09 17:18:43 UTC (rev 380)
@@ -0,0 +1,28 @@
+[INDEXER]
+# Host on which the maay server is running
+host=localhost
+#Port on which the maay server is listening
+port=6789
+
+# User login on the maay server 
+user=maay
+# User password on the maay server
+password=maay
+
+# Which directories are to be indexed
+#  - private indexed directories are not available to  queries from other nodes
+#  - public indexed directories are available to these queries
+#  - skip dirs are not indexed
+#
+# If a document is available through both a public and a private directory, 
+# the public version prevails
+#
+# You can use a comma separated list of values to specify several
+# directories in each configuration variable. 
+private-index-dir="C:\Documents and Settings\All Users\Desktop"
+private-skip-dir=
+public-index-dir=
+public-skip-dir=
+
+# print messages in the console
+verbose=yes

Added: trunk/maay/configuration/win32/webapp.ini
===================================================================
--- trunk/maay/configuration/win32/webapp.ini	2005-11-09 17:02:17 UTC (rev 379)
+++ trunk/maay/configuration/win32/webapp.ini	2005-11-09 17:18:43 UTC (rev 380)
@@ -0,0 +1,7 @@
+[SERVER]
+db-name=maay
+db-host=localhost
+user=maay
+password=maay
+registration-host=localhost
+registration-port=2345

Modified: trunk/maay/server.py
===================================================================
--- trunk/maay/server.py	2005-11-09 17:02:17 UTC (rev 379)
+++ trunk/maay/server.py	2005-11-09 17:18:43 UTC (rev 380)
@@ -39,9 +39,18 @@
 # These imports are not used, but they help py2exe tremendously.
 # Do not remove them (that is, unless we change the database backend
 # or drop twisted)
+
+#from twisted.web import http
+#import twisted.application.service
+#import twisted.web.woven.guard
+#from twisted.python.components import *
+#from twisted.python.components import CannotAdapt
+#from nevow.compy import *
+#import nevow.events
 import nevow.flat.flatstan
 import nevow.query
-import twisted.web.woven.guard
+import nevow.i18n
+import nevow.flat.flatmdom
 import MySQLdb
 # end of py2exe helping imports
 

Added: trunk/maay/updateconfig.py
===================================================================
--- trunk/maay/updateconfig.py	2005-11-09 17:02:17 UTC (rev 379)
+++ trunk/maay/updateconfig.py	2005-11-09 17:18:43 UTC (rev 380)
@@ -0,0 +1,60 @@
+#     Copyright (C) 2005 France Telecom R&D
+#
+#     This program is free software; you can redistribute it and/or modify
+#     it under the terms of the GNU General Public License as published by
+#     the Free Software Foundation; either version 2 of the License, or
+#     (at your option) any later version.
+#
+#     This program is distributed in the hope that it will be useful,
+#     but WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#     GNU General Public License for more details.
+#
+#     You should have received a copy of the GNU General Public License
+#     along with this program; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+
+""" helper to create the indexer.ini configuration file at install time on windows"""
+import os
+import sys
+
+config = """[INDEXER]
+# Host on which the maay server is running
+host=localhost
+#Port on which the maay server is listening
+port=6789
+
+# User login on the maay server 
+user=maay
+# User password on the maay server
+password=maay
+
+# Which directories are to be indexed
+#  - private indexed directories are not available to  queries from other nodes
+#  - public indexed directories are available to these queries
+#  - skip dirs are not indexed
+#
+# If a document is available through both a public and a private directory, 
+# the public version prevails
+#
+# You can use a comma separated list of values to specify several
+# directories in each configuration variable. 
+private-index-dir=%(private)s
+private-skip-dir=%(private_skip)s
+public-index-dir=%(public)s
+public-skip-dir=%(public_skip)s
+"""
+
+def createConfigFile(myDesktop, myDocuments):
+    f=open("indexer.ini", "w")
+    values = {'private'     : '"%s","%s"' % (myDesktop, myDocuments),
+              'private_skip': '',
+              'public'      : '"%s\\Maay Documents"' % myDesktop,
+              'public_skip' : '',
+              }
+    f.write(config % values)
+    f.close()
+    
+if __name__ == '__main__':
+    createConfigFile(sys.argv[1], sys.argv[2])
+	

Modified: trunk/maay.iss
===================================================================
--- trunk/maay.iss	2005-11-09 17:02:17 UTC (rev 379)
+++ trunk/maay.iss	2005-11-09 17:18:43 UTC (rev 380)
@@ -20,6 +20,9 @@
 InfoBeforeFile=ReleaseNotes
 InfoAfterFile=README.txt
 
+[Dirs]
+Name: "{userdesktop}\Maay Documents";
+
 [Files]
 Source: "dist\*"; DestDir: "{app}"
 Source: "maay\data\*.css"; DestDir: "{app}\data"
@@ -28,7 +31,11 @@
 Source: "maay\data\images\*.png"; DestDir: "{app}\data\images"
 Source: "maay\data\images\*.ico"; DestDir: "{app}\data\images"
 Source: "maay\sql\mysql.sql"; DestDir: "{app}"
-Source: "thirdparty\mysql\*"; DestDir: "{app}\mysql" ; Flags: recursesubdirs
+Source: "thirdparty\mysql\data\*"; DestDir: "{app}\mysql\data" ; Flags: recursesubdirs
+Source: "thirdparty\mysql\share\*"; DestDir: "{app}\mysql\share" ; Flags: recursesubdirs
+Source: "thirdparty\mysql\bin\mysqlshutdown.exe"; DestDir: "{app}\mysql\bin"
+Source: "thirdparty\mysql\bin\mysqld-max-nt.exe"; DestDir: "{app}\mysql\bin"
+Source: "thirdparty\mysql\bin\mysql.exe"; DestDir: "{app}\mysql\bin"
 Source: "thirdparty\antiword\*"; DestDir: "c:\antiword" ; Flags: recursesubdirs
 Source: "thirdparty\pdftohtml-0.36\*"; DestDir: "{app}\pdftohtml" ; Flags: recursesubdirs
 Source: "maay\configuration\*.ini"; DestDir: "{app}"
@@ -43,21 +50,25 @@
 Name: "{group}\Maay Indexer"; Filename: "{app}\maay_indexer.exe"; WorkingDir: "{app}"; Comment: "The Maay indexer component"
 Name: "{group}\webapp.ini"; Filename: "{app}\webapp.ini"; Comment: "Maay server configuration"
 Name: "{group}\indexer.ini"; Filename: "{app}\indexer.ini"; Comment: "Maay indexer configuration"
+Name: "{group}\image.ini"; Filename: "{app}\image.ini"; Comment: "Maay indexer configuration"
 
-[Tasks]
-;Name: removedatabase; Description: "Erase indexation data"
-;Name: launchmaayserver; Description: "Launch maay server after installation"
 
 [Run]
 Filename: "{app}\mysql\bin\mysqld-max-nt.exe"; Parameters:"--install MySQL --defaults-file=""{app}\mysql\my-maay.ini"""; StatusMsg: "Registering MySQL as a service"; WorkingDir:"{app}\mysql"; Flags:runhidden
 Filename: "NET"; Parameters:"start MySQL"; StatusMsg: "Starting MySQL server"; WorkingDir:"{app}\mysql"; Flags:runhidden
 Filename: "{app}\createdb.exe"; StatusMsg: "Installing database"; WorkingDir:"{app}"; Flags:runhidden
+Filename: "{app}\updateconfig.exe"; Parameters:"""{userdesktop}"" ""{userdocs}"""; WorkingDir:"{app}"; Flags:runhidden
+;Filename: "{app}\maay_server.exe"; Parameters:"--install Maay"; StatusMsg: "Registering Maay as a service"; WorkingDir:"{app}"; Flags:runhidden
+;Filename: "NET"; Parameters: "start Maay"; StatusMsg: "Starting Maay node"; Flags:runhidden
 Filename: "{app}\maay_server.exe"; StatusMsg: "Launching maay server"; WorkingDir:"{app}"; Flags:postinstall nowait
 
 
 [UninstallRun]
 Filename: "NET"; Parameters: "stop MySQL"; StatusMsg: "Stopping MySQL database"; Flags:runhidden
+;Filename: "NET"; Parameters: "stop Maay"; StatusMsg: "Stopping Maay node"; Flags:runhidden
 Filename: "{app}\mysql\bin\mysqld-max-nt.exe"; Parameters:"--remove MySQL"; StatusMsg: "Unregistering MySQL as a service"; WorkingDir:"{app}\mysql"; Flags:runhidden
+;Filename: "{app}\maay_server.exe"; Parameters:"--remove Maay"; StatusMsg: "Unregistering Maay as a service"; WorkingDir:"{app}\mysql"; Flags:runhidden
 
-;[UninstallDelete]
-;Type: filesandordirs; Name: {app}\mysql\data; Tasks: removedatabase
+[UninstallDelete]
+Type: filesandordirs; Name: {app}\mysql\
+Type: files; Name: {app}\node_id

Modified: trunk/setup.py
===================================================================
--- trunk/setup.py	2005-11-09 17:02:17 UTC (rev 379)
+++ trunk/setup.py	2005-11-09 17:18:43 UTC (rev 380)
@@ -50,6 +50,9 @@
 			    script = 'maay/createdb.py',
 			    dest_base = "createdb")
 
+updateConfig = Target(description = "Configuration update program",
+			    script = 'maay/updateconfig.py',
+			    dest_base = "updateconfig")
 
 if sys.platform == 'win32':
 	import py2exe
@@ -57,7 +60,7 @@
             sys.argv.append('py2exe')
             
         
-	setup(console = [maay_server, maay_indexer,createdb],
+	setup(console = [maay_server, maay_indexer, createdb, updateConfig],
 		name = name,
 		version = version,
 		description = description,



From afayolle at berlios.de  Wed Nov  9 18:45:53 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Wed, 9 Nov 2005 18:45:53 +0100
Subject: [Maay-svncheckins] r381 - trunk/maay
Message-ID: <200511091745.jA9HjrbU010743@sheep.berlios.de>

Author: afayolle
Date: 2005-11-09 18:45:50 +0100 (Wed, 09 Nov 2005)
New Revision: 381

Modified:
   trunk/maay/querier.py
Log:
fixed SQL error in query

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-09 17:18:43 UTC (rev 380)
+++ trunk/maay/querier.py	2005-11-09 17:45:50 UTC (rev 381)
@@ -334,8 +334,8 @@
                     WHERE files.db_document_id IS NULL"""
         rows = cursor.execute(query1)
         query2 = """DELETE document_scores
-                    FROM document_scores LEFT JOIN documents
-                       document_scores.db_document_id = documents.db_document_id
+                    FROM document_scores LEFT JOIN  documents
+                       ON document_scores.db_document_id = documents.db_document_id
                     WHERE documents.db_document_id IS NULL"""
         rows += cursor.execute(query2)
         cursor.close()



From afayolle at berlios.de  Wed Nov  9 18:54:39 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Wed, 9 Nov 2005 18:54:39 +0100
Subject: [Maay-svncheckins] r382 - in trunk: . maay
Message-ID: <200511091754.jA9Hsd5q014375@sheep.berlios.de>

Author: afayolle
Date: 2005-11-09 18:54:34 +0100 (Wed, 09 Nov 2005)
New Revision: 382

Modified:
   trunk/maay.iss
   trunk/maay/updateconfig.py
Log:
couple of installer related fixes

Modified: trunk/maay/updateconfig.py
===================================================================
--- trunk/maay/updateconfig.py	2005-11-09 17:45:50 UTC (rev 381)
+++ trunk/maay/updateconfig.py	2005-11-09 17:54:34 UTC (rev 382)
@@ -47,9 +47,9 @@
 
 def createConfigFile(myDesktop, myDocuments):
     f=open("indexer.ini", "w")
-    values = {'private'     : '"%s","%s"' % (myDesktop, myDocuments),
+    values = {'private'     : '%s,%s' % (myDesktop, myDocuments),
               'private_skip': '',
-              'public'      : '"%s\\Maay Documents"' % myDesktop,
+              'public'      : '%s\\Maay Documents' % myDesktop,
               'public_skip' : '',
               }
     f.write(config % values)

Modified: trunk/maay.iss
===================================================================
--- trunk/maay.iss	2005-11-09 17:45:50 UTC (rev 381)
+++ trunk/maay.iss	2005-11-09 17:54:34 UTC (rev 382)
@@ -38,7 +38,7 @@
 Source: "thirdparty\mysql\bin\mysql.exe"; DestDir: "{app}\mysql\bin"
 Source: "thirdparty\antiword\*"; DestDir: "c:\antiword" ; Flags: recursesubdirs
 Source: "thirdparty\pdftohtml-0.36\*"; DestDir: "{app}\pdftohtml" ; Flags: recursesubdirs
-Source: "maay\configuration\*.ini"; DestDir: "{app}"
+Source: "maay\configuration\win32\*.ini"; DestDir: "{app}"
 Source: "README.txt"; DestDir: "{app}"
 Source: "ChangeLog"; DestDir: "{app}"
 Source: "ReleaseNotes"; DestDir: "{app}"



From afayolle at berlios.de  Wed Nov  9 19:54:01 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Wed, 9 Nov 2005 19:54:01 +0100
Subject: [Maay-svncheckins] r383 - trunk/maay
Message-ID: <200511091854.jA9Is1lg004238@sheep.berlios.de>

Author: afayolle
Date: 2005-11-09 19:53:58 +0100 (Wed, 09 Nov 2005)
New Revision: 383

Modified:
   trunk/maay/configuration.py
Log:
added missing imports

Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-09 17:54:34 UTC (rev 382)
+++ trunk/maay/configuration.py	2005-11-09 18:53:58 UTC (rev 383)
@@ -21,6 +21,9 @@
 import os, os.path as osp
 import sys
 import re
+import sha
+import platform
+import time
 
 from logilab.common.configuration import Configuration as BaseConfiguration
 



From afayolle at berlios.de  Wed Nov  9 19:54:55 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Wed, 9 Nov 2005 19:54:55 +0100
Subject: [Maay-svncheckins] r384 - trunk/maay
Message-ID: <200511091854.jA9IstIf004846@sheep.berlios.de>

Author: afayolle
Date: 2005-11-09 19:54:51 +0100 (Wed, 09 Nov 2005)
New Revision: 384

Modified:
   trunk/maay/p2pquerier.py
Log:
complain about bug introduced by last checkin of this file

Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-09 18:53:58 UTC (rev 383)
+++ trunk/maay/p2pquerier.py	2005-11-09 18:54:51 UTC (rev 384)
@@ -125,6 +125,7 @@
         # now, read a config. provided value for EXPIRATION_TIME
         config = WebappConfiguration()
         config.load()
+        # FIXME: config.query_life_time does not exist. Aurelien: have you commited the change ?
         P2pQuerier._EXPIRATION_TIME = max(config.query_life_time,
                                           P2pQuerier._EXPIRATION_TIME)
 



From afayolle at berlios.de  Wed Nov  9 19:56:10 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Wed, 9 Nov 2005 19:56:10 +0100
Subject: [Maay-svncheckins] r385 - trunk
Message-ID: <200511091856.jA9IuA1m005832@sheep.berlios.de>

Author: afayolle
Date: 2005-11-09 19:56:08 +0100 (Wed, 09 Nov 2005)
New Revision: 385

Added:
   trunk/maayservice.py
Modified:
   trunk/maay.iss
   trunk/setup.py
Log:
tried to build a service for the node. The registration still needs some work (dependency on mysql service not there yet)

Modified: trunk/maay.iss
===================================================================
--- trunk/maay.iss	2005-11-09 18:54:51 UTC (rev 384)
+++ trunk/maay.iss	2005-11-09 18:56:08 UTC (rev 385)
@@ -58,16 +58,16 @@
 Filename: "NET"; Parameters:"start MySQL"; StatusMsg: "Starting MySQL server"; WorkingDir:"{app}\mysql"; Flags:runhidden
 Filename: "{app}\createdb.exe"; StatusMsg: "Installing database"; WorkingDir:"{app}"; Flags:runhidden
 Filename: "{app}\updateconfig.exe"; Parameters:"""{userdesktop}"" ""{userdocs}"""; WorkingDir:"{app}"; Flags:runhidden
-;Filename: "{app}\maay_server.exe"; Parameters:"--install Maay"; StatusMsg: "Registering Maay as a service"; WorkingDir:"{app}"; Flags:runhidden
-;Filename: "NET"; Parameters: "start Maay"; StatusMsg: "Starting Maay node"; Flags:runhidden
-Filename: "{app}\maay_server.exe"; StatusMsg: "Launching maay server"; WorkingDir:"{app}"; Flags:postinstall nowait
+Filename: "{app}\maay.exe"; Parameters:"-install"; StatusMsg: "Registering Maay as a service"; WorkingDir:"{app}"; Flags:runhidden
+Filename: "NET"; Parameters: "start Maay"; StatusMsg: "Starting Maay node"; Flags:runhidden
+;Filename: "{app}\maay_server.exe"; StatusMsg: "Launching maay server"; WorkingDir:"{app}"; Flags:postinstall nowait
 
 
 [UninstallRun]
 Filename: "NET"; Parameters: "stop MySQL"; StatusMsg: "Stopping MySQL database"; Flags:runhidden
-;Filename: "NET"; Parameters: "stop Maay"; StatusMsg: "Stopping Maay node"; Flags:runhidden
+Filename: "NET"; Parameters: "stop Maay"; StatusMsg: "Stopping Maay node"; Flags:runhidden
 Filename: "{app}\mysql\bin\mysqld-max-nt.exe"; Parameters:"--remove MySQL"; StatusMsg: "Unregistering MySQL as a service"; WorkingDir:"{app}\mysql"; Flags:runhidden
-;Filename: "{app}\maay_server.exe"; Parameters:"--remove Maay"; StatusMsg: "Unregistering Maay as a service"; WorkingDir:"{app}\mysql"; Flags:runhidden
+Filename: "{app}\maay.exe"; Parameters:"-remove"; StatusMsg: "Unregistering Maay as a service"; WorkingDir:"{app}\mysql"; Flags:runhidden
 
 [UninstallDelete]
 Type: filesandordirs; Name: {app}\mysql\

Added: trunk/maayservice.py
===================================================================
--- trunk/maayservice.py	2005-11-09 18:54:51 UTC (rev 384)
+++ trunk/maayservice.py	2005-11-09 18:56:08 UTC (rev 385)
@@ -0,0 +1,55 @@
+#     Copyright (C) 2005 France Telecom R&D
+#
+#     This program is free software; you can redistribute it and/or modify
+#     it under the terms of the GNU General Public License as published by
+#     the Free Software Foundation; either version 2 of the License, or
+#     (at your option) any later version.
+#
+#     This program is distributed in the hope that it will be useful,
+#     but WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#     GNU General Public License for more details.
+#
+#     You should have received a copy of the GNU General Public License
+#     along with this program; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+
+import win32serviceutil
+import win32service
+import win32event
+import win32evtlogutil
+
+from twisted.internet import reactor
+
+class MyService(win32serviceutil.ServiceFramework):
+    _svc_name_ = "Maay"
+    _svc_display_name_ = "Maay"
+    _svc_deps_ = ["EventLog"]
+    def __init__(self, args):
+        win32serviceutil.ServiceFramework.__init__(self, args)
+
+    def SvcStop(self):
+        self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)
+        reactor.stop()
+
+    def SvcDoRun(self):
+        import servicemanager
+        from maay.server import run
+        win32evtlogutil.ReportEvent(self._svc_name_,
+                                    servicemanager.PYS_SERVICE_STARTED,
+                                    0, # category
+                                    servicemanager.EVENTLOG_INFORMATION_TYPE,
+                                    (self._svc_name_, ''))
+
+        run()
+        # and write a 'stopped' event to the event log.
+        win32evtlogutil.ReportEvent(self._svc_name_,
+                                    servicemanager.PYS_SERVICE_STOPPED,
+                                    0, # category
+                                    servicemanager.EVENTLOG_INFORMATION_TYPE,
+                                    (self._svc_name_, ''))
+
+
+if __name__ == '__main__':
+    # Note that this code will not be run in the 'frozen' exe-file!!!
+    win32serviceutil.HandleCommandLine(MyService)

Modified: trunk/setup.py
===================================================================
--- trunk/setup.py	2005-11-09 18:54:51 UTC (rev 384)
+++ trunk/setup.py	2005-11-09 18:56:08 UTC (rev 385)
@@ -54,13 +54,19 @@
 			    script = 'maay/updateconfig.py',
 			    dest_base = "updateconfig")
 
+maay_service = Target(description = "The Maay service",
+                      modules = ["maayservice"],
+                      dest_base = "Maay")
+
 if sys.platform == 'win32':
 	import py2exe
         if len(sys.argv) == 1:
             sys.argv.append('py2exe')
             
         
-	setup(console = [maay_server, maay_indexer, createdb, updateConfig],
+	setup(console = [maay_server, maay_indexer,
+                         createdb, updateConfig],
+              service = [maay_service],
 		name = name,
 		version = version,
 		description = description,



From aurelienc at berlios.de  Thu Nov 10 09:12:48 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 10 Nov 2005 09:12:48 +0100
Subject: [Maay-svncheckins] r386 - trunk/maay
Message-ID: <200511100812.jAA8Cmql016181@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-10 09:12:29 +0100 (Thu, 10 Nov 2005)
New Revision: 386

Modified:
   trunk/maay/configuration.py
   trunk/maay/p2pquerier.py
Log:
The query-life-time config option is there now (sorry for the delay).


Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-09 18:56:08 UTC (rev 385)
+++ trunk/maay/configuration.py	2005-11-10 08:12:29 UTC (rev 386)
@@ -187,6 +187,11 @@
           'help' : "Maay will store the generated node id in this file",
           'default' : "node_id",
           }),
+        ('query-life-time',
+         {'type' : 'int', 'metavar' : '<query_life_time>',
+          'help' : "Sets the maximum time allowed for a query to live in the node caches",
+          'default' : 60,
+          }),
         ]
 
     config_file = 'webapp.ini'

Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-09 18:56:08 UTC (rev 385)
+++ trunk/maay/p2pquerier.py	2005-11-10 08:12:29 UTC (rev 386)
@@ -37,7 +37,7 @@
     hasher.update('%s' % time.time())
     return hasher.hexdigest()
 
-# XXX should P2pQuery derive from query.Query?
+# XXX should P2pQuery derive from query.Query? (auc : no)
 class P2pQuery:
     def __init__(self, sender, port, query, ttl=5, qid=None):
         """
@@ -47,6 +47,7 @@
         :type port: int
         :param query: the query to wrap
         :type query: `maay.query.Query`
+        :type qid: str
 
         """
         if qid:
@@ -125,7 +126,6 @@
         # now, read a config. provided value for EXPIRATION_TIME
         config = WebappConfiguration()
         config.load()
-        # FIXME: config.query_life_time does not exist. Aurelien: have you commited the change ?
         P2pQuerier._EXPIRATION_TIME = max(config.query_life_time,
                                           P2pQuerier._EXPIRATION_TIME)
 



From adimasci at berlios.de  Thu Nov 10 09:18:55 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Thu, 10 Nov 2005 09:18:55 +0100
Subject: [Maay-svncheckins] r387 - trunk/maay/data
Message-ID: <200511100818.jAA8It9T020174@sheep.berlios.de>

Author: adimasci
Date: 2005-11-10 09:18:44 +0100 (Thu, 10 Nov 2005)
New Revision: 387

Modified:
   trunk/maay/data/liveresults.html
   trunk/maay/data/maay.css
Log:
dummy comsetic changes

Modified: trunk/maay/data/liveresults.html
===================================================================
--- trunk/maay/data/liveresults.html	2005-11-10 08:12:29 UTC (rev 386)
+++ trunk/maay/data/liveresults.html	2005-11-10 08:18:44 UTC (rev 387)
@@ -13,7 +13,6 @@
   div.innerHTML = source;
 }
 function startConnection() {
-  alert("Hello !");
   var d = server.callRemote('foo');
 }
     </script>

Modified: trunk/maay/data/maay.css
===================================================================
--- trunk/maay/data/maay.css	2005-11-10 08:12:29 UTC (rev 386)
+++ trunk/maay/data/maay.css	2005-11-10 08:18:44 UTC (rev 387)
@@ -13,7 +13,7 @@
 input.searchButton {
   background: #FFF0FF;
   border: 1px outset #ff2222;
-  margin: 5 10 5 0;
+  margin: 5px 10px 5px 0px;
 }
 
 table.searchHome {



From adimasci at berlios.de  Thu Nov 10 09:25:34 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Thu, 10 Nov 2005 09:25:34 +0100
Subject: [Maay-svncheckins] r388 - trunk/maay
Message-ID: <200511100825.jAA8PYrx025770@sheep.berlios.de>

Author: adimasci
Date: 2005-11-10 09:25:21 +0100 (Thu, 10 Nov 2005)
New Revision: 388

Modified:
   trunk/maay/p2pquerier.py
   trunk/maay/webapplication.py
Log:
- callbacks in p2pquerier are now associated to a specific query
- started to implement live pages for results. Still doesn't work, and lot
  of ugly stuff. 

This checkin should change a bit the results page presentation, but it
hopefully still works as before.

TODO now : move most of the SearchForm.child_search() content (especially
the local and distributed queries) into the ResultsPage.__init__() method
in order to prevent ugly and buggy checks like "if not words: ...".
Not sure it will solve the QueueUnderflow stuff, though



Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-10 08:18:44 UTC (rev 387)
+++ trunk/maay/p2pquerier.py	2005-11-10 08:25:21 UTC (rev 388)
@@ -117,11 +117,11 @@
     _markedQueries = {}
     _receivedQueries = {} # key : queryId, val : query
     _sentQueries = {}     
-    _answerCallbacks = []
     
     def __init__(self, nodeId, querier):
         self.nodeId = nodeId  
         self.querier = querier
+        self._answerCallbacks = {}
         reactor.callLater(20, self._markQueries)
         # now, read a config. provided value for EXPIRATION_TIME
         config = WebappConfiguration()
@@ -176,13 +176,13 @@
             self._sentQueries[query.qid] = query
             print " ... sent to %s" % neighbor
 
-    def addAnswerCallback(self, callback):
-        print "P2pQuerier : registering callback %s for results" \
-              % callback
-        P2pQuerier._answerCallbacks.append(callback)
+    def addAnswerCallback(self, queryId, callback):
+        print "P2pQuerier : registering callback (%s, %s) for results" \
+              % (queryId, callback)
+        self._answerCallbacks.setdefault(queryId, []).append(callback)
 
-    def _notifyAnswerCallbacks(self, results):
-        for cb in P2pQuerier._answerCallbacks:
+    def _notifyAnswerCallbacks(self, queryId, results):
+        for cb in self._answerCallbacks.get(queryId, []):
             cb(results)
 
     def receiveQuery(self, query):
@@ -259,7 +259,7 @@
             except ValueError:
                 print "unknown node %s" % query.sender
         else: # local would be true ? don't waste the answers ...
-            self._notifyAnswerCallbacks(toSend)
+            self._notifyAnswerCallbacks(answer.queryId, toSend)
     
     def _selectTargetNeighbors(self, query):
         """return a list of nodes to which the query will be sent.

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-10 08:18:44 UTC (rev 387)
+++ trunk/maay/webapplication.py	2005-11-10 08:25:21 UTC (rev 388)
@@ -133,32 +133,38 @@
         theDistributedQuery = P2pQuery(webappConfig.get_node_id(),
                                        webappConfig.rpcserver_port,
                                        query)
+        
         self.p2pquerier.sendQuery(theDistributedQuery)
-        self.p2pquerier.addAnswerCallback(self.newStuff)
         self.oldContext = context
 
-    def newStuff(self, results):
-        print "newStuff, great !"
-        self.child_search(oldContext, results)
 
-    def child_search(self, context, results=None):
+    def child_search(self, context):
         # query = unicode(context.arg('words'))        
         offset = int(context.arg('offset', 0))
-        if not results:
-            rawQuery = unicode(context.arg('words'), 'utf-8')
-            query = Query.fromRawQuery(rawQuery, offset)
-            localResults = self.querier.findDocuments(query)
-            self._askForPeerResults(query, context)
-            return ResultsPage(self.maayId, localResults, query, offset)
-        else:
-            return ResultsPage(self.maayId, results, query, offset)
-        # return FACTORY.clientFactory(context, self.maayId, results, query)
+        words = context.arg('words')
+        if not words:
+            query = Query.fromRawQuery('')
+            return FACTORY.getLivePage(context)
+        rawQuery = unicode(context.arg('words'), 'utf-8')
+        query = Query.fromRawQuery(rawQuery, offset)
+        localResults = self.querier.findDocuments(query)
+        # self._askForPeerResults(query, context)
+        resultsPage = FACTORY.clientFactory(context, self.maayId, localResults, query, offset)
+        #######################
+        webappConfig = IServerConfiguration(context)
+        p2pQuery = P2pQuery(webappConfig.get_node_id(),
+                            webappConfig.rpcserver_port,
+                            query)
+        self.p2pquerier.sendQuery(p2pQuery)
+        #######################
 
+        self.p2pquerier.addAnswerCallback(p2pQuery.qid, resultsPage.onNewResults)
+        return resultsPage
+    
     # XXX make sure that the requested document is really in the database
     # XXX don't forget to update the download statistics of the document
     def child_download(self, context):
         docid = context.arg('docid')
-        # query = unicode(context.arg('words'))
         query = Query.fromRawQuery(unicode(context.arg('words'), 'utf-8'))
         docurl = self.querier.notifyDownload(docid, query.words)
         if docurl:
@@ -182,21 +188,28 @@
         return context.tag
 
 
-class ResultsPage(MaayPage):
+from nevow import athena, inevow
+from twisted.python import log
+
+class ResultsPage(athena.LivePage):
     """default results page"""
-    bodyFactory = loaders.xmlfile(get_path_of('resultpage.html'))
-    addSlash = False    
+    child_maaycss = static.File(get_path_of('maay.css'))
+    child_images = static.File(get_path_of('images/'))
+    docFactory = loaders.xmlfile(get_path_of('liveresults.html'))
+    addSlash = False
+
+    instances = []
     
     def __init__(self, maayId, results, query, offset):
-        MaayPage.__init__(self, maayId)
+        athena.LivePage.__init__(self)
+        self.maayId = maayId
         self.results = results
-        self.query = query.words # unicode(query)
         self.offset = offset
+        self.query = query.words # unicode(query)
 
-
     def data_results(self, context, data):
         return self.results
-
+    
     def render_title(self, context, data):
         context.fillSlots('words', self.query)
         context.fillSlots('start_result', min(len(self.results), self.offset + 1))
@@ -219,7 +232,6 @@
         offset = int(context.arg('offset', 0)) + 15
         return 'search?words=%s&offset=%s' % ('+'.join(words), offset)
 
-    
     def render_row(self, context, data):
         document = data
         words = self.query.split()
@@ -231,6 +243,8 @@
             abstract = makeAbstract(document.text, words)
             abstract = normalize_text(unicode(abstract))
         except Exception, exc:
+            import traceback
+            traceback.print_exc()
             print exc
             abstract = u'No abstract available for this document [%s]' % exc
         context.fillSlots('abstract', tags.xml(abstract))
@@ -242,107 +256,37 @@
         context.fillSlots('publication_date', date.strftime('%d %b %Y'))
         return context.tag
 
+    def onNewResults(self, results):
+        # r = mergeResults(self.results, results)
+        # source = htmlize(r)
+        print "++++++++++++++++++ Got new resulsts", results
+        self.callRemote('updateResults', u'<div>%r</div>' % results)
 
+    def remote_foo(self, context):
+        print "************************************************** le client m'appelle !!"
+        return 0
 
-## from twisted.internet import reactor
-## from nevow import athena
-## class ResultsPage(athena.LivePage):
-##     """default results page"""
-##     child_maaycss = static.File(get_path_of('maay.css'))
-##     child_images = static.File(get_path_of('images/'))
-##     docFactory = loaders.xmlfile(get_path_of('liveresults.html'))
-##     addSlash = False
-    
-##     def __init__(self, maayId, results, query, offset):
-##         athena.LivePage.__init__(self)
-##         self.maayId = maayId
-##         self.results = results
-##         self.offset = offset
-##         self.query = query.words # unicode(query)
-##         reactor.callLater(5, self.updatePage)
 
+class ResultsPageFactory(athena.LivePageFactory):
+    def getLivePage(self, context):
+        livepageId = inevow.IRequest(context).getHeader('Livepage-Id')
+        print "*** livepage id =", livepageId
+        if livepageId is not None:
+            return self.clients.get(livepageId)
+        else:
+            return None        
 
-##     def data_results(self, context, data):
-##         return self.results
+    def clientFactory(self, context, maayId, results, query, offset):
+        livepage = self.getLivePage(context)
+        if livepage is None:
+            return self._manufactureClient(maayId, results, query, offset)
+        else:
+            return livepage
+        
+    def _manufactureClient(self, maayId, results, query, offset):
+        print "Building livepage !"
+        cl = self._pageFactory(maayId, results, query, offset)
+        cl.factory = self
+        return cl
 
-##     def render_title(self, context, data):
-##         context.fillSlots('words', self.query)
-##         context.fillSlots('start_result', min(len(self.results), self.offset + 1))
-##         context.fillSlots('end_result', self.offset + len(self.results))
-##         return context.tag
-
-##     def render_searchfield(self, context, data):
-##         context.fillSlots('words', self.query)
-##         return context.tag
-
-##     def render_prevset_url(self, context, data):
-##         words = WORDS_RGX.findall(normalizeText(unicode(context.arg('words'), 'utf-8')))
-##         offset = int(context.arg('offset', 0))
-##         if offset:
-##             offset -= 15
-##         return 'search?words=%s&offset=%s' % ('+'.join(words), offset)
-
-##     def render_nextset_url(self, context, data):
-##         words = WORDS_RGX.findall(normalizeText(unicode(context.arg('words'), 'utf-8')))
-##         offset = int(context.arg('offset', 0)) + 15
-##         return 'search?words=%s&offset=%s' % ('+'.join(words), offset)
-
-    
-##     def render_row(self, context, data):
-##         document = data
-##         words = self.query.split()
-##         context.fillSlots('mime_type', re.sub("/", "_", document.mime_type))
-##         context.fillSlots('doctitle',
-##                           tags.xml(boldifyText(document.title, words)))
-##         # XXX abstract attribute should be a unicode string
-##         try:
-##             abstract = makeAbstract(document.text, words)
-##             abstract = normalize_text(unicode(abstract))
-##         except Exception, exc:
-##             print exc
-##             abstract = u'No abstract available for this document [%s]' % exc
-##         context.fillSlots('abstract', tags.xml(abstract))
-##         context.fillSlots('docid', document.db_document_id)
-##         context.fillSlots('docurl', tags.xml(boldifyText(document.url, words)))
-##         context.fillSlots('words', self.query)
-##         context.fillSlots('readable_size', document.readable_size())
-##         date = datetime.fromtimestamp(document.publication_time)
-##         context.fillSlots('publication_date', date.strftime('%d %b %Y'))
-##         return context.tag
-
-
-##     def updatePage(self):
-##         print "ZOUuuuuuuuuuuuuuuuuuuuuuuuuuuu"
-##         source = u"<h3>YO !!!!!!</h3>"
-##         self.callRemote('updateResults', source)
-
-##     def xmlrpc_foo(self):
-##         print "le client m'appelle !!"
-##         return 0
-
-
-## class ResultsPageFactory(athena.LivePageFactory):
-##     def clientFactory(self, context, maayId, results, query):
-##         livepageId = inevow.IRequest(context).getHeader('Livepage-Id')
-##         if livepageId is not None:
-##             livepage = self.clients.get(livepageId)
-##             if livepage is not None:
-##                 # A returning, known client.  Give them their page.
-##                 return livepage
-##             else:
-##                 # A really old, expired client.  Or maybe an evil
-##                 # hax0r.  Give them a fresh new page and log the
-##                 # occurrence.
-##                 if self.noisy:
-##                     log.msg("Unknown Livepage-Id: %r" % (livepageId,))
-##                 return self._manufactureClient(maayId, results, query)
-##         else:
-##             # A brand new client.  Give them a brand new page!
-##             return self._manufactureClient(maayId, results, query)
-
-##     def _manufactureClient(self, maayId, results, query):
-##         cl = self._pageFactory(maayId, results, query)
-##         cl.factory = self
-##         return cl
-
-## FACTORY = ResultsPageFactory(ResultsPage)
+FACTORY = ResultsPageFactory(ResultsPage)



From aurelienc at berlios.de  Thu Nov 10 10:07:36 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 10 Nov 2005 10:07:36 +0100
Subject: [Maay-svncheckins] r389 - trunk/maay/test
Message-ID: <200511100907.jAA97auJ022216@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-10 10:07:31 +0100 (Thu, 10 Nov 2005)
New Revision: 389

Modified:
   trunk/maay/test/test_configuration.py
Log:
Fix ServerConfiguration -> WebappConfiguration transition.


Modified: trunk/maay/test/test_configuration.py
===================================================================
--- trunk/maay/test/test_configuration.py	2005-11-10 08:25:21 UTC (rev 388)
+++ trunk/maay/test/test_configuration.py	2005-11-10 09:07:31 UTC (rev 389)
@@ -37,7 +37,7 @@
                 ('maay --db-host foo --db-name maille', ('foo', 'maille')),
                 ]
         for cmdLine, (expectedHost, expectedDatabase) in data:
-            config = ServerConfiguration()
+            config = WebappConfiguration()
             sys.argv = cmdLine.split()
             config.load()
             self.assertEquals(config.db_host, expectedHost)
@@ -47,14 +47,14 @@
     #      this test needs to be run first. This is a BUG that I
     #      could not fix easily.
     def test0FromConfigFile(self):
-        config = ServerConfiguration()
+        config = WebappConfiguration()
         config.config_file = osp.join(osp.dirname(__file__), 'data', 'webapp1.ini')
         config.load()
         self.assertEquals(config.db_host, 'eusebius')
         self.assertEquals(config.db_name, 'maay')
 
     def testFromBoth(self):
-        config = ServerConfiguration()
+        config = WebappConfiguration()
         sys.argv = 'maay --db-host truc'.split()
         config.config_file = osp.join(osp.dirname(__file__), 'data', 'webapp2.ini')
         config.load()



From aurelienc at berlios.de  Thu Nov 10 10:08:35 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 10 Nov 2005 10:08:35 +0100
Subject: [Maay-svncheckins] r390 - trunk/maay
Message-ID: <200511100908.jAA98Zwh024515@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-10 10:08:33 +0100 (Thu, 10 Nov 2005)
New Revision: 390

Modified:
   trunk/maay/p2pquerier.py
Log:
Ridiculous cosmetic change


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-10 09:07:31 UTC (rev 389)
+++ trunk/maay/p2pquerier.py	2005-11-10 09:08:33 UTC (rev 390)
@@ -122,13 +122,17 @@
         self.nodeId = nodeId  
         self.querier = querier
         self._answerCallbacks = {}
-        reactor.callLater(20, self._markQueries)
         # now, read a config. provided value for EXPIRATION_TIME
+        # and fire the garbage collector
         config = WebappConfiguration()
         config.load()
         P2pQuerier._EXPIRATION_TIME = max(config.query_life_time,
                                           P2pQuerier._EXPIRATION_TIME)
+        reactor.callLater(self._EXPIRATION_TIME, self._markQueries)
 
+
+    ######## Stuff to remove old queries from cache
+        
     def _markQueries(self):
         queries = self._receivedQueries.keys() + self._sentQueries.keys()
         stamp = time.time()
@@ -158,6 +162,19 @@
             print "P2pQuerier garbage collected old queries : %s" % \
             expiredQueries
 
+    ######### Callback ops (who to feed the results of a query)
+
+    def addAnswerCallback(self, queryId, callback):
+        print "P2pQuerier : registering callback (%s, %s) for results" \
+              % (queryId, callback)
+        self._answerCallbacks.setdefault(queryId, []).append(callback)
+
+    def _notifyAnswerCallbacks(self, queryId, results):
+        for cb in self._answerCallbacks.get(queryId, []):
+            cb(results)
+
+    ######### True p2p ops (send, receive, answer ...)
+
     def sendQuery(self, query):
         """
         :type query: `maay.p2pquerier.P2pQuery`
@@ -176,15 +193,7 @@
             self._sentQueries[query.qid] = query
             print " ... sent to %s" % neighbor
 
-    def addAnswerCallback(self, queryId, callback):
-        print "P2pQuerier : registering callback (%s, %s) for results" \
-              % (queryId, callback)
-        self._answerCallbacks.setdefault(queryId, []).append(callback)
 
-    def _notifyAnswerCallbacks(self, queryId, results):
-        for cb in self._answerCallbacks.get(queryId, []):
-            cb(results)
-
     def receiveQuery(self, query):
         """
         :type query: `maay.p2pquerier.P2pQuery`



From afayolle at berlios.de  Thu Nov 10 10:49:54 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Thu, 10 Nov 2005 10:49:54 +0100
Subject: [Maay-svncheckins] r391 - trunk/maay
Message-ID: <200511100949.jAA9nsAM003985@sheep.berlios.de>

Author: afayolle
Date: 2005-11-10 10:49:45 +0100 (Thu, 10 Nov 2005)
New Revision: 391

Modified:
   trunk/maay/p2pquerier.py
   trunk/maay/querier.py
   trunk/maay/rpc.py
Log:
register node when we receive a packet

Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-10 09:08:33 UTC (rev 390)
+++ trunk/maay/p2pquerier.py	2005-11-10 09:49:45 UTC (rev 391)
@@ -39,7 +39,7 @@
 
 # XXX should P2pQuery derive from query.Query? (auc : no)
 class P2pQuery:
-    def __init__(self, sender, port, query, ttl=5, qid=None):
+    def __init__(self, sender, port, query, ttl=5, qid=None, host=None):
         """
         :param sender: really a nodeId
         :type sender: str
@@ -47,8 +47,10 @@
         :type port: int
         :param query: the query to wrap
         :type query: `maay.query.Query`
+        :param qid: query identifier
         :type qid: str
-
+        :param host: IP adress of sender
+        :type host: str
         """
         if qid:
             self.qid = qid
@@ -59,7 +61,8 @@
         self.ttl = ttl
         self.query = query
         self.documents_ids = set()
-
+        self.host = host
+        
     def hop(self):
         self.ttl -= 1
 

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-10 09:08:33 UTC (rev 390)
+++ trunk/maay/querier.py	2005-11-10 09:49:45 UTC (rev 391)
@@ -257,7 +257,7 @@
         self._cnx.commit()
 
 
-    def registerNode(self, nodeId, ip, port, bandwidth, lastSeenTime=None):
+    def registerNode(self, nodeId, ip, port, bandwidth=None, lastSeenTime=None):
         """this will be used as a callback in registrationclient/login"""
         print "AnonymousQuerier registerNode (callback) %s %s:%s" % \
                                                              (nodeId, ip, port)
@@ -266,7 +266,7 @@
         node = Node.selectOrInsertWhere(cursor, node_id=nodeId)[0]
         node.ip = ip
         node.port = port
-        node.bandwidth = bandwidth
+        node.bandwidth = bandwidth or 1
         node.last_seen_time = lastSeenTime
         node.commit(cursor, update=True)
         cursor.close()

Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-10 09:08:33 UTC (rev 390)
+++ trunk/maay/rpc.py	2005-11-10 09:49:45 UTC (rev 391)
@@ -156,8 +156,9 @@
                          query=Query(queryDict['words'],
                                      filetype=queryDict['mime_type']),
                          ttl=queryDict['ttl'],
-                         qid=queryDict['qid'])
-        query.host = self._lastClient.host
+                         qid=queryDict['qid'],
+                         host = self._lastClient.host)
+        self.querier.registerNode(query.sender, query.host, query.port)
         # schedule the query for later processing and return immediately
         # this enables the sender to query several nodes in a row
         d = reactor.callLater(.01, self.getP2pQuerier().receiveQuery, query)



From aurelienc at berlios.de  Thu Nov 10 11:13:01 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 10 Nov 2005 11:13:01 +0100
Subject: [Maay-svncheckins] r392 - trunk/maay
Message-ID: <200511101013.jAAAD1xL007186@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-10 11:12:53 +0100 (Thu, 10 Nov 2005)
New Revision: 392

Modified:
   trunk/maay/rpc.py
Log:
Properly retrieve anonymous querier


Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-10 09:49:45 UTC (rev 391)
+++ trunk/maay/rpc.py	2005-11-10 10:12:53 UTC (rev 392)
@@ -158,7 +158,8 @@
                          ttl=queryDict['ttl'],
                          qid=queryDict['qid'],
                          host = self._lastClient.host)
-        self.querier.registerNode(query.sender, query.host, query.port)
+        querier = self._sessions[ANONYMOUS_AVATARID]
+        querier.registerNode(query.sender, query.host, query.port)
         # schedule the query for later processing and return immediately
         # this enables the sender to query several nodes in a row
         d = reactor.callLater(.01, self.getP2pQuerier().receiveQuery, query)



From afayolle at berlios.de  Thu Nov 10 11:22:12 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Thu, 10 Nov 2005 11:22:12 +0100
Subject: [Maay-svncheckins] r393 - trunk/maay
Message-ID: <200511101022.jAAAMCmV008688@sheep.berlios.de>

Author: afayolle
Date: 2005-11-10 11:22:09 +0100 (Thu, 10 Nov 2005)
New Revision: 393

Modified:
   trunk/maay/presenceserver.py
Log:
use physical address instead of client-supplied address

Modified: trunk/maay/presenceserver.py
===================================================================
--- trunk/maay/presenceserver.py	2005-11-10 10:12:53 UTC (rev 392)
+++ trunk/maay/presenceserver.py	2005-11-10 10:22:09 UTC (rev 393)
@@ -90,7 +90,7 @@
         PresenceServer._ruTimestamp[nodeId] = lastseen
         PresenceServer._registeredUsers[nodeId] = (lastseen.isoformat(),
                                          nodeId,
-                                         ip,
+                                         self.transport.getPeer(),
                                          port,
                                          bandwidth)
 



From afayolle at berlios.de  Thu Nov 10 11:25:53 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Thu, 10 Nov 2005 11:25:53 +0100
Subject: [Maay-svncheckins] r394 - trunk/maay
Message-ID: <200511101025.jAAAPrDw009188@sheep.berlios.de>

Author: afayolle
Date: 2005-11-10 11:25:39 +0100 (Thu, 10 Nov 2005)
New Revision: 394

Modified:
   trunk/maay/presenceserver.py
Log:
bug fix for peer IP adress

Modified: trunk/maay/presenceserver.py
===================================================================
--- trunk/maay/presenceserver.py	2005-11-10 10:22:09 UTC (rev 393)
+++ trunk/maay/presenceserver.py	2005-11-10 10:25:39 UTC (rev 394)
@@ -90,7 +90,7 @@
         PresenceServer._ruTimestamp[nodeId] = lastseen
         PresenceServer._registeredUsers[nodeId] = (lastseen.isoformat(),
                                          nodeId,
-                                         self.transport.getPeer(),
+                                         self.transport.getPeer().host,
                                          port,
                                          bandwidth)
 



From aurelienc at berlios.de  Thu Nov 10 11:49:05 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 10 Nov 2005 11:49:05 +0100
Subject: [Maay-svncheckins] r395 - trunk/maay
Message-ID: <200511101049.jAAAn5uB012030@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-10 11:49:02 +0100 (Thu, 10 Nov 2005)
New Revision: 395

Modified:
   trunk/maay/p2pquerier.py
Log:
Fix sendQuery errback


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-10 10:25:39 UTC (rev 394)
+++ trunk/maay/p2pquerier.py	2005-11-10 10:49:02 UTC (rev 395)
@@ -96,11 +96,11 @@
         self.queryId = queryId
         self.documents = documents
 
-def sendQueryProblem(self, *args):
+def sendQueryProblem(failure):
     """Politely displays any problem (bug, unavailability) related
     to an attempt to send a query.
     """
-    print " ... problem sending the query : %s" % (args,)
+    print " ... problem sending the query : %s" % failure.getTraceback()
 
 class P2pQuerier:
     """The P2pQuerier class is responsible for managing P2P queries.



From dnf at berlios.de  Thu Nov 10 12:08:33 2005
From: dnf at berlios.de (Frédéric DANG NGOC at BerliOS)
Date: Thu, 10 Nov 2005 12:08:33 +0100
Subject: [Maay-svncheckins] r396 - in trunk/maay/data: . images
Message-ID: <200511101108.jAAB8XpR015327@sheep.berlios.de>

Author: dnf
Date: 2005-11-10 12:08:30 +0100 (Thu, 10 Nov 2005)
New Revision: 396

Added:
   trunk/maay/data/images/python_icon.png
Modified:
   trunk/maay/data/liveresults.html
   trunk/maay/data/maay.css
Log:
Some esthetic modifications...


Added: trunk/maay/data/images/python_icon.png
===================================================================
(Binary files differ)


Property changes on: trunk/maay/data/images/python_icon.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Modified: trunk/maay/data/liveresults.html
===================================================================
--- trunk/maay/data/liveresults.html	2005-11-10 10:49:02 UTC (rev 395)
+++ trunk/maay/data/liveresults.html	2005-11-10 11:08:30 UTC (rev 396)
@@ -25,14 +25,17 @@
     <form action="search" accept-charset="utf-8">
       <table>
         <tr>
-          <td><img src="images/smallmaay.png" /></td>
+          <td><a href="/"><img border="0" src="images/smallmaay.png" /></a></td>
           <td><input type="text" name="words" nevow:render="searchfield"><nevow:attr name="value" ><nevow:slot name="words" /></nevow:attr></input></td>
           <td><input type="submit" class="searchButton" value="search" /></td>
 	</tr>
       </table>
     </form>      
   </div>
-  <div class="message" nevow:render="title">Results for "<nevow:slot name="words" />"</div>
+  <div class="message" nevow:render="title">Results <nevow:slot name="start_result" /> - <nevow:slot name="end_result" /> for <b><nevow:slot name="words" /></b>.</div>
+  <!--
+  <div class="sort"><a href="">Sort by date</a> - <a href="">Sort by popularity</a></div>
+  -->
   <div id="resultsDiv"></div>
   <table class="results" nevow:render="sequence" nevow:data="results">
     <tr nevow:pattern="item" nevow:render="row">
@@ -49,4 +52,4 @@
   nevow:render="prevset_url"/>Previous</a> - <a><nevow:attr
   name="href" nevow:render="nextset_url"/>Next</a></div>
   </body>
-</html>
\ No newline at end of file
+</html>

Modified: trunk/maay/data/maay.css
===================================================================
--- trunk/maay/data/maay.css	2005-11-10 10:49:02 UTC (rev 395)
+++ trunk/maay/data/maay.css	2005-11-10 11:08:30 UTC (rev 396)
@@ -77,6 +77,11 @@
   border: 0px;
 }
 
+div.sort {
+  font-size: 60%;
+  text-align: right;
+}
+
 /** icon *******/
 div.text_html {
   /* display: block; */
@@ -95,3 +100,12 @@
   height: 16px;
   background: url(images/txt_icon.png);
 }
+
+div.text_x-python {
+  /* display: block; */
+  margin-bottom: 0px;
+  padding: 0 0 0 0;
+  width: 16px;
+  height: 16px;
+  background: url(images/python_icon.png);
+}



From aurelienc at berlios.de  Thu Nov 10 12:38:53 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 10 Nov 2005 12:38:53 +0100
Subject: [Maay-svncheckins] r397 - trunk/maay
Message-ID: <200511101138.jAABcrCC029925@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-10 12:38:51 +0100 (Thu, 10 Nov 2005)
New Revision: 397

Modified:
   trunk/maay/p2pquerier.py
Log:
Add stuff to help understand who we couldn't send query/answers


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-10 11:08:30 UTC (rev 396)
+++ trunk/maay/p2pquerier.py	2005-11-10 11:38:51 UTC (rev 397)
@@ -96,12 +96,40 @@
         self.queryId = queryId
         self.documents = documents
 
-def sendQueryProblem(failure):
-    """Politely displays any problem (bug, unavailability) related
-    to an attempt to send a query.
+class P2pErrbacks:
+    """a small namespace to hold errbacks and contextual
+       information so as to display meaningful stuff
     """
-    print " ... problem sending the query : %s" % failure.getTraceback()
 
+    lastQueryTarget = None
+    lastAnswerTarget = None
+
+    def setQueryTarget(target):
+        P2pErrbacks.lastQueryTarget = target
+    setQueryTarget = staticmethod(setQueryTarget)
+        
+    def setAnswerTarget(target):
+        P2pErrbacks.lastAnswerTarget = target
+    setAnswerTarget = staticmethod(setAnswerTarget)
+
+    def sendQueryProblem(failure):
+        """Politely displays any problem (bug, unavailability) related
+        to an attempt to send a query.
+        """
+        print " ... problem sending the query (likely to %s) : %s" \
+              % (P2pErrbacks.lastQueryTarget, failure.getTraceback())
+    sendQueryProblem = staticmethod(sendQueryProblem)
+
+
+    def answerQueryProblem(failure):
+        """Politely displays any problem (bug, unavailability) related
+        to an attempt to answer a query.
+        """
+        print " ... problem answering the query (likely to %s) : %s" \
+              % (P2pErrbacks.lastAnswerTarget, failure.getTraceback())
+    answerQueryProblem = staticmethod(answerQueryProblem)
+
+
 class P2pQuerier:
     """The P2pQuerier class is responsible for managing P2P queries.
 
@@ -189,10 +217,12 @@
             return
         #FIXME: avoid to send query to the originator
         for neighbor in self._selectTargetNeighbors(query):
-            proxy = Proxy(str(neighbor.getRpcUrl())) 
+            target = str(neighbor.getRpcUrl())
+            proxy = Proxy(target) 
             d = proxy.callRemote('distributedQuery', query.asKwargs())
             d.addCallback(self.querier.registerNodeActivity)
-            d.addErrback(sendQueryProblem)
+            d.addErrback(P2pErrbacks.sendQueryProblem)
+            P2pErrbacks.setQueryTarget(target)
             self._sentQueries[query.qid] = query
             print " ... sent to %s" % neighbor
 
@@ -268,6 +298,8 @@
                                      self.nodeId,
                                      toSend)
                 d.addCallback(self.querier.registerNodeActivity)
+                d.addErrback(P2pErrbacks.answerQueryProblem)
+                P2pErrbacks.setAnswerTarget(senderUrl)
             except ValueError:
                 print "unknown node %s" % query.sender
         else: # local would be true ? don't waste the answers ...



From afayolle at berlios.de  Thu Nov 10 13:56:49 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Thu, 10 Nov 2005 13:56:49 +0100
Subject: [Maay-svncheckins] r398 - trunk/maay
Message-ID: <200511101256.jAACunKn001221@sheep.berlios.de>

Author: afayolle
Date: 2005-11-10 13:56:40 +0100 (Thu, 10 Nov 2005)
New Revision: 398

Removed:
   trunk/maay/graphical_indexer.py
Log:
removed unused source

Deleted: trunk/maay/graphical_indexer.py
===================================================================
--- trunk/maay/graphical_indexer.py	2005-11-10 11:38:51 UTC (rev 397)
+++ trunk/maay/graphical_indexer.py	2005-11-10 12:56:40 UTC (rev 398)
@@ -1,37 +0,0 @@
-#     Copyright (C) 2005 France Telecom R&D
-#
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
-#
-#     This program is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
-#
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
-
-"""This module contains a Tk wrapper around the indexer, for easier
-operation on Windows boxes
-"""
-
-__revision__ = '$Id$'
-
-from Tkinter import Tk
-
-from maay import indexer
-
-class IndexerGui(Tk):
-
-    def __init__(self, *args, **kwargs):
-        Tk.__init__(self, *args, **kwargs)
-        self.title("Maay Indexer")
-        self._build_interface()
-        
-    def _build_interface(self):
-        for line, (label, info) in enumerate(indexer.IndexerConfiguration.options):
-            pass
-        



From aurelienc at berlios.de  Thu Nov 10 14:22:27 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 10 Nov 2005 14:22:27 +0100
Subject: [Maay-svncheckins] r399 - trunk/maay
Message-ID: <200511101322.jAADMRSc014697@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-10 14:22:24 +0100 (Thu, 10 Nov 2005)
New Revision: 399

Modified:
   trunk/maay/p2pquerier.py
Log:
-avoid sending answer when there is no doc
-remove/displace some cruft


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-10 12:56:40 UTC (rev 398)
+++ trunk/maay/p2pquerier.py	2005-11-10 13:22:24 UTC (rev 399)
@@ -224,9 +224,10 @@
             d.addErrback(P2pErrbacks.sendQueryProblem)
             P2pErrbacks.setQueryTarget(target)
             self._sentQueries[query.qid] = query
-            print " ... sent to %s" % neighbor
+            print " ... sent to %s %s %s" % (neighbor.node_id,
+                                             neighbor.ip,
+                                             neighbor.port)
 
-
     def receiveQuery(self, query):
         """
         :type query: `maay.p2pquerier.P2pQuery`
@@ -246,6 +247,11 @@
             self.sendQuery(query)
 
         documents = self.querier.findDocuments(query.query)
+        
+        if len(documents) == 0:
+            print " ... no document matching the query, won't answer."
+            return
+        
         for doc in documents:
             abstract = makeAbstract(doc.text, query.getWords())
             doc.text = untagText(removeSpace(abstract))
@@ -256,17 +262,17 @@
         """record and forward answers to a query.
         If local is True, then the answers come from a local query,
         and thus must not be recorded in the database"""
-        print "P2pQuerier relayAnswer : %s documents" % len(answer.documents)
+        print "P2pQuerier relayAnswer : %s document(s)" % len(answer.documents)
         query = self._receivedQueries.get(answer.queryId)
-        if query:
-            print " ... relaying Answer to originator ..."
-        else:
+        if not query :
             query = self._sentQueries.get(answer.queryId)
             if query:
-                print " ... originator : we got mail :) ... "
+                print " ... originator : we got an answer !"
             else:
-                print " ... bailing out (bug?) : we had no query for this answer"
+                print " ... bug or dos : we had no query for this answer"
                 return
+        print " ... relaying Answer to %s:%s ..." \
+              % (query.host, query.port)
         
         toSend = []
         
@@ -279,15 +285,10 @@
                 abstract = makeAbstract(document['text'], query.getWords())
                 document['text'] = untagText(removeSpace(abstract))
                 query.addMatch(document)
-                #toSend.append(document.asDictionnary())
-                # above was meant to be like .asKwargs() ?
-                # anyway, this stuff is xmlrpc-serializable (auc)
                 toSend.append(document)
         
         if query.sender != self.nodeId: 
             try:
-                # getNodeUrl seems not to exist yet
-                #senderUrl = self.querier.getNodeUrl(query.sender)
                 host = query.host 
                 port = query.port
                 print " ... will send answer to %s:%s" % (host, port)



From aurelienc at berlios.de  Thu Nov 10 14:24:00 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 10 Nov 2005 14:24:00 +0100
Subject: [Maay-svncheckins] r400 - trunk/maay
Message-ID: <200511101324.jAADO0UU015370@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-10 14:23:58 +0100 (Thu, 10 Nov 2005)
New Revision: 400

Modified:
   trunk/maay/indexer.py
Log:
Stylistic update (to make pylint happy)


Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-10 13:22:24 UTC (rev 399)
+++ trunk/maay/indexer.py	2005-11-10 13:23:58 UTC (rev 400)
@@ -24,11 +24,10 @@
 __revision__ = '$Id$'
 
 import os
-import time
 import sys
 import sha
 from sets import Set
-from xmlrpclib import ServerProxy, Binary, Fault, ProtocolError
+from xmlrpclib import ServerProxy, Fault, ProtocolError
 import mimetypes
 import socket
 
@@ -143,7 +142,7 @@
             else:
                 fileSize = os.path.getsize(filename)
                 try:
-                    title, text, links, offset = converter.extractWordsFromFile(filename)
+                    title, text, _, _ = converter.extractWordsFromFile(filename)
                 except converter.IndexationFailure, exc:
                     if self.verbose:
                         print exc
@@ -189,6 +188,15 @@
                 print "Error indexing %s: %s" % (futureDoc.filename.encode('iso-8859-1'), exc)
         
 
+######### FileIterator
+
+if sys.platform == 'win32':
+    def normalizeCase(path):
+        return path.lower()
+else:    
+    def normalizeCase(path):
+        return path
+
 class FileIterator:
     """provide a simple way to walk through indexed dirs"""
     def __init__(self, indexed, skipped=[]):
@@ -196,15 +204,8 @@
                (type(skipped) in (list,tuple)))
         self.indexed = [os.path.abspath(os.path.expanduser(p)) for p in indexed]
         self.skipped = [os.path.abspath(os.path.expanduser(p)) for p in skipped]
-        self.skipped = [self.normalizeCase(p) for p in self.skipped]
+        self.skipped = [normalizeCase(p) for p in self.skipped]
         
-    if sys.platform == 'win32':
-        def normalizeCase(self, path):
-            return path.lower()
-    else:    
-        def normalizeCase(self, path):
-            return path
-        
     def __iter__(self):
         for path in self.indexed:
             # test path not in self.skipped (dummy config files)
@@ -219,7 +220,7 @@
     def _removeSkippedDirnames(self, dirpath, dirnames):
         """removed skipped directories from dirnames (inplace !)"""
         for dirname in dirnames[:]:
-            abspath = self.normalizeCase(os.path.join(dirpath, dirname))
+            abspath = normalizeCase(os.path.join(dirpath, dirname))
             if abspath in self.skipped:
                 # print "skipping", dirname
                 dirnames.remove(dirname)



From dnf at berlios.de  Thu Nov 10 14:48:53 2005
From: dnf at berlios.de (Frédéric DANG NGOC at BerliOS)
Date: Thu, 10 Nov 2005 14:48:53 +0100
Subject: [Maay-svncheckins] r401 - in trunk/maay/data: . images
Message-ID: <200511101348.jAADmrqR007247@sheep.berlios.de>

Author: dnf
Date: 2005-11-10 14:48:52 +0100 (Thu, 10 Nov 2005)
New Revision: 401

Added:
   trunk/maay/data/images/msword_icon.png
   trunk/maay/data/images/pdf_icon.png
Modified:
   trunk/maay/data/images/python_icon.png
   trunk/maay/data/maay.css
Log:
Add pdf and word icons.



Added: trunk/maay/data/images/msword_icon.png
===================================================================
(Binary files differ)


Property changes on: trunk/maay/data/images/msword_icon.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/maay/data/images/pdf_icon.png
===================================================================
(Binary files differ)


Property changes on: trunk/maay/data/images/pdf_icon.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Modified: trunk/maay/data/images/python_icon.png
===================================================================
(Binary files differ)

Modified: trunk/maay/data/maay.css
===================================================================
--- trunk/maay/data/maay.css	2005-11-10 13:23:58 UTC (rev 400)
+++ trunk/maay/data/maay.css	2005-11-10 13:48:52 UTC (rev 401)
@@ -109,3 +109,21 @@
   height: 16px;
   background: url(images/python_icon.png);
 }
+
+div.application_pdf {
+  /* display: block; */
+  margin-bottom: 0px;
+  padding: 0 0 0 0;
+  width: 16px;
+  height: 16px;
+  background: url(images/pdf_icon.png);
+}
+
+div.application_msword {
+  /* display: block; */
+  margin-bottom: 0px;
+  padding: 0 0 0 0;
+  width: 16px;
+  height: 16px;
+  background: url(images/msword_icon.png);
+}



From dnf at berlios.de  Thu Nov 10 14:49:44 2005
From: dnf at berlios.de (Frédéric DANG NGOC at BerliOS)
Date: Thu, 10 Nov 2005 14:49:44 +0100
Subject: [Maay-svncheckins] r402 - trunk/maay/data/images
Message-ID: <200511101349.jAADniGg008955@sheep.berlios.de>

Author: dnf
Date: 2005-11-10 14:49:43 +0100 (Thu, 10 Nov 2005)
New Revision: 402

Removed:
   trunk/maay/data/images/doc.png
   trunk/maay/data/images/pdf.png
Log:
Remove these icons (replaced by msword_icon.png and pdf_icon.png)


Deleted: trunk/maay/data/images/doc.png
===================================================================
(Binary files differ)

Deleted: trunk/maay/data/images/pdf.png
===================================================================
(Binary files differ)



From aurelienc at berlios.de  Thu Nov 10 14:51:57 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 10 Nov 2005 14:51:57 +0100
Subject: [Maay-svncheckins] r403 - trunk/maay
Message-ID: <200511101351.jAADpvnq014051@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-10 14:51:56 +0100 (Thu, 10 Nov 2005)
New Revision: 403

Modified:
   trunk/maay/rpc.py
Log:
Enhance pylint score


Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-10 13:49:43 UTC (rev 402)
+++ trunk/maay/rpc.py	2005-11-10 13:51:56 UTC (rev 403)
@@ -13,18 +13,26 @@
 #     You should have received a copy of the GNU General Public License
 #     along with this program; if not, write to the Free Software
 #     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+"""
+This is the interface made available to the network, from a node.
+Protocol is XMLRPC, which provides :
+- to everybody : [authenticate]
+- to the indexer : [lastIndexationTimeAndState, getIndexedFiles,
+                    removeFileInfo, UnreferencedDocuments, indexDocument]
+- to the peers : [distributedQuery, distributedQueryAnswer]               
+"""
 
+__revision__ = ''
+
 from time import time
 from random import randint
-import sys
 
 from twisted.web.xmlrpc import XMLRPC
 from twisted.cred.credentials import UsernamePassword, Anonymous
-from twisted.cred.error import UnauthorizedLogin
-from twisted.internet import defer, reactor
+from twisted.internet import reactor
 ## from twisted.python.failure import Failure
 
-from maay.querier import MaayQuerier, IQuerier, ANONYMOUS_AVATARID, WEB_AVATARID
+from maay.querier import IQuerier, ANONYMOUS_AVATARID, WEB_AVATARID
 from maay.dbentity import FutureDocument, Document
 from maay.p2pquerier import P2pQuerier, P2pQuery, P2pAnswer
 from maay.query import Query
@@ -34,6 +42,8 @@
     # FIXME: need a better implementation
     return '%X' % abs(hash(username+password) + hash(time()) + randint(-1000, 1000))
 
+def getP2pQuerier():
+    return MaayRPCServer.theP2pQuerier
 
 class MaayRPCServer(XMLRPC):
     #XXX: should be in instance, but this simplifies greatly
@@ -58,11 +68,8 @@
         self._lastClient = request.transport.getPeer()
         return XMLRPC.render(self, request)
 
-    def getP2pQuerier(self):
-        assert (MaayRPCServer.theP2pQuerier) is not None
-        return MaayRPCServer.theP2pQuerier
-        
-    def _attachUser(self, (interface, querier, logout), username, password):
+      
+    def _attachUser(self, (interface, querier, _), username, password):
         print "MaayRPCServer _attachUser", username, type(querier)
         if interface is not IQuerier or querier is None:
             errmsg = "Could not get Querier for", username
@@ -94,17 +101,17 @@
             querier = self._sessions[cnxId]
             fileInfos = querier.getFileInformations(filename)
             if len(fileInfos):
-                time = fileInfos[0].file_time
+                time_ = fileInfos[0].file_time
                 state = fileInfos[0].state
             else:
-                time = 0
+                time_ = 0
                 state = Document.UNKNOWN_STATE
         else:
             # XXX : could we return twisted.python.failure.Failure instance here ?
             ## return Failure(ValueError("invalid connexion")
-            time = -1 # XXX: need to differenciate bad cnxId and no last mod time
+            time_ = -1 # XXX: need to differenciate bad cnxId and no last mod time
             state = Document.UNKNOWN_STATE
-        return time, state
+        return time_, state
 
     def xmlrpc_getIndexedFiles(self, cnxId):
         if self.cnxIsValid(cnxId):
@@ -139,7 +146,7 @@
             futureDoc.text = unicode(futureDoc.text)
         except UnicodeError, exc:
             print exc
-            print `text`
+            print futureDoc.text
             return 1
         if self.cnxIsValid(cnxId):
             querier = self._sessions[cnxId]
@@ -162,14 +169,14 @@
         querier.registerNode(query.sender, query.host, query.port)
         # schedule the query for later processing and return immediately
         # this enables the sender to query several nodes in a row
-        d = reactor.callLater(.01, self.getP2pQuerier().receiveQuery, query)
+        reactor.callLater(.01, getP2pQuerier().receiveQuery, query)
         return self.nodeId
 
     def xmlrpc_distributedQueryAnswer(self, queryId, senderId, documents):
         print "MaayRPCServer distributedQueryAnswer : %s %s, %s document(s)" % \
               (queryId, senderId, len(documents))
         answer = P2pAnswer(queryId, documents)
-        d = reactor.callLater(.01, self.getP2pQuerier().relayAnswer, answer)
+        reactor.callLater(.01, getP2pQuerier().relayAnswer, answer)
         return self.nodeId
                          
     



From afayolle at berlios.de  Thu Nov 10 15:04:37 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Thu, 10 Nov 2005 15:04:37 +0100
Subject: [Maay-svncheckins] r404 - trunk/maay
Message-ID: <200511101404.jAAE4baF029513@sheep.berlios.de>

Author: afayolle
Date: 2005-11-10 15:04:37 +0100 (Thu, 10 Nov 2005)
New Revision: 404

Modified:
   trunk/maay/server.py
Log:
removed unrequired imports

Modified: trunk/maay/server.py
===================================================================
--- trunk/maay/server.py	2005-11-10 13:51:56 UTC (rev 403)
+++ trunk/maay/server.py	2005-11-10 14:04:37 UTC (rev 404)
@@ -39,14 +39,6 @@
 # These imports are not used, but they help py2exe tremendously.
 # Do not remove them (that is, unless we change the database backend
 # or drop twisted)
-
-#from twisted.web import http
-#import twisted.application.service
-#import twisted.web.woven.guard
-#from twisted.python.components import *
-#from twisted.python.components import CannotAdapt
-#from nevow.compy import *
-#import nevow.events
 import nevow.flat.flatstan
 import nevow.query
 import nevow.i18n



From aurelienc at berlios.de  Thu Nov 10 15:05:00 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 10 Nov 2005 15:05:00 +0100
Subject: [Maay-svncheckins] r405 - trunk/maay
Message-ID: <200511101405.jAAE50mD029547@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-10 15:04:59 +0100 (Thu, 10 Nov 2005)
New Revision: 405

Modified:
   trunk/maay/image.py
   trunk/maay/texttool.py
Log:
Imports cleanup


Modified: trunk/maay/image.py
===================================================================
--- trunk/maay/image.py	2005-11-10 14:04:37 UTC (rev 404)
+++ trunk/maay/image.py	2005-11-10 14:04:59 UTC (rev 405)
@@ -6,13 +6,8 @@
     print "Python Imaging Library not installed for your version of Python.",
     print "Thumbnail support will not work."
 
-from tempfile import mkdtemp
-import stat, os, os.path as osp
-from maay.exif import *
-from maay.configuration import ImageConfiguration, \
-     NoThumbnailsDir
+import os.path as osp
 
-
 ############# Thumbnail bizness
 
 class ThumbnailCreationError(Exception):

Modified: trunk/maay/texttool.py
===================================================================
--- trunk/maay/texttool.py	2005-11-10 14:04:37 UTC (rev 404)
+++ trunk/maay/texttool.py	2005-11-10 14:04:59 UTC (rev 405)
@@ -42,8 +42,10 @@
         return u''.join(self)
 
 
-from maay.image import get_ustring_from_exif, make_thumbnail, \
-     ImageConfiguration as ImConfig, NoThumbnailsDir, ThumbnailCreationError
+from maay.image import get_ustring_from_exif, make_thumbnail,\
+     ThumbnailCreationError
+from maay.configuration import ImageConfiguration as ImConfig, \
+     NoThumbnailsDir
 
 WORD_MIN_LEN = 2
 WORD_MAX_LEN = 50



From aurelienc at berlios.de  Thu Nov 10 15:17:06 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 10 Nov 2005 15:17:06 +0100
Subject: [Maay-svncheckins] r406 - trunk/maay
Message-ID: <200511101417.jAAEH6Lg030890@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-10 15:17:06 +0100 (Thu, 10 Nov 2005)
New Revision: 406

Modified:
   trunk/maay/texttool.py
Log:
More pylintification


Modified: trunk/maay/texttool.py
===================================================================
--- trunk/maay/texttool.py	2005-11-10 14:04:59 UTC (rev 405)
+++ trunk/maay/texttool.py	2005-11-10 14:17:06 UTC (rev 406)
@@ -27,26 +27,11 @@
 import mimetypes
 import gzip
 import bz2
-from sets import Set
 
-class LStringIO(list):
-    """simple StringIO-like objects using a list
+from maay.image import get_ustring_from_exif, make_thumbnail
+from maay.configuration import ImageConfiguration as ImConfig
 
-    Note: LStringIO should be more or less equivalent to cStrinIO speed-wise
-          but has the great advantage to accept any unicode string
-    """
-    def __init__(self):
-        list.__init__(self)
-    write = list.append
-    def getvalue(self):
-        return u''.join(self)
 
-
-from maay.image import get_ustring_from_exif, make_thumbnail,\
-     ThumbnailCreationError
-from maay.configuration import ImageConfiguration as ImConfig, \
-     NoThumbnailsDir
-
 WORD_MIN_LEN = 2
 WORD_MAX_LEN = 50
 
@@ -57,11 +42,23 @@
 
 WORDS_RGX = re.compile(r'\w{%s,%s}' % (WORD_MIN_LEN, WORD_MAX_LEN)) 
 
-
-
 CHARSET_RGX = re.compile(r'charset=[\s"]*([^\s"]+)', re.I | re.S | re.U)
 XML_ENCODING_RGX = re.compile(r'^<\?xml version=[^\s]*\s*encoding=([^\s]*)\s*\?>', re.I | re.S | re.U)
 
+
+class LStringIO(list):
+    """simple StringIO-like objects using a list
+       Note: LStringIO should be more or less equivalent to cStrinIO speed-wise
+       but has the great advantage to accept any unicode string
+    """
+    def __init__(self):
+        list.__init__(self)
+
+    write = list.append
+
+    def getvalue(self):
+        return u''.join(self)
+
 class ParsingError(Exception):
     """raised when an error occurs during the indexation of a file"""
     pass
@@ -92,28 +89,28 @@
         stream = file(filename, 'rb')
         
     try:
-        buffer = stream.read(4)
+        buffer_ = stream.read(4)
         # try to guess from BOM
-        if buffer[:4] in (codecs.BOM_UTF32_BE, codecs.BOM_UTF32_LE):
+        if buffer_[:4] in (codecs.BOM_UTF32_BE, codecs.BOM_UTF32_LE):
             return 'UTF-32'
-        elif buffer[:2] in (codecs.BOM_UTF16_BE, codecs.BOM_UTF16_LE):
+        elif buffer_[:2] in (codecs.BOM_UTF16_BE, codecs.BOM_UTF16_LE):
             return 'UTF-16'
-        elif buffer[:3] == codecs.BOM_UTF8:
+        elif buffer_[:3] == codecs.BOM_UTF8:
             return 'UTF-8'
-        buffer += stream.read()
+        buffer_ += stream.read()
         if mimetypes.guess_type(filename)[0] == 'text/html':
-            m = CHARSET_RGX.search(buffer)
+            m = CHARSET_RGX.search(buffer_)
             if m is not None :
                 return normalizeHtmlEncoding(m.group(1))
         # check for xml encoding declaration
-        if buffer.lstrip().startswith('<?xml'):
-            m = XML_ENCODING_RGX.match(buffer)
+        if buffer_.lstrip().startswith('<?xml'):
+            m = XML_ENCODING_RGX.match(buffer_)
             if m is not None:
                 return m.group(1)[1:-1].upper()
             # xml files with no encoding declaration default to UTF-8
             return 'UTF-8'
         try:
-            data = unicode(buffer, 'utf-8')
+            _ = unicode(buffer_, 'utf-8')
             return 'UTF-8'
         except UnicodeError:
             return 'ISO-8859-1'
@@ -260,7 +257,7 @@
 
 
 
-for s, d in zip(    list('\xc0\xc1\xc2\xc3\xc4\xc5'
+for _s, _d in zip(    list('\xc0\xc1\xc2\xc3\xc4\xc5'
     '\xc7'
     '\xc8\xc9\xca\xcb'
     '\xcc\xcd\xce\xcf'
@@ -298,7 +295,7 @@
     'uuuu'
     'y'
     )):
-    _table[ord(s)] = ord(d)
+    _table[ord(_s)] = ord(_d)
 
 def normalizeText(text, table=_table):
     """turns everything to lowercase, and converts accentuated
@@ -347,7 +344,6 @@
     lastStart = 0
     end = 0
     for occurence in rgx.finditer(text):
-        wordFound = occurence.group(0)
         start, end = occurence.start(), occurence.end()
         if start > 0:
             s.write(" ")
@@ -376,14 +372,9 @@
     
 
 def computeExcerptPositions(text, words):
-    text_length = len(text)
-
-
-
     # quick and dirty regex...
     rgx = re.compile(r'\W' + r'\W|\W'.join(words) + r'\W', re.I)
 
-    #
     # Get the best excerpt for the abstract :
     # - excerpt for most words of the query
     # - first occurence of words
@@ -410,7 +401,7 @@
                 continue
                     
             for i in xrange(len(excerptPositions) - 1, 0, -1):
-                word, position = excerptPositions[i]
+                word, _ = excerptPositions[i]
                 if wordOccurrences[word] == max_occurence:
                     wordOccurrences[word] -= 1
                     if wordOccurrences[word] == 0:



From aurelienc at berlios.de  Thu Nov 10 15:21:43 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 10 Nov 2005 15:21:43 +0100
Subject: [Maay-svncheckins] r407 - in trunk/maay: . test
Message-ID: <200511101421.jAAELhQ3031445@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-10 15:21:43 +0100 (Thu, 10 Nov 2005)
New Revision: 407

Modified:
   trunk/maay/querier.py
   trunk/maay/test/test_querier.py
Log:
Imports cleanup


Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-10 14:17:06 UTC (rev 406)
+++ trunk/maay/querier.py	2005-11-10 14:21:43 UTC (rev 407)
@@ -22,8 +22,6 @@
 __revision__ = '$Id$'
 __metaclass__ = type
 
-from mimetypes import guess_type
-import re
 import time
 from math import sqrt, log
 
@@ -31,7 +29,7 @@
 
 from logilab.common.db import get_dbapi_compliant_module
 
-from maay.dbentity import FutureDocument, Document, FileInfo, \
+from maay.dbentity import Document, FileInfo, \
      DocumentProvider, DocumentScore, Word, Node
 from maay.texttool import normalizeText, WORDS_RGX, MAX_STORED_SIZE
 

Modified: trunk/maay/test/test_querier.py
===================================================================
--- trunk/maay/test/test_querier.py	2005-11-10 14:17:06 UTC (rev 406)
+++ trunk/maay/test/test_querier.py	2005-11-10 14:21:43 UTC (rev 407)
@@ -17,15 +17,16 @@
 
 "querier test cases"""
 
+__revision__ = ''
+
 import unittest
 import sha
 
 from logilab.common.testlib import MockConnection
 from logilab.common.db import get_connection
-from maay.querier import MaayQuerier, normalizeText, FutureDocument, Document, FileInfo
+from maay.querier import MaayQuerier, normalizeText, Document, FileInfo
+from maay.dbentity import FutureDocument
 
-
-
 class QuerierTC(unittest.TestCase):
     def setUp(self):
         self.cnx = get_connection(driver='mysql', host='localhost',



From afayolle at berlios.de  Thu Nov 10 15:48:24 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Thu, 10 Nov 2005 15:48:24 +0100
Subject: [Maay-svncheckins] r408 - in trunk: . maay maay/bin maay/configuration maay/configuration/win32 maay/test
Message-ID: <200511101448.jAAEmOVp002163@sheep.berlios.de>

Author: afayolle
Date: 2005-11-10 15:48:23 +0100 (Thu, 10 Nov 2005)
New Revision: 408

Added:
   trunk/maay/bin/maay-node
   trunk/maay/configuration/node.ini
   trunk/maay/configuration/win32/node.ini
   trunk/maay/node.py
   trunk/maay/test/test_node.py
Removed:
   trunk/maay/bin/maay-server
   trunk/maay/configuration/webapp.ini
   trunk/maay/configuration/win32/webapp.ini
   trunk/maay/exif.py
   trunk/maay/server.py
   trunk/maay/test/test_server.py
Modified:
   trunk/maay.iss
   trunk/maay/configuration.py
   trunk/maay/image.py
   trunk/maay/indexer.py
   trunk/maay/p2pquerier.py
   trunk/maay/test/test_configuration.py
   trunk/maay/test/test_converter.py
   trunk/maay/test/test_image.py
   trunk/maay/test/test_rpc.py
   trunk/maay/updateconfig.py
   trunk/maay/webapplication.py
   trunk/maayservice.py
   trunk/setup.py
Log:
renamed server to node
renamed remaining references to 'registration' -> 'presence'

WARNING: this revision makes some incompatible changes in the configuration 
files and options: webapp.ini becomes node.ini and the presence server 
configuration parameters have been consistently renamed


Copied: trunk/maay/bin/maay-node (from rev 400, trunk/maay/bin/maay-server)
===================================================================
--- trunk/maay/bin/maay-server	2005-11-10 13:23:58 UTC (rev 400)
+++ trunk/maay/bin/maay-node	2005-11-10 14:48:23 UTC (rev 408)
@@ -0,0 +1,20 @@
+#!/usr/bin/python
+#     Copyright (C) 2005 France Telecom R&D
+#
+#     This program is free software; you can redistribute it and/or modify
+#     it under the terms of the GNU General Public License as published by
+#     the Free Software Foundation; either version 2 of the License, or
+#     (at your option) any later version.
+#
+#     This program is distributed in the hope that it will be useful,
+#     but WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#     GNU General Public License for more details.
+#
+#     You should have received a copy of the GNU General Public License
+#     along with this program; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+
+__revision__ = '$Id$'
+from maay.node import run
+run()

Deleted: trunk/maay/bin/maay-server
===================================================================
--- trunk/maay/bin/maay-server	2005-11-10 14:21:43 UTC (rev 407)
+++ trunk/maay/bin/maay-server	2005-11-10 14:48:23 UTC (rev 408)
@@ -1,20 +0,0 @@
-#!/usr/bin/python
-#     Copyright (C) 2005 France Telecom R&D
-#
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
-#
-#     This program is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
-#
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
-
-__revision__ = '$Id$'
-from maay.server import run
-run()

Copied: trunk/maay/configuration/node.ini (from rev 400, trunk/maay/configuration/webapp.ini)
===================================================================
--- trunk/maay/configuration/webapp.ini	2005-11-10 13:23:58 UTC (rev 400)
+++ trunk/maay/configuration/node.ini	2005-11-10 14:48:23 UTC (rev 408)
@@ -0,0 +1,7 @@
+[SERVER]
+db-name=maay
+db-host=localhost
+user=maay
+password=maay
+presence-host=localhost
+presence-port=2345

Deleted: trunk/maay/configuration/webapp.ini
===================================================================
--- trunk/maay/configuration/webapp.ini	2005-11-10 14:21:43 UTC (rev 407)
+++ trunk/maay/configuration/webapp.ini	2005-11-10 14:48:23 UTC (rev 408)
@@ -1,7 +0,0 @@
-[SERVER]
-db-name=maay
-db-host=localhost
-user=maay
-password=maay
-registration-host=localhost
-registration-port=2345

Copied: trunk/maay/configuration/win32/node.ini (from rev 400, trunk/maay/configuration/win32/webapp.ini)

Deleted: trunk/maay/configuration/win32/webapp.ini
===================================================================
--- trunk/maay/configuration/win32/webapp.ini	2005-11-10 14:21:43 UTC (rev 407)
+++ trunk/maay/configuration/win32/webapp.ini	2005-11-10 14:48:23 UTC (rev 408)
@@ -1,7 +0,0 @@
-[SERVER]
-db-name=maay
-db-host=localhost
-user=maay
-password=maay
-registration-host=localhost
-registration-port=2345

Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-10 14:21:43 UTC (rev 407)
+++ trunk/maay/configuration.py	2005-11-10 14:48:23 UTC (rev 408)
@@ -133,7 +133,7 @@
 
 ################ Web server, rpc server stuff
 
-class WebappConfiguration(Configuration):
+class NodeConfiguration(Configuration):
     options = Configuration.options + [
         ('db-name',
          {'type' : "string", 'metavar' : "<dbname>", 'short' : "d",
@@ -142,7 +142,7 @@
           }),
         ('db-host',
          {'type' : "string", 'metavar' : "<dbhost>", 'short' : "H",
-          'help' : "which server hosts the database",
+          'help' : "hostname of the database server",
           'default' : "localhost",
           }),
         ('user',
@@ -157,14 +157,14 @@
           'help': 'password of anonymous user to use to connect to the database',
           'default' : "maay",
           }),
-        ('registration-host',
-         {'type' : "string", 'metavar' : "<registration_host>", 
-          'help' : "Host name or IP address of the registration server",
-          'default' : "localhost",
+        ('presence-host',
+         {'type' : "string", 'metavar' : "<presence_host>", 
+          'help' : "Host name or IP address of the presence server",
+          'default' : "192.33.178.29",
           }),
-        ('registration-port',
-         {'type' : "int", 'metavar' : "<registration_port>", 
-          'help' : "Internet port on which the registration server is listening",
+        ('presence-port',
+         {'type' : "int", 'metavar' : "<presence_port>", 
+          'help' : "Internet port on which the presence server is listening",
           'default' : 2345,
           }),
         ('webserver-port',
@@ -189,15 +189,15 @@
           }),
         ('query-life-time',
          {'type' : 'int', 'metavar' : '<query_life_time>',
-          'help' : "Sets the maximum time allowed for a query to live in the node caches",
+          'help' : "The lifespan (in seconds) of a query in the node cache",
           'default' : 60,
           }),
         ]
 
-    config_file = 'webapp.ini'
+    config_file = 'Node.ini'
 
     def __init__(self):
-        Configuration.__init__(self, name="Server")
+        Configuration.__init__(self, name="Node")
         self.node_id = None
 
     def get_node_id(self):
@@ -259,7 +259,7 @@
 class ImageConfiguration(Configuration):
     options = Configuration.options + [
         ('thumbnails-dir',
-         {'type' : "string", 'metavar' : "--thumbnailsdir", 'short' : "-thumbs",
+         {'type' : "string", 'metavar' : "--thumbnailsdir",
           'help' : "Thumbnail files repository",
           'default' : '.maay_thumbnails'},)]
     config_file = 'image.ini'

Deleted: trunk/maay/exif.py
===================================================================
--- trunk/maay/exif.py	2005-11-10 14:21:43 UTC (rev 407)
+++ trunk/maay/exif.py	2005-11-10 14:48:23 UTC (rev 408)
@@ -1,12 +0,0 @@
-"""This module provides tools for
-   the exploitation of EXIF codes
-   embedded in image files.
-"""
-
-#XXX: robustify this against missing PIL
-try:
-    import Image
-except:
-    print "Python Imaging Library not installed for your version of Python.",
-    print "EXIF support will not work."
-    

Modified: trunk/maay/image.py
===================================================================
--- trunk/maay/image.py	2005-11-10 14:21:43 UTC (rev 407)
+++ trunk/maay/image.py	2005-11-10 14:48:23 UTC (rev 408)
@@ -1,5 +1,25 @@
+#     Copyright (C) 2005 France Telecom R&D
+#
+#     This program is free software; you can redistribute it and/or modify
+#     it under the terms of the GNU General Public License as published by
+#     the Free Software Foundation; either version 2 of the License, or
+#     (at your option) any later version.
+#
+#     This program is distributed in the hope that it will be useful,
+#     but WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#     GNU General Public License for more details.
+#
+#     You should have received a copy of the GNU General Public License
+#     along with this program; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
 """Some utilities to manipulate images"""
 
+__revision__ = '$Id$'
+
+from tempfile import mkdtemp
+import stat, os, os.path as osp
+
 try:
     import Image
 except:

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-10 14:21:43 UTC (rev 407)
+++ trunk/maay/indexer.py	2005-11-10 14:48:23 UTC (rev 408)
@@ -68,7 +68,7 @@
         host = self.indexerConfig.host
         port = self.indexerConfig.port
         self.filesystemEncoding = sys.getfilesystemencoding()
-        print "Indexer connecting to server %s:%s" % (host, port)
+        print "Indexer connecting to Node %s:%s" % (host, port)
         self.serverProxy = ServerProxy('http://%s:%s' % (host, port),
                                        allow_none=True,
                                        encoding='utf-8')
@@ -76,7 +76,7 @@
         self.verbose = indexerConfig.verbose
         if not self.cnxId:
             if self.verbose:
-                print "Got failure from server:", errmsg
+                print "Got failure from Node:", errmsg
             raise MaayAuthenticationError("Failed to connect as '%s'" % username)
         # we might be asked to purge everything and just exit
         if indexerConfig['purge']:
@@ -163,7 +163,7 @@
         filename = unicode(filename, self.filesystemEncoding)
         answer = self.serverProxy.lastIndexationTimeAndState(self.cnxId, filename)
         if answer is None:
-            raise MaayAuthenticationError("Bad cnxId sent to the server")
+            raise MaayAuthenticationError("Bad cnxId sent to the Node")
         lastTime, lastState = answer
         return lastTime, lastState
 
@@ -180,10 +180,10 @@
 
         except (Fault, ProtocolError), exc:
             if self.verbose:
-                print "An error occured on the server while indexing %s" % \
+                print "An error occured on the Node while indexing %s" % \
                       futureDoc.filename.encode('iso-8859-1')
                 print exc
-                print "See server log for details"
+                print "See Node log for details"
             else:
                 print "Error indexing %s: %s" % (futureDoc.filename.encode('iso-8859-1'), exc)
         
@@ -238,8 +238,8 @@
             sys.exit(1)
         indexer.start()
     except socket.error, exc:
-        print "Cannot contact server:", exc
-        print "Check that the server is running on %s:%s" % \
+        print "Cannot contact Node:", exc
+        print "Check that the Node is running on %s:%s" % \
               (indexerConfig.host, indexerConfig.port)
         sys.exit(1)
 

Copied: trunk/maay/node.py (from rev 404, trunk/maay/server.py)
===================================================================
--- trunk/maay/server.py	2005-11-10 14:04:37 UTC (rev 404)
+++ trunk/maay/node.py	2005-11-10 14:48:23 UTC (rev 408)
@@ -0,0 +1,275 @@
+#     Copyright (C) 2005 France Telecom R&D
+#
+#     This program is free software; you can redistribute it and/or modify
+#     it under the terms of the GNU General Public License as published by
+#     the Free Software Foundation; either version 2 of the License, or
+#     (at your option) any later version.
+#
+#     This program is distributed in the hope that it will be useful,
+#     but WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#     GNU General Public License for more details.
+#
+#     You should have received a copy of the GNU General Public License
+#     along with this program; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+
+"""Maay Node
+
+The node is reponsible for running the web user interface and
+an xmlrpc server for the indexer and distributed queries.
+"""
+
+__revision__ = '$Id$'
+
+
+import platform
+import sha
+import time
+import os
+import socket
+
+from zope.interface import implements
+
+from twisted.cred import portal, error
+from twisted.cred.checkers import AllowAnonymousAccess, \
+     ICredentialsChecker
+from twisted.cred.credentials import IAnonymous, IUsernamePassword
+from twisted.internet import reactor, defer
+from twisted.web import server
+from twisted.python import failure
+from nevow import inevow, appserver, guard
+
+# These imports are not used, but they help py2exe tremendously.
+# Do not remove them (that is, unless we change the database backend
+# or drop twisted)
+import nevow.flat.flatstan
+import nevow.query
+import nevow.i18n
+import nevow.flat.flatmdom
+import MySQLdb
+# end of py2exe helping imports
+
+from maay.querier import MaayQuerier, IQuerier, AnonymousQuerier, \
+     MaayAuthenticationError, WEB_AVATARID
+from maay.rpc import MaayRPCServer
+from maay.configuration import NodeConfiguration
+from maay import presenceclient
+from maay.webapplication import Maay404, INodeConfiguration, SearchForm
+
+
+## nevow app/server setup ############################################
+
+# MaayMindFactory might be helpful to access request informations
+# in portal. (not sure it's really aimed to be used this way :-)
+class MaayMindFactory:
+    def __init__(self, request, credentials):
+        pass
+
+class MaayRealm:
+    """simple realm for Maay application"""
+    implements(portal.IRealm)
+
+    def __init__(self):
+        self._sessions = {}
+
+    def createUserSession(self, avatarId, querier):
+        """associate a querier to an avatarId.
+        Use avatarId=None for the internal private database connection"""
+        print "MaayRealm : creating session for avatar", avatarId,
+        print "with a", type(querier), "querier."
+        self._sessions[avatarId] = querier
+
+
+    def requestAvatar(self, avatarId, mind, *interfaces):
+        """Our realm provides 2 different kinds of avatars :
+          - HTML resources (for web applications)
+          - queriers (for XMLRPC queries)
+
+        Both kind of avatars rely on a querier instance
+        """
+        print "MaayRealm requestAvatar %s" % avatarId
+        for iface in interfaces:
+            # if we were asked for a web resource
+            if iface is inevow.IResource:
+                querier = self._getQuerier(avatarId)
+                assert(MaayRPCServer.theP2pQuerier is not None)
+                resc = SearchForm(avatarId, querier, MaayRPCServer.theP2pQuerier)
+                return inevow.IResource, resc, resc.logout
+            # if we were asked for a querier
+            elif iface is IQuerier:
+                querier = self._getQuerier(avatarId)
+                if querier is None:
+                    return IQuerier, None, lambda: None
+                else:
+                    return IQuerier, querier, querier.close
+                
+    def _getQuerier(self, avatarId):
+        try:
+            querier = self._sessions[avatarId]
+            print "MaayRealm : querier of type", type(querier), "for avatar",
+            print avatarId, "was in the session cache."
+        except KeyError:
+            print "MaayRealm : no querier in cache for", str(avatarId)+ \
+                  ". What are we supposed to do ?"
+            querier = None
+        return querier
+
+
+class MaayPortal(object, portal.Portal):
+    """Portal for Maay authentication system"""
+    def __init__(self, nodeConfig):
+        print "Portal creation"
+        realm = MaayRealm()
+        checker = DBAuthChecker(realm, nodeConfig.db_host,
+                                nodeConfig.db_name)
+        portal.Portal.__init__(self, realm, (checker,))
+        self.anonymousChecker = MaayAnonymousChecker()
+        self.registerChecker(self.anonymousChecker, IAnonymous)
+        self.config = nodeConfig
+        # Create default web querier, based on local configuration
+        try:
+            print "Credentials : "
+            print "  - host", nodeConfig.db_host
+            print "  - db", nodeConfig.db_name
+            print "  - user", nodeConfig.user
+            print "  - pass", nodeConfig.password
+            webQuerier = MaayQuerier(host=nodeConfig.db_host,
+                                     database=nodeConfig.db_name,
+                                     user=nodeConfig.user,
+                                     password=nodeConfig.password)
+        except Exception, exc:
+            # unable to create a web querier
+            print "***"
+            print "*** Could not create web querier"
+            print "*** Got exception", exc
+            print "*** This may hurt in unexpected ways"
+            print "***"
+            webQuerier = None
+        else:
+            realm.createUserSession(WEB_AVATARID, webQuerier)
+            webQuerier.registerNode(self.config.get_node_id(),
+                                    ip=socket.gethostbyname(socket.gethostname()),
+                                    port=nodeConfig.rpcserver_port,
+                                    bandwidth=nodeConfig.bandwidth)
+        self.webQuerier = webQuerier
+        self.anonymousQuerier = AnonymousQuerier(host=nodeConfig.db_host,
+                                                 database=nodeConfig.db_name,
+                                                 user=nodeConfig.user,
+                                                 password=nodeConfig.password)
+
+
+    def getWebQuerier(self):
+        return getattr(self, '_webQuerier', None)
+
+    def setWebQuerier(self, value):
+        """used to set 'anonymousAllowed' flag in anonymous checker"""
+        #XXX: now, check this seriously
+        if value is not None:
+            self.anonymousChecker.anonymousAllowed = True
+        self._webQuerier = value
+
+    webQuerier = property(getWebQuerier, setWebQuerier,
+                          doc="web querier")
+
+
+class MaayAnonymousChecker(AllowAnonymousAccess):
+    """don't use default twisted.cred anonymous avatarId"""
+    def __init__(self):
+        self.anonymousAllowed = False
+        
+    def requestAvatarId(self, credentials):
+        print "AnonymousChecker : requestAvatarId", credentials
+        if self.anonymousAllowed:
+            return WEB_AVATARID #XXX: FIXME
+        else:
+            return failure.Failure(error.UnauthorizedLogin(
+                "No anonymous querier available !"))
+
+
+class DBAuthChecker:
+    """user authentication checker
+    cf. twisted's CRED system for more details
+    """
+    implements(ICredentialsChecker)
+    credentialInterfaces = (IUsernamePassword,)
+    
+    def __init__(self, realm, dbhost, dbname):
+        print "DBAuthChecker inits in realm", realm, "dbhost", dbhost,
+        print "and dbname", str(dbname)+"."
+        self.realm = realm
+        self.dbhost = dbhost
+        self.dbname = dbname
+        self.querierCache = {}
+    
+    def requestAvatarId(self, creds):
+        print "DBAuthChecker : checking credentials for DB access"
+        try:
+            querier = self.querierCache[(creds.username, creds.password)]
+            print " querier was in the cache for",
+        except KeyError:
+            print " no querier in cache for",
+            try:
+                querier = MaayQuerier(host=self.dbhost, database=self.dbname,
+                                      user=creds.username,
+                                      password=creds.password)
+                self.querierCache[(creds.username, creds.password)] = querier
+            except MaayAuthenticationError:
+                print ; print "DBAuthChecker : Authentication Error"
+                return failure.Failure(error.UnauthorizedLogin())
+        print creds.username
+        self.realm.createUserSession(creds.username, querier)
+        return defer.succeed(creds.username)
+
+
+class MaaySessionWrapper(guard.SessionWrapper):
+    """override guard.SessionWrapper to add an explicit errBack on
+    portal.login()
+
+    XXX: TODO check if we could not use SessionWrapper.incorrectLoginError()
+    """
+    def login(self, request, session, credentials, segments):
+        # d = SessionWrapper.login()
+        # d.addErrback(..)
+        print "MaaySessionWrapper login", credentials, session, request, segments
+        mind = self.mindFactory(request, credentials)
+        session.mind = mind
+        d = self.portal.login(credentials, mind, self.credInterface)
+        d.addCallback(self._cbLoginSuccess, session, segments)
+        #d.addErrback(self._forceLoginPage)
+        return d
+
+##     def _forceLoginPage(self, *args):
+##         return LoginForm(), ''
+    
+    
+def run():
+    nodeConfig = NodeConfiguration()
+    nodeConfig.load()
+    maayPortal = MaayPortal(nodeConfig)
+    website = appserver.NevowSite(MaaySessionWrapper(maayPortal,
+                                                     mindFactory=MaayMindFactory))
+    website.remember(Maay404(), inevow.ICanHandleNotFound)
+    website.remember(nodeConfig, INodeConfiguration)
+    presenceclient.notify(reactor,
+                          nodeConfig.presence_host, nodeConfig.presence_port,
+                          maayPortal.webQuerier,
+                          nodeConfig.get_node_id(),
+                          socket.gethostbyname(socket.gethostname()),
+                          nodeConfig.rpcserver_port,
+                          nodeConfig.bandwidth)
+    
+                             
+    rpcserver = server.Site(MaayRPCServer(nodeConfig.get_node_id(),
+                                          maayPortal))
+    reactor.listenTCP(nodeConfig.webserver_port, website)
+    reactor.listenTCP(nodeConfig.rpcserver_port, rpcserver)
+    try:
+        print "-------------Starting Node mainloop-------------"
+        reactor.run()
+    finally:
+        print "-----------Shutting down Node----------"
+        
+
+if __name__ == '__main__':
+    run()

Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-10 14:21:43 UTC (rev 407)
+++ trunk/maay/p2pquerier.py	2005-11-10 14:48:23 UTC (rev 408)
@@ -28,7 +28,7 @@
 from twisted.web.xmlrpc import Proxy
 from twisted.internet import reactor
 from maay.texttool import makeAbstract, removeSpace, untagText
-from configuration import WebappConfiguration
+from configuration import NodeConfiguration
 
 def hashIt(item, uname=''.join(platform.uname())):
     hasher = sha.sha()
@@ -155,7 +155,7 @@
         self._answerCallbacks = {}
         # now, read a config. provided value for EXPIRATION_TIME
         # and fire the garbage collector
-        config = WebappConfiguration()
+        config = NodeConfiguration()
         config.load()
         P2pQuerier._EXPIRATION_TIME = max(config.query_life_time,
                                           P2pQuerier._EXPIRATION_TIME)

Deleted: trunk/maay/server.py
===================================================================
--- trunk/maay/server.py	2005-11-10 14:21:43 UTC (rev 407)
+++ trunk/maay/server.py	2005-11-10 14:48:23 UTC (rev 408)
@@ -1,271 +0,0 @@
-#     Copyright (C) 2005 France Telecom R&D
-#
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
-#
-#     This program is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
-#
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
-
-"""maay local web UI script"""
-
-__revision__ = '$Id$'
-
-
-import platform
-import sha
-import time
-import os
-import socket
-
-from zope.interface import implements
-
-from twisted.cred import portal, error
-from twisted.cred.checkers import AllowAnonymousAccess, \
-     ICredentialsChecker
-from twisted.cred.credentials import IAnonymous, IUsernamePassword
-from twisted.internet import reactor, defer
-from twisted.web import server
-from twisted.python import failure
-from nevow import inevow, appserver, guard
-
-# These imports are not used, but they help py2exe tremendously.
-# Do not remove them (that is, unless we change the database backend
-# or drop twisted)
-import nevow.flat.flatstan
-import nevow.query
-import nevow.i18n
-import nevow.flat.flatmdom
-import MySQLdb
-# end of py2exe helping imports
-
-from maay.querier import MaayQuerier, IQuerier, AnonymousQuerier, \
-     MaayAuthenticationError, WEB_AVATARID
-from maay.rpc import MaayRPCServer
-from maay.configuration import WebappConfiguration
-from maay import presenceclient
-from maay.webapplication import Maay404, IServerConfiguration, SearchForm
-
-
-## nevow app/server setup ############################################
-
-# MaayMindFactory might be helpful to access request informations
-# in portal. (not sure it's really aimed to be used this way :-)
-class MaayMindFactory:
-    def __init__(self, request, credentials):
-        pass
-
-class MaayRealm:
-    """simple realm for Maay application"""
-    implements(portal.IRealm)
-
-    def __init__(self):
-        self._sessions = {}
-
-    def createUserSession(self, avatarId, querier):
-        """associate a querier to an avatarId.
-        Use avatarId=None for the internal private database connection"""
-        print "MaayRealm : creating session for avatar", avatarId,
-        print "with a", type(querier), "querier."
-        self._sessions[avatarId] = querier
-
-
-    def requestAvatar(self, avatarId, mind, *interfaces):
-        """Our realm provides 2 different kinds of avatars :
-          - HTML resources (for web applications)
-          - queriers (for XMLRPC queries)
-
-        Both kind of avatars rely on a querier instance
-        """
-        print "MaayRealm requestAvatar %s" % avatarId
-        for iface in interfaces:
-            # if we were asked for a web resource
-            if iface is inevow.IResource:
-                querier = self._getQuerier(avatarId)
-                assert(MaayRPCServer.theP2pQuerier is not None)
-                resc = SearchForm(avatarId, querier, MaayRPCServer.theP2pQuerier)
-                return inevow.IResource, resc, resc.logout
-            # if we were asked for a querier
-            elif iface is IQuerier:
-                querier = self._getQuerier(avatarId)
-                if querier is None:
-                    return IQuerier, None, lambda: None
-                else:
-                    return IQuerier, querier, querier.close
-                
-    def _getQuerier(self, avatarId):
-        try:
-            querier = self._sessions[avatarId]
-            print "MaayRealm : querier of type", type(querier), "for avatar",
-            print avatarId, "was in the session cache."
-        except KeyError:
-            print "MaayRealm : no querier in cache for", str(avatarId)+ \
-                  ". What are we supposed to do ?"
-            querier = None
-        return querier
-
-
-class MaayPortal(object, portal.Portal):
-    """Portal for Maay authentication system"""
-    def __init__(self, webappConfig):
-        print "Portal creation"
-        realm = MaayRealm()
-        checker = DBAuthChecker(realm, webappConfig.db_host,
-                                webappConfig.db_name)
-        portal.Portal.__init__(self, realm, (checker,))
-        self.anonymousChecker = MaayAnonymousChecker()
-        self.registerChecker(self.anonymousChecker, IAnonymous)
-        self.config = webappConfig
-        # Create default web querier, based on local configuration
-        try:
-            print "Credentials : "
-            print "  - host", webappConfig.db_host
-            print "  - db", webappConfig.db_name
-            print "  - user", webappConfig.user
-            print "  - pass", webappConfig.password
-            webQuerier = MaayQuerier(host=webappConfig.db_host,
-                                     database=webappConfig.db_name,
-                                     user=webappConfig.user,
-                                     password=webappConfig.password)
-        except Exception, exc:
-            # unable to create a web querier
-            print "***"
-            print "*** Could not create web querier"
-            print "*** Got exception", exc
-            print "*** This may hurt in unexpected ways"
-            print "***"
-            webQuerier = None
-        else:
-            realm.createUserSession(WEB_AVATARID, webQuerier)
-            webQuerier.registerNode(self.config.get_node_id(),
-                                    ip=socket.gethostbyname(socket.gethostname()),
-                                    port=webappConfig.rpcserver_port,
-                                    bandwidth=webappConfig.bandwidth)
-        self.webQuerier = webQuerier
-        self.anonymousQuerier = AnonymousQuerier(host=webappConfig.db_host,
-                                                 database=webappConfig.db_name,
-                                                 user=webappConfig.user,
-                                                 password=webappConfig.password)
-
-
-    def getWebQuerier(self):
-        return getattr(self, '_webQuerier', None)
-
-    def setWebQuerier(self, value):
-        """used to set 'anonymousAllowed' flag in anonymous checker"""
-        #XXX: now, check this seriously
-        if value is not None:
-            self.anonymousChecker.anonymousAllowed = True
-        self._webQuerier = value
-
-    webQuerier = property(getWebQuerier, setWebQuerier,
-                          doc="web querier")
-
-
-class MaayAnonymousChecker(AllowAnonymousAccess):
-    """don't use default twisted.cred anonymous avatarId"""
-    def __init__(self):
-        self.anonymousAllowed = False
-        
-    def requestAvatarId(self, credentials):
-        print "AnonymousChecker : requestAvatarId", credentials
-        if self.anonymousAllowed:
-            return WEB_AVATARID #XXX: FIXME
-        else:
-            return failure.Failure(error.UnauthorizedLogin(
-                "No anonymous querier available !"))
-
-
-class DBAuthChecker:
-    """user authentication checker
-    cf. twisted's CRED system for more details
-    """
-    implements(ICredentialsChecker)
-    credentialInterfaces = (IUsernamePassword,)
-    
-    def __init__(self, realm, dbhost, dbname):
-        print "DBAuthChecker inits in realm", realm, "dbhost", dbhost,
-        print "and dbname", str(dbname)+"."
-        self.realm = realm
-        self.dbhost = dbhost
-        self.dbname = dbname
-        self.querierCache = {}
-    
-    def requestAvatarId(self, creds):
-        print "DBAuthChecker : checking credentials for DB access"
-        try:
-            querier = self.querierCache[(creds.username, creds.password)]
-            print " querier was in the cache for",
-        except KeyError:
-            print " no querier in cache for",
-            try:
-                querier = MaayQuerier(host=self.dbhost, database=self.dbname,
-                                      user=creds.username,
-                                      password=creds.password)
-                self.querierCache[(creds.username, creds.password)] = querier
-            except MaayAuthenticationError:
-                print ; print "DBAuthChecker : Authentication Error"
-                return failure.Failure(error.UnauthorizedLogin())
-        print creds.username
-        self.realm.createUserSession(creds.username, querier)
-        return defer.succeed(creds.username)
-
-
-class MaaySessionWrapper(guard.SessionWrapper):
-    """override guard.SessionWrapper to add an explicit errBack on
-    portal.login()
-
-    XXX: TODO check if we could not use SessionWrapper.incorrectLoginError()
-    """
-    def login(self, request, session, credentials, segments):
-        # d = SessionWrapper.login()
-        # d.addErrback(..)
-        print "MaaySessionWrapper login", credentials, session, request, segments
-        mind = self.mindFactory(request, credentials)
-        session.mind = mind
-        d = self.portal.login(credentials, mind, self.credInterface)
-        d.addCallback(self._cbLoginSuccess, session, segments)
-        #d.addErrback(self._forceLoginPage)
-        return d
-
-##     def _forceLoginPage(self, *args):
-##         return LoginForm(), ''
-    
-    
-def run():
-    webappConfig = WebappConfiguration()
-    webappConfig.load()
-    maayPortal = MaayPortal(webappConfig)
-    website = appserver.NevowSite(MaaySessionWrapper(maayPortal,
-                                                     mindFactory=MaayMindFactory))
-    website.remember(Maay404(), inevow.ICanHandleNotFound)
-    website.remember(webappConfig, IServerConfiguration)
-    presenceclient.notify(reactor,
-                          webappConfig.registration_host, webappConfig.registration_port,
-                          maayPortal.webQuerier,
-                          webappConfig.get_node_id(),
-                          socket.gethostbyname(socket.gethostname()),
-                          webappConfig.rpcserver_port,
-                          webappConfig.bandwidth)
-    
-                             
-    rpcserver = server.Site(MaayRPCServer(webappConfig.get_node_id(),
-                                          maayPortal))
-    reactor.listenTCP(webappConfig.webserver_port, website)
-    reactor.listenTCP(webappConfig.rpcserver_port, rpcserver)
-    try:
-        print "-------------Server mainloop-------------"
-        reactor.run()
-    finally:
-        print "-----------Shutting down Server----------"
-        
-
-if __name__ == '__main__':
-    run()

Modified: trunk/maay/test/test_configuration.py
===================================================================
--- trunk/maay/test/test_configuration.py	2005-11-10 14:21:43 UTC (rev 407)
+++ trunk/maay/test/test_configuration.py	2005-11-10 14:48:23 UTC (rev 408)
@@ -23,9 +23,9 @@
 import re
 
 from maay import configuration
-from maay.configuration import WebappConfiguration
+from maay.configuration import NodeConfiguration
 
-class WebappConfigTC(unittest.TestCase):
+class NodeConfigTC(unittest.TestCase):
 
     def testFromCommandLine(self):
         """For this test to not fail, the configuration file must
@@ -37,7 +37,7 @@
                 ('maay --db-host foo --db-name maille', ('foo', 'maille')),
                 ]
         for cmdLine, (expectedHost, expectedDatabase) in data:
-            config = WebappConfiguration()
+            config = NodeConfiguration()
             sys.argv = cmdLine.split()
             config.load()
             self.assertEquals(config.db_host, expectedHost)
@@ -47,14 +47,14 @@
     #      this test needs to be run first. This is a BUG that I
     #      could not fix easily.
     def test0FromConfigFile(self):
-        config = WebappConfiguration()
+        config = NodeConfiguration()
         config.config_file = osp.join(osp.dirname(__file__), 'data', 'webapp1.ini')
         config.load()
         self.assertEquals(config.db_host, 'eusebius')
         self.assertEquals(config.db_name, 'maay')
 
     def testFromBoth(self):
-        config = WebappConfiguration()
+        config = NodeConfiguration()
         sys.argv = 'maay --db-host truc'.split()
         config.config_file = osp.join(osp.dirname(__file__), 'data', 'webapp2.ini')
         config.load()

Modified: trunk/maay/test/test_converter.py
===================================================================
--- trunk/maay/test/test_converter.py	2005-11-10 14:21:43 UTC (rev 407)
+++ trunk/maay/test/test_converter.py	2005-11-10 14:48:23 UTC (rev 408)
@@ -1,10 +1,3 @@
-# Copyright (c) 2000-2003 LOGILAB S.A. (Paris, FRANCE).
-# http://www.logilab.fr/ -- mailto:contact at logilab.fr
-"""
-
-"""
-
-__revision__ = "$Id$"
 #     Copyright (C) 2005 France Telecom R&D
 #
 #     This program is free software; you can redistribute it and/or modify
@@ -23,6 +16,8 @@
 
 """tests converters registry management"""
 
+__revision__ = "$Id$"
+
 import unittest
 from mimetypes import guess_type
 
@@ -76,5 +71,9 @@
                           'bogus.txt.gz')
 
 
+class MSWordConverterTC(unittest.TestCase):
+    pass
+
+
 if __name__ == '__main__':
     unittest.main()

Modified: trunk/maay/test/test_image.py
===================================================================
--- trunk/maay/test/test_image.py	2005-11-10 14:21:43 UTC (rev 407)
+++ trunk/maay/test/test_image.py	2005-11-10 14:48:23 UTC (rev 408)
@@ -1,2 +1,36 @@
+#     Copyright (C) 2005 France Telecom R&D
+#
+#     This program is free software; you can redistribute it and/or modify
+#     it under the terms of the GNU General Public License as published by
+#     the Free Software Foundation; either version 2 of the License, or
+#     (at your option) any later version.
+#
+#     This program is distributed in the hope that it will be useful,
+#     but WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#     GNU General Public License for more details.
+#
+#     You should have received a copy of the GNU General Public License
+#     along with this program; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+
 """Module intended to test image.py"""
 
+__revision__ = '$Id$'
+
+import unittest
+
+import maay.image
+
+class SomeTestTC(unittest.TestCase):
+    def setUp(self):
+        pass
+
+    def tearDown(self):
+        pass
+
+    def testSomething(self):
+        pass
+
+if __name__ == '__main__':
+    unittest.main()

Copied: trunk/maay/test/test_node.py (from rev 400, trunk/maay/test/test_server.py)
===================================================================
--- trunk/maay/test/test_server.py	2005-11-10 13:23:58 UTC (rev 400)
+++ trunk/maay/test/test_node.py	2005-11-10 14:48:23 UTC (rev 408)
@@ -0,0 +1,23 @@
+#     Copyright (C) 2005 France Telecom R&D
+#
+#     This program is free software; you can redistribute it and/or modify
+#     it under the terms of the GNU General Public License as published by
+#     the Free Software Foundation; either version 2 of the License, or
+#     (at your option) any later version.
+#
+#     This program is distributed in the hope that it will be useful,
+#     but WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#     GNU General Public License for more details.
+#
+#     You should have received a copy of the GNU General Public License
+#     along with this program; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+
+import unittest
+import maay.node
+
+if __name__ == '__main__':
+    unittest.main()
+
+

Modified: trunk/maay/test/test_rpc.py
===================================================================
--- trunk/maay/test/test_rpc.py	2005-11-10 14:21:43 UTC (rev 407)
+++ trunk/maay/test/test_rpc.py	2005-11-10 14:48:23 UTC (rev 408)
@@ -35,8 +35,8 @@
 from maay import rpc
 from maay.dbentity import Document
 from maay.querier import MaayQuerier, AnonymousQuerier, ANONYMOUS_AVATARID
-from maay.server import MaayPortal
-from maay.configuration import WebappConfiguration
+from maay.node import MaayPortal
+from maay.configuration import NodeConfiguration
 
 class FakeConnection:
     def cursor(self):
@@ -73,7 +73,7 @@
 
 class RPCServerTC(unittest.TestCase):
     def setUp(self):
-        portal = MaayPortal(WebappConfiguration())
+        portal = MaayPortal(NodeConfiguration())
         portal.registerChecker(FakeChecker(portal.realm))
         self.portal = portal
         rpcserver = server.Site(rpc.MaayRPCServer(None, portal))

Deleted: trunk/maay/test/test_server.py
===================================================================
--- trunk/maay/test/test_server.py	2005-11-10 14:21:43 UTC (rev 407)
+++ trunk/maay/test/test_server.py	2005-11-10 14:48:23 UTC (rev 408)
@@ -1,23 +0,0 @@
-#     Copyright (C) 2005 France Telecom R&D
-#
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
-#
-#     This program is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
-#
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
-
-import unittest
-import maay.server
-
-if __name__ == '__main__':
-    unittest.main()
-
-

Modified: trunk/maay/updateconfig.py
===================================================================
--- trunk/maay/updateconfig.py	2005-11-10 14:21:43 UTC (rev 407)
+++ trunk/maay/updateconfig.py	2005-11-10 14:48:23 UTC (rev 408)
@@ -19,14 +19,14 @@
 import sys
 
 config = """[INDEXER]
-# Host on which the maay server is running
+# Host on which the maay node is running
 host=localhost
-#Port on which the maay server is listening
+#Port on which the maay node is listening
 port=6789
 
-# User login on the maay server 
+# User login on the maay node 
 user=maay
-# User password on the maay server
+# User password on the maay node
 password=maay
 
 # Which directories are to be indexed

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-10 14:21:43 UTC (rev 407)
+++ trunk/maay/webapplication.py	2005-11-10 14:48:23 UTC (rev 408)
@@ -36,7 +36,7 @@
 from maay.p2pquerier import P2pQuerier, P2pQuery
 import maay.indexer
 
-class IServerConfiguration(Interface):
+class INodeConfiguration(Interface):
     """provide an interface in order to be able to remember webappconfig"""
 
 
@@ -72,7 +72,7 @@
         self.querier = querier
 
     def data_peers(self, context, data):
-        webappConfig = IServerConfiguration(context)
+        webappConfig = INodeConfiguration(context)
         myNodeId = webappConfig.get_node_id()
         print "PeerList data_peers : my_node_id =", myNodeId
         peers = self.querier.getActiveNeighbors(myNodeId, 10)
@@ -99,7 +99,7 @@
 
     def logout(self):
         print "Bye %s !" % (self.maayId,)
-        # XXX: logout message should be forwarded to registration server
+        # XXX: logout message should be forwarded to presence server
         return None
 
     def child_peers(self, context):
@@ -129,7 +129,7 @@
         if not self.p2pquerier:
             print "BUG ? We don't have a P2pQuerier"
             return
-        webappConfig = IServerConfiguration(context)
+        webappConfig = INodeConfiguration(context)
         theDistributedQuery = P2pQuery(webappConfig.get_node_id(),
                                        webappConfig.rpcserver_port,
                                        query)
@@ -151,7 +151,7 @@
         # self._askForPeerResults(query, context)
         resultsPage = FACTORY.clientFactory(context, self.maayId, localResults, query, offset)
         #######################
-        webappConfig = IServerConfiguration(context)
+        webappConfig = INodeConfiguration(context)
         p2pQuery = P2pQuery(webappConfig.get_node_id(),
                             webappConfig.rpcserver_port,
                             query)

Modified: trunk/maay.iss
===================================================================
--- trunk/maay.iss	2005-11-10 14:21:43 UTC (rev 407)
+++ trunk/maay.iss	2005-11-10 14:48:23 UTC (rev 408)
@@ -9,7 +9,7 @@
 AppVerName=Maay snapshot 2005-10-07
 DefaultDirName={pf}\Maay
 DefaultGroupName=Maay
-UninstallDisplayIcon={app}\maay_server.exe
+UninstallDisplayIcon={app}\maay_node.exe
 Compression=bzip
 SolidCompression=yes
 LicenseFile=thirdparty\mysql\COPYING.txt
@@ -46,9 +46,9 @@
 [Icons]
 Name: "{group}\README.txt"; Filename: "{app}\README.txt"; Comment: "Required reading before launching Maay"
 Name: "{group}\ReleaseNotes.txt"; Filename: "{app}\ReleaseNotes"; Comment: "Required reading before launching Maay"
-Name: "{group}\Maay Server"; Filename: "{app}\maay_server.exe"; WorkingDir: "{app}"; Comment: "The Maay server component"
+Name: "{group}\Maay Node"; Filename: "{app}\maay_node.exe"; WorkingDir: "{app}"; Comment: "The Maay node component"
 Name: "{group}\Maay Indexer"; Filename: "{app}\maay_indexer.exe"; WorkingDir: "{app}"; Comment: "The Maay indexer component"
-Name: "{group}\webapp.ini"; Filename: "{app}\webapp.ini"; Comment: "Maay server configuration"
+Name: "{group}\node.ini"; Filename: "{app}\node.ini"; Comment: "Maay node configuration"
 Name: "{group}\indexer.ini"; Filename: "{app}\indexer.ini"; Comment: "Maay indexer configuration"
 Name: "{group}\image.ini"; Filename: "{app}\image.ini"; Comment: "Maay indexer configuration"
 
@@ -60,7 +60,7 @@
 Filename: "{app}\updateconfig.exe"; Parameters:"""{userdesktop}"" ""{userdocs}"""; WorkingDir:"{app}"; Flags:runhidden
 Filename: "{app}\maay.exe"; Parameters:"-install"; StatusMsg: "Registering Maay as a service"; WorkingDir:"{app}"; Flags:runhidden
 Filename: "NET"; Parameters: "start Maay"; StatusMsg: "Starting Maay node"; Flags:runhidden
-;Filename: "{app}\maay_server.exe"; StatusMsg: "Launching maay server"; WorkingDir:"{app}"; Flags:postinstall nowait
+;Filename: "{app}\maay_node.exe"; StatusMsg: "Launching maay node"; WorkingDir:"{app}"; Flags:postinstall nowait
 
 
 [UninstallRun]

Modified: trunk/maayservice.py
===================================================================
--- trunk/maayservice.py	2005-11-10 14:21:43 UTC (rev 407)
+++ trunk/maayservice.py	2005-11-10 14:48:23 UTC (rev 408)
@@ -34,7 +34,7 @@
 
     def SvcDoRun(self):
         import servicemanager
-        from maay.server import run
+        from maay.node import run
         win32evtlogutil.ReportEvent(self._svc_name_,
                                     servicemanager.PYS_SERVICE_STARTED,
                                     0, # category

Modified: trunk/setup.py
===================================================================
--- trunk/setup.py	2005-11-10 14:21:43 UTC (rev 407)
+++ trunk/setup.py	2005-11-10 14:48:23 UTC (rev 408)
@@ -30,18 +30,18 @@
 packages = ['maay']
 data_files = [('maay/data', glob('maay/data/*')+glob('maay/data/images/*')),
                   ('maay/sql', glob('maay/sql/*.sql')),]
-scripts = ['maay/bin/maay-server', 'maay/bin/maay-indexer']
+scripts = ['maay/bin/maay-node', 'maay/bin/maay-indexer']
 
 
 class Target:
     def __init__(self, **kw):
         self.__dict__.update(kw)
         
-maay_server = Target(description = "The maay server application",
+maay_node = Target(description = "The maay server application",
 			    icon_resources=[(1,  "maay/data/images/maay.ico"),],
-			    script = 'maay/server.py',
+			    script = 'maay/node.py',
                             includes = ["MySQLdb"],
-			    dest_base = "maay_server")
+			    dest_base = "maay_node")
 maay_indexer = Target(description = "The maay indexer application (CLI)",
 			    icon_resources=[(1,  "maay/data/images/maay.ico"),],
 			    script = 'maay/indexer.py',
@@ -64,7 +64,7 @@
             sys.argv.append('py2exe')
             
         
-	setup(console = [maay_server, maay_indexer,
+	setup(console = [maay_node, maay_indexer,
                          createdb, updateConfig],
               service = [maay_service],
 		name = name,
@@ -82,7 +82,7 @@
 		version = version,
 		author = author,
                 author_email = author_email,
-		copyright = copyright,
+#		copyright = copyright,
 		description = description,
 		url = url,
 		data_files = data_files,



From aurelienc at berlios.de  Thu Nov 10 16:02:57 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 10 Nov 2005 16:02:57 +0100
Subject: [Maay-svncheckins] r409 - trunk/maay
Message-ID: <200511101502.jAAF2vak007237@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-10 16:02:55 +0100 (Thu, 10 Nov 2005)
New Revision: 409

Modified:
   trunk/maay/presenceclient.py
Log:
Provide meaningful info in case of failure


Modified: trunk/maay/presenceclient.py
===================================================================
--- trunk/maay/presenceclient.py	2005-11-10 14:48:23 UTC (rev 408)
+++ trunk/maay/presenceclient.py	2005-11-10 15:02:55 UTC (rev 409)
@@ -69,6 +69,18 @@
     return mktime(tuple(date+time+[0,0,0]))
 
 
+class Errbacks:
+    """helper namespace for meaningfull tracebacks"""
+    target = None
+
+    def setTarget(target):
+        Errbacks.target = target
+    setTarget = staticmethod(setTarget)
+
+    def reportBug(bug):
+        print " ... problem contacting %s" % Errbacks.target
+    reportBug = staticmethod(reportBug)
+
 def notify(reactor, regIP, regPort, querier, nodeId, nodeIP, xmlrpcPort, bandwidth):
     """registers and transmits the node catalog to querier.registerNode
     """
@@ -78,6 +90,8 @@
         d = c.connectTCP(regIP, regPort)
         d.addCallback(PresenceClient.notify, nodeId, nodeIP, xmlrpcPort, bandwidth)
         d.addCallback(PresenceClient.who)
+        Errbacks.setTarget("%s:%s" % (regIP, regPort))
+        d.addErrback(Errbacks.reportBug)
     else:
         print "Login : no querier found => no presence / no P2P"
 
@@ -86,9 +100,14 @@
     c = ClientCreator(reactor, RegistrationClient, callback)
     d = c.connectTCP(regIp, regPort)
     d.addCallback(RegistrationClient.who)
+    Errbacks.setTarget("%s:%s" % (regIP, regPort))
+    d.addErrback(Errbacks.reportBug)
 
 def logout(reactor, regIp, regPort, nodeId):
     print "PresenceClient@%s:%s node %s wants to log out." % (regIp, regPort, nodeId)
     c = ClientCreator(reactor, PresenceClient, None)
     d = c.connectTCP(regIp, regPort)
     d.addCallback(PresenceClient.logout)
+    Errbacks.setTarget("%s:%s" % (regIP, regPort))
+    d.addErrback(Errbacks.reportBug)
+



From aurelienc at berlios.de  Thu Nov 10 16:13:38 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Thu, 10 Nov 2005 16:13:38 +0100
Subject: [Maay-svncheckins] r410 - trunk/maay
Message-ID: <200511101513.jAAFDch9009854@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-10 16:13:36 +0100 (Thu, 10 Nov 2005)
New Revision: 410

Modified:
   trunk/maay/configuration.py
   trunk/maay/node.py
   trunk/maay/presenceclient.py
Log:
Fix failure to reach presence server


Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-10 15:02:55 UTC (rev 409)
+++ trunk/maay/configuration.py	2005-11-10 15:13:36 UTC (rev 410)
@@ -160,7 +160,7 @@
         ('presence-host',
          {'type' : "string", 'metavar' : "<presence_host>", 
           'help' : "Host name or IP address of the presence server",
-          'default' : "192.33.178.29",
+          'default' : "localhost",
           }),
         ('presence-port',
          {'type' : "int", 'metavar' : "<presence_port>", 

Modified: trunk/maay/node.py
===================================================================
--- trunk/maay/node.py	2005-11-10 15:02:55 UTC (rev 409)
+++ trunk/maay/node.py	2005-11-10 15:13:36 UTC (rev 410)
@@ -251,8 +251,8 @@
                                                      mindFactory=MaayMindFactory))
     website.remember(Maay404(), inevow.ICanHandleNotFound)
     website.remember(nodeConfig, INodeConfiguration)
-    presenceclient.notify(reactor,
-                          nodeConfig.presence_host, nodeConfig.presence_port,
+    presenceclient.notify(nodeConfig.presence_host,
+                          nodeConfig.presence_port,
                           maayPortal.webQuerier,
                           nodeConfig.get_node_id(),
                           socket.gethostbyname(socket.gethostname()),

Modified: trunk/maay/presenceclient.py
===================================================================
--- trunk/maay/presenceclient.py	2005-11-10 15:02:55 UTC (rev 409)
+++ trunk/maay/presenceclient.py	2005-11-10 15:13:36 UTC (rev 410)
@@ -78,10 +78,10 @@
     setTarget = staticmethod(setTarget)
 
     def reportBug(bug):
-        print " ... problem contacting %s" % Errbacks.target
+        print " ... problem contacting (likely) %s" % Errbacks.target
     reportBug = staticmethod(reportBug)
 
-def notify(reactor, regIP, regPort, querier, nodeId, nodeIP, xmlrpcPort, bandwidth):
+def notify(regIP, regPort, querier, nodeId, nodeIP, xmlrpcPort, bandwidth):
     """registers and transmits the node catalog to querier.registerNode
     """
     print "PresenceClient notify %s %s" % (nodeIP, xmlrpcPort)
@@ -95,14 +95,6 @@
     else:
         print "Login : no querier found => no presence / no P2P"
 
-def askWho(reactor, regIp, regPort, callback):
-    """transmits node catalog to the callback"""
-    c = ClientCreator(reactor, RegistrationClient, callback)
-    d = c.connectTCP(regIp, regPort)
-    d.addCallback(RegistrationClient.who)
-    Errbacks.setTarget("%s:%s" % (regIP, regPort))
-    d.addErrback(Errbacks.reportBug)
-
 def logout(reactor, regIp, regPort, nodeId):
     print "PresenceClient@%s:%s node %s wants to log out." % (regIp, regPort, nodeId)
     c = ClientCreator(reactor, PresenceClient, None)



From adimasci at berlios.de  Thu Nov 10 16:23:32 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Thu, 10 Nov 2005 16:23:32 +0100
Subject: [Maay-svncheckins] r411 - in trunk/maay: . data
Message-ID: <200511101523.jAAFNWA3011266@sheep.berlios.de>

Author: adimasci
Date: 2005-11-10 16:23:29 +0100 (Thu, 10 Nov 2005)
New Revision: 411

Modified:
   trunk/maay/data/liveresults.html
   trunk/maay/data/maay.css
   trunk/maay/query.py
   trunk/maay/webapplication.py
Log:
This is the first revision having auto update result pages more or 
less working.

**However**, there is still a lot of work to do :

 - next/previous links don't work
 - we need to merge resultsets properly
 - we need comsectic changes to display differently results
   from each peer
 - refactoring needed



Modified: trunk/maay/data/liveresults.html
===================================================================
--- trunk/maay/data/liveresults.html	2005-11-10 15:13:36 UTC (rev 410)
+++ trunk/maay/data/liveresults.html	2005-11-10 15:23:29 UTC (rev 411)
@@ -6,14 +6,14 @@
     <link rel="stylesheet" type="text/css" href="maaycss"/>
     <link rel="shortcut icon" href="images/maay.ico" />
     <nevow:invisible nevow:render="liveglue" />
+
     <script type='text/javascript' language='javascript'>
 function updateResults(source) {
-  alert("I'm alive .... alive !!!");
   div = document.getElementById('resultsDiv');
   div.innerHTML = source;
 }
 function startConnection() {
-  var d = server.callRemote('foo');
+  var d = server.callRemote('connect');
 }
     </script>
 

Modified: trunk/maay/data/maay.css
===================================================================
--- trunk/maay/data/maay.css	2005-11-10 15:13:36 UTC (rev 410)
+++ trunk/maay/data/maay.css	2005-11-10 15:23:29 UTC (rev 411)
@@ -39,6 +39,11 @@
   display: block;
 }
 
+a.distantDocTitle {
+  display: block;
+  background-color: yellow;
+}
+
 span.resultUrl {
   font-size: 80%;
   font-family: "New Century Schoolbook", serif;

Modified: trunk/maay/query.py
===================================================================
--- trunk/maay/query.py	2005-11-10 15:13:36 UTC (rev 410)
+++ trunk/maay/query.py	2005-11-10 15:23:29 UTC (rev 411)
@@ -49,6 +49,13 @@
         return Query(u' '.join(words), offset, **restrictions)
     fromRawQuery = staticmethod(fromRawQuery)
 
+    def fromContext(context):
+        """:type context: nevow's context objects"""
+        rawQuery = unicode(context.arg('words'), 'utf-8')
+        offset = int(context.arg('offset', 0))
+        return Query.fromRawQuery(rawQuery, offset)
+    fromContext = staticmethod(fromContext)
+
     def __repr__(self):
         return 'Query Object (%s, %s, %s)' % (self.words, self.filetype,
                                               self.filename)

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-10 15:13:36 UTC (rev 410)
+++ trunk/maay/webapplication.py	2005-11-10 15:23:29 UTC (rev 411)
@@ -22,6 +22,7 @@
 from datetime import datetime
 import re
 from xmlrpclib import ServerProxy
+from itertools import cycle
 
 from zope.interface import Interface
 from twisted.web import static
@@ -34,6 +35,7 @@
 from maay.texttool import makeAbstract, WORDS_RGX, normalizeText, boldifyText
 from maay.query import Query
 from maay.p2pquerier import P2pQuerier, P2pQuery
+from maay.dbentity import Document
 import maay.indexer
 
 class INodeConfiguration(Interface):
@@ -139,27 +141,7 @@
 
 
     def child_search(self, context):
-        # query = unicode(context.arg('words'))        
-        offset = int(context.arg('offset', 0))
-        words = context.arg('words')
-        if not words:
-            query = Query.fromRawQuery('')
-            return FACTORY.getLivePage(context)
-        rawQuery = unicode(context.arg('words'), 'utf-8')
-        query = Query.fromRawQuery(rawQuery, offset)
-        localResults = self.querier.findDocuments(query)
-        # self._askForPeerResults(query, context)
-        resultsPage = FACTORY.clientFactory(context, self.maayId, localResults, query, offset)
-        #######################
-        webappConfig = INodeConfiguration(context)
-        p2pQuery = P2pQuery(webappConfig.get_node_id(),
-                            webappConfig.rpcserver_port,
-                            query)
-        self.p2pquerier.sendQuery(p2pQuery)
-        #######################
-
-        self.p2pquerier.addAnswerCallback(p2pQuery.qid, resultsPage.onNewResults)
-        return resultsPage
+        return FACTORY.clientFactory(context, self.querier, self.p2pquerier)
     
     # XXX make sure that the requested document is really in the database
     # XXX don't forget to update the download statistics of the document
@@ -198,26 +180,43 @@
     docFactory = loaders.xmlfile(get_path_of('liveresults.html'))
     addSlash = False
 
-    instances = []
+    def __init__(self, context, querier, p2pquerier):
+        athena.LivePage.__init__(self)
+        # XXX: nevow/livepage related trick (version 0.6.0) :
+        # This resource is instanciated several times when rendering the
+        # results page (each time the browser tries to load
+        # ROOT/search/athena.js, ROOT/search/MochiKit.js, etc.) because
+        # the Livepage-Id is not yet set in the request. In these particuliar
+        # cases, we don't want to start new queries, so we do an ugly check
+        # to test whether or not we're instanciating the *real* live page
+        # (or if we're just trying to download JS files)
+        # NOTE: At the time this comment is written, athena/LivePages are handled
+        #       differently in nevow SVN. It's now possible to insantiate directly
+        #       LivePage instances (which is great !), so we'll have to change
+        #       the implementation for next nevow release.
+        if len(inevow.IRemainingSegments(context)) < 2:
+            self.query = Query.fromContext(context)
+            self.offset = self.query.offset
+            self.results = querier.findDocuments(self.query)
+            webappConfig = IServerConfiguration(context)
+            p2pQuery = P2pQuery(webappConfig.get_node_id(),
+                                webappConfig.rpcserver_port,
+                                self.query)
+            p2pquerier.sendQuery(p2pQuery)
+            p2pquerier.addAnswerCallback(p2pQuery.qid, self.onNewResults)
     
-    def __init__(self, maayId, results, query, offset):
-        athena.LivePage.__init__(self)
-        self.maayId = maayId
-        self.results = results
-        self.offset = offset
-        self.query = query.words # unicode(query)
 
     def data_results(self, context, data):
         return self.results
     
     def render_title(self, context, data):
-        context.fillSlots('words', self.query)
+        context.fillSlots('words', self.query.words)
         context.fillSlots('start_result', min(len(self.results), self.offset + 1))
         context.fillSlots('end_result', self.offset + len(self.results))
         return context.tag
 
     def render_searchfield(self, context, data):
-        context.fillSlots('words', self.query)
+        context.fillSlots('words', self.query.words)
         return context.tag
 
     def render_prevset_url(self, context, data):
@@ -234,7 +233,7 @@
 
     def render_row(self, context, data):
         document = data
-        words = self.query.split()
+        words = self.query.words.split()
         context.fillSlots('mime_type', re.sub("/", "_", document.mime_type))
         context.fillSlots('doctitle',
                           tags.xml(boldifyText(document.title, words)))
@@ -250,7 +249,7 @@
         context.fillSlots('abstract', tags.xml(abstract))
         context.fillSlots('docid', document.db_document_id)
         context.fillSlots('docurl', tags.xml(boldifyText(document.url, words)))
-        context.fillSlots('words', self.query)
+        context.fillSlots('words', self.query.words)
         context.fillSlots('readable_size', document.readable_size())
         date = datetime.fromtimestamp(document.publication_time)
         context.fillSlots('publication_date', date.strftime('%d %b %Y'))
@@ -259,14 +258,40 @@
     def onNewResults(self, results):
         # r = mergeResults(self.results, results)
         # source = htmlize(r)
-        print "++++++++++++++++++ Got new resulsts", results
-        self.callRemote('updateResults', u'<div>%r</div>' % results)
+        self.results = [Document(**params) for params in results]
+        page = PleaseCloseYourEyes(self.results, self.query).renderSynchronously()
+        self.callRemote('updateResults', u'<div>%s</div>' % page)
 
-    def remote_foo(self, context):
-        print "************************************************** le client m'appelle !!"
+    def remote_connect(self, context):
+        """just here to start the connection between client and server (Ajax)"""
         return 0
 
 
+class PleaseCloseYourEyes(ResultsPage):
+    """This resource and the way it is called is kind of ugly.
+    It will be refactored later. The idea is to have something working
+    quickly.
+    """
+
+    docFactory = loaders.xmlstr("""
+  <table xmlns="http://www.w3.org/1999/xhtml" xmlns:nevow="http://nevow.com/ns/nevow/0.1" class="results" nevow:render="sequence" nevow:data="results">
+    <tr nevow:pattern="item" nevow:render="row">
+      <td>
+	<div class="resultItem">
+	  <table><tr><td><div><nevow:attr name="class"><nevow:slot name="mime_type"/></nevow:attr></div></td><td><a class="distantDocTitle"><nevow:attr name="href">/download?docid=<nevow:slot name="docid" />&amp;words=<nevow:slot name="words" /></nevow:attr><nevow:slot name="doctitle">DOC TITLE</nevow:slot></a></td></tr></table>
+	  <div class="resultDesc"><nevow:slot name="abstract" /></div>
+	  <span class="resultUrl"><nevow:attr name="href"><nevow:slot name="docurl" /></nevow:attr><nevow:slot name="docurl" /> - <nevow:slot name="readable_size" /> - <nevow:slot name="publication_date" /></span>
+	</div>
+      </td>
+    </tr>
+  </table>
+    """)
+    
+    def __init__(self, results, query):
+        self.results = results
+        self.query = query
+
+
 class ResultsPageFactory(athena.LivePageFactory):
     def getLivePage(self, context):
         livepageId = inevow.IRequest(context).getHeader('Livepage-Id')
@@ -276,16 +301,16 @@
         else:
             return None        
 
-    def clientFactory(self, context, maayId, results, query, offset):
+    def clientFactory(self, context, querier, p2pquerier):
         livepage = self.getLivePage(context)
         if livepage is None:
-            return self._manufactureClient(maayId, results, query, offset)
+            return self._manufactureClient(context, querier, p2pquerier)
         else:
             return livepage
         
-    def _manufactureClient(self, maayId, results, query, offset):
+    def _manufactureClient(self, context, querier, p2pquerier):
         print "Building livepage !"
-        cl = self._pageFactory(maayId, results, query, offset)
+        cl = self._pageFactory(context, querier, p2pquerier)
         cl.factory = self
         return cl
 



From adimasci at berlios.de  Thu Nov 10 16:27:40 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Thu, 10 Nov 2005 16:27:40 +0100
Subject: [Maay-svncheckins] r412 - trunk/maay
Message-ID: <200511101527.jAAFReCd011777@sheep.berlios.de>

Author: adimasci
Date: 2005-11-10 16:27:39 +0100 (Thu, 10 Nov 2005)
New Revision: 412

Modified:
   trunk/maay/webapplication.py
Log:
seems that svn didn't merge correctly

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-10 15:23:29 UTC (rev 411)
+++ trunk/maay/webapplication.py	2005-11-10 15:27:39 UTC (rev 412)
@@ -198,7 +198,7 @@
             self.query = Query.fromContext(context)
             self.offset = self.query.offset
             self.results = querier.findDocuments(self.query)
-            webappConfig = IServerConfiguration(context)
+            webappConfig = INodeConfiguration(context)
             p2pQuery = P2pQuery(webappConfig.get_node_id(),
                                 webappConfig.rpcserver_port,
                                 self.query)



From afayolle at berlios.de  Thu Nov 10 16:54:03 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Thu, 10 Nov 2005 16:54:03 +0100
Subject: [Maay-svncheckins] r413 - in trunk/maay: . configuration configuration/win32 test/data
Message-ID: <200511101554.jAAFs3mG015975@sheep.berlios.de>

Author: afayolle
Date: 2005-11-10 16:53:56 +0100 (Thu, 10 Nov 2005)
New Revision: 413

Modified:
   trunk/maay/configuration.py
   trunk/maay/configuration/node.ini
   trunk/maay/configuration/win32/node.ini
   trunk/maay/test/data/webapp1.ini
   trunk/maay/test/data/webapp2.ini
Log:
a few servers that passed through the tests


Modified: trunk/maay/configuration/node.ini
===================================================================
--- trunk/maay/configuration/node.ini	2005-11-10 15:27:39 UTC (rev 412)
+++ trunk/maay/configuration/node.ini	2005-11-10 15:53:56 UTC (rev 413)
@@ -1,4 +1,4 @@
-[SERVER]
+[NODE]
 db-name=maay
 db-host=localhost
 user=maay

Modified: trunk/maay/configuration/win32/node.ini
===================================================================
--- trunk/maay/configuration/win32/node.ini	2005-11-10 15:27:39 UTC (rev 412)
+++ trunk/maay/configuration/win32/node.ini	2005-11-10 15:53:56 UTC (rev 413)
@@ -1,4 +1,4 @@
-[SERVER]
+[NODE]
 db-name=maay
 db-host=localhost
 user=maay

Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-10 15:27:39 UTC (rev 412)
+++ trunk/maay/configuration.py	2005-11-10 15:53:56 UTC (rev 413)
@@ -194,7 +194,7 @@
           }),
         ]
 
-    config_file = 'Node.ini'
+    config_file = 'node.ini'
 
     def __init__(self):
         Configuration.__init__(self, name="Node")

Modified: trunk/maay/test/data/webapp1.ini
===================================================================
--- trunk/maay/test/data/webapp1.ini	2005-11-10 15:27:39 UTC (rev 412)
+++ trunk/maay/test/data/webapp1.ini	2005-11-10 15:53:56 UTC (rev 413)
@@ -1,2 +1,2 @@
-[SERVER]
+[NODE]
 db-host=eusebius

Modified: trunk/maay/test/data/webapp2.ini
===================================================================
--- trunk/maay/test/data/webapp2.ini	2005-11-10 15:27:39 UTC (rev 412)
+++ trunk/maay/test/data/webapp2.ini	2005-11-10 15:53:56 UTC (rev 413)
@@ -1,2 +1,2 @@
-[SERVER]
+[NODE]
 db-name=muche



From afayolle at berlios.de  Thu Nov 10 17:10:22 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Thu, 10 Nov 2005 17:10:22 +0100
Subject: [Maay-svncheckins] r414 - trunk/maay
Message-ID: <200511101610.jAAGAM65017771@sheep.berlios.de>

Author: afayolle
Date: 2005-11-10 17:10:21 +0100 (Thu, 10 Nov 2005)
New Revision: 414

Modified:
   trunk/maay/converter.py
   trunk/maay/indexer.py
Log:
fixed cause of crash on the indexer


Modified: trunk/maay/converter.py
===================================================================
--- trunk/maay/converter.py	2005-11-10 15:53:56 UTC (rev 413)
+++ trunk/maay/converter.py	2005-11-10 16:10:21 UTC (rev 414)
@@ -99,10 +99,9 @@
         try:
             return parser.parseFile(filepath, osp.basename(filepath),
                                     self.OUTPUT_ENCODING)
-        except ParsingError, exc:
+        except Exception, exc:
             raise IndexationFailure("Cannot parse document %s (because %s)" % (filepath, exc))
-        except IOError, exc:
-            raise IndexationFailure("Cannot read document %s (because %s)" % (filepath, exc))
+        
 
 
 class RawTextConverter(BaseConverter):
@@ -165,13 +164,14 @@
         """
 
         outputDir = mkdtemp()
+        outputFile = osp.join(outputDir, osp.basename(filepath))
+        inputFile = ''
 
         try:
             try:
                 inputFile = uncompressFile (filepath, outputDir)
             except IOError,exc:
                 raise IndexationFailure("Unable to index %r [%s]" % (filename, exc))
-            outputFile = osp.join(outputDir, osp.basename(filepath))
 
             command_args = {'input' : inputFile, 'output' : outputFile}
             cmd = self.COMMAND % command_args

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-10 15:53:56 UTC (rev 413)
+++ trunk/maay/indexer.py	2005-11-10 16:10:21 UTC (rev 414)
@@ -146,7 +146,7 @@
                 except converter.IndexationFailure, exc:
                     if self.verbose:
                         print exc
-                    continue
+                    continue                    
                 docId = makeDocumentId(filename)
                 mime_type = mimetypes.guess_type(filename)[0]
 



From afayolle at berlios.de  Thu Nov 10 18:23:50 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Thu, 10 Nov 2005 18:23:50 +0100
Subject: [Maay-svncheckins] r415 - trunk/maay
Message-ID: <200511101723.jAAHNokh025907@sheep.berlios.de>

Author: afayolle
Date: 2005-11-10 18:23:49 +0100 (Thu, 10 Nov 2005)
New Revision: 415

Modified:
   trunk/maay/converter.py
Log:
more robust error handling

Modified: trunk/maay/converter.py
===================================================================
--- trunk/maay/converter.py	2005-11-10 16:10:21 UTC (rev 414)
+++ trunk/maay/converter.py	2005-11-10 17:23:49 UTC (rev 415)
@@ -170,23 +170,24 @@
         try:
             try:
                 inputFile = uncompressFile (filepath, outputDir)
-            except IOError,exc:
-                raise IndexationFailure("Unable to index %r [%s]" % (filename, exc))
+            except Exception, exc:
+                raise IndexationFailure("Unable to index %r [%s]" % (filepath, exc))
 
             command_args = {'input' : inputFile, 'output' : outputFile}
             cmd = self.COMMAND % command_args
 
             #print "Executing %r" % cmd
             errcode = os.system(cmd)
-            if errcode == 0: # OK
-                parser = self.getParser()
-                try:
-                    return parser.parseFile(outputFile, osp.basename(filepath),
-                                        self.OUTPUT_ENCODING)
-                except IOError:
-                    raise IndexationFailure('Unable to index %r' % filepath)
-            else:
+            if errcode: # NOK
                 raise IndexationFailure('Unable to index %r' % filepath)
+
+            parser = self.getParser()
+            try:
+                return parser.parseFile(outputFile, osp.basename(filepath),
+                                    self.OUTPUT_ENCODING)
+            except Exception:
+                raise IndexationFailure('Unable to index %r' % filepath)
+                
         finally:
             try:
                 if osp.isfile(outputFile):



From adimasci at berlios.de  Fri Nov 11 12:19:58 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Fri, 11 Nov 2005 12:19:58 +0100
Subject: [Maay-svncheckins] r421 - trunk/maay
Message-ID: <200511111119.jABBJwEo023188@sheep.berlios.de>

Author: adimasci
Date: 2005-11-11 12:19:56 +0100 (Fri, 11 Nov 2005)
New Revision: 421

Modified:
   trunk/maay/p2pquerier.py
Log:
Should fix incomplete last checkin

Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-10 22:04:50 UTC (rev 420)
+++ trunk/maay/p2pquerier.py	2005-11-11 11:19:56 UTC (rev 421)
@@ -94,7 +94,10 @@
 
 
 class P2pAnswer:
-    def __init__(self, queryId, documents):
+    def __init__(self, queryId, provider, documents):
+        """
+        :type provider: 3-tuple (login, IP, xmlrpc-port)
+        """
         self.queryId = queryId
         self.provider = provider
         self.documents = documents
@@ -317,7 +320,7 @@
             except ValueError:
                 print "unknown node %s" % query.sender
         else: # local would be true ? don't waste the answers ...
-            self._notifyAnswerCallbacks(answer.queryId, provider, toSend)
+            self._notifyAnswerCallbacks(answer.queryId, answer.provider, toSend)
     
     def _selectTargetNeighbors(self, query):
         """return a list of nodes to which the query will be sent.



From adimasci at berlios.de  Fri Nov 11 14:14:47 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Fri, 11 Nov 2005 14:14:47 +0100
Subject: [Maay-svncheckins] r422 - in trunk/maay: . test
Message-ID: <200511111314.jABDEl3p012240@sheep.berlios.de>

Author: adimasci
Date: 2005-11-11 14:14:34 +0100 (Fri, 11 Nov 2005)
New Revision: 422

Modified:
   trunk/maay/configuration.py
   trunk/maay/test/test_configuration.py
Log:
- ImageConfiguration just extends BaseConfiguration
- fixed lot of small bugs (missing imports, typos)


Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-11 11:19:56 UTC (rev 421)
+++ trunk/maay/configuration.py	2005-11-11 13:14:34 UTC (rev 422)
@@ -24,6 +24,7 @@
 import sha
 import platform
 import time
+import stat
 
 from logilab.common.configuration import Configuration as BaseConfiguration
 
@@ -249,42 +250,6 @@
                 continue
         raise ValueError('Unable to find a writable directory to store the node id')
 
-################ Image stuff 
-
-class NoThumbnailsDir(Exception):
-    """Represents impossibility to access or create RW the
-       maay thumbnails dir repository"""
-    pass
-
-class ImageConfiguration(Configuration):
-    options = Configuration.options + [
-        ('thumbnails-dir',
-         {'type' : "string", 'metavar' : "--thumbnailsdir",
-          'help' : "Thumbnail files repository",
-          'default' : '.maay_thumbnails'},)]
-    config_file = 'image.ini'
-
-    def __init__(self):
-        Configuration.__init__(self, name="Image")
-
-    def get_thumbnails_dir(self):
-        """Returns the complete path to Maay thumnails directory
-           XXX: It will try to create the dir if absent"""
-        path = osp.join(osp.expanduser('~'),
-                        self.get('thumbnails-dir'))
-        if not os.access(path, os.W_OK):
-            try:
-                os.makedirs(path, stat.S_IRWXU)
-            except Exception, e:
-                raise NoThumbnailsDir("Impossible to access or create %s. "
-                                      "Cause : %e" % (path, e))
-        if os.access(path, os.W_OK): # yes, I'm paranoId
-            return path
-        else:
-            raise NoThumbnailsDir("Access to %s is impossible." % path)
-
-
-
 ################ Indexer stuff 
 
 class IndexerConfiguration(Configuration):
@@ -360,3 +325,42 @@
 
     def __init__(self):
         Configuration.__init__(self, name="Indexer")
+
+################ Image stuff 
+
+class NoThumbnailsDir(Exception):
+    """Represents impossibility to access or create RW the
+       maay thumbnails dir repository"""
+    pass
+
+class ImageConfiguration(BaseConfiguration):
+    options = [
+        ('thumbnails-dir',
+         {'type' : "string", 'metavar' : "--thumbnailsdir",
+          'help' : "Thumbnail files repository",
+          'default' : '.maay_thumbnails'},)]
+    config_file = 'image.ini'
+
+    def __init__(self):
+        BaseConfiguration.__init__(self, options=self.options,
+                                   config_file=self.config_file,
+                                   name='Image')
+
+    def get_thumbnails_dir(self):
+        """Returns the complete path to Maay thumnails directory
+           XXX: It will try to create the dir if absent"""
+        path = osp.join(osp.expanduser('~'),
+                        self.get('thumbnails-dir'))
+        if not os.access(path, os.W_OK):
+            try:
+                os.makedirs(path, stat.S_IRWXU)
+            except Exception, e:
+                raise NoThumbnailsDir("Impossible to access or create %s. "
+                                      "Cause : %s" % (path, e))
+        if os.access(path, os.W_OK): # yes, I'm paranoId
+            return path
+        else:
+            raise NoThumbnailsDir("Access to %s is impossible." % path)
+
+
+

Modified: trunk/maay/test/test_configuration.py
===================================================================
--- trunk/maay/test/test_configuration.py	2005-11-11 11:19:56 UTC (rev 421)
+++ trunk/maay/test/test_configuration.py	2005-11-11 13:14:34 UTC (rev 422)
@@ -23,7 +23,7 @@
 import re
 
 from maay import configuration
-from maay.configuration import NodeConfiguration
+from maay.configuration import NodeConfiguration, ImageConfiguration
 
 class NodeConfigTC(unittest.TestCase):
 
@@ -66,6 +66,18 @@
         result = configuration._filter_files_with(files, os.R_OK)
         self.assertEquals(result, ['.'])
 
+class ImageConfigurationTC(unittest.TestCase):
+    def setUp(self):
+        self.argvBackup = sys.argv
+
+    def tearDown(self):
+        sys.argv = self.argvBackup
+    
+    def testLoadNotClutteredByArgv(self):
+        sys.argv = "indexer.py --private-index-dir=foo".split()
+        config = ImageConfiguration()
+        self.assertEquals(config.get('thumbnails-dir'), '.maay_thumbnails')
+        
 if sys.platform == 'win32':
     class Win32ConfigTC(unittest.TestCase):
         def testUpdateEnvPath(self):



From adimasci at berlios.de  Fri Nov 11 16:16:58 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Fri, 11 Nov 2005 16:16:58 +0100
Subject: [Maay-svncheckins] r423 - in trunk/maay: . data
Message-ID: <200511111516.jABFGwL6008256@sheep.berlios.de>

Author: adimasci
Date: 2005-11-11 16:16:58 +0100 (Fri, 11 Nov 2005)
New Revision: 423

Modified:
   trunk/maay/data/indexationpage.html
   trunk/maay/rpc.py
   trunk/maay/webapplication.py
Log:
started to add peer information and download from peer ability

(kind of work, but it's still more a proof of concept than a 
 definitive solution)


Modified: trunk/maay/data/indexationpage.html
===================================================================
--- trunk/maay/data/indexationpage.html	2005-11-11 13:14:34 UTC (rev 422)
+++ trunk/maay/data/indexationpage.html	2005-11-11 15:16:58 UTC (rev 423)
@@ -2,7 +2,7 @@
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
 <nevow:invisible xmlns="http://www.w3.org/1999/xhtml" lang="en" xmlns:nevow="http://nevow.com/ns/nevow/0.1">
 <h1>Indexation Page</h1>
-  <div class="message" nevow:render="message">"<nevow:slot name="msg" />"</div><br /><br />
+  <div class="message">"<span nevow:render="message" />"</div><br /><br />
 <a href="/indexation?start=1">Index now</a><br /><br />
 <a href="/">return to search page</a>
 </nevow:invisible>

Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-11 13:14:34 UTC (rev 422)
+++ trunk/maay/rpc.py	2005-11-11 15:16:58 UTC (rev 423)
@@ -178,7 +178,18 @@
         answer = P2pAnswer(queryId, provider, documents)
         reactor.callLater(.01, getP2pQuerier().relayAnswer, answer)
         return self.nodeId
-                         
+
+    def xmlrpc_downloadFile(self, filepath):
+        """dummy implementation for now"""
+        try:
+            fp = file(filepath)
+            data = fp.read()
+            fp.close()
+        except Exception, exc:
+            import traceback
+            traceback.print_exc()
+            return "Could not get %r" % filepath
+        return data
     
     def cnxIsValid(self, cnxId):
         if cnxId in self._sessions:

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-11 13:14:34 UTC (rev 422)
+++ trunk/maay/webapplication.py	2005-11-11 15:16:58 UTC (rev 423)
@@ -154,7 +154,24 @@
         else:
             return Maay404()
 
+    def child_distantfile(self, context):
+        host = context.arg('host')
+        port = context.arg('port')
+        filepath = context.arg('filepath')
+        if not host or not port or not filepath:
+            return Maay404()
+        proxy = ServerProxy('http://%s:%s' % (host, port))
+        return DistantFilePage(filepath, proxy.downloadFile(filepath))
 
+class DistantFilePage(static.File):
+    def __init__(self, filepath, fileContent):
+        static.File.__init__(self, filepath)
+        self.fileContent = fileContent
+        
+    def openForReading(self):
+        from cStringIO import StringIO
+        return StringIO(self.fileContent)
+
 class IndexationPage(MaayPage):
     # just for the demo. Should be moved to a adminpanel interface later.
     """index page"""
@@ -163,13 +180,11 @@
     
     def __init__(self, msg = "No message"):
         MaayPage.__init__(self)
-        self.__msg = msg
+        self._msg = msg
 
     def render_message(self, context, data):
-        context.fillSlots('msg', self.__msg)
-        return context.tag
+        return self._msg
 
-
 from nevow import athena, inevow
 from twisted.python import log
 
@@ -260,7 +275,7 @@
         # r = mergeResults(self.results, results)
         # source = htmlize(r)
         self.results = [Document(**params) for params in results]
-        page = PleaseCloseYourEyes(self.results, self.query).renderSynchronously()
+        page = PleaseCloseYourEyes(self.results, provider, self.query).renderSynchronously()
         self.callRemote('updateResults', u'<div>%s</div>' % page)
 
     def remote_connect(self, context):
@@ -273,26 +288,47 @@
     It will be refactored later. The idea is to have something working
     quickly.
     """
-
     docFactory = loaders.xmlstr("""
   <table xmlns="http://www.w3.org/1999/xhtml" xmlns:nevow="http://nevow.com/ns/nevow/0.1" class="results" nevow:render="sequence" nevow:data="results">
     <tr nevow:pattern="item" nevow:render="row">
       <td>
 	<div class="resultItem">
-	  <table><tr><td><div><nevow:attr name="class"><nevow:slot name="mime_type"/></nevow:attr></div></td><td><a class="distantDocTitle"><nevow:attr name="href">/download?docid=<nevow:slot name="docid" />&amp;words=<nevow:slot name="words" /></nevow:attr><nevow:slot name="doctitle">DOC TITLE</nevow:slot></a></td></tr></table>
-	  <div class="resultDesc"><nevow:slot name="abstract" /></div>
-	  <span class="resultUrl"><nevow:attr name="href"><nevow:slot name="docurl" /></nevow:attr><nevow:slot name="docurl" /> - <nevow:slot name="readable_size" /> - <nevow:slot name="publication_date" /></span>
+	  <table>
+            <tr><td><div><nevow:attr name="class"><nevow:slot name="mime_type"/></nevow:attr></div></td>
+                <td>
+                 <a class="distantDocTitle">
+                  <nevow:attr name="href"><nevow:slot name="distanturl" /></nevow:attr>
+                  <nevow:slot name="doctitle">DOC TITLE</nevow:slot>
+                 </a>
+                </td>
+            </tr>
+          </table>
+          <div class="resultDesc"><nevow:slot name="abstract" /></div>
+	  <span class="resultUrl">(<span nevow:render="peer" />) - <nevow:slot name="docurl" /> - <nevow:slot name="readable_size" /> - <nevow:slot name="publication_date" /></span>
 	</div>
       </td>
     </tr>
   </table>
     """)
     
-    def __init__(self, results, query):
+    def __init__(self, results, provider, query):
         self.results = results
+        self.peerLogin, self.peerHost, self.peerPort = provider
         self.query = query
 
+    def render_peer(self, context, data):
+        return '%s (%s:%s)' % (self.peerLogin, self.peerHost, self.peerPort)
 
+    def render_row(self, context, data):
+        document = data
+        ResultsPage.render_row(self, context, data)
+        context.fillSlots('distanturl', '/distantfile?filepath=%s&host=%s&port=%s' % (document.url, self.peerHost, self.peerPort))
+        return context.tag
+
+    def render_distanturl(self, context, data):
+        return '/distantfile?filepath=bim&host=%s&port=%s' % (self.peerHost, self.peerPort)
+
+
 class ResultsPageFactory(athena.LivePageFactory):
     def getLivePage(self, context):
         livepageId = inevow.IRequest(context).getHeader('Livepage-Id')



From aurelienc at berlios.de  Fri Nov 11 17:09:32 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 11 Nov 2005 17:09:32 +0100
Subject: [Maay-svncheckins] r424 - trunk/maay
Message-ID: <200511111609.jABG9WV7013896@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-11 17:09:32 +0100 (Fri, 11 Nov 2005)
New Revision: 424

Modified:
   trunk/maay/texttool.py
Log:
Deactivate thumbnail production for now.
The whole thumbnail story is, currently, a diversion, and needs more careful attention (it does not work properly, for known reasons :-).


Modified: trunk/maay/texttool.py
===================================================================
--- trunk/maay/texttool.py	2005-11-11 15:16:58 UTC (rev 423)
+++ trunk/maay/texttool.py	2005-11-11 16:09:32 UTC (rev 424)
@@ -27,6 +27,7 @@
 import mimetypes
 import gzip
 import bz2
+import traceback
 
 from maay.image import get_ustring_from_exif, make_thumbnail
 from maay.configuration import ImageConfiguration as ImConfig
@@ -239,12 +240,14 @@
         title = unicode(pristineFilename, sys.getfilesystemencoding())
         try:
             result = 'EXIF : ' + get_ustring_from_exif(filepath)
-            try:
-                thumb = make_thumbnail(filepath, self.get_thumbnails_dir())
-            except Exception, e:
-                print "Can't make thumbnail. Cause : %s" % e
-                thumb = None
-            return title, result, [thumb], 0
+##             try:
+##                 thumb = make_thumbnail(filepath, self.get_thumbnails_dir())
+##             except Exception, e:
+##                 print "Can't make thumbnail. Cause : %s" % e
+##                 traceback.print_exc()
+##                 thumb = None
+##             return title, result, [thumb], 0
+            return title, result, [], 0
         except Exception, e:
             print "No EXIF nor thumbnails. Cause : %s" % e
         return title, u'No EXIF information available', [], 0



From aurelienc at berlios.de  Fri Nov 11 17:17:40 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 11 Nov 2005 17:17:40 +0100
Subject: [Maay-svncheckins] r425 - trunk/maay
Message-ID: <200511111617.jABGHeVp014621@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-11 17:17:40 +0100 (Fri, 11 Nov 2005)
New Revision: 425

Modified:
   trunk/maay/configuration.py
Log:
Disable load_from_command_line() for ImageConfiguration


Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-11 16:09:32 UTC (rev 424)
+++ trunk/maay/configuration.py	2005-11-11 16:17:40 UTC (rev 425)
@@ -334,7 +334,7 @@
     pass
 
 class ImageConfiguration(BaseConfiguration):
-    options = [
+    options = Configuration.options + [
         ('thumbnails-dir',
          {'type' : "string", 'metavar' : "--thumbnailsdir",
           'help' : "Thumbnail files repository",
@@ -346,6 +346,15 @@
                                    config_file=self.config_file,
                                    name='Image')
 
+    def load_command_line_configuration(self):
+        """We won't load command line stuff because ImageConfiguration
+           is an auxiliary config thing which will purely and simply
+           choke on the cmd-line args it doesn't know about
+           Let's just pretend for now that thumbnail-dir can't be
+           specified on command line.
+        """
+        pass
+
     def get_thumbnails_dir(self):
         """Returns the complete path to Maay thumnails directory
            XXX: It will try to create the dir if absent"""



From aurelienc at berlios.de  Fri Nov 11 17:30:20 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 11 Nov 2005 17:30:20 +0100
Subject: [Maay-svncheckins] r426 - trunk/maay
Message-ID: <200511111630.jABGUKmZ015578@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-11 17:30:19 +0100 (Fri, 11 Nov 2005)
New Revision: 426

Modified:
   trunk/maay/indexer.py
Log:
Unfix call to removeFileInfo (ok alf, don't kill me on this :)


Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-11 16:17:40 UTC (rev 425)
+++ trunk/maay/indexer.py	2005-11-11 16:30:19 UTC (rev 426)
@@ -102,9 +102,10 @@
         for filename in fileset:
             if self.verbose:
                 print "Requesting unindexation of %s" % filename
-            self.serverProxy.removeFileInfo(self.cnxId,
-                                            unicode(filename,
-                                                    self.filesystemEncoding))
+            self.serverProxy.removeFileInfo(self.cnxId, filename)
+            #XXX: fix by alf, below, causes indexer crash on auc personnal machine
+##                                             unicode(filename,
+##                                                     self.filesystemEncoding))
         if self.verbose:
             print "Requesting cleanup of unreferenced documents"
         self.serverProxy.removeUnreferencedDocuments(self.cnxId)



From aurelienc at berlios.de  Fri Nov 11 17:50:39 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 11 Nov 2005 17:50:39 +0100
Subject: [Maay-svncheckins] r427 - trunk/maay
Message-ID: <200511111650.jABGodXx017178@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-11 17:50:39 +0100 (Fri, 11 Nov 2005)
New Revision: 427

Modified:
   trunk/maay/dbentity.py
Log:
Fix doc. of Document url field


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-11 16:30:19 UTC (rev 426)
+++ trunk/maay/dbentity.py	2005-11-11 16:50:39 UTC (rev 427)
@@ -163,7 +163,7 @@
      
      * float download_count: sum of the weights of the downloads
      
-     * str url: url of the document if it was downloaded
+     * str url: really contains the full pathname of the file (not an url)
      
      * float matching: defaults to 0
      



From aurelienc at berlios.de  Fri Nov 11 17:56:40 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 11 Nov 2005 17:56:40 +0100
Subject: [Maay-svncheckins] r428 - trunk/maay
Message-ID: <200511111656.jABGuePH017646@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-11 17:56:40 +0100 (Fri, 11 Nov 2005)
New Revision: 428

Modified:
   trunk/maay/dbentity.py
Log:
Preliminary Results class


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-11 16:50:39 UTC (rev 427)
+++ trunk/maay/dbentity.py	2005-11-11 16:56:40 UTC (rev 428)
@@ -284,6 +284,14 @@
         
     selectContaining = classmethod(selectContaining)
     
+class Result(Document):
+    """Results are temporary relations created/destroyed on the fly
+       they contain documents matching both local and distributed requests
+    """
+    attributes = ('db_document_id', 'document_id', 'mime_type', 'title',
+                  'size', 'text', 'publication_time', 'state', 'download_count',
+                  'url', 'matching', 'indexed')
+    tableName = None # will be provided at run-time
 
 
 class FileInfo(DBEntity):



From aurelienc at berlios.de  Fri Nov 11 18:09:22 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 11 Nov 2005 18:09:22 +0100
Subject: [Maay-svncheckins] r429 - trunk/maay
Message-ID: <200511111709.jABH9M5I018795@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-11 18:09:22 +0100 (Fri, 11 Nov 2005)
New Revision: 429

Modified:
   trunk/maay/dbentity.py
Log:
Fix attributes, add init


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-11 16:56:40 UTC (rev 428)
+++ trunk/maay/dbentity.py	2005-11-11 17:09:22 UTC (rev 429)
@@ -289,10 +289,13 @@
        they contain documents matching both local and distributed requests
     """
     attributes = ('db_document_id', 'document_id', 'mime_type', 'title',
-                  'size', 'text', 'publication_time', 'state', 'download_count',
-                  'url', 'matching', 'indexed')
+                  'size', 'text', 'publication_time', 'url', 'host', 'port',
+                  'login')
     tableName = None # will be provided at run-time
 
+    def __init__(self, name, **values):
+        DBEntity.__init__(self, **values)
+    
 
 class FileInfo(DBEntity):
     """



From aurelienc at berlios.de  Fri Nov 11 18:11:57 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 11 Nov 2005 18:11:57 +0100
Subject: [Maay-svncheckins] r430 - trunk/maay
Message-ID: <200511111711.jABHBvVx018980@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-11 18:11:56 +0100 (Fri, 11 Nov 2005)
New Revision: 430

Modified:
   trunk/maay/dbentity.py
Log:
Fix init, add creation/deletion stubs


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-11 17:09:22 UTC (rev 429)
+++ trunk/maay/dbentity.py	2005-11-11 17:11:56 UTC (rev 430)
@@ -294,7 +294,19 @@
     tableName = None # will be provided at run-time
 
     def __init__(self, name, **values):
+        tableName = name
         DBEntity.__init__(self, **values)
+        self._buildTemporary()
+
+    def __del__(self):
+        self._destroyTemporary()
+
+    def _buildTemporary(self):
+        pass
+
+    def _destroyTemporary(self):
+        pass
+
     
 
 class FileInfo(DBEntity):



From aurelienc at berlios.de  Fri Nov 11 18:30:26 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 11 Nov 2005 18:30:26 +0100
Subject: [Maay-svncheckins] r431 - trunk/maay
Message-ID: <200511111730.jABHUQ5K020721@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-11 18:30:24 +0100 (Fri, 11 Nov 2005)
New Revision: 431

Modified:
   trunk/maay/dbentity.py
Log:
Add stuff for creation time


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-11 17:11:56 UTC (rev 430)
+++ trunk/maay/dbentity.py	2005-11-11 17:30:24 UTC (rev 431)
@@ -294,7 +294,7 @@
     tableName = None # will be provided at run-time
 
     def __init__(self, name, **values):
-        tableName = name
+        Result.tableName = name
         DBEntity.__init__(self, **values)
         self._buildTemporary()
 
@@ -302,10 +302,25 @@
         self._destroyTemporary()
 
     def _buildTemporary(self):
-        pass
+        query = ("CREATE TABLE `%s` ("
+                    "`db_document_id` int(11) NOT NULL auto-increment,"
+                    "`document_id` varchar(40) NOT NULL default '',"
+                    "`mime_type` varchar(40) NOT NULL default '',"
+                    "`title` varchar(255) default NULL,"
+                    "`size` int(11) default NULL,"
+                    "`text` text,"
+                    "`publication_time` int(14) default NULL,"
+                    "`local_pathname` varchar(255) NOT NULL default ''," # like url
+                    "`host` varchar(15),"
+                    "`port` int(11)," # check this
+                    "`login` varchar(255),"
+                    "PRIMARY KEY (`db_document_id`),"
+                    "KEY `document_id` (`document_id`),"
+                    "KEY `local_pathname` (`local_pathname`))"
+                 "TYPE=MyISAM;")
 
     def _destroyTemporary(self):
-        pass
+        query = "DROP TABLE %s;" % Result.tableName
 
     
 



From adimasci at berlios.de  Fri Nov 11 18:38:37 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Fri, 11 Nov 2005 18:38:37 +0100
Subject: [Maay-svncheckins] r433 - trunk/maay
Message-ID: <200511111738.jABHcbYZ032348@sheep.berlios.de>

Author: adimasci
Date: 2005-11-11 18:38:36 +0100 (Fri, 11 Nov 2005)
New Revision: 433

Modified:
   trunk/maay/rpc.py
Log:
fixed bug that prevented mimetype propagation during P2P queries

Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-11 17:37:31 UTC (rev 432)
+++ trunk/maay/rpc.py	2005-11-11 17:38:36 UTC (rev 433)
@@ -158,10 +158,11 @@
         """On node has sent a query (P2pQuerier.sendQuery)
         """
         print "MaayRPCServer distributedQuery : %s " % queryDict
+        _query = Query(queryDict['words'])
+        _query.filetype = queryDict.get('mime_type')
         query = P2pQuery(sender=queryDict['sender'],
                          port=queryDict['port'],
-                         query=Query(queryDict['words'],
-                                     filetype=queryDict['mime_type']),
+                         query=_query,
                          ttl=queryDict['ttl'],
                          qid=queryDict['qid'],
                          host = self._lastClient.host)



From adimasci at berlios.de  Fri Nov 11 18:37:32 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Fri, 11 Nov 2005 18:37:32 +0100
Subject: [Maay-svncheckins] r432 - trunk/maay
Message-ID: <200511111737.jABHbWeO031507@sheep.berlios.de>

Author: adimasci
Date: 2005-11-11 18:37:31 +0100 (Fri, 11 Nov 2005)
New Revision: 432

Modified:
   trunk/maay/webapplication.py
Log:
removed dead code

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-11 17:30:24 UTC (rev 431)
+++ trunk/maay/webapplication.py	2005-11-11 17:37:31 UTC (rev 432)
@@ -325,10 +325,7 @@
         context.fillSlots('distanturl', '/distantfile?filepath=%s&host=%s&port=%s' % (document.url, self.peerHost, self.peerPort))
         return context.tag
 
-    def render_distanturl(self, context, data):
-        return '/distantfile?filepath=bim&host=%s&port=%s' % (self.peerHost, self.peerPort)
 
-
 class ResultsPageFactory(athena.LivePageFactory):
     def getLivePage(self, context):
         livepageId = inevow.IRequest(context).getHeader('Livepage-Id')



From aurelienc at berlios.de  Fri Nov 11 19:18:59 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 11 Nov 2005 19:18:59 +0100
Subject: [Maay-svncheckins] r434 - trunk/maay
Message-ID: <200511111818.jABIIxqP018788@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-11 19:18:54 +0100 (Fri, 11 Nov 2005)
New Revision: 434

Modified:
   trunk/maay/p2pquerier.py
   trunk/maay/rpc.py
Log:
Displace and encapsulate cruft (from rpc to p2pquery)


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-11 17:38:36 UTC (rev 433)
+++ trunk/maay/p2pquerier.py	2005-11-11 18:18:54 UTC (rev 434)
@@ -31,7 +31,9 @@
 from twisted.internet import reactor
 from maay.texttool import makeAbstract, removeSpace, untagText
 from configuration import NodeConfiguration
+from maay.query import Query
 
+
 def hashIt(item, uname=''.join(platform.uname())):
     hasher = sha.sha()
     hasher.update(uname)
@@ -89,6 +91,16 @@
                 'mime_type': self.query.filetype or '',
                 }
 
+    def fromDict(dic):
+        _query = Query(dic['words'])
+        _query.filetype = dic['mime_type']
+        return P2pQuery(qid=dic['qid'],
+                        sender=dic['sender'],
+                        port=dic['port'],
+                        ttl=dic['ttl'],
+                        query=_query)
+    fromDict = staticmethod(fromDict)
+    
     def getWords(self):
         return self.query.words.split()
 

Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-11 17:38:36 UTC (rev 433)
+++ trunk/maay/rpc.py	2005-11-11 18:18:54 UTC (rev 434)
@@ -158,14 +158,16 @@
         """On node has sent a query (P2pQuerier.sendQuery)
         """
         print "MaayRPCServer distributedQuery : %s " % queryDict
-        _query = Query(queryDict['words'])
-        _query.filetype = queryDict.get('mime_type')
-        query = P2pQuery(sender=queryDict['sender'],
-                         port=queryDict['port'],
-                         query=_query,
-                         ttl=queryDict['ttl'],
-                         qid=queryDict['qid'],
-                         host = self._lastClient.host)
+        query = P2pQuery.fromDict(queryDict)
+        query.host = self._lastClient.host
+##         _query = Query(queryDict['words'])
+##         _query.filetype = queryDict.get('mime_type')
+##         query = P2pQuery(sender=queryDict['sender'],
+##                          port=queryDict['port'],
+##                          query=_query,
+##                          ttl=queryDict['ttl'],
+##                          qid=queryDict['qid'],
+##                          host = self._lastClient.host)
         querier = self._sessions[ANONYMOUS_AVATARID]
         querier.registerNode(query.sender, query.host, query.port)
         # schedule the query for later processing and return immediately



From aurelienc at berlios.de  Fri Nov 11 19:20:36 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 11 Nov 2005 19:20:36 +0100
Subject: [Maay-svncheckins] r435 - trunk/maay
Message-ID: <200511111820.jABIKaw9019657@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-11 19:20:31 +0100 (Fri, 11 Nov 2005)
New Revision: 435

Modified:
   trunk/maay/dbentity.py
Log:
Various fixes to Results


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-11 18:18:54 UTC (rev 434)
+++ trunk/maay/dbentity.py	2005-11-11 18:20:31 UTC (rev 435)
@@ -284,17 +284,17 @@
         
     selectContaining = classmethod(selectContaining)
     
-class Result(Document):
+class Result:
     """Results are temporary relations created/destroyed on the fly
        they contain documents matching both local and distributed requests
     """
     attributes = ('db_document_id', 'document_id', 'mime_type', 'title',
-                  'size', 'text', 'publication_time', 'url', 'host', 'port',
-                  'login')
-    tableName = None # will be provided at run-time
+                  'size', 'text', 'publication_time', 'local_pathname',
+                  'host', 'port', 'login')
 
-    def __init__(self, name, **values):
-        Result.tableName = name
+    def __init__(self, cursor, name, **values):
+        self.cursor = cursor
+        self.tableName = name
         DBEntity.__init__(self, **values)
         self._buildTemporary()
 
@@ -317,11 +317,11 @@
                     "PRIMARY KEY (`db_document_id`),"
                     "KEY `document_id` (`document_id`),"
                     "KEY `local_pathname` (`local_pathname`))"
-                 "TYPE=MyISAM;")
+                 "TYPE=MyISAM;"
+                 % self.tableName)
 
     def _destroyTemporary(self):
-        query = "DROP TABLE %s;" % Result.tableName
-
+        query = "DROP TABLE %s;" % self.tableName
     
 
 class FileInfo(DBEntity):



From aurelienc at berlios.de  Fri Nov 11 20:29:19 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Fri, 11 Nov 2005 20:29:19 +0100
Subject: [Maay-svncheckins] r436 - trunk/maay
Message-ID: <200511111929.jABJTJgV028515@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-11 20:28:57 +0100 (Fri, 11 Nov 2005)
New Revision: 436

Modified:
   trunk/maay/p2pquerier.py
   trunk/maay/query.py
Log:
Fix bug-inducing side-effect on Query object


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-11 18:20:31 UTC (rev 435)
+++ trunk/maay/p2pquerier.py	2005-11-11 19:28:57 UTC (rev 436)
@@ -92,8 +92,7 @@
                 }
 
     def fromDict(dic):
-        _query = Query(dic['words'])
-        _query.filetype = dic['mime_type']
+        _query = Query(dic['words'], filetype=dic['mime_type'])
         return P2pQuery(qid=dic['qid'],
                         sender=dic['sender'],
                         port=dic['port'],
@@ -269,7 +268,7 @@
             self.sendQuery(query)
 
         documents = self.querier.findDocuments(query.query)
-        
+
         if len(documents) == 0:
             print " ... no document matching the query, won't answer."
             return
@@ -330,8 +329,8 @@
                 d.addErrback(P2pErrbacks.answerQueryProblem)
                 P2pErrbacks.setAnswerTarget(senderUrl)
             except ValueError:
-                print "unknown node %s" % query.sender
-        else: # local would be true ? don't waste the answers ...
+                print " ... unknown node %s" % query.sender
+        else: 
             self._notifyAnswerCallbacks(answer.queryId, answer.provider, toSend)
     
     def _selectTargetNeighbors(self, query):

Modified: trunk/maay/query.py
===================================================================
--- trunk/maay/query.py	2005-11-11 18:20:31 UTC (rev 435)
+++ trunk/maay/query.py	2005-11-11 19:28:57 UTC (rev 436)
@@ -20,13 +20,12 @@
     import mimetypes
     return mimetypes.types_map.get('.%s' % fileExtension)
 
-
 class Query(object):
     restrictions = ('filetype', 'filename', 'searchtype')
     def __init__(self, words, offset=0, filetype=None, filename=None):
         self.words = words # unicode string 
         self.offset = offset
-        self.filetype = normalizeMimetype(filetype)
+        self.filetype = normalizeMimetype(filetype) #XXX: don't set this from outside !
         self.filename = filename
 
     def fromRawQuery(rawQuery, offset=0):



From adimasci at berlios.de  Fri Nov 11 21:38:02 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Fri, 11 Nov 2005 21:38:02 +0100
Subject: [Maay-svncheckins] r437 - in trunk/maay: . test
Message-ID: <200511112038.jABKc2mC030137@sheep.berlios.de>

Author: adimasci
Date: 2005-11-11 21:38:01 +0100 (Fri, 11 Nov 2005)
New Revision: 437

Modified:
   trunk/maay/p2pquerier.py
   trunk/maay/query.py
   trunk/maay/test/test_query.py
Log:
hopefully fixed no/single/double normalization of mimetype in queries


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-11 19:28:57 UTC (rev 436)
+++ trunk/maay/p2pquerier.py	2005-11-11 20:38:01 UTC (rev 437)
@@ -239,7 +239,7 @@
         #FIXME: avoid to send query to the originator
         for neighbor in self._selectTargetNeighbors(query):
             target = str(neighbor.getRpcUrl())
-            proxy = Proxy(target) 
+            proxy = Proxy(target)
             d = proxy.callRemote('distributedQuery', query.asKwargs())
             d.addCallback(self.querier.registerNodeActivity)
             d.addErrback(P2pErrbacks.sendQueryProblem)

Modified: trunk/maay/query.py
===================================================================
--- trunk/maay/query.py	2005-11-11 19:28:57 UTC (rev 436)
+++ trunk/maay/query.py	2005-11-11 20:38:01 UTC (rev 437)
@@ -25,7 +25,7 @@
     def __init__(self, words, offset=0, filetype=None, filename=None):
         self.words = words # unicode string 
         self.offset = offset
-        self.filetype = normalizeMimetype(filetype) #XXX: don't set this from outside !
+        self.filetype = filetype
         self.filename = filename
 
     def fromRawQuery(rawQuery, offset=0):
@@ -56,6 +56,21 @@
         return Query.fromRawQuery(rawQuery, offset)
     fromContext = staticmethod(fromContext)
 
+    def getFiletype(self):
+        return getattr(self, '_filetype', None)
+
+    def setFiletype(self, filetype):
+        # try to guess if filetype is already normalized or not
+        if filetype:
+            mimetype = normalizeMimetype(filetype)
+            if mimetype:
+                self._filetype = mimetype
+            else:
+                self._filetype = filetype
+        else:
+            self._filetype = None
+    filetype = property(getFiletype, setFiletype)
+
     def __repr__(self):
         return 'Query Object (%s, %s, %s)' % (self.words, self.filetype,
                                               self.filename)

Modified: trunk/maay/test/test_query.py
===================================================================
--- trunk/maay/test/test_query.py	2005-11-11 19:28:57 UTC (rev 436)
+++ trunk/maay/test/test_query.py	2005-11-11 20:38:01 UTC (rev 437)
@@ -65,6 +65,18 @@
         self.assertEquals(query.filetype, 'application/pdf')
         self.assertEquals(query.offset, 12)
 
+    def testMimeTypeNormalization(self):
+        query = Query.fromRawQuery(u"hello filetype:pdf world", 12)
+        self.assertEquals(query.filetype, 'application/pdf')
+        query.filetype = 'text/x-python'
+        self.assertEquals(query.filetype, 'text/x-python')
+        query.filetype = ''
+        self.assertEquals(query.filetype, None)
+        query.filetype = 'pdf'
+        self.assertEquals(query.filetype, 'application/pdf')
+        query.filetype = None
+        self.assertEquals(query.filetype, None)
+        
     # Commented because not sure how filename should be handled  :
     # (regexps ? LIKE %...% ?, etc.)
 ##     def testSeveralWordsAndSeveralRestrictions(self):



From aurelienc at berlios.de  Sat Nov 12 14:29:32 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Sat, 12 Nov 2005 14:29:32 +0100
Subject: [Maay-svncheckins] r438 - trunk/maay
Message-ID: <200511121329.jACDTWI3008361@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-12 14:29:17 +0100 (Sat, 12 Nov 2005)
New Revision: 438

Modified:
   trunk/maay/webapplication.py
Log:
-remove dead code
-add todo


Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-11 20:38:01 UTC (rev 437)
+++ trunk/maay/webapplication.py	2005-11-12 13:29:17 UTC (rev 438)
@@ -123,23 +123,6 @@
 
         return IndexationPage(msg)
 
-    def _askForPeerResults(self, query, context):
-        """Launches a P2P cascade of queries
-           The result of this shall be used ~ 5 and 15 secs. later
-           by the ResultPage
-        """
-        if not self.p2pquerier:
-            print "BUG ? We don't have a P2pQuerier"
-            return
-        webappConfig = INodeConfiguration(context)
-        theDistributedQuery = P2pQuery(webappConfig.get_node_id(),
-                                       webappConfig.rpcserver_port,
-                                       query)
-        
-        self.p2pquerier.sendQuery(theDistributedQuery)
-        self.oldContext = context
-
-
     def child_search(self, context):
         return FACTORY.clientFactory(context, self.querier, self.p2pquerier)
     
@@ -212,6 +195,7 @@
         if len(inevow.IRemainingSegments(context)) < 2:
             self.query = Query.fromContext(context)
             self.offset = self.query.offset
+            #TODO: very soon, the line below will also be the p2pquerier's job
             self.results = querier.findDocuments(self.query)
             webappConfig = INodeConfiguration(context)
             p2pQuery = P2pQuery(webappConfig.get_node_id(),



From aurelienc at berlios.de  Sat Nov 12 14:47:03 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Sat, 12 Nov 2005 14:47:03 +0100
Subject: [Maay-svncheckins] r439 - trunk/maay
Message-ID: <200511121347.jACDl3b8016708@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-12 14:47:00 +0100 (Sat, 12 Nov 2005)
New Revision: 439

Modified:
   trunk/maay/rpc.py
Log:
Remove dead code


Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-12 13:29:17 UTC (rev 438)
+++ trunk/maay/rpc.py	2005-11-12 13:47:00 UTC (rev 439)
@@ -27,7 +27,7 @@
 from time import time
 from random import randint
 
-from twisted.web.xmlrpc import XMLRPC
+from twisted.web.xmlrpc import XMLRPC, Binary
 from twisted.cred.credentials import UsernamePassword, Anonymous
 from twisted.internet import reactor
 ## from twisted.python.failure import Failure
@@ -160,14 +160,6 @@
         print "MaayRPCServer distributedQuery : %s " % queryDict
         query = P2pQuery.fromDict(queryDict)
         query.host = self._lastClient.host
-##         _query = Query(queryDict['words'])
-##         _query.filetype = queryDict.get('mime_type')
-##         query = P2pQuery(sender=queryDict['sender'],
-##                          port=queryDict['port'],
-##                          query=_query,
-##                          ttl=queryDict['ttl'],
-##                          qid=queryDict['qid'],
-##                          host = self._lastClient.host)
         querier = self._sessions[ANONYMOUS_AVATARID]
         querier.registerNode(query.sender, query.host, query.port)
         # schedule the query for later processing and return immediately



From adimasci at berlios.de  Sat Nov 12 15:07:32 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Sat, 12 Nov 2005 15:07:32 +0100
Subject: [Maay-svncheckins] r440 - in trunk/maay: . sql test
Message-ID: <200511121407.jACE7WRA007217@sheep.berlios.de>

Author: adimasci
Date: 2005-11-12 15:07:31 +0100 (Sat, 12 Nov 2005)
New Revision: 440

Modified:
   trunk/maay/dbentity.py
   trunk/maay/sql/mysql.sql
   trunk/maay/test/test_dbentity.py
Log:
- added the results table to the default schema
- improved a bit Result class


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-12 13:47:00 UTC (rev 439)
+++ trunk/maay/dbentity.py	2005-11-12 14:07:31 UTC (rev 440)
@@ -18,7 +18,7 @@
 
 __revision__ = '$Id$'
 __all__ = ['Document', 'FileInfo', 'DocumentProvider', 'DocumentScore',
-           'Word', 'Node', 'NodeInterest']
+           'Word', 'Node', 'NodeInterest', 'Result']
 
 import re
 from sets import Set
@@ -53,8 +53,8 @@
         else:
             where = ''
         query = 'SELECT %s FROM %s%s' % (', '.join(cls.attributes),
-                                                cls.tableName,
-                                                where)
+                                         cls.tableName,
+                                         where)
         return query
     _selectQuery = classmethod(_selectQuery)
 
@@ -88,6 +88,7 @@
         try:
             cursor.execute(query, self.stateDict)
         except Exception, exc:
+            print "######### %s, %s" % (query, self.stateDict)
             print "commit error:", exc
             print query
             raise
@@ -284,46 +285,49 @@
         
     selectContaining = classmethod(selectContaining)
     
-class Result:
+class Result(Document):
     """Results are temporary relations created/destroyed on the fly
        they contain documents matching both local and distributed requests
     """
-    attributes = ('db_document_id', 'document_id', 'mime_type', 'title',
-                  'size', 'text', 'publication_time', 'local_pathname',
+    attributes = ('db_document_id', 'document_id', 'query_id', 'mime_type',
+                  'title', 'size', 'text', 'publication_time', 'url',
                   'host', 'port', 'login')
+    key = ('document_id', 'query_id', 'host')
+    tableName = 'results'
+    
+    def fromDocument(document, queryId, provider=None):
+        stateDict = document.stateDict
+        for key, value in stateDict.items():
+            if key not in Result.attributes or not value:
+                del stateDict[key]
+        if provider:
+            stateDict['login'], stateDict['host'], stateDict['port'] = provider
+        else:
+            stateDict['host'] = 'localhost'
+        stateDict['query_id'] = queryId
+        return Result(**stateDict)
+    fromDocument = staticmethod(fromDocument)
 
-    def __init__(self, cursor, name, **values):
-        self.cursor = cursor
-        self.tableName = name
-        DBEntity.__init__(self, **values)
-        self._buildTemporary()
+    def _selectQuery(cls, limit, offset, whereColumns=()):
+        if whereColumns:
+            wheres = ['%s=%%(%s)s' % (attr, attr) for attr in whereColumns]
+            where =  ' WHERE ' + ' AND '.join(wheres)
+        else:
+            where = ''
+        query = 'SELECT %s FROM %s%s ORDER BY publication_time LIMIT %s OFFSET %s' % (
+            ', '.join(cls.attributes),
+            cls.tableName,
+            where, limit, offset)
+        return query
+    _selectQuery = classmethod(_selectQuery)
 
-    def __del__(self):
-        self._destroyTemporary()
+    def selectWhere(cls, cursor, limit, offset, **args):
+        query = cls._selectQuery(limit, offset, args.keys())
+        cursor.execute(query, args)
+        results = cursor.fetchall()
+        return [cls(**dict(zip(cls.attributes, row))) for row in results]
+    selectWhere = classmethod(selectWhere)
 
-    def _buildTemporary(self):
-        query = ("CREATE TABLE `%s` ("
-                    "`db_document_id` int(11) NOT NULL auto-increment,"
-                    "`document_id` varchar(40) NOT NULL default '',"
-                    "`mime_type` varchar(40) NOT NULL default '',"
-                    "`title` varchar(255) default NULL,"
-                    "`size` int(11) default NULL,"
-                    "`text` text,"
-                    "`publication_time` int(14) default NULL,"
-                    "`local_pathname` varchar(255) NOT NULL default ''," # like url
-                    "`host` varchar(15),"
-                    "`port` int(11)," # check this
-                    "`login` varchar(255),"
-                    "PRIMARY KEY (`db_document_id`),"
-                    "KEY `document_id` (`document_id`),"
-                    "KEY `local_pathname` (`local_pathname`))"
-                 "TYPE=MyISAM;"
-                 % self.tableName)
-
-    def _destroyTemporary(self):
-        query = "DROP TABLE %s;" % self.tableName
-    
-
 class FileInfo(DBEntity):
     """
     Attributes:

Modified: trunk/maay/sql/mysql.sql
===================================================================
--- trunk/maay/sql/mysql.sql	2005-11-12 13:47:00 UTC (rev 439)
+++ trunk/maay/sql/mysql.sql	2005-11-12 14:07:31 UTC (rev 440)
@@ -145,6 +145,23 @@
 ) TYPE=MyISAM;
  
 
+CREATE TABLE `results` (
+  `db_document_id` varchar(40) NOT NULL,
+  `document_id` varchar(40) NOT NULL default '',
+  `query_id` varchar(64) NOT NULL,
+  `mime_type` varchar(40) NOT NULL default '',
+  `title` varchar(255) default NULL,
+  `size` int(11) default NULL,
+  `text` text,
+  `publication_time` int(14) default NULL,
+  `url` varchar(255) NOT NULL default '',
+  `host` varchar(15),
+  `port` int(11), -- check this
+  `login` varchar(255),
+  PRIMARY KEY (`db_document_id`, `query_id`, `host`)
+--  KEY `document_id` (`document_id`),
+--  KEY `url` (`url`)
+) TYPE=MyISAM;
 
 -- ---------------------------------------------------------
 -- maay user (anonymous user, used to create connections

Modified: trunk/maay/test/test_dbentity.py
===================================================================
--- trunk/maay/test/test_dbentity.py	2005-11-12 13:47:00 UTC (rev 439)
+++ trunk/maay/test/test_dbentity.py	2005-11-12 14:07:31 UTC (rev 440)
@@ -72,7 +72,31 @@
         q = query%tuple(params) # sanity check for argument count
         
     
+class ResultTC(unittest.TestCase):
 
+    def testBuildFromLocalDocument(self):
+        document = Document(db_document_id='foo', mime_type='application/pdf')
+        result = Result.fromDocument(document, 'qid')
+        self.assertEquals(result.db_document_id, 'foo')
+        self.assertEquals(result.query_id, 'qid')
+        self.assertEquals(result.host, 'localhost')
+        self.assertEquals(result.mime_type, 'application/pdf')
+        self.assertEquals(result.boundAttributes(), ['db_document_id', 'query_id',
+                                                     'mime_type', 'host'])
+        
+    def testBuildFromDistantDocument(self):
+        document = Document(db_document_id='foo', mime_type='application/pdf')
+        result = Result.fromDocument(document, 'qid', ('adim', 'IP', 'PORT'))
+        self.assertEquals(result.db_document_id, 'foo')
+        self.assertEquals(result.mime_type, 'application/pdf')
+        self.assertEquals(result.login, 'adim')
+        self.assertEquals(result.host, 'IP')
+        self.assertEquals(result.query_id, 'qid')
+        self.assertEquals(result.port, 'PORT')
+        self.assertEquals(result.boundAttributes(), ['db_document_id', 'query_id', 'mime_type',
+                                                     'host', 'port', 'login'])
+
+
 class NodeInterest_TC(unittest.TestCase):
     def setUp(self):
         self.entity = NodeInterest(node_id="0"*40, word="espadon",



From adimasci at berlios.de  Sat Nov 12 15:51:11 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Sat, 12 Nov 2005 15:51:11 +0100
Subject: [Maay-svncheckins] r441 - in trunk/maay: . data
Message-ID: <200511121451.jACEpBiK032120@sheep.berlios.de>

Author: adimasci
Date: 2005-11-12 15:51:10 +0100 (Sat, 12 Nov 2005)
New Revision: 441

Added:
   trunk/maay/data/footer.html
Modified:
   trunk/maay/data/liveresults.html
   trunk/maay/data/skeleton.html
   trunk/maay/querier.py
   trunk/maay/webapplication.py
Log:
- try to use the temporary table to display the results
- factorized a little bit HTML



Added: trunk/maay/data/footer.html
===================================================================
--- trunk/maay/data/footer.html	2005-11-12 14:07:31 UTC (rev 440)
+++ trunk/maay/data/footer.html	2005-11-12 14:51:10 UTC (rev 441)
@@ -0,0 +1,11 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<div>
+  <hr/>
+  <table width="100%">
+    <tr>
+      <td valign="top"><small><a href="http://maay.netofpeers.net/">Maay Home page</a> </small></td>
+      <td align="right"><img src="/images/logoFT.png" /></td>
+    </tr>
+  </table>
+</div>

Modified: trunk/maay/data/liveresults.html
===================================================================
--- trunk/maay/data/liveresults.html	2005-11-12 14:07:31 UTC (rev 440)
+++ trunk/maay/data/liveresults.html	2005-11-12 14:51:10 UTC (rev 441)
@@ -9,6 +9,7 @@
 
     <script type='text/javascript' language='javascript'>
 function updateResults(source) {
+  alert('yo');
   div = document.getElementById('resultsDiv');
   div.innerHTML = source;
 }
@@ -18,9 +19,7 @@
     </script>
 
   </head>
- 
   <body onload="startConnection()">
-  <!-- <a nevow:render="loginurl"><nevow:attr name="href"><nevow:slot name="loginurl" /></nevow:attr><nevow:slot name="actionlabel" /></a> -->
   <div class="reSearch">
     <form action="search" accept-charset="utf-8">
       <table>
@@ -36,20 +35,22 @@
   <!--
   <div class="sort"><a href="">Sort by date</a> - <a href="">Sort by popularity</a></div>
   -->
-  <div id="resultsDiv"></div>
-  <table class="results" nevow:render="sequence" nevow:data="results">
-    <tr nevow:pattern="item" nevow:render="row">
-      <td>
-	<div class="resultItem">
-	  <table><tr><td><div><nevow:attr name="class"><nevow:slot name="mime_type" /></nevow:attr></div></td><td><a class="docTitle"><nevow:attr name="href">/download?docid=<nevow:slot name="docid" />&amp;words=<nevow:slot name="words" /></nevow:attr><nevow:slot name="doctitle">DOC TITLE</nevow:slot></a></td></tr></table>
-	  <div class="resultDesc"><nevow:slot name="abstract" /></div>
-	  <span class="resultUrl"><nevow:attr name="href"><nevow:slot name="docurl" /></nevow:attr><nevow:slot name="docurl" /> - <nevow:slot name="readable_size" /> - <nevow:slot name="publication_date" /></span>
-	</div>
-      </td>
-    </tr>
-  </table>
-  <div class="prevnext"><a><nevow:attr name="href"
-  nevow:render="prevset_url"/>Previous</a> - <a><nevow:attr
-  name="href" nevow:render="nextset_url"/>Next</a></div>
-  </body>
+  <div id="resultsDiv">
+    <table class="results" nevow:render="sequence" nevow:data="results">
+      <tr nevow:pattern="item" nevow:render="row">
+        <td>
+  	<div class="resultItem">
+  	  <table><tr><td><div><nevow:attr name="class"><nevow:slot name="mime_type" /></nevow:attr></div></td><td><a class="docTitle"><nevow:attr name="href">/download?docid=<nevow:slot name="docid" />&amp;words=<nevow:slot name="words" /></nevow:attr><nevow:slot name="doctitle">DOC TITLE</nevow:slot></a></td></tr></table>
+  	  <div class="resultDesc"><nevow:slot name="abstract" /></div>
+  	  <span class="resultUrl"><nevow:attr name="href"><nevow:slot name="docurl" /></nevow:attr><nevow:slot name="docurl" /> - <nevow:slot name="readable_size" /> - <nevow:slot name="publication_date" /></span>
+  	</div>
+        </td>
+      </tr>
+    </table>
+    <div class="prevnext"><a><nevow:attr name="href"
+    nevow:render="prevset_url"/>Previous</a> - <a><nevow:attr
+    name="href" nevow:render="nextset_url"/>Next</a></div>
+    <nevow:invisble nevow:macro="footer" />
+  </div>
+ </body>
 </html>

Modified: trunk/maay/data/skeleton.html
===================================================================
--- trunk/maay/data/skeleton.html	2005-11-12 14:07:31 UTC (rev 440)
+++ trunk/maay/data/skeleton.html	2005-11-12 14:51:10 UTC (rev 441)
@@ -9,12 +9,6 @@
  
   <body>
     <nevow:invisible nevow:macro="body" />
-      <hr />
-        <table width="100%">
-        <tr>
-          <td valign="top"><small><a href="http://maay.netofpeers.net/">Maay Home page</a> </small></td>
-          <td align="right"><img src="/images/logoFT.png" /></td>
-        </tr>
-      </table>
+    <nevow:invisble nevow:macro="footer" />
   </body>  
 </html>

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-12 14:07:31 UTC (rev 440)
+++ trunk/maay/querier.py	2005-11-12 14:51:10 UTC (rev 441)
@@ -23,6 +23,7 @@
 __metaclass__ = type
 
 import time
+import traceback
 from math import sqrt, log
 
 from zope.interface import Interface, implements
@@ -30,7 +31,7 @@
 from logilab.common.db import get_dbapi_compliant_module
 
 from maay.dbentity import Document, FileInfo, \
-     DocumentProvider, DocumentScore, Word, Node
+     DocumentProvider, DocumentScore, Word, Node, Result
 from maay.texttool import normalizeText, WORDS_RGX, MAX_STORED_SIZE
 
 class MaayAuthenticationError(Exception):
@@ -107,12 +108,12 @@
                 raise MaayAuthenticationError("Failed to authenticate user %r"
                                               % user)
             except Exception, e:
-                import traceback
                 traceback.print_exc()
                 raise MaayAuthenticationError(
                     "Failed to authenticate user %r [%s]" % (user, e))
         self._cnx = connection
-
+        self.flushTemporaryTable()
+    
     def _execute(self, query, args=None):
         cursor = self._cnx.cursor()
         results = []
@@ -130,6 +131,9 @@
             self._cnx.commit()
         return results
 
+    def flushTemporaryTable(self):
+        self._execute('DELETE FROM results')
+        
     def close(self):
         self._cnx.close()
         self._cnx = None
@@ -287,7 +291,32 @@
         nodes = Node.selectActive(cursor, nodeId, nbNodes) 
         cursor.close()
         return nodes
-    
+
+    def getQueryResults(self, queryId, limit=15, offset=0):
+        """builds and returns Result' instances by searching in
+        the temporary table built for <queryId>
+        """
+        cursor = self._cnx.cursor()
+        results = Result.selectWhere(cursor, limit, offset, query_id=queryId)
+        cursor.close()
+        return results
+        
+    def pushDocuments(self, queryId, documents, provider=None):
+        """push <documents> into the temporary table built for
+        <queryId>
+        """
+        cursor = self._cnx.cursor()
+        try:
+            for document in documents:
+                res = Result.fromDocument(document, queryId, provider)
+                res.commit(cursor, update=False)
+            cursor.close()
+            self._cnx.commit()
+        except:
+            import traceback
+            traceback.print_exc()
+            self._cnx.rollback()
+        
 class MaayQuerier(AnonymousQuerier):
     """High-Level interface to Maay SQL database.
 

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-12 14:07:31 UTC (rev 440)
+++ trunk/maay/webapplication.py	2005-11-12 14:51:10 UTC (rev 441)
@@ -63,6 +63,8 @@
     def macro_body(self, context):
         return self.bodyFactory
 
+    def macro_footer(self, context):
+        return loaders.xmlfile(get_path_of('footer.html'))
 
 class PeersList(MaayPage):
     """display list of registered peers"""
@@ -192,6 +194,9 @@
         #       differently in nevow SVN. It's now possible to insantiate directly
         #       LivePage instances (which is great !), so we'll have to change
         #       the implementation for next nevow release.
+        # NOTE2: another way to be sure that only the appopriate resource
+        #        starts the p2pquery (and registers callbacks) would be
+        #        to launch the query in the remote_conect() method
         if len(inevow.IRemainingSegments(context)) < 2:
             self.query = Query.fromContext(context)
             self.offset = self.query.offset
@@ -203,11 +208,15 @@
                                 self.query)
             p2pquerier.sendQuery(p2pQuery)
             p2pquerier.addAnswerCallback(p2pQuery.qid, self.onNewResults)
-    
-
+            self.queryId = p2pQuery.qid
+            self.querier = querier
+            
     def data_results(self, context, data):
         return self.results
     
+    def macro_footer(self, context):
+        return loaders.xmlfile(get_path_of('footer.html'))
+
     def render_title(self, context, data):
         context.fillSlots('words', self.query.words)
         context.fillSlots('start_result', min(len(self.results), self.offset + 1))
@@ -255,15 +264,15 @@
         return context.tag
 
     def onNewResults(self, provider, results):
-        #FIXME: do something with the provider info
-        # r = mergeResults(self.results, results)
-        # source = htmlize(r)
-        self.results = [Document(**params) for params in results]
-        page = PleaseCloseYourEyes(self.results, provider, self.query).renderSynchronously()
+        results = [Document(**params) for params in results]
+        self.querier.pushDocuments(self.queryId, results, provider)
+        results = self.querier.getQueryResults(self.queryId) # XXX offset, limit ?
+        page = PleaseCloseYourEyes(results, provider, self.query).renderSynchronously()
         self.callRemote('updateResults', u'<div>%s</div>' % page)
 
     def remote_connect(self, context):
         """just here to start the connection between client and server (Ajax)"""
+        self.querier.pushDocuments(self.queryId, self.results, provider=None)
         return 0
 
 
@@ -273,26 +282,29 @@
     quickly.
     """
     docFactory = loaders.xmlstr("""
-  <table xmlns="http://www.w3.org/1999/xhtml" xmlns:nevow="http://nevow.com/ns/nevow/0.1" class="results" nevow:render="sequence" nevow:data="results">
-    <tr nevow:pattern="item" nevow:render="row">
-      <td>
-	<div class="resultItem">
-	  <table>
-            <tr><td><div><nevow:attr name="class"><nevow:slot name="mime_type"/></nevow:attr></div></td>
-                <td>
-                 <a class="distantDocTitle">
-                  <nevow:attr name="href"><nevow:slot name="distanturl" /></nevow:attr>
-                  <nevow:slot name="doctitle">DOC TITLE</nevow:slot>
-                 </a>
-                </td>
-            </tr>
-          </table>
-          <div class="resultDesc"><nevow:slot name="abstract" /></div>
-	  <span class="resultUrl">(<span nevow:render="peer" />) - <nevow:slot name="docurl" /> - <nevow:slot name="readable_size" /> - <nevow:slot name="publication_date" /></span>
-	</div>
-      </td>
-    </tr>
-  </table>
+  <div id="resultsDiv" xmlns="http://www.w3.org/1999/xhtml" xmlns:nevow="http://nevow.com/ns/nevow/0.1" >
+    <table class="results" nevow:render="sequence" nevow:data="results">
+      <tr nevow:pattern="item" nevow:render="row">
+        <td>
+          <div class="resultItem">
+            <table>
+              <tr><td><div><nevow:attr name="class"><nevow:slot name="mime_type"/></nevow:attr></div></td>
+                  <td>
+                   <a class="distantDocTitle">
+                    <nevow:attr name="href"><nevow:slot name="distanturl" /></nevow:attr>
+                    <nevow:slot name="doctitle">DOC TITLE</nevow:slot>
+                   </a>
+                  </td>
+              </tr>
+            </table>
+            <div class="resultDesc"><nevow:slot name="abstract" /></div>
+            <span class="resultUrl">(<span nevow:render="peer" />) - <nevow:slot name="docurl" /> - <nevow:slot name="readable_size" /> - <nevow:slot name="publication_date" /></span>
+          </div>
+        </td>
+      </tr>
+    </table>
+    <nevow:invisble nevow:macro="footer" />
+  </div>
     """)
     
     def __init__(self, results, provider, query):



From aurelienc at berlios.de  Sat Nov 12 16:16:48 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Sat, 12 Nov 2005 16:16:48 +0100
Subject: [Maay-svncheckins] r442 - trunk/maay
Message-ID: <200511121516.jACFGm4D001484@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-12 16:16:47 +0100 (Sat, 12 Nov 2005)
New Revision: 442

Modified:
   trunk/maay/rpc.py
   trunk/maay/webapplication.py
Log:
Make download of binary files work


Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-12 14:51:10 UTC (rev 441)
+++ trunk/maay/rpc.py	2005-11-12 15:16:47 UTC (rev 442)
@@ -177,8 +177,8 @@
     def xmlrpc_downloadFile(self, filepath):
         """dummy implementation for now"""
         try:
-            fp = file(filepath)
-            data = fp.read()
+            fp = file(filepath, 'rb')
+            data = Binary(fp.read())
             fp.close()
         except Exception, exc:
             import traceback

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-12 14:51:10 UTC (rev 441)
+++ trunk/maay/webapplication.py	2005-11-12 15:16:47 UTC (rev 442)
@@ -146,7 +146,8 @@
         if not host or not port or not filepath:
             return Maay404()
         proxy = ServerProxy('http://%s:%s' % (host, port))
-        return DistantFilePage(filepath, proxy.downloadFile(filepath))
+        fileData = proxy.downloadFile(filepath).data
+        return DistantFilePage(filepath, fileData)
 
 class DistantFilePage(static.File):
     def __init__(self, filepath, fileContent):



From adimasci at berlios.de  Sat Nov 12 16:23:05 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Sat, 12 Nov 2005 16:23:05 +0100
Subject: [Maay-svncheckins] r443 - trunk/maay
Message-ID: <200511121523.jACFN5MK001985@sheep.berlios.de>

Author: adimasci
Date: 2005-11-12 16:23:05 +0100 (Sat, 12 Nov 2005)
New Revision: 443

Modified:
   trunk/maay/querier.py
   trunk/maay/webapplication.py
Log:
a bit of refactoring for what will arrive later (i.e. prev/next mangement

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-12 15:16:47 UTC (rev 442)
+++ trunk/maay/querier.py	2005-11-12 15:23:05 UTC (rev 443)
@@ -262,7 +262,7 @@
     def registerNode(self, nodeId, ip, port, bandwidth=None, lastSeenTime=None):
         """this will be used as a callback in registrationclient/login"""
         print "AnonymousQuerier registerNode (callback) %s %s:%s" % \
-                                                             (nodeId, ip, port)
+            (nodeId, ip, port)
         lastSeenTime = lastSeenTime or int(time.time())
         cursor = self._cnx.cursor()
         node = Node.selectOrInsertWhere(cursor, node_id=nodeId)[0]

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-12 15:16:47 UTC (rev 442)
+++ trunk/maay/webapplication.py	2005-11-12 15:23:05 UTC (rev 443)
@@ -171,46 +171,7 @@
     def render_message(self, context, data):
         return self._msg
 
-from nevow import athena, inevow
-from twisted.python import log
-
-class ResultsPage(athena.LivePage):
-    """default results page"""
-    child_maaycss = static.File(get_path_of('maay.css'))
-    child_images = static.File(get_path_of('images/'))
-    docFactory = loaders.xmlfile(get_path_of('liveresults.html'))
-    addSlash = False
-
-    def __init__(self, context, querier, p2pquerier):
-        athena.LivePage.__init__(self)
-        # XXX: nevow/livepage related trick (version 0.6.0) :
-        # This resource is instanciated several times when rendering the
-        # results page (each time the browser tries to load
-        # ROOT/search/athena.js, ROOT/search/MochiKit.js, etc.) because
-        # the Livepage-Id is not yet set in the request. In these particuliar
-        # cases, we don't want to start new queries, so we do an ugly check
-        # to test whether or not we're instanciating the *real* live page
-        # (or if we're just trying to download JS files)
-        # NOTE: At the time this comment is written, athena/LivePages are handled
-        #       differently in nevow SVN. It's now possible to insantiate directly
-        #       LivePage instances (which is great !), so we'll have to change
-        #       the implementation for next nevow release.
-        # NOTE2: another way to be sure that only the appopriate resource
-        #        starts the p2pquery (and registers callbacks) would be
-        #        to launch the query in the remote_conect() method
-        if len(inevow.IRemainingSegments(context)) < 2:
-            self.query = Query.fromContext(context)
-            self.offset = self.query.offset
-            #TODO: very soon, the line below will also be the p2pquerier's job
-            self.results = querier.findDocuments(self.query)
-            webappConfig = INodeConfiguration(context)
-            p2pQuery = P2pQuery(webappConfig.get_node_id(),
-                                webappConfig.rpcserver_port,
-                                self.query)
-            p2pquerier.sendQuery(p2pQuery)
-            p2pquerier.addAnswerCallback(p2pQuery.qid, self.onNewResults)
-            self.queryId = p2pQuery.qid
-            self.querier = querier
+class ResultsPageMixIn:
             
     def data_results(self, context, data):
         return self.results
@@ -263,12 +224,59 @@
         date = datetime.fromtimestamp(document.publication_time)
         context.fillSlots('publication_date', date.strftime('%d %b %Y'))
         return context.tag
+    
+class StaticResultsPage(MaayPage, ResultsPageMixIn):
+    bodyFactory = loaders.xmlfile(get_path_of('resultpage.html'))
 
+    def __init__(self, results):
+        self.results = results
+
+from nevow import athena, inevow
+from twisted.python import log
+
+class ResultsPage(athena.LivePage, ResultsPageMixIn):
+    """default results page"""
+    child_maaycss = static.File(get_path_of('maay.css'))
+    child_images = static.File(get_path_of('images/'))
+    docFactory = loaders.xmlfile(get_path_of('liveresults.html'))
+    addSlash = False
+
+    def __init__(self, context, querier, p2pquerier):
+        athena.LivePage.__init__(self)
+        # XXX: nevow/livepage related trick (version 0.6.0) :
+        # This resource is instanciated several times when rendering the
+        # results page (each time the browser tries to load
+        # ROOT/search/athena.js, ROOT/search/MochiKit.js, etc.) because
+        # the Livepage-Id is not yet set in the request. In these particuliar
+        # cases, we don't want to start new queries, so we do an ugly check
+        # to test whether or not we're instanciating the *real* live page
+        # (or if we're just trying to download JS files)
+        # NOTE: At the time this comment is written, athena/LivePages are handled
+        #       differently in nevow SVN. It's now possible to insantiate directly
+        #       LivePage instances (which is great !), so we'll have to change
+        #       the implementation for next nevow release.
+        # NOTE2: another way to be sure that only the appopriate resource
+        #        starts the p2pquery (and registers callbacks) would be
+        #        to launch the query in the remote_conect() method
+        if len(inevow.IRemainingSegments(context)) < 2:
+            self.query = Query.fromContext(context)
+            self.offset = self.query.offset
+            #TODO: very soon, the line below will also be the p2pquerier's job
+            self.results = querier.findDocuments(self.query)
+            webappConfig = INodeConfiguration(context)
+            p2pQuery = P2pQuery(webappConfig.get_node_id(),
+                                webappConfig.rpcserver_port,
+                                self.query)
+            p2pquerier.sendQuery(p2pQuery)
+            p2pquerier.addAnswerCallback(p2pQuery.qid, self.onNewResults)
+            self.queryId = p2pQuery.qid
+            self.querier = querier
+            
     def onNewResults(self, provider, results):
         results = [Document(**params) for params in results]
         self.querier.pushDocuments(self.queryId, results, provider)
         results = self.querier.getQueryResults(self.queryId) # XXX offset, limit ?
-        page = PleaseCloseYourEyes(results, provider, self.query).renderSynchronously()
+        page = PleaseCloseYourEyes(results, provider, self.query, self.queryId).renderSynchronously()
         self.callRemote('updateResults', u'<div>%s</div>' % page)
 
     def remote_connect(self, context):
@@ -277,7 +285,7 @@
         return 0
 
 
-class PleaseCloseYourEyes(ResultsPage):
+class PleaseCloseYourEyes(rend.Page, ResultsPageMixIn):
     """This resource and the way it is called is kind of ugly.
     It will be refactored later. The idea is to have something working
     quickly.
@@ -304,25 +312,42 @@
         </td>
       </tr>
     </table>
+    <div class="prevnext"><a><nevow:attr name="href"
+    nevow:render="prevset_url"/>Previous</a> - <a><nevow:attr
+    name="href" nevow:render="nextset_url"/>Next</a></div>
     <nevow:invisble nevow:macro="footer" />
   </div>
     """)
     
-    def __init__(self, results, provider, query):
+    def __init__(self, results, provider, query, queryId):
         self.results = results
         self.peerLogin, self.peerHost, self.peerPort = provider
         self.query = query
+        self.queryId = queryId
 
     def render_peer(self, context, data):
         return '%s (%s:%s)' % (self.peerLogin, self.peerHost, self.peerPort)
 
     def render_row(self, context, data):
         document = data
-        ResultsPage.render_row(self, context, data)
+        ResultsPageMixIn.render_row(self, context, data)
         context.fillSlots('distanturl', '/distantfile?filepath=%s&host=%s&port=%s' % (document.url, self.peerHost, self.peerPort))
         return context.tag
 
+    def render_nextset_url(self, context, data):
+        # XXX find a better implementation later
+        return 'search?words=%s&offset=%s&qid=%s' % ('+'.join(self.query.words),
+                                                     self.query.offset + 15,
+                                                     self.queryId)
+    def render_prevset_url(self, context, data):
+        offset = self.query.offset
+        if offset:
+            offset -= 15
+        return 'search?words=%s&offset=%s&qid=%s' % ('+'.join(self.query.words),
+                                                     offset,
+                                                     self.queryId)
 
+
 class ResultsPageFactory(athena.LivePageFactory):
     def getLivePage(self, context):
         livepageId = inevow.IRequest(context).getHeader('Livepage-Id')



From aurelienc at berlios.de  Sun Nov 13 01:37:13 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Sun, 13 Nov 2005 01:37:13 +0100
Subject: [Maay-svncheckins] r444 - trunk/maay
Message-ID: <200511130037.jAD0bDsj030402@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-13 01:37:06 +0100 (Sun, 13 Nov 2005)
New Revision: 444

Modified:
   trunk/maay/rpc.py
Log:
Preliminary work to download from document_id (not pathname) - may break download


Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-12 15:23:05 UTC (rev 443)
+++ trunk/maay/rpc.py	2005-11-13 00:37:06 UTC (rev 444)
@@ -174,9 +174,17 @@
         reactor.callLater(.01, getP2pQuerier().relayAnswer, answer)
         return self.nodeId
 
-    def xmlrpc_downloadFile(self, filepath):
+    def xmlrpc_downloadFile(self, doc_id):
         """dummy implementation for now"""
+        print "MayRPCServer downloadFile %s" % doc_id
+        query = None
         try:
+            querier = self._sessions[ANONYMOUS_AVATARID]
+            if query:
+                filepath = querier.notifyDownload(doc_id, query)
+            else:
+                filepath = querier.justDownloadAndShutUp(doc_id)
+            print "FILEPATH", filepath
             fp = file(filepath, 'rb')
             data = Binary(fp.read())
             fp.close()
@@ -189,5 +197,5 @@
     def cnxIsValid(self, cnxId):
         if cnxId in self._sessions:
             return True
-        print "MaayRPCServer cnxIsvalid Not !", cnxId
+        print "MaayRPCServer %s not valid !" % cnxId
         return False



From aurelienc at berlios.de  Sun Nov 13 01:42:17 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Sun, 13 Nov 2005 01:42:17 +0100
Subject: [Maay-svncheckins] r445 - trunk/maay
Message-ID: <200511130042.jAD0gHGY000415@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-13 01:42:12 +0100 (Sun, 13 Nov 2005)
New Revision: 445

Modified:
   trunk/maay/querier.py
   trunk/maay/webapplication.py
Log:
More file download updates (probably still doesn't work)
 ... for some reason the documents ids I get up to the browser are said to be unknowkn from the database ...


Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-13 00:37:06 UTC (rev 444)
+++ trunk/maay/querier.py	2005-11-13 00:42:12 UTC (rev 445)
@@ -66,6 +66,10 @@
         """remove rows in `documents` table when no row in `files` or
         `document_providers` table reference them, as well as the
         corresponding `document_scores` rows"""
+
+    def justDownloadAndShutUp(db_document_id):
+        """a lesser notifyDownload, to be removed soon anyway
+        """
         
     def notifyDownload(docId, query):
         """check that a document is downloadable and update the
@@ -212,8 +216,21 @@
         cursor.close()
         self._cnx.commit()
 
+    def justDownloadAndShutUp(self, document_id):
+        print db_document_id
+        try:
+            try:
+                cursor = self._cnx.cursor()
+                doc = Document.selectWhere(cursor, document_id=document_id)[0]
+            finally:
+                cursor.close()
+            return doc.url
+        except IndexError:
+            #XXX: that was not a smart thing to do, debugging-wise
+            #return ''
+            raise
 
-    def notifyDownload(self, db_document_id, query):
+    def notifyDownload(self, document_id, query):
         words = WORDS_RGX.findall(normalizeText(query))
         try:
             try:

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-13 00:37:06 UTC (rev 444)
+++ trunk/maay/webapplication.py	2005-11-13 00:42:12 UTC (rev 445)
@@ -142,11 +142,18 @@
     def child_distantfile(self, context):
         host = context.arg('host')
         port = context.arg('port')
+        #XXX: we *must* be able to get the query words here
+        #     for now we can't
         filepath = context.arg('filepath')
+        docid = context.arg('docid')
         if not host or not port or not filepath:
             return Maay404()
         proxy = ServerProxy('http://%s:%s' % (host, port))
-        fileData = proxy.downloadFile(filepath).data
+        try:
+            fileData = proxy.downloadFile(docid).data
+        except:
+            print "there was nothing to return, unfortunately ... try later ?"
+            return
         return DistantFilePage(filepath, fileData)
 
 class DistantFilePage(static.File):
@@ -331,7 +338,8 @@
     def render_row(self, context, data):
         document = data
         ResultsPageMixIn.render_row(self, context, data)
-        context.fillSlots('distanturl', '/distantfile?filepath=%s&host=%s&port=%s' % (document.url, self.peerHost, self.peerPort))
+        context.fillSlots('distanturl', '/distantfile?filepath=%s&docid=%s&host=%s&port=%s'\
+                          % (document.url, document.document_id, self.peerHost, self.peerPort))
         return context.tag
 
     def render_nextset_url(self, context, data):



From aurelienc at berlios.de  Sun Nov 13 13:11:07 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Sun, 13 Nov 2005 13:11:07 +0100
Subject: [Maay-svncheckins] r446 - trunk/maay
Message-ID: <200511131211.jADCB7j1031017@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-13 13:10:35 +0100 (Sun, 13 Nov 2005)
New Revision: 446

Modified:
   trunk/maay/rpc.py
Log:
Add FIXME


Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-13 00:42:12 UTC (rev 445)
+++ trunk/maay/rpc.py	2005-11-13 12:10:35 UTC (rev 446)
@@ -191,7 +191,8 @@
         except Exception, exc:
             import traceback
             traceback.print_exc()
-            return "Could not get %r" % filepath
+            #FIXME: this is not correctly handled on the other side
+            return "Could not get %r, cause %s" % (filepath, exc)
         return data
     
     def cnxIsValid(self, cnxId):



From aurelienc at berlios.de  Sun Nov 13 13:15:20 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Sun, 13 Nov 2005 13:15:20 +0100
Subject: [Maay-svncheckins] r447 - trunk/maay
Message-ID: <200511131215.jADCFKb0000065@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-13 13:15:16 +0100 (Sun, 13 Nov 2005)
New Revision: 447

Modified:
   trunk/maay/dbentity.py
   trunk/maay/querier.py
Log:
Download works again, and now from a document_id, not pathname.

.. however, we can't yet increment the download stats, because we
    lack the query in the context of the download op.
    A possible fix would be to make the context be :
     /search/distantfile...., instead of just
     /distantfile



Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-13 12:10:35 UTC (rev 446)
+++ trunk/maay/dbentity.py	2005-11-13 12:15:16 UTC (rev 447)
@@ -282,8 +282,15 @@
                     for row in results]
         else:
             return [] 
-        
     selectContaining = classmethod(selectContaining)
+
+    def selectUrlWhereDocid(cls, cursor, document_id):
+        query = "SELECT url FROM documents WHERE document_id=%s"
+        cursor.execute(query, [document_id])
+        results = cursor.fetchall()
+        return results[0]
+    selectUrlWhereDocid = classmethod(selectUrlWhereDocid)
+
     
 class Result(Document):
     """Results are temporary relations created/destroyed on the fly

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-13 12:10:35 UTC (rev 446)
+++ trunk/maay/querier.py	2005-11-13 12:15:16 UTC (rev 447)
@@ -30,7 +30,7 @@
 
 from logilab.common.db import get_dbapi_compliant_module
 
-from maay.dbentity import Document, FileInfo, \
+from maay.dbentity import Document, FileInfo, DBEntity, \
      DocumentProvider, DocumentScore, Word, Node, Result
 from maay.texttool import normalizeText, WORDS_RGX, MAX_STORED_SIZE
 
@@ -217,14 +217,13 @@
         self._cnx.commit()
 
     def justDownloadAndShutUp(self, document_id):
-        print db_document_id
         try:
             try:
                 cursor = self._cnx.cursor()
-                doc = Document.selectWhere(cursor, document_id=document_id)[0]
+                url = Document.selectUrlWhereDocid(cursor, document_id)[0]
             finally:
                 cursor.close()
-            return doc.url
+            return url
         except IndexError:
             #XXX: that was not a smart thing to do, debugging-wise
             #return ''



From aurelienc at berlios.de  Sun Nov 13 14:32:32 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Sun, 13 Nov 2005 14:32:32 +0100
Subject: [Maay-svncheckins] r448 - trunk/maay
Message-ID: <200511131332.jADDWWm6025604@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-13 14:32:28 +0100 (Sun, 13 Nov 2005)
New Revision: 448

Modified:
   trunk/maay/image.py
Log:
Remove useless import


Modified: trunk/maay/image.py
===================================================================
--- trunk/maay/image.py	2005-11-13 12:15:16 UTC (rev 447)
+++ trunk/maay/image.py	2005-11-13 13:32:28 UTC (rev 448)
@@ -17,7 +17,6 @@
 
 __revision__ = '$Id$'
 
-from tempfile import mkdtemp
 import stat, os, os.path as osp
 
 try:



From aurelienc at berlios.de  Sun Nov 13 14:38:06 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Sun, 13 Nov 2005 14:38:06 +0100
Subject: [Maay-svncheckins] r449 - trunk/maay
Message-ID: <200511131338.jADDc6v4027675@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-13 14:37:52 +0100 (Sun, 13 Nov 2005)
New Revision: 449

Modified:
   trunk/maay/dbentity.py
   trunk/maay/querier.py
   trunk/maay/rpc.py
   trunk/maay/webapplication.py
Log:
Several small incremental fixes that bring:
-a temporary file is now correctly build for local display (I'm sure we were cheating before, adim ;-)
-we also get the mimetype of the distant doc : is this really usefull ? i wonder, now, ...


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-13 13:32:28 UTC (rev 448)
+++ trunk/maay/dbentity.py	2005-11-13 13:37:52 UTC (rev 449)
@@ -284,12 +284,12 @@
             return [] 
     selectContaining = classmethod(selectContaining)
 
-    def selectUrlWhereDocid(cls, cursor, document_id):
-        query = "SELECT url FROM documents WHERE document_id=%s"
+    def selectUrlAndTypeWhereDocid(cls, cursor, document_id):
+        query = "SELECT url, mime_type FROM documents WHERE document_id=%s"
         cursor.execute(query, [document_id])
         results = cursor.fetchall()
         return results[0]
-    selectUrlWhereDocid = classmethod(selectUrlWhereDocid)
+    selectUrlAndTypeWhereDocid = classmethod(selectUrlAndTypeWhereDocid)
 
     
 class Result(Document):

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-13 13:32:28 UTC (rev 448)
+++ trunk/maay/querier.py	2005-11-13 13:37:52 UTC (rev 449)
@@ -220,10 +220,10 @@
         try:
             try:
                 cursor = self._cnx.cursor()
-                url = Document.selectUrlWhereDocid(cursor, document_id)[0]
+                url, mime_type = Document.selectUrlAndTypeWhereDocid(cursor, document_id)
             finally:
                 cursor.close()
-            return url
+            return url, mime_type
         except IndexError:
             #XXX: that was not a smart thing to do, debugging-wise
             #return ''

Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-13 13:32:28 UTC (rev 448)
+++ trunk/maay/rpc.py	2005-11-13 13:37:52 UTC (rev 449)
@@ -181,10 +181,9 @@
         try:
             querier = self._sessions[ANONYMOUS_AVATARID]
             if query:
-                filepath = querier.notifyDownload(doc_id, query)
+                filepath, mime_type = querier.notifyDownload(doc_id, query)
             else:
-                filepath = querier.justDownloadAndShutUp(doc_id)
-            print "FILEPATH", filepath
+                filepath, mime_type = querier.justDownloadAndShutUp(doc_id)
             fp = file(filepath, 'rb')
             data = Binary(fp.read())
             fp.close()
@@ -193,7 +192,7 @@
             traceback.print_exc()
             #FIXME: this is not correctly handled on the other side
             return "Could not get %r, cause %s" % (filepath, exc)
-        return data
+        return (data, mime_type)
     
     def cnxIsValid(self, cnxId):
         if cnxId in self._sessions:

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-13 13:32:28 UTC (rev 448)
+++ trunk/maay/webapplication.py	2005-11-13 13:37:52 UTC (rev 449)
@@ -23,6 +23,8 @@
 import re
 from xmlrpclib import ServerProxy
 from itertools import cycle
+from tempfile import mkdtemp
+import os.path as osp
 
 from zope.interface import Interface
 from twisted.web import static
@@ -100,7 +102,14 @@
         MaayPage.__init__(self, maayId)
         self.querier = querier
         self.p2pquerier = p2pquerier
+        self.downloads = mkdtemp()
 
+    def __del__(self):
+        try:
+            os.rmdir(self.downloads)
+        except:
+            print "Oooooops, did we forget to cleanup %s ?" % self.downloads
+
     def logout(self):
         print "Bye %s !" % (self.maayId,)
         # XXX: logout message should be forwarded to presence server
@@ -144,27 +153,63 @@
         port = context.arg('port')
         #XXX: we *must* be able to get the query words here
         #     for now we can't
-        filepath = context.arg('filepath')
+        filename = context.arg('filename')
         docid = context.arg('docid')
-        if not host or not port or not filepath:
+        if not host or not port or not docid:
             return Maay404()
         proxy = ServerProxy('http://%s:%s' % (host, port))
         try:
-            fileData = proxy.downloadFile(docid).data
+            rpcFriendlyData, mime_type = proxy.downloadFile(docid)
+            fileData = rpcFriendlyData.data
         except:
             print "there was nothing to return, unfortunately ... try later ?"
             return
-        return DistantFilePage(filepath, fileData)
+        try:
+            filepath = osp.join(self.downloads,
+                                filename + makeFileExtFromMimetype(mime_type))
+            f=file(filepath,'wb')
+            f.write(fileData)
+            f.close()
+        except Exception:
+            import traceback
+            print traceback.print_exc()
+            return
+        return DistantFilePage(filepath)
 
+#FIXME: try something more general ...
+reverse_type_map = {
+    'image/jpeg' : '.jpg',
+    'image/png'  : '.png',
+    'image/x-xpixmap' : '.xpm'
+    }
+
+def makeFileExtFromMimetype(mime_type):
+    """reverse mapping from type to extension
+       quite clunky and unsafe
+    """
+    return reverse_type_map[mime_type]
+
+
 class DistantFilePage(static.File):
-    def __init__(self, filepath, fileContent):
+    def __init__(self, filepath):
         static.File.__init__(self, filepath)
-        self.fileContent = fileContent
+        #self.fileContent = fileContent
+        self.filepath = filepath
         
-    def openForReading(self):
-        from cStringIO import StringIO
-        return StringIO(self.fileContent)
+##     def openForReading(self):
+##         from cStringIO import StringIO
+##         return StringIO(self.fileContent)
 
+    def __del__(self):
+        static.File.__del__(self)
+        try:
+            os.unlink(self.filepath)
+        except:
+            print "Ooooops, leaving garbage behind : %s" % \
+                  self.filepath
+            pass #FIXME: Might get there on Win32
+    
+
 class IndexationPage(MaayPage):
     # just for the demo. Should be moved to a adminpanel interface later.
     """index page"""
@@ -338,8 +383,9 @@
     def render_row(self, context, data):
         document = data
         ResultsPageMixIn.render_row(self, context, data)
-        context.fillSlots('distanturl', '/distantfile?filepath=%s&docid=%s&host=%s&port=%s'\
-                          % (document.url, document.document_id, self.peerHost, self.peerPort))
+        context.fillSlots('distanturl', '/distantfile?filename=%s&docid=%s&host=%s&port=%s'\
+                          % (osp.basename(document.url), document.document_id,
+                             self.peerHost, self.peerPort))
         return context.tag
 
     def render_nextset_url(self, context, data):



From aurelienc at berlios.de  Sun Nov 13 18:00:44 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Sun, 13 Nov 2005 18:00:44 +0100
Subject: [Maay-svncheckins] r450 - trunk/maay
Message-ID: <200511131700.jADH0iTC001763@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-13 18:00:43 +0100 (Sun, 13 Nov 2005)
New Revision: 450

Modified:
   trunk/maay/rpc.py
   trunk/maay/webapplication.py
Log:
Cleanup/simplification


Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-13 13:37:52 UTC (rev 449)
+++ trunk/maay/rpc.py	2005-11-13 17:00:43 UTC (rev 450)
@@ -191,8 +191,8 @@
             import traceback
             traceback.print_exc()
             #FIXME: this is not correctly handled on the other side
-            return "Could not get %r, cause %s" % (filepath, exc)
-        return (data, mime_type)
+            return "Could not get %r, cause %s" % (docid, exc)
+        return data
     
     def cnxIsValid(self, cnxId):
         if cnxId in self._sessions:

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-13 13:37:52 UTC (rev 449)
+++ trunk/maay/webapplication.py	2005-11-13 17:00:43 UTC (rev 450)
@@ -159,14 +159,13 @@
             return Maay404()
         proxy = ServerProxy('http://%s:%s' % (host, port))
         try:
-            rpcFriendlyData, mime_type = proxy.downloadFile(docid)
+            rpcFriendlyData = proxy.downloadFile(docid)
             fileData = rpcFriendlyData.data
         except:
             print "there was nothing to return, unfortunately ... try later ?"
             return
         try:
-            filepath = osp.join(self.downloads,
-                                filename + makeFileExtFromMimetype(mime_type))
+            filepath = osp.join(self.downloads, filename)
             f=file(filepath,'wb')
             f.write(fileData)
             f.close()
@@ -176,20 +175,6 @@
             return
         return DistantFilePage(filepath)
 
-#FIXME: try something more general ...
-reverse_type_map = {
-    'image/jpeg' : '.jpg',
-    'image/png'  : '.png',
-    'image/x-xpixmap' : '.xpm'
-    }
-
-def makeFileExtFromMimetype(mime_type):
-    """reverse mapping from type to extension
-       quite clunky and unsafe
-    """
-    return reverse_type_map[mime_type]
-
-
 class DistantFilePage(static.File):
     def __init__(self, filepath):
         static.File.__init__(self, filepath)
@@ -201,7 +186,6 @@
 ##         return StringIO(self.fileContent)
 
     def __del__(self):
-        static.File.__del__(self)
         try:
             os.unlink(self.filepath)
         except:



From aurelienc at berlios.de  Sun Nov 13 18:24:24 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Sun, 13 Nov 2005 18:24:24 +0100
Subject: [Maay-svncheckins] r451 - trunk/maay
Message-ID: <200511131724.jADHOOAE004255@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-13 18:24:24 +0100 (Sun, 13 Nov 2005)
New Revision: 451

Modified:
   trunk/maay/querier.py
   trunk/maay/rpc.py
   trunk/maay/webapplication.py
Log:
Download stats properly updated


Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-13 17:00:43 UTC (rev 450)
+++ trunk/maay/querier.py	2005-11-13 17:24:24 UTC (rev 451)
@@ -66,10 +66,6 @@
         """remove rows in `documents` table when no row in `files` or
         `document_providers` table reference them, as well as the
         corresponding `document_scores` rows"""
-
-    def justDownloadAndShutUp(db_document_id):
-        """a lesser notifyDownload, to be removed soon anyway
-        """
         
     def notifyDownload(docId, query):
         """check that a document is downloadable and update the
@@ -216,31 +212,19 @@
         cursor.close()
         self._cnx.commit()
 
-    def justDownloadAndShutUp(self, document_id):
+    def notifyDownload(self, document_id, words):
+        words = WORDS_RGX.findall(normalizeText(unicode(words)))
+        print "WORDS", words
         try:
             try:
                 cursor = self._cnx.cursor()
-                url, mime_type = Document.selectUrlAndTypeWhereDocid(cursor, document_id)
+                doc = Document.selectWhere(cursor, document_id=document_id)[0]
             finally:
                 cursor.close()
-            return url, mime_type
-        except IndexError:
-            #XXX: that was not a smart thing to do, debugging-wise
-            #return ''
-            raise
-
-    def notifyDownload(self, document_id, query):
-        words = WORDS_RGX.findall(normalizeText(query))
-        try:
-            try:
-                cursor = self._cnx.cursor()
-                doc = Document.selectWhere(cursor, db_document_id=db_document_id)[0]
-            finally:
-                cursor.close()
             self._updateDownloadStatistics(doc, words)
             return doc.url
         except IndexError:
-            return ''
+            raise
 
     def _updateDownloadStatistics(self, document, words):
         cursor = self._cnx.cursor()

Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-13 17:00:43 UTC (rev 450)
+++ trunk/maay/rpc.py	2005-11-13 17:24:24 UTC (rev 451)
@@ -174,24 +174,18 @@
         reactor.callLater(.01, getP2pQuerier().relayAnswer, answer)
         return self.nodeId
 
-    def xmlrpc_downloadFile(self, doc_id):
-        """dummy implementation for now"""
+    def xmlrpc_downloadFile(self, doc_id, words):
         print "MayRPCServer downloadFile %s" % doc_id
-        query = None
         try:
             querier = self._sessions[ANONYMOUS_AVATARID]
-            if query:
-                filepath, mime_type = querier.notifyDownload(doc_id, query)
-            else:
-                filepath, mime_type = querier.justDownloadAndShutUp(doc_id)
+            filepath = querier.notifyDownload(doc_id, words)
             fp = file(filepath, 'rb')
             data = Binary(fp.read())
             fp.close()
         except Exception, exc:
             import traceback
             traceback.print_exc()
-            #FIXME: this is not correctly handled on the other side
-            return "Could not get %r, cause %s" % (docid, exc)
+            return "Could not get %r, cause %s" % (doc_id, exc)
         return data
     
     def cnxIsValid(self, cnxId):

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-13 17:00:43 UTC (rev 450)
+++ trunk/maay/webapplication.py	2005-11-13 17:24:24 UTC (rev 451)
@@ -151,40 +151,28 @@
     def child_distantfile(self, context):
         host = context.arg('host')
         port = context.arg('port')
-        #XXX: we *must* be able to get the query words here
-        #     for now we can't
+        words = context.arg('words').split()
         filename = context.arg('filename')
         docid = context.arg('docid')
         if not host or not port or not docid:
             return Maay404()
         proxy = ServerProxy('http://%s:%s' % (host, port))
         try:
-            rpcFriendlyData = proxy.downloadFile(docid)
+            rpcFriendlyData = proxy.downloadFile(docid, words)
             fileData = rpcFriendlyData.data
         except:
-            print "there was nothing to return, unfortunately ... try later ?"
-            return
-        try:
-            filepath = osp.join(self.downloads, filename)
-            f=file(filepath,'wb')
-            f.write(fileData)
-            f.close()
-        except Exception:
-            import traceback
-            print traceback.print_exc()
-            return
+            return # peer might be down
+        filepath = osp.join(self.downloads, filename)
+        f=file(filepath,'wb')
+        f.write(fileData)
+        f.close()
         return DistantFilePage(filepath)
 
 class DistantFilePage(static.File):
     def __init__(self, filepath):
         static.File.__init__(self, filepath)
-        #self.fileContent = fileContent
         self.filepath = filepath
         
-##     def openForReading(self):
-##         from cStringIO import StringIO
-##         return StringIO(self.fileContent)
-
     def __del__(self):
         try:
             os.unlink(self.filepath)
@@ -367,9 +355,9 @@
     def render_row(self, context, data):
         document = data
         ResultsPageMixIn.render_row(self, context, data)
-        context.fillSlots('distanturl', '/distantfile?filename=%s&docid=%s&host=%s&port=%s'\
-                          % (osp.basename(document.url), document.document_id,
-                             self.peerHost, self.peerPort))
+        context.fillSlots('distanturl', '/distantfile?filename=%s&words=%s&host=%s&port=%s&docid=%s'\
+                          % (osp.basename(document.url), self.query.words,
+                             self.peerHost, self.peerPort, document.document_id))
         return context.tag
 
     def render_nextset_url(self, context, data):



From aurelienc at berlios.de  Mon Nov 14 10:02:31 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Mon, 14 Nov 2005 10:02:31 +0100
Subject: [Maay-svncheckins] r452 - trunk/maay
Message-ID: <200511140902.jAE92V3t018972@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-14 10:02:27 +0100 (Mon, 14 Nov 2005)
New Revision: 452

Modified:
   trunk/maay/querier.py
Log:
Forbids registration of 127.0.0.1 nodes


Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-13 17:24:24 UTC (rev 451)
+++ trunk/maay/querier.py	2005-11-14 09:02:27 UTC (rev 452)
@@ -263,6 +263,9 @@
         """this will be used as a callback in registrationclient/login"""
         print "AnonymousQuerier registerNode (callback) %s %s:%s" % \
             (nodeId, ip, port)
+        if ip == "127.0.0.1":
+            print " ... 127.0.0.1 is not an acceptable IP, we don't register this"
+            return
         lastSeenTime = lastSeenTime or int(time.time())
         cursor = self._cnx.cursor()
         node = Node.selectOrInsertWhere(cursor, node_id=nodeId)[0]



From adimasci at berlios.de  Mon Nov 14 10:41:41 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Mon, 14 Nov 2005 10:41:41 +0100
Subject: [Maay-svncheckins] r453 - in trunk/maay: . data
Message-ID: <200511140941.jAE9ffKu024243@sheep.berlios.de>

Author: adimasci
Date: 2005-11-14 10:41:36 +0100 (Mon, 14 Nov 2005)
New Revision: 453

Modified:
   trunk/maay/data/liveresults.html
   trunk/maay/webapplication.py
Log:
prev/next mechanism hopefully not that far from working


Modified: trunk/maay/data/liveresults.html
===================================================================
--- trunk/maay/data/liveresults.html	2005-11-14 09:02:27 UTC (rev 452)
+++ trunk/maay/data/liveresults.html	2005-11-14 09:41:36 UTC (rev 453)
@@ -9,13 +9,18 @@
 
     <script type='text/javascript' language='javascript'>
 function updateResults(source) {
-  alert('yo');
   div = document.getElementById('resultsDiv');
   div.innerHTML = source;
 }
 function startConnection() {
   var d = server.callRemote('connect');
 }
+
+function browseResults(offset) {
+  var d = server.callRemote('browseResults', offset);
+  d.addCallback(updateResults);
+}
+
     </script>
 
   </head>

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-14 09:02:27 UTC (rev 452)
+++ trunk/maay/webapplication.py	2005-11-14 09:41:36 UTC (rev 453)
@@ -279,35 +279,44 @@
         #       differently in nevow SVN. It's now possible to insantiate directly
         #       LivePage instances (which is great !), so we'll have to change
         #       the implementation for next nevow release.
-        # NOTE2: another way to be sure that only the appopriate resource
-        #        starts the p2pquery (and registers callbacks) would be
-        #        to launch the query in the remote_conect() method
-        if len(inevow.IRemainingSegments(context)) < 2:
-            self.query = Query.fromContext(context)
-            self.offset = self.query.offset
-            #TODO: very soon, the line below will also be the p2pquerier's job
-            self.results = querier.findDocuments(self.query)
-            webappConfig = INodeConfiguration(context)
-            p2pQuery = P2pQuery(webappConfig.get_node_id(),
-                                webappConfig.rpcserver_port,
-                                self.query)
-            p2pquerier.sendQuery(p2pQuery)
-            p2pquerier.addAnswerCallback(p2pQuery.qid, self.onNewResults)
-            self.queryId = p2pQuery.qid
-            self.querier = querier
+        self.querier = querier
+        self.p2pquerier = p2pquerier
+        self.query = Query.fromContext(context)
+        self.offset = self.query.offset
+        self.results = querier.findDocuments(self.query)
             
     def onNewResults(self, provider, results):
         results = [Document(**params) for params in results]
         self.querier.pushDocuments(self.queryId, results, provider)
-        results = self.querier.getQueryResults(self.queryId) # XXX offset, limit ?
-        page = PleaseCloseYourEyes(results, provider, self.query, self.queryId).renderSynchronously()
-        self.callRemote('updateResults', u'<div>%s</div>' % page)
+        results = self.querier.getQueryResults(self.queryId, offset=self.query.offset) # XXX limit ?
+        page = PleaseCloseYourEyes(results, self.query, self.queryId).renderSynchronously()
+        page = unicode(page, 'utf-8')
+        self.callRemote('updateResults', page)
 
     def remote_connect(self, context):
         """just here to start the connection between client and server (Ajax)"""
+        #TODO: very soon, the line below will also be the p2pquerier's job
+        webappConfig = INodeConfiguration(context)
+        p2pQuery = P2pQuery(webappConfig.get_node_id(),
+                            webappConfig.rpcserver_port,
+                            self.query)
+        self.queryId = p2pQuery.qid
+        self.p2pquerier.sendQuery(p2pQuery)
+        self.p2pquerier.addAnswerCallback(p2pQuery.qid, self.onNewResults)
         self.querier.pushDocuments(self.queryId, self.results, provider=None)
         return 0
 
+    def remote_browseResults(self, context, offset):
+        self.query.offset = offset
+        documents = [Document(**params) for params in self.querier.findDocuments(self.query)]
+        # push local results in the results table
+        # XXX: need to avoid duplicate insertion of local results
+        #      (typically by clicking on "next" then "prev")
+        self.querier.pushDocuments(self.queryId, documents, provider=None)
+        results = self.querier.getQueryResults(self.queryId, offset=offset) # XXX limit ?
+        page = unicode(PleaseCloseYourEyes(results, self.query, self.queryId).renderSynchronously(),
+                       'utf-8')
+        return page
 
 class PleaseCloseYourEyes(rend.Page, ResultsPageMixIn):
     """This resource and the way it is called is kind of ugly.
@@ -323,8 +332,8 @@
             <table>
               <tr><td><div><nevow:attr name="class"><nevow:slot name="mime_type"/></nevow:attr></div></td>
                   <td>
-                   <a class="distantDocTitle">
-                    <nevow:attr name="href"><nevow:slot name="distanturl" /></nevow:attr>
+                   <a><nevow:attr name="class"><nevow:slot name="linkClass" /></nevow:attr>
+                    <nevow:attr name="href"><nevow:slot name="url" /></nevow:attr>
                     <nevow:slot name="doctitle">DOC TITLE</nevow:slot>
                    </a>
                   </td>
@@ -343,35 +352,39 @@
   </div>
     """)
     
-    def __init__(self, results, provider, query, queryId):
+    def __init__(self, results, query, queryId):
         self.results = results
-        self.peerLogin, self.peerHost, self.peerPort = provider
+        # self.peerLogin, self.peerHost, self.peerPort = provider
         self.query = query
         self.queryId = queryId
 
     def render_peer(self, context, data):
-        return '%s (%s:%s)' % (self.peerLogin, self.peerHost, self.peerPort)
-
+        # return '%s (%s:%s)' % (self.peerLogin, self.peerHost, self.peerPort)
+        return 'XXX (code needs to be updated with new Result class'
+    
     def render_row(self, context, data):
         document = data
         ResultsPageMixIn.render_row(self, context, data)
-        context.fillSlots('distanturl', '/distantfile?filename=%s&words=%s&host=%s&port=%s&docid=%s'\
-                          % (osp.basename(document.url), self.query.words,
-                             self.peerHost, self.peerPort, document.document_id))
+        if document.host == 'localhost':
+            baseurl = '/download?docid=%s' % (document.document_id,)
+            context.fillSlots('linkClass', "docTitle")
+        else:
+            baseurl = '/distantfile?docid=%s' % (document.document_id,)
+            context.fillSlots('linkClass', "distantDocTitle")
+        if document.port:
+            baseurl += '&port=%s' % (document.port,)
+        baseurl += '&filename=%s' % osp.basename(document.url)
+        context.fillSlots('url', baseurl)
         return context.tag
 
     def render_nextset_url(self, context, data):
-        # XXX find a better implementation later
-        return 'search?words=%s&offset=%s&qid=%s' % ('+'.join(self.query.words),
-                                                     self.query.offset + 15,
-                                                     self.queryId)
+        return 'javascript: browseResults(%s);' % (self.query.offset + 15,)
+
     def render_prevset_url(self, context, data):
         offset = self.query.offset
         if offset:
             offset -= 15
-        return 'search?words=%s&offset=%s&qid=%s' % ('+'.join(self.query.words),
-                                                     offset,
-                                                     self.queryId)
+        return 'javascript: browseResults(%s);' % (offset,)
 
 
 class ResultsPageFactory(athena.LivePageFactory):



From aurelienc at berlios.de  Mon Nov 14 11:44:44 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Mon, 14 Nov 2005 11:44:44 +0100
Subject: [Maay-svncheckins] r454 - trunk/maay
Message-ID: <200511141044.jAEAiiVv001412@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-14 11:44:42 +0100 (Mon, 14 Nov 2005)
New Revision: 454

Modified:
   trunk/maay/rpc.py
Log:
Unimportant cosmetic stuff


Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-14 09:41:36 UTC (rev 453)
+++ trunk/maay/rpc.py	2005-11-14 10:44:42 UTC (rev 454)
@@ -67,7 +67,6 @@
         #XXX: check the correctness of this stuff
         self._lastClient = request.transport.getPeer()
         return XMLRPC.render(self, request)
-
       
     def _attachUser(self, (interface, querier, _), username, password):
         print "MaayRPCServer _attachUser", username, type(querier)
@@ -80,6 +79,15 @@
         self._sessions[digest] = querier
         return digest, ''
 
+    def __cnxIsValid(self, cnxId):
+        if cnxId in self._sessions:
+            return True
+        print "MaayRPCServer %s not valid !" % cnxId
+        return False
+
+
+    ###### Indexer stuff
+
     def xmlrpc_authenticate(self, username, password):
         """server authentication method"""
         print "MaayRPCServer xmlrpc_authenticate", username
@@ -96,7 +104,7 @@
         return d
 
     def xmlrpc_lastIndexationTimeAndState(self, cnxId, filename):
-        if self.cnxIsValid(cnxId):
+        if self._cnxIsValid(cnxId):
             filename = unicode(filename)
             querier = self._sessions[cnxId]
             fileInfos = querier.getFileInformations(filename)
@@ -114,20 +122,20 @@
         return time_, state
 
     def xmlrpc_getIndexedFiles(self, cnxId):
-        if self.cnxIsValid(cnxId):
+        if self._cnxIsValid(cnxId):
             querier = self._sessions[cnxId]
             return querier.getIndexedFiles()
         return []
         
     def xmlrpc_removeFileInfo(self, cnxId, filename):
-        if self.cnxIsValid(cnxId):
+        if self._cnxIsValid(cnxId):
             filename = unicode(filename)
             querier = self._sessions[cnxId]
             return querier.removeFileInfo(filename)
         return 0
 
     def xmlrpc_removeUnreferencedDocuments(self, cnxId):
-        if self.cnxIsValid(cnxId):
+        if self._cnxIsValid(cnxId):
             querier = self._sessions[cnxId]
             return querier.removeUnreferencedDocuments()
         return -1
@@ -148,12 +156,15 @@
             print exc
             print futureDoc.text
             return 1
-        if self.cnxIsValid(cnxId):
+        if self._cnxIsValid(cnxId):
             querier = self._sessions[cnxId]
             querier.indexDocument(self.nodeId, futureDoc)
 
         return 0
 
+
+    ###### Peer stuff
+
     def xmlrpc_distributedQuery(self, queryDict):
         """On node has sent a query (P2pQuerier.sendQuery)
         """
@@ -188,8 +199,3 @@
             return "Could not get %r, cause %s" % (doc_id, exc)
         return data
     
-    def cnxIsValid(self, cnxId):
-        if cnxId in self._sessions:
-            return True
-        print "MaayRPCServer %s not valid !" % cnxId
-        return False



From aurelienc at berlios.de  Mon Nov 14 12:03:07 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Mon, 14 Nov 2005 12:03:07 +0100
Subject: [Maay-svncheckins] r455 - trunk/maay
Message-ID: <200511141103.jAEB37c4005454@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-14 12:02:58 +0100 (Mon, 14 Nov 2005)
New Revision: 455

Modified:
   trunk/maay/rpc.py
Log:
Stupid typo


Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-14 10:44:42 UTC (rev 454)
+++ trunk/maay/rpc.py	2005-11-14 11:02:58 UTC (rev 455)
@@ -79,7 +79,7 @@
         self._sessions[digest] = querier
         return digest, ''
 
-    def __cnxIsValid(self, cnxId):
+    def _cnxIsValid(self, cnxId):
         if cnxId in self._sessions:
             return True
         print "MaayRPCServer %s not valid !" % cnxId



From aurelienc at berlios.de  Mon Nov 14 12:07:11 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Mon, 14 Nov 2005 12:07:11 +0100
Subject: [Maay-svncheckins] r456 - in trunk/maay: . test
Message-ID: <200511141107.jAEB7B0r006274@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-14 12:06:47 +0100 (Mon, 14 Nov 2005)
New Revision: 456

Modified:
   trunk/maay/p2pquerier.py
   trunk/maay/querier.py
   trunk/maay/query.py
   trunk/maay/test/test_p2p.py
   trunk/maay/test/test_querier.py
   trunk/maay/test/test_query.py
   trunk/maay/webapplication.py
Log:
- query.words made a list of unicode strings (strongly enforced)
- optional query version tracking


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-14 11:02:58 UTC (rev 455)
+++ trunk/maay/p2pquerier.py	2005-11-14 11:06:47 UTC (rev 456)
@@ -41,8 +41,18 @@
     hasher.update('%s' % time.time())
     return hasher.hexdigest()
 
+class QueryVersionMismatch(Exception):
+    """we beginning a versionning nightmare trip on queries
+       maybe I'll be shot for this, but who knows"""
+    def __init__(self, local_version, query_version):
+        self.local_version = local_version
+        self.query_version = query_version
+
 # XXX should P2pQuery derive from query.Query? (auc : no)
 class P2pQuery:
+
+    _version = 1
+    
     def __init__(self, sender, port, query, ttl=5, qid=None, host=None):
         """
         :param sender: really a nodeId
@@ -89,10 +99,16 @@
                 'ttl':self.ttl,
                 'words': self.query.words,
                 'mime_type': self.query.filetype or '',
+                'version' : P2pQuery._version
                 }
 
     def fromDict(dic):
-        _query = Query(dic['words'], filetype=dic['mime_type'])
+        """dual of asKwargs"""
+        if dic.has_key('version'):
+            if dic['version'] > P2pQuery._version:
+                raise QueryVersionMismatch(query_version=dic['version'],
+                                           local_version=P2pQuery._version)
+        _query = Query(' '.join(dic['words']), filetype=dic['mime_type'])
         return P2pQuery(qid=dic['qid'],
                         sender=dic['sender'],
                         port=dic['port'],
@@ -101,7 +117,7 @@
     fromDict = staticmethod(fromDict)
     
     def getWords(self):
-        return self.query.words.split()
+        return self.query.words
 
 
 class P2pAnswer:

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-14 11:02:58 UTC (rev 455)
+++ trunk/maay/querier.py	2005-11-14 11:06:47 UTC (rev 456)
@@ -147,7 +147,9 @@
     def findDocuments(self, query):
         """Find all indexed documents matching the query"""
         # TODO: order results using document_scores information
-        words = WORDS_RGX.findall(normalizeText(unicode(query.words)))
+        #words = [WORDS_RGX.findall(normalizeText(unicode(word))) #WORDS
+        #         for word in query.words]
+        words = query.words
         self._updateQueryStatistics(words)
         try:
             cursor = self._cnx.cursor()
@@ -213,7 +215,8 @@
         self._cnx.commit()
 
     def notifyDownload(self, document_id, words):
-        words = WORDS_RGX.findall(normalizeText(unicode(words)))
+        #words = [WORDS_RGX.findall(normalizeText(unicode(word)))
+        #         for word in words]
         print "WORDS", words
         try:
             try:

Modified: trunk/maay/query.py
===================================================================
--- trunk/maay/query.py	2005-11-14 11:02:58 UTC (rev 455)
+++ trunk/maay/query.py	2005-11-14 11:06:47 UTC (rev 456)
@@ -20,6 +20,30 @@
     import mimetypes
     return mimetypes.types_map.get('.%s' % fileExtension)
 
+def parseWords(rawWords):
+    """takes a (u)string
+       returns a list of ustrings and dict of restrictions
+    """
+    assert(isinstance(rawWords, str) or isinstance(rawWords, unicode))
+    rawWords = rawWords.split()
+    words = []
+    restrictions = {}
+    for word in rawWords:
+        try:
+            restType, restValue = [s.strip() for s in word.split(':')]
+        except ValueError:
+            if isinstance(word, str):
+                word = unicode(word, 'utf-8')
+            words.append(word)
+        else:
+            if restType in Query.restrictions:
+                # Python does not support unicode keywords !
+                # (note: restType is pure ASCII, so no pb with str())
+                restrictions[str(restType)] = restValue
+            else:
+                words.append(word)
+    return words, restrictions
+
 class Query(object):
     restrictions = ('filetype', 'filename', 'searchtype')
     def __init__(self, words, offset=0, filetype=None, filename=None):
@@ -30,22 +54,8 @@
 
     def fromRawQuery(rawQuery, offset=0):
         """:type rawQuery: str"""
-        rawWords = rawQuery.split()
-        words = []
-        restrictions = {}
-        for word in rawWords:
-            try:
-                restType, restValue = [s.strip() for s in word.split(':')]
-            except ValueError:
-                words.append(word)
-            else:
-                if restType in Query.restrictions:
-                    # Python does not support unicode keywords !
-                    # (note: restType is pure ASCII, so no pb with str())
-                    restrictions[str(restType)] = restValue
-                else:
-                    words.append(word)
-        return Query(u' '.join(words), offset, **restrictions)
+        _ , restrictions = parseWords(rawQuery)
+        return Query(rawQuery, offset, **restrictions)
     fromRawQuery = staticmethod(fromRawQuery)
 
     def fromContext(context):
@@ -56,6 +66,19 @@
         return Query.fromRawQuery(rawQuery, offset)
     fromContext = staticmethod(fromContext)
 
+    ###### Words accessors
+    def getwords(self):
+        return getattr(self, '_words', None)
+    
+    def setwords(self, words):
+        self._words, _ = parseWords(words)
+
+    words = property(getwords, setwords)
+
+    def joinwords(self, join):
+        return join.join(self._words)
+
+    ###### Filetype accessors
     def getFiletype(self):
         return getattr(self, '_filetype', None)
 

Modified: trunk/maay/test/test_p2p.py
===================================================================
--- trunk/maay/test/test_p2p.py	2005-11-14 11:02:58 UTC (rev 455)
+++ trunk/maay/test/test_p2p.py	2005-11-14 11:06:47 UTC (rev 456)
@@ -52,7 +52,8 @@
                            'sender' : 'http://localhost:3423',
                            'port' : 3423,
                            'ttl' : 5, # default value
-                           'words' : 'foo',
+                           'words' : [u'foo'],
+                           'version' : 1,
                            'mime_type' : ''})
 
     def testComplexQueryAsKwargs(self):
@@ -66,7 +67,8 @@
                            'sender' : 'http://localhost:3423',
                            'port' : 3423,
                            'ttl' : 2,
-                           'words' : 'foo bar',
+                           'words' : [u'foo', u'bar'],
+                           'version' : 1,
                            'mime_type' : 'application/pdf'})
         
     

Modified: trunk/maay/test/test_querier.py
===================================================================
--- trunk/maay/test/test_querier.py	2005-11-14 11:02:58 UTC (rev 455)
+++ trunk/maay/test/test_querier.py	2005-11-14 11:06:47 UTC (rev 456)
@@ -34,7 +34,7 @@
                                   password='maay')
         self.querier = MaayQuerier(connection=self.cnx)
         self.nodeId = '0'*40
-        self.querier.registerNode(self.nodeId, "127.0.0.1", 6789, 10)
+        self.querier.registerNode(self.nodeId, "192.168.0.123", 6789, 10)
 
     def tearDown(self):
         cursor = self.cnx.cursor()

Modified: trunk/maay/test/test_query.py
===================================================================
--- trunk/maay/test/test_query.py	2005-11-14 11:02:58 UTC (rev 455)
+++ trunk/maay/test/test_query.py	2005-11-14 11:06:47 UTC (rev 456)
@@ -22,45 +22,53 @@
 
     def testBasicQuery(self):
         query = Query.fromRawQuery(u"hello")
-        self.assertEquals(query.words, u"hello")
+        self.assertEquals(query.words, [u"hello"])
         # excplitly check for unicode-ness ('hello' == u'hello')
-        self.assertEquals(type(query.words), unicode)
+        self.assertEquals(type(query.words), list)
+        self.assertEquals(type(query.words[0]), unicode)
         self.assertEquals(query.filename, None)
         self.assertEquals(query.filetype, None)
         self.assertEquals(query.offset, 0)
         
     def testBasicQueryWithSeveralWords(self):
         query = Query.fromRawQuery(u"hello world")
-        self.assertEquals(query.words, u"hello world")
+        self.assertEquals(query.words, [u"hello",u"world"])
         # excplitly check for unicode-ness ('hello' == u'hello')
-        self.assertEquals(type(query.words), unicode)
+        self.assertEquals(type(query.words), list)
+        self.assertEquals(type(query.words[0]), unicode)
+        self.assertEquals(type(query.words[1]), unicode)
         self.assertEquals(query.filename, None)
         self.assertEquals(query.filetype, None)
         self.assertEquals(query.offset, 0)
         
     def testOneWordRestrictedQuery(self):
         query = Query.fromRawQuery(u"hello filetype:pdf")
-        self.assertEquals(query.words, u"hello")
+        self.assertEquals(query.words, [u"hello"])
         # excplitly check for unicode-ness ('hello' == u'hello')
-        self.assertEquals(type(query.words), unicode)
+        self.assertEquals(type(query.words), list)
+        self.assertEquals(type(query.words[0]), unicode)
         self.assertEquals(query.filename, None)
         self.assertEquals(query.filetype, 'application/pdf')
         self.assertEquals(query.offset, 0)
 
     def testTwoWordsRestrictedQuery(self):
         query = Query.fromRawQuery(u"hello filetype:pdf world")
-        self.assertEquals(query.words, u"hello world")
+        self.assertEquals(query.words, [u"hello", u"world"])
         # excplitly check for unicode-ness ('hello' == u'hello')
-        self.assertEquals(type(query.words), unicode)
+        self.assertEquals(type(query.words), list)
+        self.assertEquals(type(query.words[0]), unicode)
+        self.assertEquals(type(query.words[1]), unicode)
         self.assertEquals(query.filename, None)
         self.assertEquals(query.filetype, 'application/pdf')
         self.assertEquals(query.offset, 0)
 
     def testTwoWordsRestrictedQueryAndOffset(self):
         query = Query.fromRawQuery(u"hello filetype:pdf world", 12)
-        self.assertEquals(query.words, u"hello world")
+        self.assertEquals(query.words, [u"hello", u"world"])
         # excplitly check for unicode-ness ('hello' == u'hello')
-        self.assertEquals(type(query.words), unicode)
+        self.assertEquals(type(query.words), list)
+        self.assertEquals(type(query.words[0]), unicode)
+        self.assertEquals(type(query.words[1]), unicode)
         self.assertEquals(query.filename, None)
         self.assertEquals(query.filetype, 'application/pdf')
         self.assertEquals(query.offset, 12)

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-14 11:02:58 UTC (rev 455)
+++ trunk/maay/webapplication.py	2005-11-14 11:06:47 UTC (rev 456)
@@ -140,6 +140,7 @@
     # XXX make sure that the requested document is really in the database
     # XXX don't forget to update the download statistics of the document
     def child_download(self, context):
+        print "I HOPE WE NEVER GET THERE"
         docid = context.arg('docid')
         query = Query.fromRawQuery(unicode(context.arg('words'), 'utf-8'))
         docurl = self.querier.notifyDownload(docid, query.words)
@@ -204,13 +205,13 @@
         return loaders.xmlfile(get_path_of('footer.html'))
 
     def render_title(self, context, data):
-        context.fillSlots('words', self.query.words)
+        context.fillSlots('words', self.query.joinwords(' ')) #WORDS
         context.fillSlots('start_result', min(len(self.results), self.offset + 1))
         context.fillSlots('end_result', self.offset + len(self.results))
         return context.tag
 
     def render_searchfield(self, context, data):
-        context.fillSlots('words', self.query.words)
+        context.fillSlots('words', self.query.joinwords(' ')) #WORDS
         return context.tag
 
     def render_prevset_url(self, context, data):
@@ -227,7 +228,7 @@
 
     def render_row(self, context, data):
         document = data
-        words = self.query.words.split()
+        words = self.query.words #WORDS (was .split())
         context.fillSlots('mime_type', re.sub("/", "_", document.mime_type))
         context.fillSlots('doctitle',
                           tags.xml(boldifyText(document.title, words)))
@@ -243,7 +244,7 @@
         context.fillSlots('abstract', tags.xml(abstract))
         context.fillSlots('docid', document.db_document_id)
         context.fillSlots('docurl', tags.xml(boldifyText(document.url, words)))
-        context.fillSlots('words', self.query.words)
+        context.fillSlots('words', self.query.joinwords(' ')) #WORDS
         context.fillSlots('readable_size', document.readable_size())
         date = datetime.fromtimestamp(document.publication_time)
         context.fillSlots('publication_date', date.strftime('%d %b %Y'))
@@ -371,9 +372,9 @@
         else:
             baseurl = '/distantfile?docid=%s' % (document.document_id,)
             context.fillSlots('linkClass', "distantDocTitle")
-        if document.port:
             baseurl += '&port=%s' % (document.port,)
         baseurl += '&filename=%s' % osp.basename(document.url)
+        baseurl += '&words=%s' % '+'.join(self.query.words)
         context.fillSlots('url', baseurl)
         return context.tag
 



From aurelienc at berlios.de  Mon Nov 14 12:21:51 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Mon, 14 Nov 2005 12:21:51 +0100
Subject: [Maay-svncheckins] r457 - trunk/maay
Message-ID: <200511141121.jAEBLpmh008111@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-14 12:21:46 +0100 (Mon, 14 Nov 2005)
New Revision: 457

Modified:
   trunk/maay/webapplication.py
Log:
Add host to url : makes download work again


Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-14 11:06:47 UTC (rev 456)
+++ trunk/maay/webapplication.py	2005-11-14 11:21:46 UTC (rev 457)
@@ -372,6 +372,7 @@
         else:
             baseurl = '/distantfile?docid=%s' % (document.document_id,)
             context.fillSlots('linkClass', "distantDocTitle")
+            baseurl += '&host=%s' % (document.host,)
             baseurl += '&port=%s' % (document.port,)
         baseurl += '&filename=%s' % osp.basename(document.url)
         baseurl += '&words=%s' % '+'.join(self.query.words)



From aurelienc at berlios.de  Mon Nov 14 13:00:41 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Mon, 14 Nov 2005 13:00:41 +0100
Subject: [Maay-svncheckins] r458 - trunk/maay
Message-ID: <200511141200.jAEC0fGR029518@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-14 13:00:27 +0100 (Mon, 14 Nov 2005)
New Revision: 458

Modified:
   trunk/maay/webapplication.py
Log:
Attempt at automatic removal of temporary file from downloads


Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-14 11:21:46 UTC (rev 457)
+++ trunk/maay/webapplication.py	2005-11-14 12:00:27 UTC (rev 458)
@@ -28,6 +28,7 @@
 
 from zope.interface import Interface
 from twisted.web import static
+from twisted.internet import reactor
 from nevow import rend, tags, loaders
 
 from logilab.common.textutils import normalize_text
@@ -92,6 +93,40 @@
             context.fillSlots(attrname, getattr(peerNode, attrname, 'N/A'))
         return context.tag
 
+
+class DownloadedDocs:
+    """manage automatic removal of locally downloaded
+       documents in a clunky way
+       note : tmpdirs should contain exactly one file
+              and last no longer than the file
+    """
+    
+    DIRS = {}
+
+    def makeTmpDir():
+        tempdir = mkdtemp()
+        DownloadedDocs.DIRS[tempdir] = []
+        reactor.callLater(20, DownloadedDocs.cleanup)
+        return tempdir
+    makeTmpDir = staticmethod(makeTmpDir)
+
+    def addFile(tempdir, thefile):
+        DownloadedDocs.DIRS[tempdir].append(thefile)
+    addFile = staticmethod(addFile)
+
+    def cleanup():
+        for tmpdir in DownloadedDocs.DIRS:
+            files = DownloadedDocs.DIRS[tmpdir]
+            for fil in files:
+                try:
+                    os.unlink(fil)
+                except:
+                    print "cleanup : leaving stale file %s behind" % fil
+            try:
+                os.rmdir(tmpdir)
+            except:
+                print "cleanup : leaving stale tmp dir %s behind" % tmpdir
+    cleanup = staticmethod(cleanup)
                     
 class SearchForm(MaayPage):
     """default search form"""
@@ -102,7 +137,7 @@
         MaayPage.__init__(self, maayId)
         self.querier = querier
         self.p2pquerier = p2pquerier
-        self.downloads = mkdtemp()
+        
 
     def __del__(self):
         try:
@@ -163,24 +198,25 @@
             fileData = rpcFriendlyData.data
         except:
             return # peer might be down
-        filepath = osp.join(self.downloads, filename)
+        tmpdir = DownloadedDocs.makeTmpDir()
+        filepath = osp.join(tmpdir, filename)
         f=file(filepath,'wb')
         f.write(fileData)
         f.close()
-        return DistantFilePage(filepath)
+        return DistantFilePage(tmpdir, filepath)
 
 class DistantFilePage(static.File):
-    def __init__(self, filepath):
+    def __init__(self, tmpdir, filepath):
         static.File.__init__(self, filepath)
+        self.tmpdir = tmpdir
         self.filepath = filepath
         
     def __del__(self):
         try:
-            os.unlink(self.filepath)
+            DownloadedDoc.addFile(self.tmpdir, self.filepath)
         except:
             print "Ooooops, leaving garbage behind : %s" % \
                   self.filepath
-            pass #FIXME: Might get there on Win32
     
 
 class IndexationPage(MaayPage):



From aurelienc at berlios.de  Mon Nov 14 13:52:35 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Mon, 14 Nov 2005 13:52:35 +0100
Subject: [Maay-svncheckins] r459 - trunk/maay
Message-ID: <200511141252.jAECqZnQ015934@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-14 13:52:16 +0100 (Mon, 14 Nov 2005)
New Revision: 459

Modified:
   trunk/maay/webapplication.py
Log:
Typo, verbosification


Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-14 12:00:27 UTC (rev 458)
+++ trunk/maay/webapplication.py	2005-11-14 12:52:16 UTC (rev 459)
@@ -106,12 +106,15 @@
     def makeTmpDir():
         tempdir = mkdtemp()
         DownloadedDocs.DIRS[tempdir] = []
-        reactor.callLater(20, DownloadedDocs.cleanup)
+        print "DownaloadedDocs makeTmpDir : created %s" % tempdir
         return tempdir
     makeTmpDir = staticmethod(makeTmpDir)
 
     def addFile(tempdir, thefile):
         DownloadedDocs.DIRS[tempdir].append(thefile)
+        print "DownaloadedDocs makeTmpDir : added %s to %s" \
+              % (osp.basename(thefile), tempdir)
+        reactor.callLater(30, DownloadedDocs.cleanup)
     addFile = staticmethod(addFile)
 
     def cleanup():
@@ -120,12 +123,16 @@
             for fil in files:
                 try:
                     os.unlink(fil)
+                    print "DownloadedDocs cleanup : removing %s" % fil
                 except:
-                    print "cleanup : leaving stale file %s behind" % fil
+                    print "DownloadedDocs cleanup : leaving stale file %s behind"\
+                          % fil
             try:
                 os.rmdir(tmpdir)
+                print "DownloadedDocs cleanup : removing %s" % fil
             except:
-                print "cleanup : leaving stale tmp dir %s behind" % tmpdir
+                print "DownloadedDocs cleanup : leaving stale tmp dir %s behind"\
+                      % tmpdir
     cleanup = staticmethod(cleanup)
                     
 class SearchForm(MaayPage):
@@ -138,13 +145,6 @@
         self.querier = querier
         self.p2pquerier = p2pquerier
         
-
-    def __del__(self):
-        try:
-            os.rmdir(self.downloads)
-        except:
-            print "Oooooops, did we forget to cleanup %s ?" % self.downloads
-
     def logout(self):
         print "Bye %s !" % (self.maayId,)
         # XXX: logout message should be forwarded to presence server
@@ -212,11 +212,7 @@
         self.filepath = filepath
         
     def __del__(self):
-        try:
-            DownloadedDoc.addFile(self.tmpdir, self.filepath)
-        except:
-            print "Ooooops, leaving garbage behind : %s" % \
-                  self.filepath
+        DownloadedDocs.addFile(self.tmpdir, self.filepath)
     
 
 class IndexationPage(MaayPage):



From aurelienc at berlios.de  Mon Nov 14 14:23:43 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Mon, 14 Nov 2005 14:23:43 +0100
Subject: [Maay-svncheckins] r460 - trunk/maay
Message-ID: <200511141323.jAEDNhE7028160@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-14 14:23:32 +0100 (Mon, 14 Nov 2005)
New Revision: 460

Modified:
   trunk/maay/dbentity.py
Log:
Fix word stuff


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-14 12:52:16 UTC (rev 459)
+++ trunk/maay/dbentity.py	2005-11-14 13:23:32 UTC (rev 460)
@@ -225,9 +225,9 @@
     abstract = property(get_abstract)
 
     def _selectContainingQuery(cls, words, mimetype=None, offset=0, allowPrivate=False):
-        words = [normalizeText(unicode(w))
-                 for w in words
-                 if WORD_MIN_LEN <= len(w) <= WORD_MAX_LEN]        
+##         words = [normalizeText(unicode(w))
+##                  for w in words
+##                  if WORD_MIN_LEN <= len(w) <= WORD_MAX_LEN]        
         # XXX mimetype handling is a HACK. It needs to be integrated
         #     nicely in order to handle any kind of restrictions easily
         if mimetype is not None:



From afayolle at berlios.de  Mon Nov 14 14:32:58 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Mon, 14 Nov 2005 14:32:58 +0100
Subject: [Maay-svncheckins] r461 - trunk/maay
Message-ID: <200511141332.jAEDWw2q031723@sheep.berlios.de>

Author: afayolle
Date: 2005-11-14 14:32:55 +0100 (Mon, 14 Nov 2005)
New Revision: 461

Modified:
   trunk/maay/querier.py
Log:
download fix

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-14 13:23:32 UTC (rev 460)
+++ trunk/maay/querier.py	2005-11-14 13:32:55 UTC (rev 461)
@@ -221,7 +221,7 @@
         try:
             try:
                 cursor = self._cnx.cursor()
-                doc = Document.selectWhere(cursor, document_id=document_id)[0]
+                doc = Document.selectWhere(cursor, db_document_id=document_id)[0]
             finally:
                 cursor.close()
             self._updateDownloadStatistics(doc, words)



From adimasci at berlios.de  Mon Nov 14 14:38:44 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Mon, 14 Nov 2005 14:38:44 +0100
Subject: [Maay-svncheckins] r462 - trunk/maay
Message-ID: <200511141338.jAEDciP4000697@sheep.berlios.de>

Author: adimasci
Date: 2005-11-14 14:38:38 +0100 (Mon, 14 Nov 2005)
New Revision: 462

Modified:
   trunk/maay/webapplication.py
Log:
restored peer login/host display in the results page

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-14 13:32:55 UTC (rev 461)
+++ trunk/maay/webapplication.py	2005-11-14 13:38:38 UTC (rev 462)
@@ -93,7 +93,6 @@
             context.fillSlots(attrname, getattr(peerNode, attrname, 'N/A'))
         return context.tag
 
-
 class DownloadedDocs:
     """manage automatic removal of locally downloaded
        documents in a clunky way
@@ -373,7 +372,7 @@
               </tr>
             </table>
             <div class="resultDesc"><nevow:slot name="abstract" /></div>
-            <span class="resultUrl">(<span nevow:render="peer" />) - <nevow:slot name="docurl" /> - <nevow:slot name="readable_size" /> - <nevow:slot name="publication_date" /></span>
+            <span class="resultUrl"><span nevow:render="peer" /><nevow:slot name="docurl" /> - <nevow:slot name="readable_size" /> - <nevow:slot name="publication_date" /></span>
           </div>
         </td>
       </tr>
@@ -392,8 +391,11 @@
         self.queryId = queryId
 
     def render_peer(self, context, data):
+        """:type data: Result"""
         # return '%s (%s:%s)' % (self.peerLogin, self.peerHost, self.peerPort)
-        return 'XXX (code needs to be updated with new Result class'
+        if data.login is None:
+            return ''
+        return '%s (%s) - ' % (data.login, data.host)
     
     def render_row(self, context, data):
         document = data



From afayolle at berlios.de  Mon Nov 14 14:40:28 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Mon, 14 Nov 2005 14:40:28 +0100
Subject: [Maay-svncheckins] r463 - trunk/maay
Message-ID: <200511141340.jAEDeShx001497@sheep.berlios.de>

Author: afayolle
Date: 2005-11-14 14:40:11 +0100 (Mon, 14 Nov 2005)
New Revision: 463

Modified:
   trunk/maay/querier.py
   trunk/maay/webapplication.py
Log:
correct fix for local download bug

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-14 13:38:38 UTC (rev 462)
+++ trunk/maay/querier.py	2005-11-14 13:40:11 UTC (rev 463)
@@ -221,7 +221,7 @@
         try:
             try:
                 cursor = self._cnx.cursor()
-                doc = Document.selectWhere(cursor, db_document_id=document_id)[0]
+                doc = Document.selectWhere(cursor, document_id=document_id)[0]
             finally:
                 cursor.close()
             self._updateDownloadStatistics(doc, words)

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-14 13:38:38 UTC (rev 462)
+++ trunk/maay/webapplication.py	2005-11-14 13:40:11 UTC (rev 463)
@@ -273,7 +273,7 @@
             print exc
             abstract = u'No abstract available for this document [%s]' % exc
         context.fillSlots('abstract', tags.xml(abstract))
-        context.fillSlots('docid', document.db_document_id)
+        context.fillSlots('docid', document.document_id)
         context.fillSlots('docurl', tags.xml(boldifyText(document.url, words)))
         context.fillSlots('words', self.query.joinwords(' ')) #WORDS
         context.fillSlots('readable_size', document.readable_size())



From afayolle at berlios.de  Mon Nov 14 15:22:07 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Mon, 14 Nov 2005 15:22:07 +0100
Subject: [Maay-svncheckins] r464 - trunk/doc
Message-ID: <200511141422.jAEEM710025371@sheep.berlios.de>

Author: afayolle
Date: 2005-11-14 15:22:06 +0100 (Mon, 14 Nov 2005)
New Revision: 464

Added:
   trunk/doc/CR_20051114.rest
Log:
meeting minutes

Added: trunk/doc/CR_20051114.rest
===================================================================
--- trunk/doc/CR_20051114.rest	2005-11-14 13:40:11 UTC (rev 463)
+++ trunk/doc/CR_20051114.rest	2005-11-14 14:22:06 UTC (rev 464)
@@ -0,0 +1,93 @@
+==========================================
+Compte rendu de la r?union du 14 Nov. 2005
+==========================================
+
+Participants
+~~~~~~~~~~~~
+
+Joaquin Keller (FTRD)
+Fr?d?ric Dang Ngoc (FTRD)
+Alexandre Fayolle (Logilab)
+
+But de la r?union
+~~~~~~~~~~~~~~~~~
+
+Point sur les d?veloppements depuis la pr?c?dente r?union.
+
+?ch?ances
+~~~~~~~~~~
+
+D?monstration publique le 30 Nov. 
+
+On a besoin d'une version distribuable le 15 Nov.
+
+Points abord?s
+~~~~~~~~~~~~~~
+
+?tat des d?veloppements
+-----------------------
+
+La recherche distante et le t?l?chargement distant sont fonctionnels
+sous Linux. Des tests sont en cours sous Windows pour v?rifier que le
+logiciel est utilisable avec Internet Explorer.
+
+L'installation sous Windows d'un service pour le noeud Maay est en
+cours de d?veloppement.
+
+Information des utilisateurs
+----------------------------
+
+Il faut faire appara?tre clairement sur la page d'indexation
+(http://localhost:7777/indexation) quels sont les r?pertoires qui
+seront trait?s par l'indexeur. 
+
+Gestion des fichiers t?l?charg?s
+--------------------------------
+
+Lorsqu'un fichier est t?l?charg? depuis un serveur distant, il faut
+qu'il soit plac? dans un r?pertoire qui sera trait? par l'indexeur
+publique lors du prochain passage. 
+
+Si ?a ne co?te pas trop en temps de d?veloppement, il faut
+imm?diatement indexer le nouveau document. 
+
+Configuration par d?faut
+------------------------
+
+Au moment de l'installation sous Windows, l'installeur doit d?terminer
+si la machine fait partie de l'intranet de FT R&D, et si oui,
+configurer l'adresse IP du serveur de pr?sence en cons?quence.
+
+Filtrage des r?ponses locales/distantes
+---------------------------------------
+
+Si ?a ne co?te pas trop en temps de d?veloppement, il faut ajouter sur
+la page des r?sultats un moyen de n'afficher que les documents locaux,
+ou que les documents distants, ou tous les documents. Si c'est trop
+long ? d?velopper, ce sera pour plus tard. 
+
+Installation sur machine partag?e
+---------------------------------
+
+Fayolle signale que l'installeur Windows configure Maay pour
+l'utilisateur courant, ce qui peut poser probl?me pour une machine
+partag?e, ou si l'utilisateur courant ne dispose pas de privil?ges
+administratifs suffisants. Keller dit que ce n'est pas un probl?me
+pour le moment.
+
+
+
+Conclusion de la r?union
+~~~~~~~~~~~~~~~~~~~~~~~~
+
+Logilab fournira pour le 15 Nov. une livraison en status beta de
+l'application avec un installeur Windows. Cette livraison sera
+d?ploy?e dans un cercle restreint chez FT pour obtenir des retours
+rapides sur l'utilisabilit? de l'application. 
+
+
+ -- Alexandre Fayolle <alexandre.fayolle at logilab.fr>  Mon, 14 Nov 2005 15:18:57 +0100
+
+
+
+



From dnf at berlios.de  Mon Nov 14 15:33:49 2005
From: dnf at berlios.de (Frédéric DANG NGOC at BerliOS)
Date: Mon, 14 Nov 2005 15:33:49 +0100
Subject: [Maay-svncheckins] r465 - trunk/maay
Message-ID: <200511141433.jAEEXnQg002508@sheep.berlios.de>

Author: dnf
Date: 2005-11-14 15:33:41 +0100 (Mon, 14 Nov 2005)
New Revision: 465

Modified:
   trunk/maay/node.py
Log:
Twisted raises an error if not run in the main thread.
This occurs when maay is run as a windows service.
=> call reactor.run with parameter installSignalHandlers set to 0.



Modified: trunk/maay/node.py
===================================================================
--- trunk/maay/node.py	2005-11-14 14:22:06 UTC (rev 464)
+++ trunk/maay/node.py	2005-11-14 14:33:41 UTC (rev 465)
@@ -265,7 +265,9 @@
     reactor.listenTCP(nodeConfig.rpcserver_port, rpcserver)
     try:
         print "-------------Starting Node mainloop-------------"
-        reactor.run()
+        # REM: twisted raise an error if reactor is not run in the main thread.
+        # This occurs when maay is runned as a windows service.
+        reactor.run(installSignalHandlers=0)
     finally:
         print "---------------Shutting down Node---------------"
         



From dnf at berlios.de  Mon Nov 14 15:35:34 2005
From: dnf at berlios.de (Frédéric DANG NGOC at BerliOS)
Date: Mon, 14 Nov 2005 15:35:34 +0100
Subject: [Maay-svncheckins] r466 - trunk/maay/configuration
Message-ID: <200511141435.jAEEZY8o004113@sheep.berlios.de>

Author: dnf
Date: 2005-11-14 15:35:26 +0100 (Mon, 14 Nov 2005)
New Revision: 466

Modified:
   trunk/maay/configuration/indexer.ini
Log:
Small fix.


Modified: trunk/maay/configuration/indexer.ini
===================================================================
--- trunk/maay/configuration/indexer.ini	2005-11-14 14:33:41 UTC (rev 465)
+++ trunk/maay/configuration/indexer.ini	2005-11-14 14:35:26 UTC (rev 466)
@@ -22,7 +22,7 @@
 private-index-dir=c:\
 private-skip-dir=c:\windows
 public-index-dir=
-private-index-dir=
+public-skip-dir=
 
 # print messages in the console
 verbose=yes



From adimasci at berlios.de  Mon Nov 14 17:08:24 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Mon, 14 Nov 2005 17:08:24 +0100
Subject: [Maay-svncheckins] r467 - in trunk/maay: . data
Message-ID: <200511141608.jAEG8Ovl006488@sheep.berlios.de>

Author: adimasci
Date: 2005-11-14 17:08:19 +0100 (Mon, 14 Nov 2005)
New Revision: 467

Modified:
   trunk/maay/data/liveresults.html
   trunk/maay/dbentity.py
   trunk/maay/querier.py
   trunk/maay/webapplication.py
Log:
- push all local results once and for all in the table 'results'
- fixed the "back to local query" bug
- number of results if now consistent
(prev and next link on boundaries don't make the
 application crash, but need to be removed)

Modified: trunk/maay/data/liveresults.html
===================================================================
--- trunk/maay/data/liveresults.html	2005-11-14 14:35:26 UTC (rev 466)
+++ trunk/maay/data/liveresults.html	2005-11-14 16:08:19 UTC (rev 467)
@@ -34,13 +34,14 @@
           <td><input type="submit" class="searchButton" value="search" /></td>
 	</tr>
       </table>
-    </form>      
+    </form>
   </div>
-  <div class="message" nevow:render="title">Results <nevow:slot name="start_result" /> - <nevow:slot name="end_result" /> for <b><nevow:slot name="words" /></b>.</div>
   <!--
   <div class="sort"><a href="">Sort by date</a> - <a href="">Sort by popularity</a></div>
   -->
   <div id="resultsDiv">
+   <div class="message" nevow:render="title">Results <nevow:slot name="start_result" /> - <nevow:slot name="end_result" /> (<nevow:slot name="count" />) for <b><nevow:slot name="words" /></b>.</div>
+  <span id="count">0</span>
     <table class="results" nevow:render="sequence" nevow:data="results">
       <tr nevow:pattern="item" nevow:render="row">
         <td>

Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-14 14:35:26 UTC (rev 466)
+++ trunk/maay/dbentity.py	2005-11-14 16:08:19 UTC (rev 467)
@@ -122,8 +122,8 @@
         return '%s: %s' % (self.__class__.__name__,
                            ', '.join(['%s=%s' % (attr, getattr(self, attr))
                                       for attr in self.boundAttributes()]))
-    def __repr__(self):
-        return str(self)
+##     def __repr__(self):
+##         return str(self)
 
 
 class FutureDocument:
@@ -259,9 +259,9 @@
                  " %s "
                  "GROUP BY DS.db_document_id "
                  "HAVING count(DS.db_document_id) = %%s "
-                 "ORDER BY D.publication_time DESC "
-                 "LIMIT 15 OFFSET %s" % \
-                 (', '.join(['%s'] * len(words)), restriction, offset))
+                 "ORDER BY D.publication_time DESC " % \
+                 #"LIMIT 15 OFFSET %s" % \
+                 (', '.join(['%s'] * len(words)), restriction)) #, offset))
         return query, words + restrictionParams + [len(words)]
 
     _selectContainingQuery = classmethod(_selectContainingQuery)
@@ -281,7 +281,7 @@
                                    row)))
                     for row in results]
         else:
-            return [] 
+            return []
     selectContaining = classmethod(selectContaining)
 
     def selectUrlAndTypeWhereDocid(cls, cursor, document_id):

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-14 14:35:26 UTC (rev 466)
+++ trunk/maay/querier.py	2005-11-14 16:08:19 UTC (rev 467)
@@ -147,8 +147,6 @@
     def findDocuments(self, query):
         """Find all indexed documents matching the query"""
         # TODO: order results using document_scores information
-        #words = [WORDS_RGX.findall(normalizeText(unicode(word))) #WORDS
-        #         for word in query.words]
         words = query.words
         self._updateQueryStatistics(words)
         try:
@@ -156,8 +154,11 @@
             return Document.selectContaining(cursor, words, query.filetype,
                                              query.offset, self.searchInPrivate)
         finally:
+            import traceback
+            traceback.print_exc()
             cursor.close()
-
+        return []
+        
     def _updateScores(self, cursor, db_document_id, text):
         # insert or update in table document_score
         db_scores = self._getScoresDict(cursor, db_document_id)
@@ -298,6 +299,20 @@
         cursor.close()
         return nodes
 
+    def countResults(self, queryId):
+        """returns a couple (number of local results, number of distant results)
+        for <queryId>
+        """
+        cursor = self._cnx.cursor()
+        localCountQuery = "SELECT COUNT(*) from results WHERE query_id='%s' AND host='localhost';" % (queryId,)
+        distantCountQuery = "SELECT COUNT(*) from results WHERE query_id='%s' AND host!='localhost';" % (queryId,)
+        cursor.execute(localCountQuery)
+        localCount = cursor.fetchall()[0][0]
+        cursor.execute(distantCountQuery)
+        distantCount = cursor.fetchall()[0][0]        
+        cursor.close()
+        return localCount, distantCount
+    
     def getQueryResults(self, queryId, limit=15, offset=0):
         """builds and returns Result' instances by searching in
         the temporary table built for <queryId>

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-14 14:35:26 UTC (rev 466)
+++ trunk/maay/webapplication.py	2005-11-14 16:08:19 UTC (rev 467)
@@ -20,7 +20,6 @@
 __revision__ = '$Id: server.py 281 2005-11-03 11:00:56Z aurelienc $'
 
 from datetime import datetime
-import re
 from xmlrpclib import ServerProxy
 from itertools import cycle
 from tempfile import mkdtemp
@@ -236,9 +235,13 @@
         return loaders.xmlfile(get_path_of('footer.html'))
 
     def render_title(self, context, data):
+        localCount, distantCount = self.querier.countResults(self.queryId)
+        resultsCount = localCount + distantCount
+        offset = self.query.offset
         context.fillSlots('words', self.query.joinwords(' ')) #WORDS
-        context.fillSlots('start_result', min(len(self.results), self.offset + 1))
-        context.fillSlots('end_result', self.offset + len(self.results))
+        context.fillSlots('start_result', offset + 1)
+        context.fillSlots('end_result', min(resultsCount, offset+15))#self.offset + len(self.results))
+        context.fillSlots('count', resultsCount)
         return context.tag
 
     def render_searchfield(self, context, data):
@@ -260,7 +263,7 @@
     def render_row(self, context, data):
         document = data
         words = self.query.words #WORDS (was .split())
-        context.fillSlots('mime_type', re.sub("/", "_", document.mime_type))
+        context.fillSlots('mime_type', document.mime_type.replace('/', '_'))
         context.fillSlots('doctitle',
                           tags.xml(boldifyText(document.title, words)))
         # XXX abstract attribute should be a unicode string
@@ -316,38 +319,36 @@
         self.query = Query.fromContext(context)
         self.offset = self.query.offset
         self.results = querier.findDocuments(self.query)
-            
+        webappConfig = INodeConfiguration(context)
+        p2pQuery = P2pQuery(webappConfig.get_node_id(),
+                            webappConfig.rpcserver_port,
+                            self.query)
+        self.queryId = p2pQuery.qid
+        self.p2pQuery = p2pQuery
+        # push local results once for all
+        self.querier.pushDocuments(self.queryId, self.results, provider=None)
+        
     def onNewResults(self, provider, results):
         results = [Document(**params) for params in results]
         self.querier.pushDocuments(self.queryId, results, provider)
         results = self.querier.getQueryResults(self.queryId, offset=self.query.offset) # XXX limit ?
-        page = PleaseCloseYourEyes(results, self.query, self.queryId).renderSynchronously()
+        page = PleaseCloseYourEyes(results, self.querier, self.query, self.queryId).renderSynchronously()
         page = unicode(page, 'utf-8')
         self.callRemote('updateResults', page)
 
     def remote_connect(self, context):
         """just here to start the connection between client and server (Ajax)"""
         #TODO: very soon, the line below will also be the p2pquerier's job
-        webappConfig = INodeConfiguration(context)
-        p2pQuery = P2pQuery(webappConfig.get_node_id(),
-                            webappConfig.rpcserver_port,
-                            self.query)
-        self.queryId = p2pQuery.qid
-        self.p2pquerier.sendQuery(p2pQuery)
-        self.p2pquerier.addAnswerCallback(p2pQuery.qid, self.onNewResults)
+        self.p2pquerier.sendQuery(self.p2pQuery)
+        self.p2pquerier.addAnswerCallback(self.p2pQuery.qid, self.onNewResults)
         self.querier.pushDocuments(self.queryId, self.results, provider=None)
         return 0
 
     def remote_browseResults(self, context, offset):
         self.query.offset = offset
-        documents = [Document(**params) for params in self.querier.findDocuments(self.query)]
-        # push local results in the results table
-        # XXX: need to avoid duplicate insertion of local results
-        #      (typically by clicking on "next" then "prev")
-        self.querier.pushDocuments(self.queryId, documents, provider=None)
         results = self.querier.getQueryResults(self.queryId, offset=offset) # XXX limit ?
-        page = unicode(PleaseCloseYourEyes(results, self.query, self.queryId).renderSynchronously(),
-                       'utf-8')
+        page = PleaseCloseYourEyes(results, self.querier, self.query, self.queryId).renderSynchronously()
+        page = unicode(page, 'utf-8')
         return page
 
 class PleaseCloseYourEyes(rend.Page, ResultsPageMixIn):
@@ -357,6 +358,7 @@
     """
     docFactory = loaders.xmlstr("""
   <div id="resultsDiv" xmlns="http://www.w3.org/1999/xhtml" xmlns:nevow="http://nevow.com/ns/nevow/0.1" >
+   <div class="message" nevow:render="title">Results <nevow:slot name="start_result" /> - <nevow:slot name="end_result" /> (<nevow:slot name="count" />) for <b><nevow:slot name="words" /></b>.</div>
     <table class="results" nevow:render="sequence" nevow:data="results">
       <tr nevow:pattern="item" nevow:render="row">
         <td>
@@ -384,15 +386,14 @@
   </div>
     """)
     
-    def __init__(self, results, query, queryId):
+    def __init__(self, results, querier, query, queryId):
         self.results = results
-        # self.peerLogin, self.peerHost, self.peerPort = provider
+        self.querier = querier
         self.query = query
         self.queryId = queryId
 
     def render_peer(self, context, data):
         """:type data: Result"""
-        # return '%s (%s:%s)' % (self.peerLogin, self.peerHost, self.peerPort)
         if data.login is None:
             return ''
         return '%s (%s) - ' % (data.login, data.host)



From afayolle at berlios.de  Mon Nov 14 17:10:20 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Mon, 14 Nov 2005 17:10:20 +0100
Subject: [Maay-svncheckins] r468 - trunk/maay/configuration/win32
Message-ID: <200511141610.jAEGAKtJ006773@sheep.berlios.de>

Author: afayolle
Date: 2005-11-14 17:10:19 +0100 (Mon, 14 Nov 2005)
New Revision: 468

Modified:
   trunk/maay/configuration/win32/node.ini
Log:
fixed option name 

Modified: trunk/maay/configuration/win32/node.ini
===================================================================
--- trunk/maay/configuration/win32/node.ini	2005-11-14 16:08:19 UTC (rev 467)
+++ trunk/maay/configuration/win32/node.ini	2005-11-14 16:10:19 UTC (rev 468)
@@ -3,5 +3,5 @@
 db-host=localhost
 user=maay
 password=maay
-registration-host=localhost
-registration-port=2345
+presence-host=localhost
+presence-port=2345



From aurelienc at berlios.de  Mon Nov 14 17:45:41 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Mon, 14 Nov 2005 17:45:41 +0100
Subject: [Maay-svncheckins] r469 - trunk/maay
Message-ID: <200511141645.jAEGjfw0011813@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-14 17:45:39 +0100 (Mon, 14 Nov 2005)
New Revision: 469

Modified:
   trunk/maay/rpc.py
Log:
Deverbosify


Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-14 16:10:19 UTC (rev 468)
+++ trunk/maay/rpc.py	2005-11-14 16:45:39 UTC (rev 469)
@@ -168,7 +168,7 @@
     def xmlrpc_distributedQuery(self, queryDict):
         """On node has sent a query (P2pQuerier.sendQuery)
         """
-        print "MaayRPCServer distributedQuery : %s " % queryDict
+        print "MaayRPCServer distributedQuery : %s " % queryDict['words']
         query = P2pQuery.fromDict(queryDict)
         query.host = self._lastClient.host
         querier = self._sessions[ANONYMOUS_AVATARID]
@@ -179,8 +179,8 @@
         return self.nodeId
 
     def xmlrpc_distributedQueryAnswer(self, queryId, senderId, provider, documents):
-        print "MaayRPCServer distributedQueryAnswer : %s %s, %s document(s) fom %s" % \
-              (queryId, senderId, len(documents), provider)
+        print "MaayRPCServer distributedQueryAnswer : %s document(s) fom %s" % \
+              (len(documents), provider)
         answer = P2pAnswer(queryId, provider, documents)
         reactor.callLater(.01, getP2pQuerier().relayAnswer, answer)
         return self.nodeId



From aurelienc at berlios.de  Mon Nov 14 17:48:13 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Mon, 14 Nov 2005 17:48:13 +0100
Subject: [Maay-svncheckins] r470 - in trunk/maay: . data
Message-ID: <200511141648.jAEGmDOK012018@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-14 17:48:05 +0100 (Mon, 14 Nov 2005)
New Revision: 470

Modified:
   trunk/maay/data/liveresults.html
   trunk/maay/webapplication.py
Log:
-add prev/next on otp of the page
-make download work asynchronously


Modified: trunk/maay/data/liveresults.html
===================================================================
--- trunk/maay/data/liveresults.html	2005-11-14 16:45:39 UTC (rev 469)
+++ trunk/maay/data/liveresults.html	2005-11-14 16:48:05 UTC (rev 470)
@@ -41,7 +41,9 @@
   -->
   <div id="resultsDiv">
    <div class="message" nevow:render="title">Results <nevow:slot name="start_result" /> - <nevow:slot name="end_result" /> (<nevow:slot name="count" />) for <b><nevow:slot name="words" /></b>.</div>
-  <span id="count">0</span>
+    <div class="prevnext"><a><nevow:attr name="href"
+    nevow:render="prevset_url"/>Previous</a> - <a><nevow:attr
+    name="href" nevow:render="nextset_url"/>Next</a></div>
     <table class="results" nevow:render="sequence" nevow:data="results">
       <tr nevow:pattern="item" nevow:render="row">
         <td>

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-14 16:45:39 UTC (rev 469)
+++ trunk/maay/webapplication.py	2005-11-14 16:48:05 UTC (rev 470)
@@ -20,13 +20,14 @@
 __revision__ = '$Id: server.py 281 2005-11-03 11:00:56Z aurelienc $'
 
 from datetime import datetime
-from xmlrpclib import ServerProxy
+#from xmlrpclib import ServerProxy
 from itertools import cycle
 from tempfile import mkdtemp
-import os.path as osp
+import os, os.path as osp
 
 from zope.interface import Interface
 from twisted.web import static
+from twisted.web.xmlrpc import Proxy
 from twisted.internet import reactor
 from nevow import rend, tags, loaders
 
@@ -123,14 +124,14 @@
                     os.unlink(fil)
                     print "DownloadedDocs cleanup : removing %s" % fil
                 except:
-                    print "DownloadedDocs cleanup : leaving stale file %s behind"\
-                          % fil
+                    import traceback
+                    traceback.print_exc()
             try:
                 os.rmdir(tmpdir)
-                print "DownloadedDocs cleanup : removing %s" % fil
+                print "DownloadedDocs cleanup : removing %s" % tmpdir
             except:
-                print "DownloadedDocs cleanup : leaving stale tmp dir %s behind"\
-                      % tmpdir
+                import traceback
+                traceback.print_exc()
     cleanup = staticmethod(cleanup)
                     
 class SearchForm(MaayPage):
@@ -190,12 +191,15 @@
         docid = context.arg('docid')
         if not host or not port or not docid:
             return Maay404()
-        proxy = ServerProxy('http://%s:%s' % (host, port))
-        try:
-            rpcFriendlyData = proxy.downloadFile(docid, words)
-            fileData = rpcFriendlyData.data
-        except:
-            return # peer might be down
+        print "SearchForm distantfile"
+        proxy = Proxy('http://%s:%s' % (host, port))
+        d = proxy.callRemote('downloadFile', docid, words)
+        d.addCallback(self.foo, filename)
+        return d
+
+    def foo(self, rpcFriendlyData, filename):
+        fileData = rpcFriendlyData.data
+        print " ... downloaded !"
         tmpdir = DownloadedDocs.makeTmpDir()
         filepath = osp.join(tmpdir, filename)
         f=file(filepath,'wb')
@@ -302,14 +306,6 @@
 
     def __init__(self, context, querier, p2pquerier):
         athena.LivePage.__init__(self)
-        # XXX: nevow/livepage related trick (version 0.6.0) :
-        # This resource is instanciated several times when rendering the
-        # results page (each time the browser tries to load
-        # ROOT/search/athena.js, ROOT/search/MochiKit.js, etc.) because
-        # the Livepage-Id is not yet set in the request. In these particuliar
-        # cases, we don't want to start new queries, so we do an ugly check
-        # to test whether or not we're instanciating the *real* live page
-        # (or if we're just trying to download JS files)
         # NOTE: At the time this comment is written, athena/LivePages are handled
         #       differently in nevow SVN. It's now possible to insantiate directly
         #       LivePage instances (which is great !), so we'll have to change
@@ -342,7 +338,7 @@
         self.p2pquerier.sendQuery(self.p2pQuery)
         self.p2pquerier.addAnswerCallback(self.p2pQuery.qid, self.onNewResults)
         self.querier.pushDocuments(self.queryId, self.results, provider=None)
-        return 0
+        return u''
 
     def remote_browseResults(self, context, offset):
         self.query.offset = offset
@@ -359,6 +355,9 @@
     docFactory = loaders.xmlstr("""
   <div id="resultsDiv" xmlns="http://www.w3.org/1999/xhtml" xmlns:nevow="http://nevow.com/ns/nevow/0.1" >
    <div class="message" nevow:render="title">Results <nevow:slot name="start_result" /> - <nevow:slot name="end_result" /> (<nevow:slot name="count" />) for <b><nevow:slot name="words" /></b>.</div>
+   <div class="prevnext"><a><nevow:attr name="href"
+    nevow:render="prevset_url"/>Previous</a> - <a><nevow:attr
+    name="href" nevow:render="nextset_url"/>Next</a></div>
     <table class="results" nevow:render="sequence" nevow:data="results">
       <tr nevow:pattern="item" nevow:render="row">
         <td>



From aurelienc at berlios.de  Mon Nov 14 17:52:29 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Mon, 14 Nov 2005 17:52:29 +0100
Subject: [Maay-svncheckins] r471 - trunk/maay
Message-ID: <200511141652.jAEGqTpU012680@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-14 17:52:28 +0100 (Mon, 14 Nov 2005)
New Revision: 471

Modified:
   trunk/maay/dbentity.py
   trunk/maay/querier.py
Log:
Verbosify


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-14 16:48:05 UTC (rev 470)
+++ trunk/maay/dbentity.py	2005-11-14 16:52:28 UTC (rev 471)
@@ -267,6 +267,7 @@
     _selectContainingQuery = classmethod(_selectContainingQuery)
 
     def selectContaining(cls, cursor, words, mimetype=None, offset=0, allowPrivate=False):
+        print "Document selectContaining %s" % words
         if not words:
             return []
         query, params = cls._selectContainingQuery(words, mimetype,

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-14 16:48:05 UTC (rev 470)
+++ trunk/maay/querier.py	2005-11-14 16:52:28 UTC (rev 471)
@@ -218,7 +218,7 @@
     def notifyDownload(self, document_id, words):
         #words = [WORDS_RGX.findall(normalizeText(unicode(word)))
         #         for word in words]
-        print "WORDS", words
+        print "Querier notifyDownloads %s with %s" % (document_id, words)
         try:
             try:
                 cursor = self._cnx.cursor()



From aurelienc at berlios.de  Mon Nov 14 18:02:02 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Mon, 14 Nov 2005 18:02:02 +0100
Subject: [Maay-svncheckins] r472 - trunk/maay
Message-ID: <200511141702.jAEH225o013510@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-14 18:02:00 +0100 (Mon, 14 Nov 2005)
New Revision: 472

Modified:
   trunk/maay/node.py
Log:
Make signal handling platform dependant


Modified: trunk/maay/node.py
===================================================================
--- trunk/maay/node.py	2005-11-14 16:52:28 UTC (rev 471)
+++ trunk/maay/node.py	2005-11-14 17:02:00 UTC (rev 472)
@@ -28,6 +28,7 @@
 import time
 import os
 import socket
+import sys
 
 from zope.interface import implements
 
@@ -267,7 +268,10 @@
         print "-------------Starting Node mainloop-------------"
         # REM: twisted raise an error if reactor is not run in the main thread.
         # This occurs when maay is runned as a windows service.
-        reactor.run(installSignalHandlers=0)
+        if sys.platform == 'win32':
+            reactor.run(installSignalHandlers=0)
+        else:
+            reactor.run()
     finally:
         print "---------------Shutting down Node---------------"
         



From aurelienc at berlios.de  Mon Nov 14 18:32:00 2005
From: aurelienc at berlios.de (Aurélien Campéas at BerliOS)
Date: Mon, 14 Nov 2005 18:32:00 +0100
Subject: [Maay-svncheckins] r473 - in trunk/maay: . sql
Message-ID: <200511141732.jAEHW0E7016619@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-14 18:31:55 +0100 (Mon, 14 Nov 2005)
New Revision: 473

Modified:
   trunk/maay/dbentity.py
   trunk/maay/sql/mysql.sql
Log:
Add port as key in Results table (to avoid collisions on docs from nodes running on the same host)


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-14 17:02:00 UTC (rev 472)
+++ trunk/maay/dbentity.py	2005-11-14 17:31:55 UTC (rev 473)
@@ -225,9 +225,6 @@
     abstract = property(get_abstract)
 
     def _selectContainingQuery(cls, words, mimetype=None, offset=0, allowPrivate=False):
-##         words = [normalizeText(unicode(w))
-##                  for w in words
-##                  if WORD_MIN_LEN <= len(w) <= WORD_MAX_LEN]        
         # XXX mimetype handling is a HACK. It needs to be integrated
         #     nicely in order to handle any kind of restrictions easily
         if mimetype is not None:
@@ -260,8 +257,7 @@
                  "GROUP BY DS.db_document_id "
                  "HAVING count(DS.db_document_id) = %%s "
                  "ORDER BY D.publication_time DESC " % \
-                 #"LIMIT 15 OFFSET %s" % \
-                 (', '.join(['%s'] * len(words)), restriction)) #, offset))
+                 (', '.join(['%s'] * len(words)), restriction))
         return query, words + restrictionParams + [len(words)]
 
     _selectContainingQuery = classmethod(_selectContainingQuery)
@@ -300,7 +296,7 @@
     attributes = ('db_document_id', 'document_id', 'query_id', 'mime_type',
                   'title', 'size', 'text', 'publication_time', 'url',
                   'host', 'port', 'login')
-    key = ('document_id', 'query_id', 'host')
+    key = ('document_id', 'query_id', 'host', 'port')
     tableName = 'results'
     
     def fromDocument(document, queryId, provider=None):
@@ -312,6 +308,7 @@
             stateDict['login'], stateDict['host'], stateDict['port'] = provider
         else:
             stateDict['host'] = 'localhost'
+            stateDict['port'] = 0
         stateDict['query_id'] = queryId
         return Result(**stateDict)
     fromDocument = staticmethod(fromDocument)

Modified: trunk/maay/sql/mysql.sql
===================================================================
--- trunk/maay/sql/mysql.sql	2005-11-14 17:02:00 UTC (rev 472)
+++ trunk/maay/sql/mysql.sql	2005-11-14 17:31:55 UTC (rev 473)
@@ -158,7 +158,7 @@
   `host` varchar(15),
   `port` int(11), -- check this
   `login` varchar(255),
-  PRIMARY KEY (`db_document_id`, `query_id`, `host`)
+  PRIMARY KEY (`db_document_id`, `query_id`, `host`, `port`)
 --  KEY `document_id` (`document_id`),
 --  KEY `url` (`url`)
 ) TYPE=MyISAM;



From adimasci at berlios.de  Mon Nov 14 19:02:35 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Mon, 14 Nov 2005 19:02:35 +0100
Subject: [Maay-svncheckins] r474 - in trunk/maay: . data
Message-ID: <200511141802.jAEI2ZNV007660@sheep.berlios.de>

Author: adimasci
Date: 2005-11-14 19:02:15 +0100 (Mon, 14 Nov 2005)
New Revision: 474

Modified:
   trunk/maay/data/liveresults.html
   trunk/maay/data/maay.css
   trunk/maay/dbentity.py
   trunk/maay/querier.py
   trunk/maay/webapplication.py
Log:
- fixed some Duplicate key problems with local results
- added links to display only local/distant results

Modified: trunk/maay/data/liveresults.html
===================================================================
--- trunk/maay/data/liveresults.html	2005-11-14 17:31:55 UTC (rev 473)
+++ trunk/maay/data/liveresults.html	2005-11-14 18:02:15 UTC (rev 474)
@@ -21,6 +21,21 @@
   d.addCallback(updateResults);
 }
 
+function onlyLocalResults() {
+  var d = server.callRemote('setLocalFlag', 1);
+  d.addCallback(updateResults);
+}
+
+function onlyDistantResults() {
+  var d = server.callRemote('setDistantFlag', 1);
+  d.addCallback(updateResults);
+}
+
+function allResults() {
+  var d = server.callRemote('unsetFlags');
+  d.addCallback(updateResults);
+}
+
     </script>
 
   </head>
@@ -37,9 +52,12 @@
     </form>
   </div>
   <!--
-  <div class="sort"><a href="">Sort by date</a> - <a href="">Sort by popularity</a></div>
+    <div class="sort"><a href="">Sort by date</a> - <a href="">Sort by popularity</a></div>
   -->
   <div id="resultsDiv">
+   <a href="javascript: onlyLocalResults();"><span nevow:render="localcount" /> local results</a><br/>
+   <a href="javascript: onlyDistantResults();"><span nevow:render="distantcount" /> distant results</a><br/>
+   <a href="javascript: allResults();"><span nevow:render="totalcount" /> results</a><br/>
    <div class="message" nevow:render="title">Results <nevow:slot name="start_result" /> - <nevow:slot name="end_result" /> (<nevow:slot name="count" />) for <b><nevow:slot name="words" /></b>.</div>
     <div class="prevnext"><a><nevow:attr name="href"
     nevow:render="prevset_url"/>Previous</a> - <a><nevow:attr

Modified: trunk/maay/data/maay.css
===================================================================
--- trunk/maay/data/maay.css	2005-11-14 17:31:55 UTC (rev 473)
+++ trunk/maay/data/maay.css	2005-11-14 18:02:15 UTC (rev 474)
@@ -39,8 +39,8 @@
   display: block;
 }
 
-a.distantDocTitle {
-  display: block;
+.distantDocTitle {
+  /* display: block; */
   background-color: yellow;
 }
 

Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-14 17:31:55 UTC (rev 473)
+++ trunk/maay/dbentity.py	2005-11-14 18:02:15 UTC (rev 474)
@@ -313,12 +313,16 @@
         return Result(**stateDict)
     fromDocument = staticmethod(fromDocument)
 
-    def _selectQuery(cls, limit, offset, whereColumns=()):
+    def _selectQuery(cls, limit, offset, onlyLocal=False, onlyDistant=False, whereColumns=()):
         if whereColumns:
             wheres = ['%s=%%(%s)s' % (attr, attr) for attr in whereColumns]
             where =  ' WHERE ' + ' AND '.join(wheres)
         else:
             where = ''
+        if onlyDistant:
+            where += " AND host != 'localhost' "
+        elif onlyLocal:
+            where += " AND host = 'localhost' "
         query = 'SELECT %s FROM %s%s ORDER BY publication_time LIMIT %s OFFSET %s' % (
             ', '.join(cls.attributes),
             cls.tableName,
@@ -326,8 +330,8 @@
         return query
     _selectQuery = classmethod(_selectQuery)
 
-    def selectWhere(cls, cursor, limit, offset, **args):
-        query = cls._selectQuery(limit, offset, args.keys())
+    def selectWhere(cls, cursor, limit, offset, onlyLocal=False, onlyDistant=False, **args):
+        query = cls._selectQuery(limit, offset, onlyLocal, onlyDistant, args.keys())
         cursor.execute(query, args)
         results = cursor.fetchall()
         return [cls(**dict(zip(cls.attributes, row))) for row in results]

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-14 17:31:55 UTC (rev 473)
+++ trunk/maay/querier.py	2005-11-14 18:02:15 UTC (rev 474)
@@ -313,12 +313,14 @@
         cursor.close()
         return localCount, distantCount
     
-    def getQueryResults(self, queryId, limit=15, offset=0):
+    def getQueryResults(self, queryId, limit=15, offset=0,
+                        onlyLocal=False, onlyDistant=False):
         """builds and returns Result' instances by searching in
         the temporary table built for <queryId>
         """
         cursor = self._cnx.cursor()
-        results = Result.selectWhere(cursor, limit, offset, query_id=queryId)
+        results = Result.selectWhere(cursor, limit, offset,
+                                     onlyLocal, onlyDistant, query_id=queryId)
         cursor.close()
         return results
         

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-14 17:31:55 UTC (rev 473)
+++ trunk/maay/webapplication.py	2005-11-14 18:02:15 UTC (rev 474)
@@ -240,7 +240,12 @@
 
     def render_title(self, context, data):
         localCount, distantCount = self.querier.countResults(self.queryId)
-        resultsCount = localCount + distantCount
+        if self.onlyDistant:
+            resultsCount = distantCount
+        elif self.onlyLocal:
+            resultsCount = localCount
+        else:
+            resultsCount = localCount + distantCount
         offset = self.query.offset
         context.fillSlots('words', self.query.joinwords(' ')) #WORDS
         context.fillSlots('start_result', offset + 1)
@@ -248,6 +253,18 @@
         context.fillSlots('count', resultsCount)
         return context.tag
 
+    def render_localcount(self, context, data):
+        localCount, _ = self.querier.countResults(self.queryId)
+        return localCount
+
+    def render_distantcount(self, context, data):
+        _, distantCount = self.querier.countResults(self.queryId)
+        return distantCount
+
+    def render_totalcount(self, context, data):
+        localCount, distantCount = self.querier.countResults(self.queryId)
+        return localCount + distantCount
+
     def render_searchfield(self, context, data):
         context.fillSlots('words', self.query.joinwords(' ')) #WORDS
         return context.tag
@@ -314,21 +331,26 @@
         self.p2pquerier = p2pquerier
         self.query = Query.fromContext(context)
         self.offset = self.query.offset
-        self.results = querier.findDocuments(self.query)
-        webappConfig = INodeConfiguration(context)
-        p2pQuery = P2pQuery(webappConfig.get_node_id(),
-                            webappConfig.rpcserver_port,
-                            self.query)
-        self.queryId = p2pQuery.qid
-        self.p2pQuery = p2pQuery
+        self.onlyLocal = False
+        self.onlyDistant = False
         # push local results once for all
-        self.querier.pushDocuments(self.queryId, self.results, provider=None)
+        if len(inevow.IRemainingSegments(context)) < 2:
+            print "-=" * 40
+            self.results = querier.findDocuments(self.query)
+            webappConfig = INodeConfiguration(context)
+            p2pQuery = P2pQuery(webappConfig.get_node_id(),
+                                webappConfig.rpcserver_port,
+                                self.query)
+            self.queryId = p2pQuery.qid
+            self.p2pQuery = p2pQuery
+            # self.querier.pushDocuments(self.queryId, self.results, provider=None)
         
     def onNewResults(self, provider, results):
         results = [Document(**params) for params in results]
         self.querier.pushDocuments(self.queryId, results, provider)
-        results = self.querier.getQueryResults(self.queryId, offset=self.query.offset) # XXX limit ?
-        page = PleaseCloseYourEyes(results, self.querier, self.query, self.queryId).renderSynchronously()
+        results = self.querier.getQueryResults(self.queryId, offset=self.query.offset, onlyLocal=self.onlyLocal, onlyDistant=self.onlyDistant) # XXX limit ?
+        page = PleaseCloseYourEyes(results, self.querier, self.query, self.queryId,
+                                   self.onlyLocal, self.onlyDistant).renderSynchronously()
         page = unicode(page, 'utf-8')
         self.callRemote('updateResults', page)
 
@@ -339,14 +361,31 @@
         self.p2pquerier.addAnswerCallback(self.p2pQuery.qid, self.onNewResults)
         self.querier.pushDocuments(self.queryId, self.results, provider=None)
         return u''
-
+    
     def remote_browseResults(self, context, offset):
         self.query.offset = offset
-        results = self.querier.getQueryResults(self.queryId, offset=offset) # XXX limit ?
-        page = PleaseCloseYourEyes(results, self.querier, self.query, self.queryId).renderSynchronously()
+        results = self.querier.getQueryResults(self.queryId, offset=offset, onlyLocal=self.onlyLocal, onlyDistant=self.onlyDistant) # XXX limit ?
+        page = PleaseCloseYourEyes(results, self.querier, self.query, self.queryId,
+                                   self.onlyLocal, self.onlyDistant).renderSynchronously()
         page = unicode(page, 'utf-8')
         return page
 
+    def remote_setLocalFlag(self, context, flag):
+        self.onlyLocal = flag
+        self.onlyDistant = False
+        return self.remote_browseResults(context, self.query.offset)
+
+    def remote_setDistantFlag(self, context, flag):
+        self.onlyDistant = flag
+        self.onlyLocal = False
+        return self.remote_browseResults(context, self.query.offset)
+
+    def remote_unsetFlags(self, context):
+        self.onlyDistant = False
+        self.onlyLocal = False
+        return self.remote_browseResults(context, self.query.offset)
+    
+
 class PleaseCloseYourEyes(rend.Page, ResultsPageMixIn):
     """This resource and the way it is called is kind of ugly.
     It will be refactored later. The idea is to have something working
@@ -354,6 +393,9 @@
     """
     docFactory = loaders.xmlstr("""
   <div id="resultsDiv" xmlns="http://www.w3.org/1999/xhtml" xmlns:nevow="http://nevow.com/ns/nevow/0.1" >
+   <a href="javascript: onlyLocalResults();"><span nevow:render="localcount" /> local results</a><br/>
+   <a href="javascript: onlyDistantResults();"><span nevow:render="distantcount" /> distant results</a><br/>
+   <a href="javascript: allResults();"><span nevow:render="totalcount" /> results</a><br/>
    <div class="message" nevow:render="title">Results <nevow:slot name="start_result" /> - <nevow:slot name="end_result" /> (<nevow:slot name="count" />) for <b><nevow:slot name="words" /></b>.</div>
    <div class="prevnext"><a><nevow:attr name="href"
     nevow:render="prevset_url"/>Previous</a> - <a><nevow:attr
@@ -385,11 +427,14 @@
   </div>
     """)
     
-    def __init__(self, results, querier, query, queryId):
+    def __init__(self, results, querier, query, queryId,
+                 onlyLocal=False, onlyDistant=False):
         self.results = results
         self.querier = querier
         self.query = query
         self.queryId = queryId
+        self.onlyLocal = onlyLocal
+        self.onlyDistant = onlyDistant
 
     def render_peer(self, context, data):
         """:type data: Result"""



From afayolle at berlios.de  Mon Nov 14 21:42:03 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Mon, 14 Nov 2005 21:42:03 +0100
Subject: [Maay-svncheckins] r475 - trunk/maay
Message-ID: <200511142042.jAEKg3Xh000229@sheep.berlios.de>

Author: afayolle
Date: 2005-11-14 21:41:52 +0100 (Mon, 14 Nov 2005)
New Revision: 475

Modified:
   trunk/maay/updateconfig.py
Log:
started updating presence server url (more to come)

Modified: trunk/maay/updateconfig.py
===================================================================
--- trunk/maay/updateconfig.py	2005-11-14 18:02:15 UTC (rev 474)
+++ trunk/maay/updateconfig.py	2005-11-14 20:41:52 UTC (rev 475)
@@ -18,7 +18,7 @@
 import os
 import sys
 
-config = """[INDEXER]
+indexer_config = """[INDEXER]
 # Host on which the maay node is running
 host=localhost
 #Port on which the maay node is listening
@@ -45,6 +45,15 @@
 public-skip-dir=%(public_skip)s
 """
 
+node_config = """[NODE]
+db-name=maay
+db-host=localhost
+user=maay
+password=maay
+presence-host=%(presence)s
+presence-port=2345
+"""
+
 def createConfigFile(myDesktop, myDocuments):
     f=open("indexer.ini", "w")
     values = {'private'     : '%s,%s' % (myDesktop, myDocuments),
@@ -52,8 +61,16 @@
               'public'      : '%s\\Maay Documents' % myDesktop,
               'public_skip' : '',
               }
-    f.write(config % values)
+    f.write(indexer_config % values)
     f.close()
+
+    f = open("node.ini", "w")
+    values = {'presence': get_presence_name()}
+    f.write(node_config % values)
+    f.close()
+
+def get_presence_name():
+    for host in ('172.17.1.4', '192.168.74.105', )
     
 if __name__ == '__main__':
     createConfigFile(sys.argv[1], sys.argv[2])



From adimasci at berlios.de  Mon Nov 14 23:16:46 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Mon, 14 Nov 2005 23:16:46 +0100
Subject: [Maay-svncheckins] r476 - in trunk/maay: . data
Message-ID: <200511142216.jAEMGkvB016818@sheep.berlios.de>

Author: adimasci
Date: 2005-11-14 23:16:43 +0100 (Mon, 14 Nov 2005)
New Revision: 476

Modified:
   trunk/maay/data/notfound.html
   trunk/maay/webapplication.py
Log:
- improved a bit the way 404 pages are handled (especially for errors
  occuring while downloading distant files)


Modified: trunk/maay/data/notfound.html
===================================================================
--- trunk/maay/data/notfound.html	2005-11-14 20:41:52 UTC (rev 475)
+++ trunk/maay/data/notfound.html	2005-11-14 22:16:43 UTC (rev 476)
@@ -7,12 +7,7 @@
     <link rel="shortcut icon" href="/images/maay.ico" />
   </head>
   <body>
-    <h3 class="error">Sorry, I could not find the request resource.</h3>
+    <h3 class="error"><span nevow:render="errormsg">Sorry, I could not find the request resource !</span></h3>
     <a href="/">Maay's main search page</a>
-    <hr />
-    <a href="http://maay.netofpeers.net/">Maay Home page</a> <a href="http://developer.berlios.de/projects/maay/">
-<img src="http://developer.berlios.de/bslogo.php?group_id=0"
-    width="124" height="32" border="0" alt="BerliOS Logo" /></a>
-
     </body>  
 </html>

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-14 20:41:52 UTC (rev 475)
+++ trunk/maay/webapplication.py	2005-11-14 22:16:43 UTC (rev 476)
@@ -45,15 +45,6 @@
     """provide an interface in order to be able to remember webappconfig"""
 
 
-class Maay404(rend.FourOhFour):
-    """Maay specific resource for 404 errors"""
-    loader = loaders.xmlfile(get_path_of('notfound.html'))
-
-    def renderHTTP_notFound(self, context):
-        """Render a not found message to the given request.
-        """
-        return self.loader.load(context)[0]
-
 class MaayPage(rend.Page):
     docFactory = loaders.xmlfile(get_path_of('skeleton.html'))
     child_maaycss = static.File(get_path_of('maay.css'))
@@ -69,6 +60,26 @@
     def macro_footer(self, context):
         return loaders.xmlfile(get_path_of('footer.html'))
 
+class Maay404(MaayPage, rend.FourOhFour):
+    """Maay specific resource for 404 errors"""
+    # loader = loaders.xmlfile(get_path_of('notfound.html'))
+    bodyFactory = loaders.xmlfile(get_path_of('notfound.html'))
+    
+    def __init__(self, msg="Sorry, I could not find the requested resource."):
+        MaayPage.__init__(self)
+        self.msg = msg
+
+    def render_errormsg(self, context, data):
+        print "Rendering error msg", self.msg
+        return self.msg
+    
+    def renderHTTP_notFound(self, context):
+        """Render a not found message to the given request.
+        """
+        # XXX little trick (extends MaayPage, etc.)
+        return self.renderString(context)
+        # return self.loader.load(context)[0]
+
 class PeersList(MaayPage):
     """display list of registered peers"""
     bodyFactory = loaders.xmlfile(get_path_of('peers.html'))
@@ -194,10 +205,11 @@
         print "SearchForm distantfile"
         proxy = Proxy('http://%s:%s' % (host, port))
         d = proxy.callRemote('downloadFile', docid, words)
-        d.addCallback(self.foo, filename)
+        d.addCallback(self.gotDataBack, filename)
+        d.addErrback(self.onDownloadFileError, filename)
         return d
 
-    def foo(self, rpcFriendlyData, filename):
+    def gotDataBack(self, rpcFriendlyData, filename):
         fileData = rpcFriendlyData.data
         print " ... downloaded !"
         tmpdir = DownloadedDocs.makeTmpDir()
@@ -207,6 +219,10 @@
         f.close()
         return DistantFilePage(tmpdir, filepath)
 
+    def onDownloadFileError(self, error, filename):
+        msg = "Error while downloading file: %s" % (filename,)
+        return Maay404(msg)
+    
 class DistantFilePage(static.File):
     def __init__(self, tmpdir, filepath):
         static.File.__init__(self, filepath)
@@ -336,13 +352,15 @@
         # push local results once for all
         if len(inevow.IRemainingSegments(context)) < 2:
             print "-=" * 40
-            self.results = querier.findDocuments(self.query)
+            results = querier.findDocuments(self.query)
             webappConfig = INodeConfiguration(context)
             p2pQuery = P2pQuery(webappConfig.get_node_id(),
                                 webappConfig.rpcserver_port,
                                 self.query)
             self.queryId = p2pQuery.qid
             self.p2pQuery = p2pQuery
+            self.results = results
+            # self.results = self.querier.getQueryResults(self.queryId, offset=0)
             # self.querier.pushDocuments(self.queryId, self.results, provider=None)
         
     def onNewResults(self, provider, results):



From dnf at berlios.de  Tue Nov 15 00:33:06 2005
From: dnf at berlios.de (dnf at berlios.de)
Date: Tue, 15 Nov 2005 00:33:06 +0100
Subject: [Maay-svncheckins] r477 - in trunk/maay: . data
Message-ID: <200511142333.jAENX6ZP030019@sheep.berlios.de>

Author: dnf
Date: 2005-11-15 00:32:04 +0100 (Tue, 15 Nov 2005)
New Revision: 477

Modified:
   trunk/maay/data/footer.html
   trunk/maay/data/indexationpage.html
   trunk/maay/data/maay.css
   trunk/maay/p2pquerier.py
   trunk/maay/webapplication.py
Log:
- update indexation page (display private and public directories)
- p2pquerier.py : catch exception raised by os.getlogin() (return anonymous if fails)
- some web esthetic modifications



Modified: trunk/maay/data/footer.html
===================================================================
--- trunk/maay/data/footer.html	2005-11-14 22:16:43 UTC (rev 476)
+++ trunk/maay/data/footer.html	2005-11-14 23:32:04 UTC (rev 477)
@@ -4,7 +4,9 @@
   <hr/>
   <table width="100%">
     <tr>
-      <td valign="top"><small><a href="http://maay.netofpeers.net/">Maay Home page</a> </small></td>
+      <td valign="top"><a href="/" class="footlink">[Main&nbsp;page]</a></td>
+      <td valign="top" width="100%"><a href="/indexation" class="footlink">[Indexation&nbsp;Page]&nbsp;</a></td>
+      <td valign="top"><a href="http://maay.netofpeers.net/" class="footlink">[Maay&nbsp;Home&nbsp;page]</a></td>
       <td align="right"><img src="/images/logoFT.png" /></td>
     </tr>
   </table>

Modified: trunk/maay/data/indexationpage.html
===================================================================
--- trunk/maay/data/indexationpage.html	2005-11-14 22:16:43 UTC (rev 476)
+++ trunk/maay/data/indexationpage.html	2005-11-14 23:32:04 UTC (rev 477)
@@ -1,8 +1,36 @@
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
 <nevow:invisible xmlns="http://www.w3.org/1999/xhtml" lang="en" xmlns:nevow="http://nevow.com/ns/nevow/0.1">
-<h1>Indexation Page</h1>
-  <div class="message">"<span nevow:render="message" />"</div><br /><br />
-<a href="/indexation?start=1">Index now</a><br /><br />
-<a href="/">return to search page</a>
+<table>
+  <tr>
+    <td><a href="/"><img border="0" src="images/smallmaay.png" /></a></td>
+    <td><h1>Indexation Page</h1></td>
+  </tr>
+</table>
+  <br />
+  <div class="message"><b>Status: </b><span nevow:render="message" /></div>
+  <hr />
+  <h2>Private Directories</h2>
+  <h3>Indexed</h3>
+    <div nevow:render="sequence" nevow:data="indexedprivatedirectories">
+      <div class="indexedDirectoryName" nevow:pattern="item" nevow:render="directory"><nevow:slot name="name" /></div>
+    </div>
+  <h3>Skipped</h3>
+    <div nevow:render="sequence" nevow:data="skippedprivatedirectories">
+      <div class="skippedDirectoryName" nevow:pattern="item" nevow:render="directory"><nevow:slot name="name" /></div>
+    </div>
+  <h2>Public Directories</h2>
+  <h3>Indexed</h3>
+    <div nevow:render="sequence" nevow:data="indexedprivatedirectories">
+      <div class="indexedDirectoryName" nevow:pattern="item" nevow:render="directory"><nevow:slot name="name" /></div>
+    </div>
+    <h3>Skipped</h3>
+    <div nevow:render="sequence" nevow:data="skippedprivatedirectories">
+      <div class="skippedDirectoryName" nevow:pattern="item" nevow:render="directory"><nevow:slot name="name" /></div>
+    </div>
+  <hr />
+  <form action="/indexation" method="PUT">
+    <input type="hidden" name="start" value="1" />
+    <input type="submit" value="Index now" /> 
+  </form>
 </nevow:invisible>

Modified: trunk/maay/data/maay.css
===================================================================
--- trunk/maay/data/maay.css	2005-11-14 22:16:43 UTC (rev 476)
+++ trunk/maay/data/maay.css	2005-11-14 23:32:04 UTC (rev 477)
@@ -1,9 +1,17 @@
 body,td,div,.p,a{font-family:arial,sans-serif }
 
-h1 { font-family: arial,helvetica; font-size: 12pt; color: #000000; font-weight:bold }
+h1 { font-family: arial,helvetica; font-size: 14pt; color: #000000; font-weight:bold }
 h2 {  font-family: Arial, Helvetica, sans-serif; font-size: 12pt; font-style:italic ; font-weight: bold ; color: #444444}
 h3 {  font-family: Arial, Helvetica, sans-serif; font-size: 10pt; font-weight: bold; color: #888888}
 
+
+/** footer ********/
+a.footlink {
+  /* display: block; */
+  font-size: 70%;
+  color: #444444;
+}
+
 /** login page ********/
 table.loginTable {
   width: 100%;
@@ -39,8 +47,8 @@
   display: block;
 }
 
-.distantDocTitle {
-  /* display: block; */
+a.distantDocTitle {
+  display: block;
   background-color: yellow;
 }
 
@@ -87,6 +95,22 @@
   text-align: right;
 }
 
+
+/** indexation page *******/
+div.indexedDirectoryName {
+  font-size: 60%;
+  color: #448844; 
+  margin-left: 10px;
+}
+
+div.skippedDirectoryName {
+  font-size: 60%;
+  color: #884444; 
+  margin-left: 10px;
+}
+
+
+
 /** icon *******/
 div.text_html {
   /* display: block; */
@@ -132,3 +156,4 @@
   height: 16px;
   background: url(images/msword_icon.png);
 }
+

Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-14 22:16:43 UTC (rev 476)
+++ trunk/maay/p2pquerier.py	2005-11-14 23:32:04 UTC (rev 477)
@@ -294,7 +294,17 @@
             doc.text = untagText(removeSpace(abstract))
 
         # provider is a triple (login, IP, xmlrpc-port)
-        provider = (os.getlogin(),
+        # FIXME: method os.getlogin() raises an exception (under Linux).
+        # >>> os.getlogin()
+        # Traceback (most recent call last):
+        #   File "<stdin>", line 1, in ?
+        #   OSError: [Errno 2] No such file or directory
+        try:
+            login = os.getlogin()
+        except OSError:
+            login = "anonymous"
+
+        provider = (login,
                     socket.gethostbyname(socket.gethostname()),
                     P2pQuerier._ourRPCPort)
             

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-14 22:16:43 UTC (rev 476)
+++ trunk/maay/webapplication.py	2005-11-14 23:32:04 UTC (rev 477)
@@ -34,7 +34,7 @@
 from logilab.common.textutils import normalize_text
 
 from maay.querier import WEB_AVATARID
-from maay.configuration import get_path_of
+from maay.configuration import get_path_of, IndexerConfiguration
 from maay.texttool import makeAbstract, WORDS_RGX, normalizeText, boldifyText
 from maay.query import Query
 from maay.p2pquerier import P2pQuerier, P2pQuery
@@ -45,6 +45,15 @@
     """provide an interface in order to be able to remember webappconfig"""
 
 
+class Maay404(rend.FourOhFour):
+    """Maay specific resource for 404 errors"""
+    loader = loaders.xmlfile(get_path_of('notfound.html'))
+
+    def renderHTTP_notFound(self, context):
+        """Render a not found message to the given request.
+        """
+        return self.loader.load(context)[0]
+
 class MaayPage(rend.Page):
     docFactory = loaders.xmlfile(get_path_of('skeleton.html'))
     child_maaycss = static.File(get_path_of('maay.css'))
@@ -60,26 +69,6 @@
     def macro_footer(self, context):
         return loaders.xmlfile(get_path_of('footer.html'))
 
-class Maay404(MaayPage, rend.FourOhFour):
-    """Maay specific resource for 404 errors"""
-    # loader = loaders.xmlfile(get_path_of('notfound.html'))
-    bodyFactory = loaders.xmlfile(get_path_of('notfound.html'))
-    
-    def __init__(self, msg="Sorry, I could not find the requested resource."):
-        MaayPage.__init__(self)
-        self.msg = msg
-
-    def render_errormsg(self, context, data):
-        print "Rendering error msg", self.msg
-        return self.msg
-    
-    def renderHTTP_notFound(self, context):
-        """Render a not found message to the given request.
-        """
-        # XXX little trick (extends MaayPage, etc.)
-        return self.renderString(context)
-        # return self.loader.load(context)[0]
-
 class PeersList(MaayPage):
     """display list of registered peers"""
     bodyFactory = loaders.xmlfile(get_path_of('peers.html'))
@@ -205,11 +194,10 @@
         print "SearchForm distantfile"
         proxy = Proxy('http://%s:%s' % (host, port))
         d = proxy.callRemote('downloadFile', docid, words)
-        d.addCallback(self.gotDataBack, filename)
-        d.addErrback(self.onDownloadFileError, filename)
+        d.addCallback(self.foo, filename)
         return d
 
-    def gotDataBack(self, rpcFriendlyData, filename):
+    def foo(self, rpcFriendlyData, filename):
         fileData = rpcFriendlyData.data
         print " ... downloaded !"
         tmpdir = DownloadedDocs.makeTmpDir()
@@ -219,10 +207,6 @@
         f.close()
         return DistantFilePage(tmpdir, filepath)
 
-    def onDownloadFileError(self, error, filename):
-        msg = "Error while downloading file: %s" % (filename,)
-        return Maay404(msg)
-    
 class DistantFilePage(static.File):
     def __init__(self, tmpdir, filepath):
         static.File.__init__(self, filepath)
@@ -242,10 +226,38 @@
     def __init__(self, msg = "No message"):
         MaayPage.__init__(self)
         self._msg = msg
+        self.indexerConfig = IndexerConfiguration()
+        self.indexerConfig.load()
 
     def render_message(self, context, data):
         return self._msg
 
+    def data_indexedprivatedirectories(self, context, data):
+        if not self.indexerConfig.private_index_dir:
+            return ["No indexed private directory."]
+        return self.indexerConfig.private_index_dir
+
+    def data_skippedprivatedirectories(self, context, data):
+        if not self.indexerConfig.private_skip_dir:
+            return ["No skipped private directory."]
+        return self.indexerConfig.private_skip_dir
+
+    def data_indexedpublicdirectories(self, context, data):
+        if not self.indexerConfig.private_skip_dir:
+            return ["No indexed public directory."]
+        return self.indexerConfig.public_index_dir
+
+    def data_skippedpublicdirectories(self, context, data):
+        if not self.indexerConfig.public_skip_dir:
+            return ["No skipped public directory."]
+        return self.indexerConfig.public_skip_dir
+
+
+    def render_directory(self, context, name):
+        print "directory = %s" % name
+        context.fillSlots("name", name)
+        return context.tag
+
 class ResultsPageMixIn:
             
     def data_results(self, context, data):
@@ -256,12 +268,7 @@
 
     def render_title(self, context, data):
         localCount, distantCount = self.querier.countResults(self.queryId)
-        if self.onlyDistant:
-            resultsCount = distantCount
-        elif self.onlyLocal:
-            resultsCount = localCount
-        else:
-            resultsCount = localCount + distantCount
+        resultsCount = localCount + distantCount
         offset = self.query.offset
         context.fillSlots('words', self.query.joinwords(' ')) #WORDS
         context.fillSlots('start_result', offset + 1)
@@ -269,18 +276,6 @@
         context.fillSlots('count', resultsCount)
         return context.tag
 
-    def render_localcount(self, context, data):
-        localCount, _ = self.querier.countResults(self.queryId)
-        return localCount
-
-    def render_distantcount(self, context, data):
-        _, distantCount = self.querier.countResults(self.queryId)
-        return distantCount
-
-    def render_totalcount(self, context, data):
-        localCount, distantCount = self.querier.countResults(self.queryId)
-        return localCount + distantCount
-
     def render_searchfield(self, context, data):
         context.fillSlots('words', self.query.joinwords(' ')) #WORDS
         return context.tag
@@ -347,28 +342,21 @@
         self.p2pquerier = p2pquerier
         self.query = Query.fromContext(context)
         self.offset = self.query.offset
-        self.onlyLocal = False
-        self.onlyDistant = False
+        self.results = querier.findDocuments(self.query)
+        webappConfig = INodeConfiguration(context)
+        p2pQuery = P2pQuery(webappConfig.get_node_id(),
+                            webappConfig.rpcserver_port,
+                            self.query)
+        self.queryId = p2pQuery.qid
+        self.p2pQuery = p2pQuery
         # push local results once for all
-        if len(inevow.IRemainingSegments(context)) < 2:
-            print "-=" * 40
-            results = querier.findDocuments(self.query)
-            webappConfig = INodeConfiguration(context)
-            p2pQuery = P2pQuery(webappConfig.get_node_id(),
-                                webappConfig.rpcserver_port,
-                                self.query)
-            self.queryId = p2pQuery.qid
-            self.p2pQuery = p2pQuery
-            self.results = results
-            # self.results = self.querier.getQueryResults(self.queryId, offset=0)
-            # self.querier.pushDocuments(self.queryId, self.results, provider=None)
+        self.querier.pushDocuments(self.queryId, self.results, provider=None)
         
     def onNewResults(self, provider, results):
         results = [Document(**params) for params in results]
         self.querier.pushDocuments(self.queryId, results, provider)
-        results = self.querier.getQueryResults(self.queryId, offset=self.query.offset, onlyLocal=self.onlyLocal, onlyDistant=self.onlyDistant) # XXX limit ?
-        page = PleaseCloseYourEyes(results, self.querier, self.query, self.queryId,
-                                   self.onlyLocal, self.onlyDistant).renderSynchronously()
+        results = self.querier.getQueryResults(self.queryId, offset=self.query.offset) # XXX limit ?
+        page = PleaseCloseYourEyes(results, self.querier, self.query, self.queryId).renderSynchronously()
         page = unicode(page, 'utf-8')
         self.callRemote('updateResults', page)
 
@@ -379,31 +367,14 @@
         self.p2pquerier.addAnswerCallback(self.p2pQuery.qid, self.onNewResults)
         self.querier.pushDocuments(self.queryId, self.results, provider=None)
         return u''
-    
+
     def remote_browseResults(self, context, offset):
         self.query.offset = offset
-        results = self.querier.getQueryResults(self.queryId, offset=offset, onlyLocal=self.onlyLocal, onlyDistant=self.onlyDistant) # XXX limit ?
-        page = PleaseCloseYourEyes(results, self.querier, self.query, self.queryId,
-                                   self.onlyLocal, self.onlyDistant).renderSynchronously()
+        results = self.querier.getQueryResults(self.queryId, offset=offset) # XXX limit ?
+        page = PleaseCloseYourEyes(results, self.querier, self.query, self.queryId).renderSynchronously()
         page = unicode(page, 'utf-8')
         return page
 
-    def remote_setLocalFlag(self, context, flag):
-        self.onlyLocal = flag
-        self.onlyDistant = False
-        return self.remote_browseResults(context, self.query.offset)
-
-    def remote_setDistantFlag(self, context, flag):
-        self.onlyDistant = flag
-        self.onlyLocal = False
-        return self.remote_browseResults(context, self.query.offset)
-
-    def remote_unsetFlags(self, context):
-        self.onlyDistant = False
-        self.onlyLocal = False
-        return self.remote_browseResults(context, self.query.offset)
-    
-
 class PleaseCloseYourEyes(rend.Page, ResultsPageMixIn):
     """This resource and the way it is called is kind of ugly.
     It will be refactored later. The idea is to have something working
@@ -411,10 +382,7 @@
     """
     docFactory = loaders.xmlstr("""
   <div id="resultsDiv" xmlns="http://www.w3.org/1999/xhtml" xmlns:nevow="http://nevow.com/ns/nevow/0.1" >
-   <a href="javascript: onlyLocalResults();"><span nevow:render="localcount" /> local results</a><br/>
-   <a href="javascript: onlyDistantResults();"><span nevow:render="distantcount" /> distant results</a><br/>
-   <a href="javascript: allResults();"><span nevow:render="totalcount" /> results</a><br/>
-   <div class="message" nevow:render="title">Results <nevow:slot name="start_result" /> - <nevow:slot name="end_result" /> (<nevow:slot name="count" />) for <b><nevow:slot name="words" /></b>.</div>
+   <div class="message" nevow:render="title">Results <nevow:slot name="start_result" /> - <nevow:slot name="end_result" /> of <nevow:slot name="count" /> for <b><nevow:slot name="words" /></b>.</div>
    <div class="prevnext"><a><nevow:attr name="href"
     nevow:render="prevset_url"/>Previous</a> - <a><nevow:attr
     name="href" nevow:render="nextset_url"/>Next</a></div>
@@ -445,14 +413,11 @@
   </div>
     """)
     
-    def __init__(self, results, querier, query, queryId,
-                 onlyLocal=False, onlyDistant=False):
+    def __init__(self, results, querier, query, queryId):
         self.results = results
         self.querier = querier
         self.query = query
         self.queryId = queryId
-        self.onlyLocal = onlyLocal
-        self.onlyDistant = onlyDistant
 
     def render_peer(self, context, data):
         """:type data: Result"""



From dnf at berlios.de  Tue Nov 15 01:06:47 2005
From: dnf at berlios.de (dnf at berlios.de)
Date: Tue, 15 Nov 2005 01:06:47 +0100
Subject: [Maay-svncheckins] r478 - in trunk/maay: . data
Message-ID: <200511150006.jAF06laD013783@sheep.berlios.de>

Author: dnf
Date: 2005-11-15 01:06:18 +0100 (Tue, 15 Nov 2005)
New Revision: 478

Modified:
   trunk/maay/data/maay.css
   trunk/maay/webapplication.py
Log:
Merge with revision 476.



Modified: trunk/maay/data/maay.css
===================================================================
--- trunk/maay/data/maay.css	2005-11-14 23:32:04 UTC (rev 477)
+++ trunk/maay/data/maay.css	2005-11-15 00:06:18 UTC (rev 478)
@@ -48,7 +48,7 @@
 }
 
 a.distantDocTitle {
-  display: block;
+  /* display: block; */
   background-color: yellow;
 }
 

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-14 23:32:04 UTC (rev 477)
+++ trunk/maay/webapplication.py	2005-11-15 00:06:18 UTC (rev 478)
@@ -45,15 +45,6 @@
     """provide an interface in order to be able to remember webappconfig"""
 
 
-class Maay404(rend.FourOhFour):
-    """Maay specific resource for 404 errors"""
-    loader = loaders.xmlfile(get_path_of('notfound.html'))
-
-    def renderHTTP_notFound(self, context):
-        """Render a not found message to the given request.
-        """
-        return self.loader.load(context)[0]
-
 class MaayPage(rend.Page):
     docFactory = loaders.xmlfile(get_path_of('skeleton.html'))
     child_maaycss = static.File(get_path_of('maay.css'))
@@ -69,6 +60,26 @@
     def macro_footer(self, context):
         return loaders.xmlfile(get_path_of('footer.html'))
 
+class Maay404(MaayPage, rend.FourOhFour):
+    """Maay specific resource for 404 errors"""
+    # loader = loaders.xmlfile(get_path_of('notfound.html'))
+    bodyFactory = loaders.xmlfile(get_path_of('notfound.html'))
+    
+    def __init__(self, msg="Sorry, I could not find the requested resource."):
+        MaayPage.__init__(self)
+        self.msg = msg
+
+    def render_errormsg(self, context, data):
+        print "Rendering error msg", self.msg
+        return self.msg
+    
+    def renderHTTP_notFound(self, context):
+        """Render a not found message to the given request.
+        """
+        # XXX little trick (extends MaayPage, etc.)
+        return self.renderString(context)
+        # return self.loader.load(context)[0]
+
 class PeersList(MaayPage):
     """display list of registered peers"""
     bodyFactory = loaders.xmlfile(get_path_of('peers.html'))
@@ -194,10 +205,11 @@
         print "SearchForm distantfile"
         proxy = Proxy('http://%s:%s' % (host, port))
         d = proxy.callRemote('downloadFile', docid, words)
-        d.addCallback(self.foo, filename)
+        d.addCallback(self.gotDataBack, filename)
+        d.addErrback(self.onDownloadFileError, filename)
         return d
 
-    def foo(self, rpcFriendlyData, filename):
+    def gotDataBack(self, rpcFriendlyData, filename):
         fileData = rpcFriendlyData.data
         print " ... downloaded !"
         tmpdir = DownloadedDocs.makeTmpDir()
@@ -207,6 +219,10 @@
         f.close()
         return DistantFilePage(tmpdir, filepath)
 
+    def onDownloadFileError(self, error, filename):
+        msg = "Error while downloading file: %s" % (filename,)
+        return Maay404(msg)
+    
 class DistantFilePage(static.File):
     def __init__(self, tmpdir, filepath):
         static.File.__init__(self, filepath)
@@ -268,7 +284,12 @@
 
     def render_title(self, context, data):
         localCount, distantCount = self.querier.countResults(self.queryId)
-        resultsCount = localCount + distantCount
+        if self.onlyDistant:
+            resultsCount = distantCount
+        elif self.onlyLocal:
+            resultsCount = localCount
+        else:
+            resultsCount = localCount + distantCount
         offset = self.query.offset
         context.fillSlots('words', self.query.joinwords(' ')) #WORDS
         context.fillSlots('start_result', offset + 1)
@@ -276,6 +297,18 @@
         context.fillSlots('count', resultsCount)
         return context.tag
 
+    def render_localcount(self, context, data):
+        localCount, _ = self.querier.countResults(self.queryId)
+        return localCount
+
+    def render_distantcount(self, context, data):
+        _, distantCount = self.querier.countResults(self.queryId)
+        return distantCount
+
+    def render_totalcount(self, context, data):
+        localCount, distantCount = self.querier.countResults(self.queryId)
+        return localCount + distantCount
+
     def render_searchfield(self, context, data):
         context.fillSlots('words', self.query.joinwords(' ')) #WORDS
         return context.tag
@@ -342,21 +375,28 @@
         self.p2pquerier = p2pquerier
         self.query = Query.fromContext(context)
         self.offset = self.query.offset
-        self.results = querier.findDocuments(self.query)
-        webappConfig = INodeConfiguration(context)
-        p2pQuery = P2pQuery(webappConfig.get_node_id(),
-                            webappConfig.rpcserver_port,
-                            self.query)
-        self.queryId = p2pQuery.qid
-        self.p2pQuery = p2pQuery
+        self.onlyLocal = False
+        self.onlyDistant = False
         # push local results once for all
-        self.querier.pushDocuments(self.queryId, self.results, provider=None)
+        if len(inevow.IRemainingSegments(context)) < 2:
+            print "-=" * 40
+            results = querier.findDocuments(self.query)
+            webappConfig = INodeConfiguration(context)
+            p2pQuery = P2pQuery(webappConfig.get_node_id(),
+                                webappConfig.rpcserver_port,
+                                self.query)
+            self.queryId = p2pQuery.qid
+            self.p2pQuery = p2pQuery
+            self.results = results
+            # self.results = self.querier.getQueryResults(self.queryId, offset=0)
+            # self.querier.pushDocuments(self.queryId, self.results, provider=None)
         
     def onNewResults(self, provider, results):
         results = [Document(**params) for params in results]
         self.querier.pushDocuments(self.queryId, results, provider)
-        results = self.querier.getQueryResults(self.queryId, offset=self.query.offset) # XXX limit ?
-        page = PleaseCloseYourEyes(results, self.querier, self.query, self.queryId).renderSynchronously()
+        results = self.querier.getQueryResults(self.queryId, offset=self.query.offset, onlyLocal=self.onlyLocal, onlyDistant=self.onlyDistant) # XXX limit ?
+        page = PleaseCloseYourEyes(results, self.querier, self.query, self.queryId,
+                                   self.onlyLocal, self.onlyDistant).renderSynchronously()
         page = unicode(page, 'utf-8')
         self.callRemote('updateResults', page)
 
@@ -367,14 +407,31 @@
         self.p2pquerier.addAnswerCallback(self.p2pQuery.qid, self.onNewResults)
         self.querier.pushDocuments(self.queryId, self.results, provider=None)
         return u''
-
+    
     def remote_browseResults(self, context, offset):
         self.query.offset = offset
-        results = self.querier.getQueryResults(self.queryId, offset=offset) # XXX limit ?
-        page = PleaseCloseYourEyes(results, self.querier, self.query, self.queryId).renderSynchronously()
+        results = self.querier.getQueryResults(self.queryId, offset=offset, onlyLocal=self.onlyLocal, onlyDistant=self.onlyDistant) # XXX limit ?
+        page = PleaseCloseYourEyes(results, self.querier, self.query, self.queryId,
+                                   self.onlyLocal, self.onlyDistant).renderSynchronously()
         page = unicode(page, 'utf-8')
         return page
 
+    def remote_setLocalFlag(self, context, flag):
+        self.onlyLocal = flag
+        self.onlyDistant = False
+        return self.remote_browseResults(context, self.query.offset)
+
+    def remote_setDistantFlag(self, context, flag):
+        self.onlyDistant = flag
+        self.onlyLocal = False
+        return self.remote_browseResults(context, self.query.offset)
+
+    def remote_unsetFlags(self, context):
+        self.onlyDistant = False
+        self.onlyLocal = False
+        return self.remote_browseResults(context, self.query.offset)
+    
+
 class PleaseCloseYourEyes(rend.Page, ResultsPageMixIn):
     """This resource and the way it is called is kind of ugly.
     It will be refactored later. The idea is to have something working
@@ -382,7 +439,10 @@
     """
     docFactory = loaders.xmlstr("""
   <div id="resultsDiv" xmlns="http://www.w3.org/1999/xhtml" xmlns:nevow="http://nevow.com/ns/nevow/0.1" >
-   <div class="message" nevow:render="title">Results <nevow:slot name="start_result" /> - <nevow:slot name="end_result" /> of <nevow:slot name="count" /> for <b><nevow:slot name="words" /></b>.</div>
+   <a href="javascript: onlyLocalResults();"><span nevow:render="localcount" /> local results</a><br/>
+   <a href="javascript: onlyDistantResults();"><span nevow:render="distantcount" /> distant results</a><br/>
+   <a href="javascript: allResults();"><span nevow:render="totalcount" /> results</a><br/>
+   <div class="message" nevow:render="title">Results <b><nevow:slot name="start_result" /></b> - <b><nevow:slot name="end_result" /></b> of <b><nevow:slot name="count" /></b> for <b><nevow:slot name="words" /></b>.</div>
    <div class="prevnext"><a><nevow:attr name="href"
     nevow:render="prevset_url"/>Previous</a> - <a><nevow:attr
     name="href" nevow:render="nextset_url"/>Next</a></div>
@@ -413,11 +473,14 @@
   </div>
     """)
     
-    def __init__(self, results, querier, query, queryId):
+    def __init__(self, results, querier, query, queryId,
+                 onlyLocal=False, onlyDistant=False):
         self.results = results
         self.querier = querier
         self.query = query
         self.queryId = queryId
+        self.onlyLocal = onlyLocal
+        self.onlyDistant = onlyDistant
 
     def render_peer(self, context, data):
         """:type data: Result"""



From afayolle at berlios.de  Tue Nov 15 08:00:55 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Tue, 15 Nov 2005 08:00:55 +0100
Subject: [Maay-svncheckins] r479 - trunk/maay
Message-ID: <200511150700.jAF70tMp023500@sheep.berlios.de>

Author: afayolle
Date: 2005-11-15 08:00:43 +0100 (Tue, 15 Nov 2005)
New Revision: 479

Modified:
   trunk/maay/updateconfig.py
Log:
added autoconfiguration of presence server

Modified: trunk/maay/updateconfig.py
===================================================================
--- trunk/maay/updateconfig.py	2005-11-15 00:06:18 UTC (rev 478)
+++ trunk/maay/updateconfig.py	2005-11-15 07:00:43 UTC (rev 479)
@@ -15,6 +15,8 @@
 #     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
 
 """ helper to create the indexer.ini configuration file at install time on windows"""
+
+__revision__ = '$Id$'
 import os
 import sys
 
@@ -51,8 +53,9 @@
 user=maay
 password=maay
 presence-host=%(presence)s
-presence-port=2345
+presence-port=%(port)d
 """
+import socket
 
 def createConfigFile(myDesktop, myDocuments):
     f=open("indexer.ini", "w")
@@ -65,12 +68,29 @@
     f.close()
 
     f = open("node.ini", "w")
-    values = {'presence': get_presence_name()}
+    presence, port = probe_presence_config()
+    values = {'presence': presence,
+              'port': port}
     f.write(node_config % values)
     f.close()
 
-def get_presence_name():
-    for host in ('172.17.1.4', '192.168.74.105', )
+def probe_presence_config():
+    for addr in (('maay.rd.francetelecom.fr', 2345), # private FT server
+                 ('192.33.178.29', 2345), # public FT server
+                 ('172.17.1.4', 2345),    # private logilab server
+                 ('192.168.74.105', 2345),# private logilab server
+                 ):
+        print 'probing', addr
+        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
+        try:
+            s.connect(addr)
+            s.close()
+        except socket.error, exc:
+            continue
+        else:
+            return addr
+    return '192.33.178.29', 2345
+        
     
 if __name__ == '__main__':
     createConfigFile(sys.argv[1], sys.argv[2])



From afayolle at berlios.de  Tue Nov 15 08:22:11 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Tue, 15 Nov 2005 08:22:11 +0100
Subject: [Maay-svncheckins] r480 - in trunk: . maay maay/bin maay/test
Message-ID: <200511150722.jAF7MBW3028324@sheep.berlios.de>

Author: afayolle
Date: 2005-11-15 08:21:59 +0100 (Tue, 15 Nov 2005)
New Revision: 480

Added:
   trunk/COPYING
Modified:
   trunk/MANIFEST.in
   trunk/maay.iss
   trunk/maay/__init__.py
   trunk/maay/bin/maay-indexer
   trunk/maay/bin/maay-node
   trunk/maay/cleandb.py
   trunk/maay/configuration.py
   trunk/maay/converter.py
   trunk/maay/createdb.py
   trunk/maay/dbentity.py
   trunk/maay/dbstats.py
   trunk/maay/image.py
   trunk/maay/indexer.py
   trunk/maay/node.py
   trunk/maay/p2pquerier.py
   trunk/maay/presenceclient.py
   trunk/maay/presenceserver.py
   trunk/maay/querier.py
   trunk/maay/query.py
   trunk/maay/rpc.py
   trunk/maay/test/runtests.py
   trunk/maay/test/test_boilerplate.py
   trunk/maay/test/test_codecs.py
   trunk/maay/test/test_configuration.py
   trunk/maay/test/test_converter.py
   trunk/maay/test/test_dbentity.py
   trunk/maay/test/test_fileiteration.py
   trunk/maay/test/test_image.py
   trunk/maay/test/test_indexer.py
   trunk/maay/test/test_node.py
   trunk/maay/test/test_p2p.py
   trunk/maay/test/test_querier.py
   trunk/maay/test/test_query.py
   trunk/maay/test/test_rpc.py
   trunk/maay/test/test_texttool.py
   trunk/maay/texttool.py
   trunk/maay/updateconfig.py
   trunk/maay/webapplication.py
   trunk/maayservice.py
   trunk/setup.py
Log:
maay is licensed under LGPL

Added: trunk/COPYING
===================================================================
--- trunk/COPYING	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/COPYING	2005-11-15 07:21:59 UTC (rev 480)
@@ -0,0 +1,510 @@
+
+                  GNU LESSER GENERAL PUBLIC LICENSE
+                       Version 2.1, February 1999
+
+ Copyright (C) 1991, 1999 Free Software Foundation, Inc.
+	51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+[This is the first released version of the Lesser GPL.  It also counts
+ as the successor of the GNU Library Public License, version 2, hence
+ the version number 2.1.]
+
+                            Preamble
+
+  The licenses for most software are designed to take away your
+freedom to share and change it.  By contrast, the GNU General Public
+Licenses are intended to guarantee your freedom to share and change
+free software--to make sure the software is free for all its users.
+
+  This license, the Lesser General Public License, applies to some
+specially designated software packages--typically libraries--of the
+Free Software Foundation and other authors who decide to use it.  You
+can use it too, but we suggest you first think carefully about whether
+this license or the ordinary General Public License is the better
+strategy to use in any particular case, based on the explanations
+below.
+
+  When we speak of free software, we are referring to freedom of use,
+not price.  Our General Public Licenses are designed to make sure that
+you have the freedom to distribute copies of free software (and charge
+for this service if you wish); that you receive source code or can get
+it if you want it; that you can change the software and use pieces of
+it in new free programs; and that you are informed that you can do
+these things.
+
+  To protect your rights, we need to make restrictions that forbid
+distributors to deny you these rights or to ask you to surrender these
+rights.  These restrictions translate to certain responsibilities for
+you if you distribute copies of the library or if you modify it.
+
+  For example, if you distribute copies of the library, whether gratis
+or for a fee, you must give the recipients all the rights that we gave
+you.  You must make sure that they, too, receive or can get the source
+code.  If you link other code with the library, you must provide
+complete object files to the recipients, so that they can relink them
+with the library after making changes to the library and recompiling
+it.  And you must show them these terms so they know their rights.
+
+  We protect your rights with a two-step method: (1) we copyright the
+library, and (2) we offer you this license, which gives you legal
+permission to copy, distribute and/or modify the library.
+
+  To protect each distributor, we want to make it very clear that
+there is no warranty for the free library.  Also, if the library is
+modified by someone else and passed on, the recipients should know
+that what they have is not the original version, so that the original
+author's reputation will not be affected by problems that might be
+introduced by others.
+
+  Finally, software patents pose a constant threat to the existence of
+any free program.  We wish to make sure that a company cannot
+effectively restrict the users of a free program by obtaining a
+restrictive license from a patent holder.  Therefore, we insist that
+any patent license obtained for a version of the library must be
+consistent with the full freedom of use specified in this license.
+
+  Most GNU software, including some libraries, is covered by the
+ordinary GNU General Public License.  This license, the GNU Lesser
+General Public License, applies to certain designated libraries, and
+is quite different from the ordinary General Public License.  We use
+this license for certain libraries in order to permit linking those
+libraries into non-free programs.
+
+  When a program is linked with a library, whether statically or using
+a shared library, the combination of the two is legally speaking a
+combined work, a derivative of the original library.  The ordinary
+General Public License therefore permits such linking only if the
+entire combination fits its criteria of freedom.  The Lesser General
+Public License permits more lax criteria for linking other code with
+the library.
+
+  We call this license the "Lesser" General Public License because it
+does Less to protect the user's freedom than the ordinary General
+Public License.  It also provides other free software developers Less
+of an advantage over competing non-free programs.  These disadvantages
+are the reason we use the ordinary General Public License for many
+libraries.  However, the Lesser license provides advantages in certain
+special circumstances.
+
+  For example, on rare occasions, there may be a special need to
+encourage the widest possible use of a certain library, so that it
+becomes a de-facto standard.  To achieve this, non-free programs must
+be allowed to use the library.  A more frequent case is that a free
+library does the same job as widely used non-free libraries.  In this
+case, there is little to gain by limiting the free library to free
+software only, so we use the Lesser General Public License.
+
+  In other cases, permission to use a particular library in non-free
+programs enables a greater number of people to use a large body of
+free software.  For example, permission to use the GNU C Library in
+non-free programs enables many more people to use the whole GNU
+operating system, as well as its variant, the GNU/Linux operating
+system.
+
+  Although the Lesser General Public License is Less protective of the
+users' freedom, it does ensure that the user of a program that is
+linked with the Library has the freedom and the wherewithal to run
+that program using a modified version of the Library.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.  Pay close attention to the difference between a
+"work based on the library" and a "work that uses the library".  The
+former contains code derived from the library, whereas the latter must
+be combined with the library in order to run.
+
+                  GNU LESSER GENERAL PUBLIC LICENSE
+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+  0. This License Agreement applies to any software library or other
+program which contains a notice placed by the copyright holder or
+other authorized party saying it may be distributed under the terms of
+this Lesser General Public License (also called "this License").
+Each licensee is addressed as "you".
+
+  A "library" means a collection of software functions and/or data
+prepared so as to be conveniently linked with application programs
+(which use some of those functions and data) to form executables.
+
+  The "Library", below, refers to any such software library or work
+which has been distributed under these terms.  A "work based on the
+Library" means either the Library or any derivative work under
+copyright law: that is to say, a work containing the Library or a
+portion of it, either verbatim or with modifications and/or translated
+straightforwardly into another language.  (Hereinafter, translation is
+included without limitation in the term "modification".)
+
+  "Source code" for a work means the preferred form of the work for
+making modifications to it.  For a library, complete source code means
+all the source code for all modules it contains, plus any associated
+interface definition files, plus the scripts used to control
+compilation and installation of the library.
+
+  Activities other than copying, distribution and modification are not
+covered by this License; they are outside its scope.  The act of
+running a program using the Library is not restricted, and output from
+such a program is covered only if its contents constitute a work based
+on the Library (independent of the use of the Library in a tool for
+writing it).  Whether that is true depends on what the Library does
+and what the program that uses the Library does.
+
+  1. You may copy and distribute verbatim copies of the Library's
+complete source code as you receive it, in any medium, provided that
+you conspicuously and appropriately publish on each copy an
+appropriate copyright notice and disclaimer of warranty; keep intact
+all the notices that refer to this License and to the absence of any
+warranty; and distribute a copy of this License along with the
+Library.
+
+  You may charge a fee for the physical act of transferring a copy,
+and you may at your option offer warranty protection in exchange for a
+fee.
+
+  2. You may modify your copy or copies of the Library or any portion
+of it, thus forming a work based on the Library, and copy and
+distribute such modifications or work under the terms of Section 1
+above, provided that you also meet all of these conditions:
+
+    a) The modified work must itself be a software library.
+
+    b) You must cause the files modified to carry prominent notices
+    stating that you changed the files and the date of any change.
+
+    c) You must cause the whole of the work to be licensed at no
+    charge to all third parties under the terms of this License.
+
+    d) If a facility in the modified Library refers to a function or a
+    table of data to be supplied by an application program that uses
+    the facility, other than as an argument passed when the facility
+    is invoked, then you must make a good faith effort to ensure that,
+    in the event an application does not supply such function or
+    table, the facility still operates, and performs whatever part of
+    its purpose remains meaningful.
+
+    (For example, a function in a library to compute square roots has
+    a purpose that is entirely well-defined independent of the
+    application.  Therefore, Subsection 2d requires that any
+    application-supplied function or table used by this function must
+    be optional: if the application does not supply it, the square
+    root function must still compute square roots.)
+
+These requirements apply to the modified work as a whole.  If
+identifiable sections of that work are not derived from the Library,
+and can be reasonably considered independent and separate works in
+themselves, then this License, and its terms, do not apply to those
+sections when you distribute them as separate works.  But when you
+distribute the same sections as part of a whole which is a work based
+on the Library, the distribution of the whole must be on the terms of
+this License, whose permissions for other licensees extend to the
+entire whole, and thus to each and every part regardless of who wrote
+it.
+
+Thus, it is not the intent of this section to claim rights or contest
+your rights to work written entirely by you; rather, the intent is to
+exercise the right to control the distribution of derivative or
+collective works based on the Library.
+
+In addition, mere aggregation of another work not based on the Library
+with the Library (or with a work based on the Library) on a volume of
+a storage or distribution medium does not bring the other work under
+the scope of this License.
+
+  3. You may opt to apply the terms of the ordinary GNU General Public
+License instead of this License to a given copy of the Library.  To do
+this, you must alter all the notices that refer to this License, so
+that they refer to the ordinary GNU General Public License, version 2,
+instead of to this License.  (If a newer version than version 2 of the
+ordinary GNU General Public License has appeared, then you can specify
+that version instead if you wish.)  Do not make any other change in
+these notices.
+
+  Once this change is made in a given copy, it is irreversible for
+that copy, so the ordinary GNU General Public License applies to all
+subsequent copies and derivative works made from that copy.
+
+  This option is useful when you wish to copy part of the code of
+the Library into a program that is not a library.
+
+  4. You may copy and distribute the Library (or a portion or
+derivative of it, under Section 2) in object code or executable form
+under the terms of Sections 1 and 2 above provided that you accompany
+it with the complete corresponding machine-readable source code, which
+must be distributed under the terms of Sections 1 and 2 above on a
+medium customarily used for software interchange.
+
+  If distribution of object code is made by offering access to copy
+from a designated place, then offering equivalent access to copy the
+source code from the same place satisfies the requirement to
+distribute the source code, even though third parties are not
+compelled to copy the source along with the object code.
+
+  5. A program that contains no derivative of any portion of the
+Library, but is designed to work with the Library by being compiled or
+linked with it, is called a "work that uses the Library".  Such a
+work, in isolation, is not a derivative work of the Library, and
+therefore falls outside the scope of this License.
+
+  However, linking a "work that uses the Library" with the Library
+creates an executable that is a derivative of the Library (because it
+contains portions of the Library), rather than a "work that uses the
+library".  The executable is therefore covered by this License.
+Section 6 states terms for distribution of such executables.
+
+  When a "work that uses the Library" uses material from a header file
+that is part of the Library, the object code for the work may be a
+derivative work of the Library even though the source code is not.
+Whether this is true is especially significant if the work can be
+linked without the Library, or if the work is itself a library.  The
+threshold for this to be true is not precisely defined by law.
+
+  If such an object file uses only numerical parameters, data
+structure layouts and accessors, and small macros and small inline
+functions (ten lines or less in length), then the use of the object
+file is unrestricted, regardless of whether it is legally a derivative
+work.  (Executables containing this object code plus portions of the
+Library will still fall under Section 6.)
+
+  Otherwise, if the work is a derivative of the Library, you may
+distribute the object code for the work under the terms of Section 6.
+Any executables containing that work also fall under Section 6,
+whether or not they are linked directly with the Library itself.
+
+  6. As an exception to the Sections above, you may also combine or
+link a "work that uses the Library" with the Library to produce a
+work containing portions of the Library, and distribute that work
+under terms of your choice, provided that the terms permit
+modification of the work for the customer's own use and reverse
+engineering for debugging such modifications.
+
+  You must give prominent notice with each copy of the work that the
+Library is used in it and that the Library and its use are covered by
+this License.  You must supply a copy of this License.  If the work
+during execution displays copyright notices, you must include the
+copyright notice for the Library among them, as well as a reference
+directing the user to the copy of this License.  Also, you must do one
+of these things:
+
+    a) Accompany the work with the complete corresponding
+    machine-readable source code for the Library including whatever
+    changes were used in the work (which must be distributed under
+    Sections 1 and 2 above); and, if the work is an executable linked
+    with the Library, with the complete machine-readable "work that
+    uses the Library", as object code and/or source code, so that the
+    user can modify the Library and then relink to produce a modified
+    executable containing the modified Library.  (It is understood
+    that the user who changes the contents of definitions files in the
+    Library will not necessarily be able to recompile the application
+    to use the modified definitions.)
+
+    b) Use a suitable shared library mechanism for linking with the
+    Library.  A suitable mechanism is one that (1) uses at run time a
+    copy of the library already present on the user's computer system,
+    rather than copying library functions into the executable, and (2)
+    will operate properly with a modified version of the library, if
+    the user installs one, as long as the modified version is
+    interface-compatible with the version that the work was made with.
+
+    c) Accompany the work with a written offer, valid for at least
+    three years, to give the same user the materials specified in
+    Subsection 6a, above, for a charge no more than the cost of
+    performing this distribution.
+
+    d) If distribution of the work is made by offering access to copy
+    from a designated place, offer equivalent access to copy the above
+    specified materials from the same place.
+
+    e) Verify that the user has already received a copy of these
+    materials or that you have already sent this user a copy.
+
+  For an executable, the required form of the "work that uses the
+Library" must include any data and utility programs needed for
+reproducing the executable from it.  However, as a special exception,
+the materials to be distributed need not include anything that is
+normally distributed (in either source or binary form) with the major
+components (compiler, kernel, and so on) of the operating system on
+which the executable runs, unless that component itself accompanies
+the executable.
+
+  It may happen that this requirement contradicts the license
+restrictions of other proprietary libraries that do not normally
+accompany the operating system.  Such a contradiction means you cannot
+use both them and the Library together in an executable that you
+distribute.
+
+  7. You may place library facilities that are a work based on the
+Library side-by-side in a single library together with other library
+facilities not covered by this License, and distribute such a combined
+library, provided that the separate distribution of the work based on
+the Library and of the other library facilities is otherwise
+permitted, and provided that you do these two things:
+
+    a) Accompany the combined library with a copy of the same work
+    based on the Library, uncombined with any other library
+    facilities.  This must be distributed under the terms of the
+    Sections above.
+
+    b) Give prominent notice with the combined library of the fact
+    that part of it is a work based on the Library, and explaining
+    where to find the accompanying uncombined form of the same work.
+
+  8. You may not copy, modify, sublicense, link with, or distribute
+the Library except as expressly provided under this License.  Any
+attempt otherwise to copy, modify, sublicense, link with, or
+distribute the Library is void, and will automatically terminate your
+rights under this License.  However, parties who have received copies,
+or rights, from you under this License will not have their licenses
+terminated so long as such parties remain in full compliance.
+
+  9. You are not required to accept this License, since you have not
+signed it.  However, nothing else grants you permission to modify or
+distribute the Library or its derivative works.  These actions are
+prohibited by law if you do not accept this License.  Therefore, by
+modifying or distributing the Library (or any work based on the
+Library), you indicate your acceptance of this License to do so, and
+all its terms and conditions for copying, distributing or modifying
+the Library or works based on it.
+
+  10. Each time you redistribute the Library (or any work based on the
+Library), the recipient automatically receives a license from the
+original licensor to copy, distribute, link with or modify the Library
+subject to these terms and conditions.  You may not impose any further
+restrictions on the recipients' exercise of the rights granted herein.
+You are not responsible for enforcing compliance by third parties with
+this License.
+
+  11. If, as a consequence of a court judgment or allegation of patent
+infringement or for any other reason (not limited to patent issues),
+conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot
+distribute so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you
+may not distribute the Library at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Library by
+all those who receive copies directly or indirectly through you, then
+the only way you could satisfy both it and this License would be to
+refrain entirely from distribution of the Library.
+
+If any portion of this section is held invalid or unenforceable under
+any particular circumstance, the balance of the section is intended to
+apply, and the section as a whole is intended to apply in other
+circumstances.
+
+It is not the purpose of this section to induce you to infringe any
+patents or other property right claims or to contest validity of any
+such claims; this section has the sole purpose of protecting the
+integrity of the free software distribution system which is
+implemented by public license practices.  Many people have made
+generous contributions to the wide range of software distributed
+through that system in reliance on consistent application of that
+system; it is up to the author/donor to decide if he or she is willing
+to distribute software through any other system and a licensee cannot
+impose that choice.
+
+This section is intended to make thoroughly clear what is believed to
+be a consequence of the rest of this License.
+
+  12. If the distribution and/or use of the Library is restricted in
+certain countries either by patents or by copyrighted interfaces, the
+original copyright holder who places the Library under this License
+may add an explicit geographical distribution limitation excluding those
+countries, so that distribution is permitted only in or among
+countries not thus excluded.  In such case, this License incorporates
+the limitation as if written in the body of this License.
+
+  13. The Free Software Foundation may publish revised and/or new
+versions of the Lesser General Public License from time to time.
+Such new versions will be similar in spirit to the present version,
+but may differ in detail to address new problems or concerns.
+
+Each version is given a distinguishing version number.  If the Library
+specifies a version number of this License which applies to it and
+"any later version", you have the option of following the terms and
+conditions either of that version or of any later version published by
+the Free Software Foundation.  If the Library does not specify a
+license version number, you may choose any version ever published by
+the Free Software Foundation.
+
+  14. If you wish to incorporate parts of the Library into other free
+programs whose distribution conditions are incompatible with these,
+write to the author to ask for permission.  For software which is
+copyrighted by the Free Software Foundation, write to the Free
+Software Foundation; we sometimes make exceptions for this.  Our
+decision will be guided by the two goals of preserving the free status
+of all derivatives of our free software and of promoting the sharing
+and reuse of software generally.
+
+                            NO WARRANTY
+
+  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO
+WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.
+EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR
+OTHER PARTIES PROVIDE THE LIBRARY "AS IS" WITHOUT WARRANTY OF ANY
+KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE
+IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE
+LIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME
+THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
+
+  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN
+WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY
+AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU
+FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR
+CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE
+LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING
+RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A
+FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF
+SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
+DAMAGES.
+
+                     END OF TERMS AND CONDITIONS
+
+           How to Apply These Terms to Your New Libraries
+
+  If you develop a new library, and you want it to be of the greatest
+possible use to the public, we recommend making it free software that
+everyone can redistribute and change.  You can do so by permitting
+redistribution under these terms (or, alternatively, under the terms
+of the ordinary General Public License).
+
+  To apply these terms, attach the following notices to the library.
+It is safest to attach them to the start of each source file to most
+effectively convey the exclusion of warranty; and each file should
+have at least the "copyright" line and a pointer to where the full
+notice is found.
+
+
+    <one line to give the library's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) any later version.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+
+    You should have received a copy of the GNU Lesser General Public
+    License along with this library; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+
+Also add information on how to contact you by electronic and paper mail.
+
+You should also get your employer (if you work as a programmer) or
+your school, if any, to sign a "copyright disclaimer" for the library,
+if necessary.  Here is a sample; alter the names:
+
+  Yoyodyne, Inc., hereby disclaims all copyright interest in the
+  library `Frob' (a library for tweaking knobs) written by James
+  Random Hacker.
+
+  <signature of Ty Coon>, 1 April 1990
+  Ty Coon, President of Vice
+
+That's all there is to it!
+
+

Modified: trunk/MANIFEST.in
===================================================================
--- trunk/MANIFEST.in	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/MANIFEST.in	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,3 +1,4 @@
+# revision: $Id$
 recursive-include maay/test/ *.py *.txt *.txt.bz2 *.txt.gz *.xml *.html *.ini
 recursive-include maay/data/ *.html *.css *.gif *.png *.jpg *.ico
 recursive-include maay/sql *.sql

Modified: trunk/maay/__init__.py
===================================================================
--- trunk/maay/__init__.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/__init__.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 """MAAY project
 """

Modified: trunk/maay/bin/maay-indexer
===================================================================
--- trunk/maay/bin/maay-indexer	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/bin/maay-indexer	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,19 +1,22 @@
 #!/usr/bin/python
+
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 __revision__ = '$Id$'
 from maay.indexer import run

Modified: trunk/maay/bin/maay-node
===================================================================
--- trunk/maay/bin/maay-node	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/bin/maay-node	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,19 +1,22 @@
 #!/usr/bin/python
+
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 __revision__ = '$Id$'
 from maay.node import run

Modified: trunk/maay/cleandb.py
===================================================================
--- trunk/maay/cleandb.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/cleandb.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,19 +1,21 @@
 #!/usr/bin/python
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 """Utility script to clean the database. This forces full reindexation
 on the following indexer run

Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/configuration.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 """provides configuration (command line / config file) helpers for Maay"""
 

Modified: trunk/maay/converter.py
===================================================================
--- trunk/maay/converter.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/converter.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 """this module handles Converter Registry
 

Modified: trunk/maay/createdb.py
===================================================================
--- trunk/maay/createdb.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/createdb.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 """ helper to create the maay mysql instance on windows platform"""
 import os

Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/dbentity.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 """this module provides a simple document abstraction"""
 

Modified: trunk/maay/dbstats.py
===================================================================
--- trunk/maay/dbstats.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/dbstats.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,19 +1,22 @@
 #!/usr/bin/python
+
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 """Helper script to display how many rows are stored in the various maay tables on localhost"""
 

Modified: trunk/maay/image.py
===================================================================
--- trunk/maay/image.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/image.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,21 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+
 """Some utilities to manipulate images"""
 
 __revision__ = '$Id$'

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/indexer.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 """This module contains the indexer code.
 The indexer crawl files on disk, analyse the textual content

Modified: trunk/maay/node.py
===================================================================
--- trunk/maay/node.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/node.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 """Maay Node
 

Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/p2pquerier.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 """Management of distributed queries
 

Modified: trunk/maay/presenceclient.py
===================================================================
--- trunk/maay/presenceclient.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/presenceclient.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 from twisted.internet import reactor
 from twisted.internet.protocol import ClientCreator

Modified: trunk/maay/presenceserver.py
===================================================================
--- trunk/maay/presenceserver.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/presenceserver.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 """this module defines the central presence server.
 

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/querier.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,19 +1,21 @@
 # -*- coding: iso-8859-1 -*- 
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 """provides the MaayQuerier class"""
 

Modified: trunk/maay/query.py
===================================================================
--- trunk/maay/query.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/query.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 __revision__ = '$Id$'
 

Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/rpc.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,21 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+
 """
 This is the interface made available to the network, from a node.
 Protocol is XMLRPC, which provides :

Modified: trunk/maay/test/runtests.py
===================================================================
--- trunk/maay/test/runtests.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/test/runtests.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 from logilab.common.testlib import main
 

Modified: trunk/maay/test/test_boilerplate.py
===================================================================
--- trunk/maay/test/test_boilerplate.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/test/test_boilerplate.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 """unit tests for WRITEME
 

Modified: trunk/maay/test/test_codecs.py
===================================================================
--- trunk/maay/test/test_codecs.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/test/test_codecs.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,19 +1,21 @@
 # -*- coding: iso-8859-1 -*-
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 import unittest
 import codecs

Modified: trunk/maay/test/test_configuration.py
===================================================================
--- trunk/maay/test/test_configuration.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/test/test_configuration.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 """small unit tests for Configuration class"""
 

Modified: trunk/maay/test/test_converter.py
===================================================================
--- trunk/maay/test/test_converter.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/test/test_converter.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 """tests converters registry management"""
 

Modified: trunk/maay/test/test_dbentity.py
===================================================================
--- trunk/maay/test/test_dbentity.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/test/test_dbentity.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,19 +1,21 @@
 # -*- encoding: iso-8859-1 -*-
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 """querier test cases"""
 

Modified: trunk/maay/test/test_fileiteration.py
===================================================================
--- trunk/maay/test/test_fileiteration.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/test/test_fileiteration.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 """tests file iteration"""
 

Modified: trunk/maay/test/test_image.py
===================================================================
--- trunk/maay/test/test_image.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/test/test_image.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 """Module intended to test image.py"""
 

Modified: trunk/maay/test/test_indexer.py
===================================================================
--- trunk/maay/test/test_indexer.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/test/test_indexer.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 import unittest
 from  tempfile import mkstemp

Modified: trunk/maay/test/test_node.py
===================================================================
--- trunk/maay/test/test_node.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/test/test_node.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 import unittest
 import maay.node

Modified: trunk/maay/test/test_p2p.py
===================================================================
--- trunk/maay/test/test_p2p.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/test/test_p2p.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 """unit tests for P2P queries"""
 

Modified: trunk/maay/test/test_querier.py
===================================================================
--- trunk/maay/test/test_querier.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/test/test_querier.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,19 +1,21 @@
 # -*- coding: iso-8859-1 -*-
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 "querier test cases"""
 

Modified: trunk/maay/test/test_query.py
===================================================================
--- trunk/maay/test/test_query.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/test/test_query.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 import unittest
 

Modified: trunk/maay/test/test_rpc.py
===================================================================
--- trunk/maay/test/test_rpc.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/test/test_rpc.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 """unit tests for Maay's XMLRPC server
 

Modified: trunk/maay/test/test_texttool.py
===================================================================
--- trunk/maay/test/test_texttool.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/test/test_texttool.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,19 +1,21 @@
 # -*- coding: iso-8859-1 -*-
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 """unit tests for Text and HTML parsers"""
 

Modified: trunk/maay/texttool.py
===================================================================
--- trunk/maay/texttool.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/texttool.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,19 +1,21 @@
 # -*- coding: iso-8859-1 -*-
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 """this module provide text / parsing tools"""
 

Modified: trunk/maay/updateconfig.py
===================================================================
--- trunk/maay/updateconfig.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/updateconfig.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 """ helper to create the indexer.ini configuration file at install time on windows"""
 

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay/webapplication.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 
 """maay local web UI script"""

Modified: trunk/maay.iss
===================================================================
--- trunk/maay.iss	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maay.iss	2005-11-15 07:21:59 UTC (rev 480)
@@ -6,13 +6,13 @@
 
 [Setup]
 AppName=Maay
-AppVerName=Maay snapshot 2005-10-07
+AppVerName=Maay-0.2
 DefaultDirName={pf}\Maay
 DefaultGroupName=Maay
 UninstallDisplayIcon={app}\maay_node.exe
 Compression=bzip
 SolidCompression=yes
-LicenseFile=thirdparty\mysql\COPYING.txt
+LicenseFile=COPYING
 ; Require 50 MB for the database files. We can tune this later.
 ExtraDiskSpaceRequired=50000000
 ; Win9x is not supported

Modified: trunk/maayservice.py
===================================================================
--- trunk/maayservice.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/maayservice.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 import win32serviceutil
 import win32service

Modified: trunk/setup.py
===================================================================
--- trunk/setup.py	2005-11-15 07:00:43 UTC (rev 479)
+++ trunk/setup.py	2005-11-15 07:21:59 UTC (rev 480)
@@ -1,18 +1,20 @@
+#     Maay : a network of peers for document search
+#
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
 #
-#     This program is distributed in the hope that it will be useful,
+#     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
 #
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 
 __revision__ = "$Id$"
@@ -20,7 +22,7 @@
 import sys
 from glob import glob
 
-version = '0.1.0'
+version = '0.2.0'
 author = "France Telecom R&D and Logilab"
 author_email = "maay-dev at lists.berlios.de"
 copyright = "Copyright (c)2004-2005 France Telecom R&D"



From afayolle at berlios.de  Tue Nov 15 09:10:57 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Tue, 15 Nov 2005 09:10:57 +0100
Subject: [Maay-svncheckins] r481 - in trunk: . maay maay/test
Message-ID: <200511150810.jAF8AvfK008339@sheep.berlios.de>

Author: afayolle
Date: 2005-11-15 09:10:46 +0100 (Tue, 15 Nov 2005)
New Revision: 481

Modified:
   trunk/MANIFEST.in
   trunk/maay/cleandb.py
   trunk/maay/createdb.py
   trunk/maay/dbentity.py
   trunk/maay/dbstats.py
   trunk/maay/image.py
   trunk/maay/p2pquerier.py
   trunk/maay/presenceclient.py
   trunk/maay/query.py
   trunk/maay/rpc.py
   trunk/maay/test/runtests.py
   trunk/maay/test/test_boilerplate.py
   trunk/maay/test/test_codecs.py
   trunk/maay/test/test_configuration.py
   trunk/maay/test/test_dbentity.py
   trunk/maay/test/test_image.py
   trunk/maay/test/test_indexer.py
   trunk/maay/test/test_node.py
   trunk/maay/test/test_p2p.py
   trunk/maay/test/test_querier.py
   trunk/maay/test/test_query.py
   trunk/maay/test/test_texttool.py
   trunk/maay/updateconfig.py
   trunk/maay/webapplication.py
   trunk/maayservice.py
   trunk/setup.py
Log:
added __revision__ marker, and set some props

Modified: trunk/MANIFEST.in
===================================================================
--- trunk/MANIFEST.in	2005-11-15 07:21:59 UTC (rev 480)
+++ trunk/MANIFEST.in	2005-11-15 08:10:46 UTC (rev 481)
@@ -1,8 +1,8 @@
-# revision: $Id$
-recursive-include maay/test/ *.py *.txt *.txt.bz2 *.txt.gz *.xml *.html *.ini
-recursive-include maay/data/ *.html *.css *.gif *.png *.jpg *.ico
-recursive-include maay/sql *.sql
-include maay/bin/maay-server
-include maay/bin/maay-indexer
-include ReleaseNotes
-include ChangeLog
+# revision: $Id$
+recursive-include maay/test/ *.py *.txt *.txt.bz2 *.txt.gz *.xml *.html *.ini
+recursive-include maay/data/ *.html *.css *.gif *.png *.jpg *.ico
+recursive-include maay/sql *.sql
+include maay/bin/maay-server
+include maay/bin/maay-indexer
+include ReleaseNotes
+include ChangeLog


Property changes on: trunk/MANIFEST.in
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Modified: trunk/maay/cleandb.py
===================================================================
--- trunk/maay/cleandb.py	2005-11-15 07:21:59 UTC (rev 480)
+++ trunk/maay/cleandb.py	2005-11-15 08:10:46 UTC (rev 481)
@@ -20,6 +20,7 @@
 """Utility script to clean the database. This forces full reindexation
 on the following indexer run
 """
+__revision__ = '$Id$'
 
 from maay.indexer import IndexerConfiguration
 from logilab.common.db import get_dbapi_compliant_module

Modified: trunk/maay/createdb.py
===================================================================
--- trunk/maay/createdb.py	2005-11-15 07:21:59 UTC (rev 480)
+++ trunk/maay/createdb.py	2005-11-15 08:10:46 UTC (rev 481)
@@ -17,6 +17,9 @@
 #     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 """ helper to create the maay mysql instance on windows platform"""
+
+__revision__ = '$Id$'
+
 import os
 
 def do_delete():

Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-15 07:21:59 UTC (rev 480)
+++ trunk/maay/dbentity.py	2005-11-15 08:10:46 UTC (rev 481)
@@ -19,6 +19,7 @@
 """this module provides a simple document abstraction"""
 
 __revision__ = '$Id$'
+
 __all__ = ['Document', 'FileInfo', 'DocumentProvider', 'DocumentScore',
            'Word', 'Node', 'NodeInterest', 'Result']
 

Modified: trunk/maay/dbstats.py
===================================================================
--- trunk/maay/dbstats.py	2005-11-15 07:21:59 UTC (rev 480)
+++ trunk/maay/dbstats.py	2005-11-15 08:10:46 UTC (rev 481)
@@ -18,8 +18,11 @@
 #     License along with this library; if not, write to the Free Software
 #     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
-"""Helper script to display how many rows are stored in the various maay tables on localhost"""
+"""Helper script to display how many rows are stored in the various
+maay tables on localhost"""
 
+__revision__ = '$Id$'
+
 from MySQLdb import connect
 from pylab import hist, show
 


Property changes on: trunk/maay/image.py
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native


Property changes on: trunk/maay/p2pquerier.py
___________________________________________________________________
Name: svn:keywords
   - "Id"
   + Id

Modified: trunk/maay/presenceclient.py
===================================================================
--- trunk/maay/presenceclient.py	2005-11-15 07:21:59 UTC (rev 480)
+++ trunk/maay/presenceclient.py	2005-11-15 08:10:46 UTC (rev 481)
@@ -16,6 +16,8 @@
 #     License along with this library; if not, write to the Free Software
 #     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
+__revision__ = '$Id$'
+
 from twisted.internet import reactor
 from twisted.internet.protocol import ClientCreator
 from twisted.protocols.basic import LineReceiver


Property changes on: trunk/maay/query.py
___________________________________________________________________
Name: svn:keywords
   - "Id"
   + Id

Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-15 07:21:59 UTC (rev 480)
+++ trunk/maay/rpc.py	2005-11-15 08:10:46 UTC (rev 481)
@@ -25,7 +25,7 @@
 - to the peers : [distributedQuery, distributedQueryAnswer]               
 """
 
-__revision__ = ''
+__revision__ = '$Id$'
 
 from time import time
 from random import randint

Modified: trunk/maay/test/runtests.py
===================================================================
--- trunk/maay/test/runtests.py	2005-11-15 07:21:59 UTC (rev 480)
+++ trunk/maay/test/runtests.py	2005-11-15 08:10:46 UTC (rev 481)
@@ -16,6 +16,8 @@
 #     License along with this library; if not, write to the Free Software
 #     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
+__revision__ = '$Id$'
+
 from logilab.common.testlib import main
 
 if __name__ == '__main__':


Property changes on: trunk/maay/test/test_boilerplate.py
___________________________________________________________________
Name: svn:keywords
   - "Id"
   + Id

Modified: trunk/maay/test/test_codecs.py
===================================================================
--- trunk/maay/test/test_codecs.py	2005-11-15 07:21:59 UTC (rev 480)
+++ trunk/maay/test/test_codecs.py	2005-11-15 08:10:46 UTC (rev 481)
@@ -17,6 +17,8 @@
 #     License along with this library; if not, write to the Free Software
 #     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
+__revision__ = '$Id$'
+
 import unittest
 import codecs
 import gzip

Modified: trunk/maay/test/test_configuration.py
===================================================================
--- trunk/maay/test/test_configuration.py	2005-11-15 07:21:59 UTC (rev 480)
+++ trunk/maay/test/test_configuration.py	2005-11-15 08:10:46 UTC (rev 481)
@@ -18,6 +18,8 @@
 
 """small unit tests for Configuration class"""
 
+__revision__ = '$Id$'
+
 import unittest
 import sys
 import os

Modified: trunk/maay/test/test_dbentity.py
===================================================================
--- trunk/maay/test/test_dbentity.py	2005-11-15 07:21:59 UTC (rev 480)
+++ trunk/maay/test/test_dbentity.py	2005-11-15 08:10:46 UTC (rev 481)
@@ -19,6 +19,8 @@
 
 """querier test cases"""
 
+__revision__ = '$Id$'
+
 import unittest
 from mimetypes import guess_type
 


Property changes on: trunk/maay/test/test_image.py
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Modified: trunk/maay/test/test_indexer.py
===================================================================
--- trunk/maay/test/test_indexer.py	2005-11-15 07:21:59 UTC (rev 480)
+++ trunk/maay/test/test_indexer.py	2005-11-15 08:10:46 UTC (rev 481)
@@ -16,6 +16,8 @@
 #     License along with this library; if not, write to the Free Software
 #     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
+__revision__ = '$Id$'
+
 import unittest
 from  tempfile import mkstemp
 import os

Modified: trunk/maay/test/test_node.py
===================================================================
--- trunk/maay/test/test_node.py	2005-11-15 07:21:59 UTC (rev 480)
+++ trunk/maay/test/test_node.py	2005-11-15 08:10:46 UTC (rev 481)
@@ -16,6 +16,8 @@
 #     License along with this library; if not, write to the Free Software
 #     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
+__revision__ = '$Id$'
+
 import unittest
 import maay.node
 


Property changes on: trunk/maay/test/test_p2p.py
___________________________________________________________________
Name: svn:keywords
   - "Id"
   + Id

Modified: trunk/maay/test/test_querier.py
===================================================================
--- trunk/maay/test/test_querier.py	2005-11-15 07:21:59 UTC (rev 480)
+++ trunk/maay/test/test_querier.py	2005-11-15 08:10:46 UTC (rev 481)
@@ -19,7 +19,7 @@
 
 "querier test cases"""
 
-__revision__ = ''
+__revision__ = '$Id$'
 
 import unittest
 import sha

Modified: trunk/maay/test/test_query.py
===================================================================
--- trunk/maay/test/test_query.py	2005-11-15 07:21:59 UTC (rev 480)
+++ trunk/maay/test/test_query.py	2005-11-15 08:10:46 UTC (rev 481)
@@ -16,6 +16,8 @@
 #     License along with this library; if not, write to the Free Software
 #     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
+__revision__ = '$Id$'
+
 import unittest
 
 from maay.query import Query


Property changes on: trunk/maay/test/test_query.py
___________________________________________________________________
Name: svn:keywords
   - "Id"
   + Id

Modified: trunk/maay/test/test_texttool.py
===================================================================
--- trunk/maay/test/test_texttool.py	2005-11-15 07:21:59 UTC (rev 480)
+++ trunk/maay/test/test_texttool.py	2005-11-15 08:10:46 UTC (rev 481)
@@ -19,6 +19,7 @@
 
 """unit tests for Text and HTML parsers"""
 
+__revision__ = '$Id$'
 
 
 import unittest

Modified: trunk/maay/updateconfig.py
===================================================================
--- trunk/maay/updateconfig.py	2005-11-15 07:21:59 UTC (rev 480)
+++ trunk/maay/updateconfig.py	2005-11-15 08:10:46 UTC (rev 481)
@@ -1,99 +1,99 @@
-#     Maay : a network of peers for document search
-#
-#     Copyright (C) 2005 France Telecom R&D
-#
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-
-""" helper to create the indexer.ini configuration file at install time on windows"""
-
-__revision__ = '$Id$'
-import os
-import sys
-
-indexer_config = """[INDEXER]
-# Host on which the maay node is running
-host=localhost
-#Port on which the maay node is listening
-port=6789
-
-# User login on the maay node 
-user=maay
-# User password on the maay node
-password=maay
-
-# Which directories are to be indexed
-#  - private indexed directories are not available to  queries from other nodes
-#  - public indexed directories are available to these queries
-#  - skip dirs are not indexed
-#
-# If a document is available through both a public and a private directory, 
-# the public version prevails
-#
-# You can use a comma separated list of values to specify several
-# directories in each configuration variable. 
-private-index-dir=%(private)s
-private-skip-dir=%(private_skip)s
-public-index-dir=%(public)s
-public-skip-dir=%(public_skip)s
-"""
-
-node_config = """[NODE]
-db-name=maay
-db-host=localhost
-user=maay
-password=maay
-presence-host=%(presence)s
-presence-port=%(port)d
-"""
-import socket
-
-def createConfigFile(myDesktop, myDocuments):
-    f=open("indexer.ini", "w")
-    values = {'private'     : '%s,%s' % (myDesktop, myDocuments),
-              'private_skip': '',
-              'public'      : '%s\\Maay Documents' % myDesktop,
-              'public_skip' : '',
-              }
-    f.write(indexer_config % values)
-    f.close()
-
-    f = open("node.ini", "w")
-    presence, port = probe_presence_config()
-    values = {'presence': presence,
-              'port': port}
-    f.write(node_config % values)
-    f.close()
-
-def probe_presence_config():
-    for addr in (('maay.rd.francetelecom.fr', 2345), # private FT server
-                 ('192.33.178.29', 2345), # public FT server
-                 ('172.17.1.4', 2345),    # private logilab server
-                 ('192.168.74.105', 2345),# private logilab server
-                 ):
-        print 'probing', addr
-        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
-        try:
-            s.connect(addr)
-            s.close()
-        except socket.error, exc:
-            continue
-        else:
-            return addr
-    return '192.33.178.29', 2345
-        
-    
-if __name__ == '__main__':
-    createConfigFile(sys.argv[1], sys.argv[2])
-	
+#     Maay : a network of peers for document search
+#
+#     Copyright (C) 2005 France Telecom R&D
+#
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
+#
+#     This library is distributed in the hope that it will be useful,
+#     but WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
+#
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+
+""" helper to create the indexer.ini configuration file at install time on windows"""
+
+__revision__ = '$Id$'
+import os
+import sys
+
+indexer_config = """[INDEXER]
+# Host on which the maay node is running
+host=localhost
+#Port on which the maay node is listening
+port=6789
+
+# User login on the maay node 
+user=maay
+# User password on the maay node
+password=maay
+
+# Which directories are to be indexed
+#  - private indexed directories are not available to  queries from other nodes
+#  - public indexed directories are available to these queries
+#  - skip dirs are not indexed
+#
+# If a document is available through both a public and a private directory, 
+# the public version prevails
+#
+# You can use a comma separated list of values to specify several
+# directories in each configuration variable. 
+private-index-dir=%(private)s
+private-skip-dir=%(private_skip)s
+public-index-dir=%(public)s
+public-skip-dir=%(public_skip)s
+"""
+
+node_config = """[NODE]
+db-name=maay
+db-host=localhost
+user=maay
+password=maay
+presence-host=%(presence)s
+presence-port=%(port)d
+"""
+import socket
+
+def createConfigFile(myDesktop, myDocuments):
+    f=open("indexer.ini", "w")
+    values = {'private'     : '%s,%s' % (myDesktop, myDocuments),
+              'private_skip': '',
+              'public'      : '%s\\Maay Documents' % myDesktop,
+              'public_skip' : '',
+              }
+    f.write(indexer_config % values)
+    f.close()
+
+    f = open("node.ini", "w")
+    presence, port = probe_presence_config()
+    values = {'presence': presence,
+              'port': port}
+    f.write(node_config % values)
+    f.close()
+
+def probe_presence_config():
+    for addr in (('maay.rd.francetelecom.fr', 2345), # private FT server
+                 ('192.33.178.29', 2345), # public FT server
+                 ('172.17.1.4', 2345),    # private logilab server
+                 ('192.168.74.105', 2345),# private logilab server
+                 ):
+        print 'probing', addr
+        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
+        try:
+            s.connect(addr)
+            s.close()
+        except socket.error, exc:
+            continue
+        else:
+            return addr
+    return '192.33.178.29', 2345
+        
+    
+if __name__ == '__main__':
+    createConfigFile(sys.argv[1], sys.argv[2])
+	


Property changes on: trunk/maay/updateconfig.py
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-15 07:21:59 UTC (rev 480)
+++ trunk/maay/webapplication.py	2005-11-15 08:10:46 UTC (rev 481)
@@ -19,7 +19,7 @@
 
 """maay local web UI script"""
 
-__revision__ = '$Id: server.py 281 2005-11-03 11:00:56Z aurelienc $'
+__revision__ = '$Id$'
 
 from datetime import datetime
 #from xmlrpclib import ServerProxy


Property changes on: trunk/maay/webapplication.py
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Modified: trunk/maayservice.py
===================================================================
--- trunk/maayservice.py	2005-11-15 07:21:59 UTC (rev 480)
+++ trunk/maayservice.py	2005-11-15 08:10:46 UTC (rev 481)
@@ -1,57 +1,59 @@
-#     Maay : a network of peers for document search
-#
-#     Copyright (C) 2005 France Telecom R&D
-#
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-
-import win32serviceutil
-import win32service
-import win32event
-import win32evtlogutil
-
-from twisted.internet import reactor
-
-class MyService(win32serviceutil.ServiceFramework):
-    _svc_name_ = "Maay"
-    _svc_display_name_ = "Maay"
-    _svc_deps_ = ["EventLog"]
-    def __init__(self, args):
-        win32serviceutil.ServiceFramework.__init__(self, args)
-
-    def SvcStop(self):
-        self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)
-        reactor.stop()
-
-    def SvcDoRun(self):
-        import servicemanager
-        from maay.node import run
-        win32evtlogutil.ReportEvent(self._svc_name_,
-                                    servicemanager.PYS_SERVICE_STARTED,
-                                    0, # category
-                                    servicemanager.EVENTLOG_INFORMATION_TYPE,
-                                    (self._svc_name_, ''))
-
-        run()
-        # and write a 'stopped' event to the event log.
-        win32evtlogutil.ReportEvent(self._svc_name_,
-                                    servicemanager.PYS_SERVICE_STOPPED,
-                                    0, # category
-                                    servicemanager.EVENTLOG_INFORMATION_TYPE,
-                                    (self._svc_name_, ''))
-
-
-if __name__ == '__main__':
-    # Note that this code will not be run in the 'frozen' exe-file!!!
-    win32serviceutil.HandleCommandLine(MyService)
+#     Maay : a network of peers for document search
+#
+#     Copyright (C) 2005 France Telecom R&D
+#
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
+#
+#     This library is distributed in the hope that it will be useful,
+#     but WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
+#
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+
+__revision__ = '$Id$'
+
+import win32serviceutil
+import win32service
+import win32event
+import win32evtlogutil
+
+from twisted.internet import reactor
+
+class MyService(win32serviceutil.ServiceFramework):
+    _svc_name_ = "Maay"
+    _svc_display_name_ = "Maay"
+    _svc_deps_ = ["EventLog"]
+    def __init__(self, args):
+        win32serviceutil.ServiceFramework.__init__(self, args)
+
+    def SvcStop(self):
+        self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)
+        reactor.stop()
+
+    def SvcDoRun(self):
+        import servicemanager
+        from maay.node import run
+        win32evtlogutil.ReportEvent(self._svc_name_,
+                                    servicemanager.PYS_SERVICE_STARTED,
+                                    0, # category
+                                    servicemanager.EVENTLOG_INFORMATION_TYPE,
+                                    (self._svc_name_, ''))
+
+        run()
+        # and write a 'stopped' event to the event log.
+        win32evtlogutil.ReportEvent(self._svc_name_,
+                                    servicemanager.PYS_SERVICE_STOPPED,
+                                    0, # category
+                                    servicemanager.EVENTLOG_INFORMATION_TYPE,
+                                    (self._svc_name_, ''))
+
+
+if __name__ == '__main__':
+    # Note that this code will not be run in the 'frozen' exe-file!!!
+    win32serviceutil.HandleCommandLine(MyService)


Property changes on: trunk/maayservice.py
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Modified: trunk/setup.py
===================================================================
--- trunk/setup.py	2005-11-15 07:21:59 UTC (rev 480)
+++ trunk/setup.py	2005-11-15 08:10:46 UTC (rev 481)
@@ -1,93 +1,94 @@
-#     Maay : a network of peers for document search
-#
-#     Copyright (C) 2005 France Telecom R&D
-#
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-
-
-__revision__ = "$Id$"
-from distutils.core import setup
-import sys
-from glob import glob
-
-version = '0.2.0'
-author = "France Telecom R&D and Logilab"
-author_email = "maay-dev at lists.berlios.de"
-copyright = "Copyright (c)2004-2005 France Telecom R&D"
-description = "a network of peers for document search"
-name = "Maay"
-url = "http://maay.netofpeers.net/"
-packages = ['maay']
-data_files = [('maay/data', glob('maay/data/*')+glob('maay/data/images/*')),
-                  ('maay/sql', glob('maay/sql/*.sql')),]
-scripts = ['maay/bin/maay-node', 'maay/bin/maay-indexer']
-
-
-class Target:
-    def __init__(self, **kw):
-        self.__dict__.update(kw)
-        
-maay_node = Target(description = "The maay server application",
-			    icon_resources=[(1,  "maay/data/images/maay.ico"),],
-			    script = 'maay/node.py',
-                            includes = ["MySQLdb"],
-			    dest_base = "maay_node")
-maay_indexer = Target(description = "The maay indexer application (CLI)",
-			    icon_resources=[(1,  "maay/data/images/maay.ico"),],
-			    script = 'maay/indexer.py',
-			    dest_base = "maay_indexer")
-createdb = Target(description = "Database creation utility",
-			    script = 'maay/createdb.py',
-			    dest_base = "createdb")
-
-updateConfig = Target(description = "Configuration update program",
-			    script = 'maay/updateconfig.py',
-			    dest_base = "updateconfig")
-
-maay_service = Target(description = "The Maay service",
-                      modules = ["maayservice"],
-                      dest_base = "Maay")
-
-if sys.platform == 'win32':
-	import py2exe
-        if len(sys.argv) == 1:
-            sys.argv.append('py2exe')
-            
-        
-	setup(console = [maay_node, maay_indexer,
-                         createdb, updateConfig],
-              service = [maay_service],
-		name = name,
-		version = version,
-		description = description,
-		author = author,
-                author_email = author_email,
-		copyright = copyright,
-		url = url
-                )
-
-else:
-	setup(
-		name = name,
-		version = version,
-		author = author,
-                author_email = author_email,
-#		copyright = copyright,
-		description = description,
-		url = url,
-		data_files = data_files,
-		packages = packages,
-                scripts = scripts
-                )
+#     Maay : a network of peers for document search
+#
+#     Copyright (C) 2005 France Telecom R&D
+#
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
+#
+#     This library is distributed in the hope that it will be useful,
+#     but WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
+#
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+
+
+__revision__ = "$Id$"
+
+from distutils.core import setup
+import sys
+from glob import glob
+
+version = '0.2.0'
+author = "France Telecom R&D"
+author_email = "maay-dev at lists.berlios.de"
+copyright = "Copyright (c)2004-2005 France Telecom R&D"
+description = "a network of peers for document search"
+name = "Maay"
+url = "http://maay.netofpeers.net/"
+packages = ['maay']
+data_files = [('maay/data', glob('maay/data/*')+glob('maay/data/images/*')),
+              ('maay/sql', glob('maay/sql/*.sql')),]
+scripts = ['maay/bin/maay-node', 'maay/bin/maay-indexer']
+
+
+class Target:
+    def __init__(self, **kw):
+        self.__dict__.update(kw)
+        
+maay_node = Target(description = "The maay server application",
+			    icon_resources=[(1,  "maay/data/images/maay.ico"),],
+			    script = 'maay/node.py',
+                            includes = ["MySQLdb"],
+			    dest_base = "maay_node")
+maay_indexer = Target(description = "The maay indexer application (CLI)",
+			    icon_resources=[(1,  "maay/data/images/maay.ico"),],
+			    script = 'maay/indexer.py',
+			    dest_base = "maay_indexer")
+createdb = Target(description = "Database creation utility",
+			    script = 'maay/createdb.py',
+			    dest_base = "createdb")
+
+updateConfig = Target(description = "Configuration update program",
+			    script = 'maay/updateconfig.py',
+			    dest_base = "updateconfig")
+
+maay_service = Target(description = "The Maay service",
+                      modules = ["maayservice"],
+                      dest_base = "Maay")
+
+if sys.platform == 'win32':
+	import py2exe
+        if len(sys.argv) == 1:
+            sys.argv.append('py2exe')
+            
+        
+	setup(console = [maay_node, maay_indexer,
+                         createdb, updateConfig],
+              service = [maay_service],
+		name = name,
+		version = version,
+		description = description,
+		author = author,
+                author_email = author_email,
+#		copyright = copyright,
+		url = url
+                )
+
+else:
+	setup(
+		name = name,
+		version = version,
+		author = author,
+                author_email = author_email,
+#		copyright = copyright,
+		description = description,
+		url = url,
+		data_files = data_files,
+		packages = packages,
+                scripts = scripts
+                )


Property changes on: trunk/setup.py
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native



From adimasci at berlios.de  Tue Nov 15 09:26:05 2005
From: adimasci at berlios.de (Adrien Di Mascio at BerliOS)
Date: Tue, 15 Nov 2005 09:26:05 +0100
Subject: [Maay-svncheckins] r482 - trunk/maay
Message-ID: <200511150826.jAF8Q5uU012444@sheep.berlios.de>

Author: adimasci
Date: 2005-11-15 09:25:46 +0100 (Tue, 15 Nov 2005)
New Revision: 482

Modified:
   trunk/maay/node.py
Log:
Try to start reactor with signal handlers, even on
windows. Remove signal handlers only if the latter 
raised an exception

Modified: trunk/maay/node.py
===================================================================
--- trunk/maay/node.py	2005-11-15 08:10:46 UTC (rev 481)
+++ trunk/maay/node.py	2005-11-15 08:25:46 UTC (rev 482)
@@ -267,16 +267,20 @@
     reactor.listenTCP(nodeConfig.webserver_port, website)
     reactor.listenTCP(nodeConfig.rpcserver_port, rpcserver)
     try:
-        print "-------------Starting Node mainloop-------------"
-        # REM: twisted raise an error if reactor is not run in the main thread.
-        # This occurs when maay is runned as a windows service.
-        if sys.platform == 'win32':
-            reactor.run(installSignalHandlers=0)
-        else:
+        try:
+            print "-------------Starting Node mainloop-------------"
             reactor.run()
+        except ValueError:
+            # Note: twisted raise an error if reactor is not run in the
+            # main thread. This occurs when maay is runned as a windows
+            # service.
+            if sys.platform == 'win32':
+                reactor.run(installSignalHandlers=0)
+            else:
+                raise
     finally:
         print "---------------Shutting down Node---------------"
-        
 
+
 if __name__ == '__main__':
     run()



From afayolle at berlios.de  Tue Nov 15 09:49:42 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Tue, 15 Nov 2005 09:49:42 +0100
Subject: [Maay-svncheckins] r483 - trunk
Message-ID: <200511150849.jAF8ngJl024973@sheep.berlios.de>

Author: afayolle
Date: 2005-11-15 09:49:34 +0100 (Tue, 15 Nov 2005)
New Revision: 483

Added:
   trunk/README.html
Modified:
   trunk/README.txt
Log:
updated for 0.2

Added: trunk/README.html
===================================================================
--- trunk/README.html	2005-11-15 08:25:46 UTC (rev 482)
+++ trunk/README.html	2005-11-15 08:49:34 UTC (rev 483)
@@ -0,0 +1,147 @@
+<?xml version="1.0" encoding="utf-8" ?>
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
+<head>
+<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
+<meta name="generator" content="Docutils 0.3.9: http://docutils.sourceforge.net/" />
+<title>Maay documentation</title>
+<link rel="stylesheet" href="default.css" type="text/css" />
+</head>
+<body>
+<div class="document" id="maay-documentation">
+<h1 class="title">Maay documentation</h1>
+<div class="section" id="warning">
+<h1><a name="warning">Warning</a></h1>
+<p>This is beta quality software. Before launching anything be sure to read 
+this document and the release notes for the program. On Windows systems, 
+the release notes are available through the start menu shortcut of Maay.</p>
+</div>
+<div class="section" id="what-is-maay">
+<h1><a name="what-is-maay">What is Maay?</a></h1>
+<p>Maay is a P2P indexation and search engine. You can use it to index
+files on your computer, and export them to other members of the Maay
+P2P network. You can also issue searches which will look for documents
+on your computer as well as on other nodes of the P2P network.</p>
+</div>
+<div class="section" id="what-is-in-the-current-implementation">
+<h1><a name="what-is-in-the-current-implementation">What is in the current implementation?</a></h1>
+<p>The current Maay implementation features:</p>
+<blockquote>
+<ul class="simple">
+<li>the maay node, which acts as an XMLRPC and HTTP server. The XMLRPC
+interface is used to process indexation requests and distributed
+queries. The HTTP interface is available through a web browser to
+issue local and distributed queries, as well as indexation
+requests.</li>
+<li>an indexer, which can handle the following document formats: raw
+text, HTML, Microsoft Word, Rich Text Format, Portable Document
+Format.</li>
+<li>a presence server, which can handle presence information from maay
+nodes, in order to seed the node database.</li>
+</ul>
+</blockquote>
+</div>
+<div class="section" id="how-do-i-install-maay-from-source">
+<h1><a name="how-do-i-install-maay-from-source">How do I install Maay from source?</a></h1>
+<p>These instruction are intended for people using a unix-like
+OS. Windows users are strongly advised to use the prebuilt package
+(see below).</p>
+<p>A few Python libraries are required to make the whole think work. Most
+of them should be available in your OS distribution too :</p>
+<blockquote>
+<ul class="simple">
+<li>logilab common libraries 0.12.1 or above (<a class="reference" href="http://www.logilab.org/projects/common">http://www.logilab.org/projects/common</a>)</li>
+<li>mysql-python (<a class="reference" href="http://sourceforge.net/projects/mysql-python">http://sourceforge.net/projects/mysql-python</a>)</li>
+<li>python-twisted 2.0 or above ((<a class="reference" href="http://twistedmatrix.com/">http://twistedmatrix.com/</a>)</li>
+<li>python-twisted-web (<a class="reference" href="http://twistedmatrix.com/">http://twistedmatrix.com/</a>)</li>
+<li>python-nevow 0.6 or above (<a class="reference" href="http://nevow.com/">http://nevow.com/</a>)</li>
+<li>python-imaging (www.pythonware.com/products/pil/)</li>
+</ul>
+</blockquote>
+<p>You will also need a few helper applications to perform the conversion
+of various binary formats to something that Maay can index. There is
+probably a prebuilt binary available for your OS distribution
+somewhere. You will need to download and install :</p>
+<blockquote>
+<ul class="simple">
+<li>pdftohtml (<a class="reference" href="http://pdftohtml.sourceforge.net/">http://pdftohtml.sourceforge.net/</a>)</li>
+<li>antiword (<a class="reference" href="http://www.winfield.demon.nl/">http://www.winfield.demon.nl/</a>)</li>
+<li>unrtf (<a class="reference" href="http://www.gnu.org/software/unrtf/unrtf.html">http://www.gnu.org/software/unrtf/unrtf.html</a>)</li>
+</ul>
+</blockquote>
+<p>The indexation part uses a MySQL database (version 4.1). You
+will need to install such a database or get in touch with your
+DBA. The following assumes a local mysql installation, with no root
+password. Maay has not been tested with MySQL 5.0, but it should
+work. Please report if you encounter problems with this version of
+MySQL.</p>
+<p>Once everything else is installed, you can point you web browser to
+<a class="reference" href="http://developer.berlios.de/projects/maay/">http://developer.berlios.de/projects/maay/</a> and download the latest
+source tarball. Unpack it, go to the newly created directory and run:</p>
+<pre class="literal-block">
+# python setup.py install
+</pre>
+<p>It is now necessary to create the MySQL database instance that will
+store the indexation data:</p>
+<pre class="literal-block">
+# mysql -u root mysql
+mysql&gt; \. sql/mysql.sql
+</pre>
+<p>You're done !</p>
+</div>
+<div class="section" id="how-do-i-install-maay-from-a-package">
+<h1><a name="how-do-i-install-maay-from-a-package">How do I install Maay from a package?</a></h1>
+<p>For now, only a Windows installer is available. Download it from
+<a class="reference" href="http://developer.berlios.de/projects/maay/">http://developer.berlios.de/projects/maay/</a> and run it. This should
+install and setup everything properly.</p>
+<p>A package for the Debian GNU/Linux distribution will soon be made
+available.</p>
+</div>
+<div class="section" id="how-do-i-start-using-maay">
+<h1><a name="how-do-i-start-using-maay">How do I start using Maay?</a></h1>
+<p>First, edit the configuration files. On Windows, they are in 
+C:Program FilesMaaywebapp.ini and C:Program
+FilesMaayindexer.ini. The Windows installer should have set the
+different configuration values
+On Unix systems, they are in /etc/maay, and you can copy them to 
+~/.maay/ if you want to have some personnalized settings. Pay attention 
+to the index-dir and skip-dir settings in indexer.ini.</p>
+<p>Then, start the Maay service. On Windows, this is done automatically
+when your machine boots. On unix systems, use /usr/bin/maay-server</p>
+<p>You can now visit <a class="reference" href="http://localhost:7777/">http://localhost:7777/</a> which will display the Maay
+search page. Issuing a search will probably not yield any result since
+you have not indexed any files yet.</p>
+<p>Launch the indexer: visit <a class="reference" href="http://localhost:7777/indexation">http://localhost:7777/indexation</a>, check that
+the directories are correct and click on the &quot;index now&quot; button. On
+Windows, the indexation can also be launched manually through the
+start menu again by choosing &quot;Maay Indexer&quot;. On Unix systems, the
+manual indexation is done by running /usr/bin/maay-indexer.</p>
+<p>The indexer will look for files on your hard disks and index them by
+sending indexation requests to the server. Once the indexation is
+done, queries issued through the web interface should give results.</p>
+</div>
+<div class="section" id="where-can-i-get-help">
+<h1><a name="where-can-i-get-help">Where can I get help?</a></h1>
+<p>For now the best place to ask for help is on the development mailing
+list of Maay. You can subscribe from</p>
+<p><a class="reference" href="http://lists.berlios.de/mailman/listinfo/maay-dev">http://lists.berlios.de/mailman/listinfo/maay-dev</a></p>
+<p>You may also use the bug tracker on the Berlios project page at 
+<a class="reference" href="http://developer.berlios.de/projects/maay/">http://developer.berlios.de/projects/maay/</a></p>
+<p>When reporting a bug or asking for help, don't forget to provide the
+following pieces of information:</p>
+<blockquote>
+<ul class="simple">
+<li>operating system</li>
+<li>version of maay</li>
+<li>on unix: version of python</li>
+<li>steps to reproduce the bug</li>
+</ul>
+</blockquote>
+<p>Be as precise as possible. Just saying &quot;the indexer does not work&quot;
+won't give us any clue to help you.</p>
+<blockquote>
+Alexandre Fayolle &lt;<a class="reference" href="mailto:alexandre.fayolle&#64;logilab.fr">alexandre.fayolle&#64;logilab.fr</a>&gt;, Tue, 15 Nov 2005 09:41:54 +0100</blockquote>
+</div>
+</div>
+</body>
+</html>

Modified: trunk/README.txt
===================================================================
--- trunk/README.txt	2005-11-15 08:25:46 UTC (rev 482)
+++ trunk/README.txt	2005-11-15 08:49:34 UTC (rev 483)
@@ -1,7 +1,12 @@
+==================
+Maay documentation
+==================
+
+
 Warning
 =======
 
-This is alpha quality software. Before launching anything be sure to read 
+This is beta quality software. Before launching anything be sure to read 
 this document and the release notes for the program. On Windows systems, 
 the release notes are available through the start menu shortcut of Maay.
 
@@ -18,14 +23,18 @@
 
 The current Maay implementation features:
 
+ * the maay node, which acts as an XMLRPC and HTTP server. The XMLRPC
+   interface is used to process indexation requests and distributed
+   queries. The HTTP interface is available through a web browser to
+   issue local and distributed queries, as well as indexation
+   requests. 
+
  * an indexer, which can handle the following document formats: raw
    text, HTML, Microsoft Word, Rich Text Format, Portable Document
    Format. 
 
- * a web interface which can be used to issue queries (currently
-   queries are ontly dispatched on the current node, i.e. the P2P
-   functionnality is not available for now, though we are working on
-   it). 
+ * a presence server, which can handle presence information from maay
+   nodes, in order to seed the node database. 
 
 How do I install Maay from source?
 ==================================
@@ -37,11 +46,12 @@
 A few Python libraries are required to make the whole think work. Most
 of them should be available in your OS distribution too :
 
- * logilab common libraries (http://www.logilab.org/projects/common)
+ * logilab common libraries 0.12.1 or above (http://www.logilab.org/projects/common)
  * mysql-python (http://sourceforge.net/projects/mysql-python)
- * python-twisted (http://twistedmatrix.com/)
+ * python-twisted 2.0 or above ((http://twistedmatrix.com/)
  * python-twisted-web (http://twistedmatrix.com/)
- * python-nevow (http://nevow.com/)
+ * python-nevow 0.6 or above (http://nevow.com/) 
+ * python-imaging (www.pythonware.com/products/pil/)
 
 You will also need a few helper applications to perform the conversion
 of various binary formats to something that Maay can index. There is
@@ -52,7 +62,12 @@
  * antiword (http://www.winfield.demon.nl/)
  * unrtf (http://www.gnu.org/software/unrtf/unrtf.html)
 
-The indexation part uses a MySQL database, so 
+The indexation part uses a MySQL database (version 4.1). You
+will need to install such a database or get in touch with your
+DBA. The following assumes a local mysql installation, with no root
+password. Maay has not been tested with MySQL 5.0, but it should
+work. Please report if you encounter problems with this version of
+MySQL. 
 
 Once everything else is installed, you can point you web browser to
 http://developer.berlios.de/projects/maay/ and download the latest
@@ -82,25 +97,30 @@
 ==========================
 
 First, edit the configuration files. On Windows, they are in 
-C:\Program Files\Maay\webapp.ini and C:\Program Files\Maay\indexer.ini.
+C:\Program Files\Maay\webapp.ini and C:\Program
+Files\Maay\indexer.ini. The Windows installer should have set the
+different configuration values
 On Unix systems, they are in /etc/maay, and you can copy them to 
 ~/.maay/ if you want to have some personnalized settings. Pay attention 
 to the index-dir and skip-dir settings in indexer.ini.
 
-Then, start the Maay service. On Windows, use the start menu to
-launch "Maay Server". On unix systems, use /usr/bin/maay-server
+Then, start the Maay service. On Windows, this is done automatically
+when your machine boots. On unix systems, use /usr/bin/maay-server
 
-You can now visit http://localhost:8080/ which will display the Maay
+You can now visit http://localhost:7777/ which will display the Maay
 search page. Issuing a search will probably not yield any result since
 you have not indexed any files yet.
 
-Launch the indexer. On Windows, this is done through the start menu
-again by choosing "Maay Indexer". On Unix systems, use
-/usr/bin/maay-indexer. The indexer will look for files on your hard
-disks and index them by sending indexation requests to the
-server. Once the indexation is done, queries issued through the web
-interface should give results. 
+Launch the indexer: visit http://localhost:7777/indexation, check that
+the directories are correct and click on the "index now" button. On
+Windows, the indexation can also be launched manually through the
+start menu again by choosing "Maay Indexer". On Unix systems, the
+manual indexation is done by running /usr/bin/maay-indexer. 
 
+The indexer will look for files on your hard disks and index them by
+sending indexation requests to the server. Once the indexation is
+done, queries issued through the web interface should give results.
+
 Where can I get help?
 =====================
 
@@ -112,5 +132,17 @@
 You may also use the bug tracker on the Berlios project page at 
 http://developer.berlios.de/projects/maay/
 
+When reporting a bug or asking for help, don't forget to provide the
+following pieces of information:
 
- Alexandre Fayolle <alexandre.fayolle at logilab.fr>, Thu,  6 Oct 2005 15:50:15 +0200
+ * operating system
+ * version of maay
+ * on unix: version of python
+ * steps to reproduce the bug
+
+Be as precise as possible. Just saying "the indexer does not work"
+won't give us any clue to help you. 
+
+
+ Alexandre Fayolle <alexandre.fayolle at logilab.fr>, Tue, 15 Nov 2005 09:41:54 +0100
+



From afayolle at berlios.de  Tue Nov 15 09:51:21 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Tue, 15 Nov 2005 09:51:21 +0100
Subject: [Maay-svncheckins] r484 - in trunk: . doc maay maay/win32
Message-ID: <200511150851.jAF8pLei025898@sheep.berlios.de>

Author: afayolle
Date: 2005-11-15 09:51:11 +0100 (Tue, 15 Nov 2005)
New Revision: 484

Added:
   trunk/doc/README.html
   trunk/doc/default.css
   trunk/maay/win32/
   trunk/maay/win32/createdb.py
   trunk/maay/win32/updateconfig.py
Removed:
   trunk/README.html
   trunk/maay/createdb.py
   trunk/maay/updateconfig.py
Log:
added css, set README.html in doc/

Deleted: trunk/README.html
===================================================================
--- trunk/README.html	2005-11-15 08:49:34 UTC (rev 483)
+++ trunk/README.html	2005-11-15 08:51:11 UTC (rev 484)
@@ -1,147 +0,0 @@
-<?xml version="1.0" encoding="utf-8" ?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
-<head>
-<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
-<meta name="generator" content="Docutils 0.3.9: http://docutils.sourceforge.net/" />
-<title>Maay documentation</title>
-<link rel="stylesheet" href="default.css" type="text/css" />
-</head>
-<body>
-<div class="document" id="maay-documentation">
-<h1 class="title">Maay documentation</h1>
-<div class="section" id="warning">
-<h1><a name="warning">Warning</a></h1>
-<p>This is beta quality software. Before launching anything be sure to read 
-this document and the release notes for the program. On Windows systems, 
-the release notes are available through the start menu shortcut of Maay.</p>
-</div>
-<div class="section" id="what-is-maay">
-<h1><a name="what-is-maay">What is Maay?</a></h1>
-<p>Maay is a P2P indexation and search engine. You can use it to index
-files on your computer, and export them to other members of the Maay
-P2P network. You can also issue searches which will look for documents
-on your computer as well as on other nodes of the P2P network.</p>
-</div>
-<div class="section" id="what-is-in-the-current-implementation">
-<h1><a name="what-is-in-the-current-implementation">What is in the current implementation?</a></h1>
-<p>The current Maay implementation features:</p>
-<blockquote>
-<ul class="simple">
-<li>the maay node, which acts as an XMLRPC and HTTP server. The XMLRPC
-interface is used to process indexation requests and distributed
-queries. The HTTP interface is available through a web browser to
-issue local and distributed queries, as well as indexation
-requests.</li>
-<li>an indexer, which can handle the following document formats: raw
-text, HTML, Microsoft Word, Rich Text Format, Portable Document
-Format.</li>
-<li>a presence server, which can handle presence information from maay
-nodes, in order to seed the node database.</li>
-</ul>
-</blockquote>
-</div>
-<div class="section" id="how-do-i-install-maay-from-source">
-<h1><a name="how-do-i-install-maay-from-source">How do I install Maay from source?</a></h1>
-<p>These instruction are intended for people using a unix-like
-OS. Windows users are strongly advised to use the prebuilt package
-(see below).</p>
-<p>A few Python libraries are required to make the whole think work. Most
-of them should be available in your OS distribution too :</p>
-<blockquote>
-<ul class="simple">
-<li>logilab common libraries 0.12.1 or above (<a class="reference" href="http://www.logilab.org/projects/common">http://www.logilab.org/projects/common</a>)</li>
-<li>mysql-python (<a class="reference" href="http://sourceforge.net/projects/mysql-python">http://sourceforge.net/projects/mysql-python</a>)</li>
-<li>python-twisted 2.0 or above ((<a class="reference" href="http://twistedmatrix.com/">http://twistedmatrix.com/</a>)</li>
-<li>python-twisted-web (<a class="reference" href="http://twistedmatrix.com/">http://twistedmatrix.com/</a>)</li>
-<li>python-nevow 0.6 or above (<a class="reference" href="http://nevow.com/">http://nevow.com/</a>)</li>
-<li>python-imaging (www.pythonware.com/products/pil/)</li>
-</ul>
-</blockquote>
-<p>You will also need a few helper applications to perform the conversion
-of various binary formats to something that Maay can index. There is
-probably a prebuilt binary available for your OS distribution
-somewhere. You will need to download and install :</p>
-<blockquote>
-<ul class="simple">
-<li>pdftohtml (<a class="reference" href="http://pdftohtml.sourceforge.net/">http://pdftohtml.sourceforge.net/</a>)</li>
-<li>antiword (<a class="reference" href="http://www.winfield.demon.nl/">http://www.winfield.demon.nl/</a>)</li>
-<li>unrtf (<a class="reference" href="http://www.gnu.org/software/unrtf/unrtf.html">http://www.gnu.org/software/unrtf/unrtf.html</a>)</li>
-</ul>
-</blockquote>
-<p>The indexation part uses a MySQL database (version 4.1). You
-will need to install such a database or get in touch with your
-DBA. The following assumes a local mysql installation, with no root
-password. Maay has not been tested with MySQL 5.0, but it should
-work. Please report if you encounter problems with this version of
-MySQL.</p>
-<p>Once everything else is installed, you can point you web browser to
-<a class="reference" href="http://developer.berlios.de/projects/maay/">http://developer.berlios.de/projects/maay/</a> and download the latest
-source tarball. Unpack it, go to the newly created directory and run:</p>
-<pre class="literal-block">
-# python setup.py install
-</pre>
-<p>It is now necessary to create the MySQL database instance that will
-store the indexation data:</p>
-<pre class="literal-block">
-# mysql -u root mysql
-mysql&gt; \. sql/mysql.sql
-</pre>
-<p>You're done !</p>
-</div>
-<div class="section" id="how-do-i-install-maay-from-a-package">
-<h1><a name="how-do-i-install-maay-from-a-package">How do I install Maay from a package?</a></h1>
-<p>For now, only a Windows installer is available. Download it from
-<a class="reference" href="http://developer.berlios.de/projects/maay/">http://developer.berlios.de/projects/maay/</a> and run it. This should
-install and setup everything properly.</p>
-<p>A package for the Debian GNU/Linux distribution will soon be made
-available.</p>
-</div>
-<div class="section" id="how-do-i-start-using-maay">
-<h1><a name="how-do-i-start-using-maay">How do I start using Maay?</a></h1>
-<p>First, edit the configuration files. On Windows, they are in 
-C:Program FilesMaaywebapp.ini and C:Program
-FilesMaayindexer.ini. The Windows installer should have set the
-different configuration values
-On Unix systems, they are in /etc/maay, and you can copy them to 
-~/.maay/ if you want to have some personnalized settings. Pay attention 
-to the index-dir and skip-dir settings in indexer.ini.</p>
-<p>Then, start the Maay service. On Windows, this is done automatically
-when your machine boots. On unix systems, use /usr/bin/maay-server</p>
-<p>You can now visit <a class="reference" href="http://localhost:7777/">http://localhost:7777/</a> which will display the Maay
-search page. Issuing a search will probably not yield any result since
-you have not indexed any files yet.</p>
-<p>Launch the indexer: visit <a class="reference" href="http://localhost:7777/indexation">http://localhost:7777/indexation</a>, check that
-the directories are correct and click on the &quot;index now&quot; button. On
-Windows, the indexation can also be launched manually through the
-start menu again by choosing &quot;Maay Indexer&quot;. On Unix systems, the
-manual indexation is done by running /usr/bin/maay-indexer.</p>
-<p>The indexer will look for files on your hard disks and index them by
-sending indexation requests to the server. Once the indexation is
-done, queries issued through the web interface should give results.</p>
-</div>
-<div class="section" id="where-can-i-get-help">
-<h1><a name="where-can-i-get-help">Where can I get help?</a></h1>
-<p>For now the best place to ask for help is on the development mailing
-list of Maay. You can subscribe from</p>
-<p><a class="reference" href="http://lists.berlios.de/mailman/listinfo/maay-dev">http://lists.berlios.de/mailman/listinfo/maay-dev</a></p>
-<p>You may also use the bug tracker on the Berlios project page at 
-<a class="reference" href="http://developer.berlios.de/projects/maay/">http://developer.berlios.de/projects/maay/</a></p>
-<p>When reporting a bug or asking for help, don't forget to provide the
-following pieces of information:</p>
-<blockquote>
-<ul class="simple">
-<li>operating system</li>
-<li>version of maay</li>
-<li>on unix: version of python</li>
-<li>steps to reproduce the bug</li>
-</ul>
-</blockquote>
-<p>Be as precise as possible. Just saying &quot;the indexer does not work&quot;
-won't give us any clue to help you.</p>
-<blockquote>
-Alexandre Fayolle &lt;<a class="reference" href="mailto:alexandre.fayolle&#64;logilab.fr">alexandre.fayolle&#64;logilab.fr</a>&gt;, Tue, 15 Nov 2005 09:41:54 +0100</blockquote>
-</div>
-</div>
-</body>
-</html>

Copied: trunk/doc/README.html (from rev 483, trunk/README.html)

Added: trunk/doc/default.css
===================================================================
--- trunk/doc/default.css	2005-11-15 08:49:34 UTC (rev 483)
+++ trunk/doc/default.css	2005-11-15 08:51:11 UTC (rev 484)
@@ -0,0 +1,263 @@
+/*
+:Author: David Goodger
+:Contact: goodger at users.sourceforge.net
+:Date: $Date: 2005-05-26 12:51:39 +0200 (Thu, 26 May 2005) $
+:Version: $Revision: 3368 $
+:Copyright: This stylesheet has been placed in the public domain.
+
+Default cascading style sheet for the HTML output of Docutils.
+*/
+
+/* "! important" is used here to override other ``margin-top`` and
+   ``margin-bottom`` styles that are later in the stylesheet or 
+   more specific.  See http://www.w3.org/TR/CSS1#the-cascade */
+.first {
+  margin-top: 0 ! important }
+
+.last, .with-subtitle {
+  margin-bottom: 0 ! important }
+
+.hidden {
+  display: none }
+
+a.toc-backref {
+  text-decoration: none ;
+  color: black }
+
+blockquote.epigraph {
+  margin: 2em 5em ; }
+
+dl.docutils dd {
+  margin-bottom: 0.5em }
+
+/* Uncomment (and remove this text!) to get bold-faced definition list terms
+dl.docutils dt {
+  font-weight: bold }
+*/
+
+div.abstract {
+  margin: 2em 5em }
+
+div.abstract p.topic-title {
+  font-weight: bold ;
+  text-align: center }
+
+div.admonition, div.attention, div.caution, div.danger, div.error,
+div.hint, div.important, div.note, div.tip, div.warning {
+  margin: 2em ;
+  border: medium outset ;
+  padding: 1em }
+
+div.admonition p.admonition-title, div.hint p.admonition-title,
+div.important p.admonition-title, div.note p.admonition-title,
+div.tip p.admonition-title {
+  font-weight: bold ;
+  font-family: sans-serif }
+
+div.attention p.admonition-title, div.caution p.admonition-title,
+div.danger p.admonition-title, div.error p.admonition-title,
+div.warning p.admonition-title {
+  color: red ;
+  font-weight: bold ;
+  font-family: sans-serif }
+
+/* Uncomment (and remove this text!) to get reduced vertical space in
+   compound paragraphs.
+div.compound .compound-first, div.compound .compound-middle {
+  margin-bottom: 0.5em }
+
+div.compound .compound-last, div.compound .compound-middle {
+  margin-top: 0.5em }
+*/
+
+div.dedication {
+  margin: 2em 5em ;
+  text-align: center ;
+  font-style: italic }
+
+div.dedication p.topic-title {
+  font-weight: bold ;
+  font-style: normal }
+
+div.figure {
+  margin-left: 2em }
+
+div.footer, div.header {
+  font-size: smaller }
+
+div.line-block {
+  display: block ;
+  margin-top: 1em ;
+  margin-bottom: 1em }
+
+div.line-block div.line-block {
+  margin-top: 0 ;
+  margin-bottom: 0 ;
+  margin-left: 1.5em }
+
+div.sidebar {
+  margin-left: 1em ;
+  border: medium outset ;
+  padding: 1em ;
+  background-color: #ffffee ;
+  width: 40% ;
+  float: right ;
+  clear: right }
+
+div.sidebar p.rubric {
+  font-family: sans-serif ;
+  font-size: medium }
+
+div.system-messages {
+  margin: 5em }
+
+div.system-messages h1 {
+  color: red }
+
+div.system-message {
+  border: medium outset ;
+  padding: 1em }
+
+div.system-message p.system-message-title {
+  color: red ;
+  font-weight: bold }
+
+div.topic {
+  margin: 2em }
+
+h1.section-subtitle, h2.section-subtitle, h3.section-subtitle,
+h4.section-subtitle, h5.section-subtitle, h6.section-subtitle {
+  margin-top: 0.4em }
+
+h1.title {
+  text-align: center }
+
+h2.subtitle {
+  text-align: center }
+
+hr.docutils {
+  width: 75% }
+
+ol.simple, ul.simple {
+  margin-bottom: 1em }
+
+ol.arabic {
+  list-style: decimal }
+
+ol.loweralpha {
+  list-style: lower-alpha }
+
+ol.upperalpha {
+  list-style: upper-alpha }
+
+ol.lowerroman {
+  list-style: lower-roman }
+
+ol.upperroman {
+  list-style: upper-roman }
+
+p.attribution {
+  text-align: right ;
+  margin-left: 50% }
+
+p.caption {
+  font-style: italic }
+
+p.credits {
+  font-style: italic ;
+  font-size: smaller }
+
+p.label {
+  white-space: nowrap }
+
+p.rubric {
+  font-weight: bold ;
+  font-size: larger ;
+  color: maroon ;
+  text-align: center }
+
+p.sidebar-title {
+  font-family: sans-serif ;
+  font-weight: bold ;
+  font-size: larger }
+
+p.sidebar-subtitle {
+  font-family: sans-serif ;
+  font-weight: bold }
+
+p.topic-title {
+  font-weight: bold }
+
+pre.address {
+  margin-bottom: 0 ;
+  margin-top: 0 ;
+  font-family: serif ;
+  font-size: 100% }
+
+pre.line-block {
+  font-family: serif ;
+  font-size: 100% }
+
+pre.literal-block, pre.doctest-block {
+  margin-left: 2em ;
+  margin-right: 2em ;
+  background-color: #eeeeee }
+
+span.classifier {
+  font-family: sans-serif ;
+  font-style: oblique }
+
+span.classifier-delimiter {
+  font-family: sans-serif ;
+  font-weight: bold }
+
+span.interpreted {
+  font-family: sans-serif }
+
+span.option {
+  white-space: nowrap }
+
+span.pre {
+  white-space: pre }
+
+span.problematic {
+  color: red }
+
+span.section-subtitle {
+  /* font-size relative to parent (<h#> element) */
+  font-size: 80% }
+
+table.citation {
+  border-left: solid thin gray }
+
+table.docinfo {
+  margin: 2em 4em }
+
+table.docutils {
+  margin-top: 0.5em ;
+  margin-bottom: 0.5em }
+
+table.footnote {
+  border-left: solid thin black }
+
+table.docutils td, table.docutils th,
+table.docinfo td, table.docinfo th {
+  padding-left: 0.5em ;
+  padding-right: 0.5em ;
+  vertical-align: top }
+
+table.docutils th.field-name, table.docinfo th.docinfo-name {
+  font-weight: bold ;
+  text-align: left ;
+  white-space: nowrap ;
+  padding-left: 0 }
+
+h1 tt.docutils, h2 tt.docutils, h3 tt.docutils,
+h4 tt.docutils, h5 tt.docutils, h6 tt.docutils {
+  font-size: 100% }
+
+tt.docutils {
+  background-color: #eeeeee }
+
+ul.auto-toc {
+  list-style-type: none }

Deleted: trunk/maay/createdb.py
===================================================================
--- trunk/maay/createdb.py	2005-11-15 08:49:34 UTC (rev 483)
+++ trunk/maay/createdb.py	2005-11-15 08:51:11 UTC (rev 484)
@@ -1,41 +0,0 @@
-#     Maay : a network of peers for document search
-#
-#     Copyright (C) 2005 France Telecom R&D
-#
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-
-""" helper to create the maay mysql instance on windows platform"""
-
-__revision__ = '$Id$'
-
-import os
-
-def do_delete():
-    pipe = os.popen(r'mysql\bin\mysql.exe -u root mysql', 'w')
-    pipe.write('DROP DATABASE maay;\n')
-    pipe.close()
-    
-
-def do_create():
-    pipe = os.popen(r'mysql\bin\mysql.exe -u root mysql', 'w')
-    data = file('mysql.sql','rb').read()
-    pipe.write(data)
-    pipe.close()
-    
-if __name__ == '__main__':
-    do_delete()
-    do_create()
-	
-	

Deleted: trunk/maay/updateconfig.py
===================================================================
--- trunk/maay/updateconfig.py	2005-11-15 08:49:34 UTC (rev 483)
+++ trunk/maay/updateconfig.py	2005-11-15 08:51:11 UTC (rev 484)
@@ -1,99 +0,0 @@
-#     Maay : a network of peers for document search
-#
-#     Copyright (C) 2005 France Telecom R&D
-#
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-
-""" helper to create the indexer.ini configuration file at install time on windows"""
-
-__revision__ = '$Id$'
-import os
-import sys
-
-indexer_config = """[INDEXER]
-# Host on which the maay node is running
-host=localhost
-#Port on which the maay node is listening
-port=6789
-
-# User login on the maay node 
-user=maay
-# User password on the maay node
-password=maay
-
-# Which directories are to be indexed
-#  - private indexed directories are not available to  queries from other nodes
-#  - public indexed directories are available to these queries
-#  - skip dirs are not indexed
-#
-# If a document is available through both a public and a private directory, 
-# the public version prevails
-#
-# You can use a comma separated list of values to specify several
-# directories in each configuration variable. 
-private-index-dir=%(private)s
-private-skip-dir=%(private_skip)s
-public-index-dir=%(public)s
-public-skip-dir=%(public_skip)s
-"""
-
-node_config = """[NODE]
-db-name=maay
-db-host=localhost
-user=maay
-password=maay
-presence-host=%(presence)s
-presence-port=%(port)d
-"""
-import socket
-
-def createConfigFile(myDesktop, myDocuments):
-    f=open("indexer.ini", "w")
-    values = {'private'     : '%s,%s' % (myDesktop, myDocuments),
-              'private_skip': '',
-              'public'      : '%s\\Maay Documents' % myDesktop,
-              'public_skip' : '',
-              }
-    f.write(indexer_config % values)
-    f.close()
-
-    f = open("node.ini", "w")
-    presence, port = probe_presence_config()
-    values = {'presence': presence,
-              'port': port}
-    f.write(node_config % values)
-    f.close()
-
-def probe_presence_config():
-    for addr in (('maay.rd.francetelecom.fr', 2345), # private FT server
-                 ('192.33.178.29', 2345), # public FT server
-                 ('172.17.1.4', 2345),    # private logilab server
-                 ('192.168.74.105', 2345),# private logilab server
-                 ):
-        print 'probing', addr
-        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
-        try:
-            s.connect(addr)
-            s.close()
-        except socket.error, exc:
-            continue
-        else:
-            return addr
-    return '192.33.178.29', 2345
-        
-    
-if __name__ == '__main__':
-    createConfigFile(sys.argv[1], sys.argv[2])
-	

Copied: trunk/maay/win32/createdb.py (from rev 482, trunk/maay/createdb.py)

Copied: trunk/maay/win32/updateconfig.py (from rev 482, trunk/maay/updateconfig.py)



From afayolle at berlios.de  Tue Nov 15 09:55:38 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Tue, 15 Nov 2005 09:55:38 +0100
Subject: [Maay-svncheckins] r485 - trunk
Message-ID: <200511150855.jAF8tcO2030276@sheep.berlios.de>

Author: afayolle
Date: 2005-11-15 09:55:13 +0100 (Tue, 15 Nov 2005)
New Revision: 485

Modified:
   trunk/setup.py
Log:
updated setup to new layout

Modified: trunk/setup.py
===================================================================
--- trunk/setup.py	2005-11-15 08:51:11 UTC (rev 484)
+++ trunk/setup.py	2005-11-15 08:55:13 UTC (rev 485)
@@ -50,11 +50,11 @@
 			    script = 'maay/indexer.py',
 			    dest_base = "maay_indexer")
 createdb = Target(description = "Database creation utility",
-			    script = 'maay/createdb.py',
+			    script = 'maay/win23/createdb.py',
 			    dest_base = "createdb")
 
 updateConfig = Target(description = "Configuration update program",
-			    script = 'maay/updateconfig.py',
+			    script = 'maay/win32/updateconfig.py',
 			    dest_base = "updateconfig")
 
 maay_service = Target(description = "The Maay service",



From afayolle at berlios.de  Tue Nov 15 10:02:01 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Tue, 15 Nov 2005 10:02:01 +0100
Subject: [Maay-svncheckins] r486 - in trunk: . doc
Message-ID: <200511150902.jAF9217P002480@sheep.berlios.de>

Author: afayolle
Date: 2005-11-15 10:01:52 +0100 (Tue, 15 Nov 2005)
New Revision: 486

Modified:
   trunk/README.txt
   trunk/doc/README.html
Log:
corrections

Modified: trunk/README.txt
===================================================================
--- trunk/README.txt	2005-11-15 08:55:13 UTC (rev 485)
+++ trunk/README.txt	2005-11-15 09:01:52 UTC (rev 486)
@@ -51,7 +51,8 @@
  * python-twisted 2.0 or above ((http://twistedmatrix.com/)
  * python-twisted-web (http://twistedmatrix.com/)
  * python-nevow 0.6 or above (http://nevow.com/) 
- * python-imaging (www.pythonware.com/products/pil/)
+ * python-imaging (http://www.pythonware.com/products/pil/)
+ * mxDatetime (http://www.egenix.com/files/python/mxDateTime.html)
 
 You will also need a few helper applications to perform the conversion
 of various binary formats to something that Maay can index. There is
@@ -62,12 +63,12 @@
  * antiword (http://www.winfield.demon.nl/)
  * unrtf (http://www.gnu.org/software/unrtf/unrtf.html)
 
-The indexation part uses a MySQL database (version 4.1). You
-will need to install such a database or get in touch with your
-DBA. The following assumes a local mysql installation, with no root
-password. Maay has not been tested with MySQL 5.0, but it should
-work. Please report if you encounter problems with this version of
-MySQL. 
+The indexation part uses a MySQL database, version 4.1
+(http://www.mysql.org/). You will need to install such a database or
+get in touch with your DBA. The following assumes a local mysql
+installation, with no root password. Maay has not been tested with
+MySQL 5.0, but it should work. Please report if you encounter problems
+with this version of MySQL.
 
 Once everything else is installed, you can point you web browser to
 http://developer.berlios.de/projects/maay/ and download the latest
@@ -126,7 +127,6 @@
 
 For now the best place to ask for help is on the development mailing
 list of Maay. You can subscribe from
-
 http://lists.berlios.de/mailman/listinfo/maay-dev
 
 You may also use the bug tracker on the Berlios project page at 

Modified: trunk/doc/README.html
===================================================================
--- trunk/doc/README.html	2005-11-15 08:55:13 UTC (rev 485)
+++ trunk/doc/README.html	2005-11-15 09:01:52 UTC (rev 486)
@@ -55,7 +55,8 @@
 <li>python-twisted 2.0 or above ((<a class="reference" href="http://twistedmatrix.com/">http://twistedmatrix.com/</a>)</li>
 <li>python-twisted-web (<a class="reference" href="http://twistedmatrix.com/">http://twistedmatrix.com/</a>)</li>
 <li>python-nevow 0.6 or above (<a class="reference" href="http://nevow.com/">http://nevow.com/</a>)</li>
-<li>python-imaging (www.pythonware.com/products/pil/)</li>
+<li>python-imaging (<a class="reference" href="http://www.pythonware.com/products/pil/">http://www.pythonware.com/products/pil/</a>)</li>
+<li>mxDatetime (<a class="reference" href="http://www.egenix.com/files/python/mxDateTime.html">http://www.egenix.com/files/python/mxDateTime.html</a>)</li>
 </ul>
 </blockquote>
 <p>You will also need a few helper applications to perform the conversion
@@ -69,12 +70,12 @@
 <li>unrtf (<a class="reference" href="http://www.gnu.org/software/unrtf/unrtf.html">http://www.gnu.org/software/unrtf/unrtf.html</a>)</li>
 </ul>
 </blockquote>
-<p>The indexation part uses a MySQL database (version 4.1). You
-will need to install such a database or get in touch with your
-DBA. The following assumes a local mysql installation, with no root
-password. Maay has not been tested with MySQL 5.0, but it should
-work. Please report if you encounter problems with this version of
-MySQL.</p>
+<p>The indexation part uses a MySQL database, version 4.1
+(<a class="reference" href="http://www.mysql.org/">http://www.mysql.org/</a>). You will need to install such a database or
+get in touch with your DBA. The following assumes a local mysql
+installation, with no root password. Maay has not been tested with
+MySQL 5.0, but it should work. Please report if you encounter problems
+with this version of MySQL.</p>
 <p>Once everything else is installed, you can point you web browser to
 <a class="reference" href="http://developer.berlios.de/projects/maay/">http://developer.berlios.de/projects/maay/</a> and download the latest
 source tarball. Unpack it, go to the newly created directory and run:</p>
@@ -123,8 +124,8 @@
 <div class="section" id="where-can-i-get-help">
 <h1><a name="where-can-i-get-help">Where can I get help?</a></h1>
 <p>For now the best place to ask for help is on the development mailing
-list of Maay. You can subscribe from</p>
-<p><a class="reference" href="http://lists.berlios.de/mailman/listinfo/maay-dev">http://lists.berlios.de/mailman/listinfo/maay-dev</a></p>
+list of Maay. You can subscribe from
+<a class="reference" href="http://lists.berlios.de/mailman/listinfo/maay-dev">http://lists.berlios.de/mailman/listinfo/maay-dev</a></p>
 <p>You may also use the bug tracker on the Berlios project page at 
 <a class="reference" href="http://developer.berlios.de/projects/maay/">http://developer.berlios.de/projects/maay/</a></p>
 <p>When reporting a bug or asking for help, don't forget to provide the



From afayolle at berlios.de  Tue Nov 15 10:04:50 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Tue, 15 Nov 2005 10:04:50 +0100
Subject: [Maay-svncheckins] r487 - trunk
Message-ID: <200511150904.jAF94oAm003851@sheep.berlios.de>

Author: afayolle
Date: 2005-11-15 10:04:46 +0100 (Tue, 15 Nov 2005)
New Revision: 487

Modified:
   trunk/ChangeLog
Log:
updated for 0.2

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2005-11-15 09:01:52 UTC (rev 486)
+++ trunk/ChangeLog	2005-11-15 09:04:46 UTC (rev 487)
@@ -1,7 +1,14 @@
+Maay-0.2.0 2005-11-15
+	* Added P2P queries
+        * Added presence server
+        * Can launch indexation through web interface
+        * Maay node runs as a windows service
+        * Many bugfixes and improvements
+
 Maay-snapshot20051007 2005-10-07
-        * fixed a problem with db creation on windows
-        * fixed word converter PATH issue
-        * installer now offers to launche maay-server after installation
+        * Fixed a problem with db creation on windows
+        * Fixed word converter PATH issue
+        * Installer now offers to launche maay-server after installation
 
 Maay-snapshot20051006 2005-10-06
 	* Some bug fixes on Windows



From afayolle at berlios.de  Tue Nov 15 10:09:53 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Tue, 15 Nov 2005 10:09:53 +0100
Subject: [Maay-svncheckins] r488 - in trunk: . doc
Message-ID: <200511150909.jAF99rk0005380@sheep.berlios.de>

Author: afayolle
Date: 2005-11-15 10:09:40 +0100 (Tue, 15 Nov 2005)
New Revision: 488

Modified:
   trunk/README.txt
   trunk/doc/README.html
Log:
updated urls

Modified: trunk/README.txt
===================================================================
--- trunk/README.txt	2005-11-15 09:04:46 UTC (rev 487)
+++ trunk/README.txt	2005-11-15 09:09:40 UTC (rev 488)
@@ -48,9 +48,9 @@
 
  * logilab common libraries 0.12.1 or above (http://www.logilab.org/projects/common)
  * mysql-python (http://sourceforge.net/projects/mysql-python)
- * python-twisted 2.0 or above ((http://twistedmatrix.com/)
- * python-twisted-web (http://twistedmatrix.com/)
- * python-nevow 0.6 or above (http://nevow.com/) 
+ * python-twisted 2.0 or above ((http://twistedmatrix.com/projects/core/)
+ * python-twisted-web 0.5 or above (http://twistedmatrix.com/projects/web/)
+ * python-nevow 0.6 or above (http://divmod.org/projects/nevow) 
  * python-imaging (http://www.pythonware.com/products/pil/)
  * mxDatetime (http://www.egenix.com/files/python/mxDateTime.html)
 
@@ -82,7 +82,8 @@
  # mysql -u root mysql
  mysql> \. sql/mysql.sql
 
-You're done !
+You're done! See a bit further down in this document for how to start
+using Maay. 
 
 How do I install Maay from a package?
 =====================================

Modified: trunk/doc/README.html
===================================================================
--- trunk/doc/README.html	2005-11-15 09:04:46 UTC (rev 487)
+++ trunk/doc/README.html	2005-11-15 09:09:40 UTC (rev 488)
@@ -52,9 +52,9 @@
 <ul class="simple">
 <li>logilab common libraries 0.12.1 or above (<a class="reference" href="http://www.logilab.org/projects/common">http://www.logilab.org/projects/common</a>)</li>
 <li>mysql-python (<a class="reference" href="http://sourceforge.net/projects/mysql-python">http://sourceforge.net/projects/mysql-python</a>)</li>
-<li>python-twisted 2.0 or above ((<a class="reference" href="http://twistedmatrix.com/">http://twistedmatrix.com/</a>)</li>
-<li>python-twisted-web (<a class="reference" href="http://twistedmatrix.com/">http://twistedmatrix.com/</a>)</li>
-<li>python-nevow 0.6 or above (<a class="reference" href="http://nevow.com/">http://nevow.com/</a>)</li>
+<li>python-twisted 2.0 or above ((<a class="reference" href="http://twistedmatrix.com/projects/core/">http://twistedmatrix.com/projects/core/</a>)</li>
+<li>python-twisted-web 0.5 or above (<a class="reference" href="http://twistedmatrix.com/projects/web/">http://twistedmatrix.com/projects/web/</a>)</li>
+<li>python-nevow 0.6 or above (<a class="reference" href="http://divmod.org/projects/nevow">http://divmod.org/projects/nevow</a>)</li>
 <li>python-imaging (<a class="reference" href="http://www.pythonware.com/products/pil/">http://www.pythonware.com/products/pil/</a>)</li>
 <li>mxDatetime (<a class="reference" href="http://www.egenix.com/files/python/mxDateTime.html">http://www.egenix.com/files/python/mxDateTime.html</a>)</li>
 </ul>
@@ -88,7 +88,8 @@
 # mysql -u root mysql
 mysql&gt; \. sql/mysql.sql
 </pre>
-<p>You're done !</p>
+<p>You're done! See a bit further down in this document for how to start
+using Maay.</p>
 </div>
 <div class="section" id="how-do-i-install-maay-from-a-package">
 <h1><a name="how-do-i-install-maay-from-a-package">How do I install Maay from a package?</a></h1>



From afayolle at berlios.de  Tue Nov 15 10:34:32 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Tue, 15 Nov 2005 10:34:32 +0100
Subject: [Maay-svncheckins] r489 - trunk
Message-ID: <200511150934.jAF9YWL0021100@sheep.berlios.de>

Author: afayolle
Date: 2005-11-15 10:34:29 +0100 (Tue, 15 Nov 2005)
New Revision: 489

Modified:
   trunk/ReleaseNotes
Log:
updated release nodes

Modified: trunk/ReleaseNotes
===================================================================
--- trunk/ReleaseNotes	2005-11-15 09:09:40 UTC (rev 488)
+++ trunk/ReleaseNotes	2005-11-15 09:34:29 UTC (rev 489)
@@ -1,20 +1,10 @@
-Release Notes for snapshot 2005-10-06
+Release Notes for version 0.2.0
 
-This release is a development snapshot, it is not as tested as an 
-official release, and is only provided as a convenience to our users. 
-Expect the application to crash.
-
-Known problems: the Microsoft Word document converter does not work on Windows.
-
-Refer to previous release notes below.
-
------------------------------------------------------------
-Release Notes for version 0.1.0
-
 See README.txt for installation and quick start instructions. 
 
-This release is alpha-level software. We support local indexation and
-search, and no P2P features are yet available.
+This release is beta-level software. There are known problems 
+with the web interface when accessed through Microsoft Internet 
+Explorer. Using Firefox or Mozilla should work fine. 
 
 The windows installer will install and set up all the required
 dependencies (including mysql and twisted). It uses Inno Setup and



From afayolle at berlios.de  Tue Nov 15 10:45:45 2005
From: afayolle at berlios.de (Alexandre Fayolle at BerliOS)
Date: Tue, 15 Nov 2005 10:45:45 +0100
Subject: [Maay-svncheckins] r490 - trunk
Message-ID: <200511150945.jAF9jjjT007166@sheep.berlios.de>

Author: afayolle
Date: 2005-11-15 10:45:40 +0100 (Tue, 15 Nov 2005)
New Revision: 490

Modified:
   trunk/setup.py
Log:
fixed path


Modified: trunk/setup.py
===================================================================
--- trunk/setup.py	2005-11-15 09:34:29 UTC (rev 489)
+++ trunk/setup.py	2005-11-15 09:45:40 UTC (rev 490)
@@ -50,7 +50,7 @@
 			    script = 'maay/indexer.py',
 			    dest_base = "maay_indexer")
 createdb = Target(description = "Database creation utility",
-			    script = 'maay/win23/createdb.py',
+			    script = 'maay/win32/createdb.py',
 			    dest_base = "createdb")
 
 updateConfig = Target(description = "Configuration update program",



From dnf at berlios.de  Tue Nov 15 11:01:12 2005
From: dnf at berlios.de (Frédéric DANG NGOC at BerliOS)
Date: Tue, 15 Nov 2005 11:01:12 +0100
Subject: [Maay-svncheckins] r491 - in trunk/maay: . data
Message-ID: <200511151001.jAFA1CRr010642@sheep.berlios.de>

Author: dnf
Date: 2005-11-15 11:00:55 +0100 (Tue, 15 Nov 2005)
New Revision: 491

Modified:
   trunk/maay/data/footer.html
   trunk/maay/data/indexationpage.html
   trunk/maay/data/maay.css
   trunk/maay/data/searchform.html
   trunk/maay/data/skeleton.html
   trunk/maay/webapplication.py
Log:
Some esthetic modifications.
Bug fixed in idnexationPage.



Modified: trunk/maay/data/footer.html
===================================================================
--- trunk/maay/data/footer.html	2005-11-15 09:45:40 UTC (rev 490)
+++ trunk/maay/data/footer.html	2005-11-15 10:00:55 UTC (rev 491)
@@ -4,8 +4,7 @@
   <hr/>
   <table width="100%">
     <tr>
-      <td valign="top"><a href="/" class="footlink">[Main&nbsp;page]</a></td>
-      <td valign="top" width="100%"><a href="/indexation" class="footlink">[Indexation&nbsp;Page]&nbsp;</a></td>
+      <td valign="top" width="100%"><a href="/" class="footlink">[Main&nbsp;page]</a></td>
       <td valign="top"><a href="http://maay.netofpeers.net/" class="footlink">[Maay&nbsp;Home&nbsp;page]</a></td>
       <td align="right"><img src="/images/logoFT.png" /></td>
     </tr>

Modified: trunk/maay/data/indexationpage.html
===================================================================
--- trunk/maay/data/indexationpage.html	2005-11-15 09:45:40 UTC (rev 490)
+++ trunk/maay/data/indexationpage.html	2005-11-15 10:00:55 UTC (rev 491)
@@ -21,11 +21,11 @@
     </div>
   <h2>Public Directories</h2>
   <h3>Indexed</h3>
-    <div nevow:render="sequence" nevow:data="indexedprivatedirectories">
+    <div nevow:render="sequence" nevow:data="indexedpublicdirectories">
       <div class="indexedDirectoryName" nevow:pattern="item" nevow:render="directory"><nevow:slot name="name" /></div>
     </div>
     <h3>Skipped</h3>
-    <div nevow:render="sequence" nevow:data="skippedprivatedirectories">
+    <div nevow:render="sequence" nevow:data="skippedpublicdirectories">
       <div class="skippedDirectoryName" nevow:pattern="item" nevow:render="directory"><nevow:slot name="name" /></div>
     </div>
   <hr />

Modified: trunk/maay/data/maay.css
===================================================================
--- trunk/maay/data/maay.css	2005-11-15 09:45:40 UTC (rev 490)
+++ trunk/maay/data/maay.css	2005-11-15 10:00:55 UTC (rev 491)
@@ -3,8 +3,20 @@
 h1 { font-family: arial,helvetica; font-size: 14pt; color: #000000; font-weight:bold }
 h2 {  font-family: Arial, Helvetica, sans-serif; font-size: 12pt; font-style:italic ; font-weight: bold ; color: #444444}
 h3 {  font-family: Arial, Helvetica, sans-serif; font-size: 10pt; font-weight: bold; color: #888888}
+/** header ********/
+div.headlinks {
+  text-align: right;
+}
 
+a.headlink {
+  /* display: block; */
+  font-size: 70%;
+  color: #444444;
+  text-align: right;
+}
 
+
+
 /** footer ********/
 a.footlink {
   /* display: block; */
@@ -29,11 +41,33 @@
   text-align: center;
 }
 
-div.resultItem {
+div.localPublicResult {
   margin-top: 5px;
   margin-bottom: 5px;
+  border-left-style: solid;
+  border-left-width: 4px;
+  border-left-color: #00ff00;
 }
 
+div.localPrivateResult {
+  margin-top: 5px;
+  margin-bottom: 5px;
+  border-left-style: solid;
+  border-left-width: 4px;
+  border-left-color: #00ff00;
+}
+
+
+
+div.distantResult {
+  margin-top: 5px;
+  margin-bottom: 5px;
+  border-left-style: solid;
+  border-left-width: 4px;
+  border-left-color: #ff0000;
+}
+
+
 div.resultDesc {
   /* display: block; */
   font-size: 90%;

Modified: trunk/maay/data/searchform.html
===================================================================
--- trunk/maay/data/searchform.html	2005-11-15 09:45:40 UTC (rev 490)
+++ trunk/maay/data/searchform.html	2005-11-15 10:00:55 UTC (rev 491)
@@ -21,6 +21,5 @@
         </td>
       </tr>
     </table>
-  <small><p align="right"><a href="/indexation">Indexation page</a></p></small>
   </nevow:invisible>
   

Modified: trunk/maay/data/skeleton.html
===================================================================
--- trunk/maay/data/skeleton.html	2005-11-15 09:45:40 UTC (rev 490)
+++ trunk/maay/data/skeleton.html	2005-11-15 10:00:55 UTC (rev 491)
@@ -6,7 +6,7 @@
     <link rel="stylesheet" type="text/css" href="maaycss"/>
       <link rel="shortcut icon" href="images/maay.ico" />
   </head>
- 
+      <div class="headlinks"><a href="/indexation" class="headlink">[Indexation&nbsp;Page]&nbsp;</a></div>
   <body>
     <nevow:invisible nevow:macro="body" />
     <nevow:invisble nevow:macro="footer" />

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-15 09:45:40 UTC (rev 490)
+++ trunk/maay/webapplication.py	2005-11-15 10:00:55 UTC (rev 491)
@@ -441,17 +441,24 @@
     """
     docFactory = loaders.xmlstr("""
   <div id="resultsDiv" xmlns="http://www.w3.org/1999/xhtml" xmlns:nevow="http://nevow.com/ns/nevow/0.1" >
-   <a href="javascript: onlyLocalResults();"><span nevow:render="localcount" /> local results</a><br/>
-   <a href="javascript: onlyDistantResults();"><span nevow:render="distantcount" /> distant results</a><br/>
-   <a href="javascript: allResults();"><span nevow:render="totalcount" /> results</a><br/>
    <div class="message" nevow:render="title">Results <b><nevow:slot name="start_result" /></b> - <b><nevow:slot name="end_result" /></b> of <b><nevow:slot name="count" /></b> for <b><nevow:slot name="words" /></b>.</div>
+   <table>
+     <tr>
+       <td><div class="localPublicResult"><a href="javascript: onlyLocalResults();"><span nevow:render="localcount" /> local</a></div></td>
+       <td> - </td>
+       <td> <div class="distantResult"><a href="javascript: onlyDistantResults();"><span nevow:render="distantcount" /> distant</a></div></td>
+       <td>-</td>
+       <td><a href="javascript: allResults();"><span nevow:render="totalcount" /> all</a></td>
+     </tr>
+   </table>
    <div class="prevnext"><a><nevow:attr name="href"
     nevow:render="prevset_url"/>Previous</a> - <a><nevow:attr
     name="href" nevow:render="nextset_url"/>Next</a></div>
     <table class="results" nevow:render="sequence" nevow:data="results">
       <tr nevow:pattern="item" nevow:render="row">
         <td>
-          <div class="resultItem">
+          <div>
+            <nevow:attr name="class"><nevow:slot name="resultClass" /></nevow:attr>
             <table>
               <tr><td><div><nevow:attr name="class"><nevow:slot name="mime_type"/></nevow:attr></div></td>
                   <td>
@@ -492,13 +499,17 @@
     
     def render_row(self, context, data):
         document = data
+        print data
         ResultsPageMixIn.render_row(self, context, data)
         if document.host == 'localhost':
             baseurl = '/download?docid=%s' % (document.document_id,)
             context.fillSlots('linkClass', "docTitle")
+            # TODO: make a difference between private and public results
+            context.fillSlots('resultClass', "localPublicResult")
         else:
             baseurl = '/distantfile?docid=%s' % (document.document_id,)
             context.fillSlots('linkClass', "distantDocTitle")
+            context.fillSlots('resultClass', "distantResult")
             baseurl += '&host=%s' % (document.host,)
             baseurl += '&port=%s' % (document.port,)
         baseurl += '&filename=%s' % osp.basename(document.url)



From afayolle at berlios.de  Tue Nov 15 11:18:45 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Tue, 15 Nov 2005 11:18:45 +0100
Subject: [Maay-svncheckins] r492 - trunk/maay/win32
Message-ID: <200511151018.jAFAIjxp014963@sheep.berlios.de>

Author: afayolle
Date: 2005-11-15 11:18:35 +0100 (Tue, 15 Nov 2005)
New Revision: 492

Modified:
   trunk/maay/win32/updateconfig.py
Log:
small refactoring
added some verbosity to help diagnose problems

Modified: trunk/maay/win32/updateconfig.py
===================================================================
--- trunk/maay/win32/updateconfig.py	2005-11-15 10:00:55 UTC (rev 491)
+++ trunk/maay/win32/updateconfig.py	2005-11-15 10:18:35 UTC (rev 492)
@@ -77,10 +77,14 @@
     f.close()
 
 def probe_presence_config():
-    for addr in (('maay.rd.francetelecom.fr', 2345), # private FT server
-                 ('192.33.178.29', 2345), # public FT server
-                 ('172.17.1.4', 2345),    # private logilab server
-                 ('192.168.74.105', 2345),# private logilab server
+    default = ('192.33.178.29', 2345)
+    private_ft = ('maay.rd.francetelecom.fr', 2345)
+    crater = ('172.17.1.4', 2345)
+    jenkins = ('192.168.74.105', 2345)
+    for addr in (private_ft,
+                 default, # public FT server
+                 crater,    # private logilab server
+                 jenkins,# private logilab server
                  ):
         print 'probing', addr
         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
@@ -90,8 +94,10 @@
         except socket.error, exc:
             continue
         else:
+            print "found presence server listening at %s:%d" % addr
             return addr
-    return '192.33.178.29', 2345
+    print "using default configuration: %s:%d" % default
+    return default
         
     
 if __name__ == '__main__':



From adimasci at berlios.de  Tue Nov 15 11:19:29 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Tue, 15 Nov 2005 11:19:29 +0100
Subject: [Maay-svncheckins] r493 - in trunk/maay: . data
Message-ID: <200511151019.jAFAJT0P015100@sheep.berlios.de>

Author: adimasci
Date: 2005-11-15 11:19:27 +0100 (Tue, 15 Nov 2005)
New Revision: 493

Modified:
   trunk/maay/data/liveresults.html
   trunk/maay/webapplication.py
Log:
- fixed the bug that displayed every local results until
  we didn't have a P2P answer
- improved a bit previous / next links management

Modified: trunk/maay/data/liveresults.html
===================================================================
--- trunk/maay/data/liveresults.html	2005-11-15 10:18:35 UTC (rev 492)
+++ trunk/maay/data/liveresults.html	2005-11-15 10:19:27 UTC (rev 493)
@@ -59,9 +59,7 @@
    <a href="javascript: onlyDistantResults();"><span nevow:render="distantcount" /> distant results</a><br/>
    <a href="javascript: allResults();"><span nevow:render="totalcount" /> results</a><br/>
    <div class="message" nevow:render="title">Results <nevow:slot name="start_result" /> - <nevow:slot name="end_result" /> (<nevow:slot name="count" />) for <b><nevow:slot name="words" /></b>.</div>
-    <div class="prevnext"><a><nevow:attr name="href"
-    nevow:render="prevset_url"/>Previous</a> - <a><nevow:attr
-    name="href" nevow:render="nextset_url"/>Next</a></div>
+   <div class="prevnext"><nevow:invisible nevow:macro="prevnext" /></div>
     <table class="results" nevow:render="sequence" nevow:data="results">
       <tr nevow:pattern="item" nevow:render="row">
         <td>
@@ -73,10 +71,8 @@
         </td>
       </tr>
     </table>
-    <div class="prevnext"><a><nevow:attr name="href"
-    nevow:render="prevset_url"/>Previous</a> - <a><nevow:attr
-    name="href" nevow:render="nextset_url"/>Next</a></div>
-    <nevow:invisble nevow:macro="footer" />
+    <div class="prevnext"><nevow:invisible nevow:macro="prevnext" /></div>
+    <nevow:invisible nevow:macro="footer" />
   </div>
  </body>
 </html>

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-15 10:18:35 UTC (rev 492)
+++ trunk/maay/webapplication.py	2005-11-15 10:19:27 UTC (rev 493)
@@ -277,13 +277,52 @@
         return context.tag
 
 class ResultsPageMixIn:
-            
+
     def data_results(self, context, data):
         return self.results
     
     def macro_footer(self, context):
         return loaders.xmlfile(get_path_of('footer.html'))
 
+    def macro_prevnext(self, context):
+        return loaders.stan(
+          tags.invisible()[
+            tags.invisible(render=tags.directive("onFirstSlice"))[
+              tags.invisible(pattern="Previous")[
+                tags.a(href=tags.invisible(render=self.prevset_url))['Previous'],
+                tags.xml(" &nbsp; "),
+                ],
+              ],
+            tags.invisible(render=tags.directive("onLastSlice"))[
+              tags.a(pattern="Next", href=tags.invisible(render=self.nextset_url))['Next']
+            ],
+          ],
+        )
+
+    def render_onLastSlice(self, context, data):
+        """returns a specific pattern to tell if we're on last slice or not"""
+        q = inevow.IQ(context)
+        nextPattern = q.onePattern('Next')
+        localCount, distantCount = self.querier.countResults(self.queryId)
+        if self.onlyDistant:
+            resultsCount = distantCount
+        elif self.onlyLocal:
+            resultsCount = localCount
+        else:
+            resultsCount = localCount + distantCount
+        offset = self.query.offset
+        if (offset + 15) > resultsCount:
+            return context.tag().clear()
+        return nextPattern or context.tag().clear()
+
+    def render_onFirstSlice(self, context, data):
+        """returns a specific pattern to tell if we're on first slice or not"""
+        q = inevow.IQ(context)
+        falsePattern = q.onePattern('Previous')
+        if (self.query.offset <= 0):
+            return context.tag().clear()
+        return falsePattern or context.tag().clear()
+    
     def render_title(self, context, data):
         localCount, distantCount = self.querier.countResults(self.queryId)
         if self.onlyDistant:
@@ -295,7 +334,7 @@
         offset = self.query.offset
         context.fillSlots('words', self.query.joinwords(' ')) #WORDS
         context.fillSlots('start_result', offset + 1)
-        context.fillSlots('end_result', min(resultsCount, offset+15))#self.offset + len(self.results))
+        context.fillSlots('end_result', min(resultsCount, offset+15))
         context.fillSlots('count', resultsCount)
         return context.tag
 
@@ -315,18 +354,15 @@
         context.fillSlots('words', self.query.joinwords(' ')) #WORDS
         return context.tag
 
-    def render_prevset_url(self, context, data):
-        words = WORDS_RGX.findall(normalizeText(unicode(context.arg('words'), 'utf-8')))
-        offset = int(context.arg('offset', 0))
+    def nextset_url(self, context, data):
+        return 'javascript: browseResults(%s);' % (self.query.offset + 15,)
+
+    def prevset_url(self, context, data):
+        offset = self.query.offset
         if offset:
             offset -= 15
-        return 'search?words=%s&offset=%s' % ('+'.join(words), offset)
+        return 'javascript: browseResults(%s);' % (offset,)
 
-    def render_nextset_url(self, context, data):
-        words = WORDS_RGX.findall(normalizeText(unicode(context.arg('words'), 'utf-8')))
-        offset = int(context.arg('offset', 0)) + 15
-        return 'search?words=%s&offset=%s' % ('+'.join(words), offset)
-
     def render_row(self, context, data):
         document = data
         words = self.query.words #WORDS (was .split())
@@ -351,12 +387,6 @@
         context.fillSlots('publication_date', date.strftime('%d %b %Y'))
         return context.tag
     
-class StaticResultsPage(MaayPage, ResultsPageMixIn):
-    bodyFactory = loaders.xmlfile(get_path_of('resultpage.html'))
-
-    def __init__(self, results):
-        self.results = results
-
 from nevow import athena, inevow
 from twisted.python import log
 
@@ -381,7 +411,6 @@
         self.onlyDistant = False
         # push local results once for all
         if len(inevow.IRemainingSegments(context)) < 2:
-            print "-=" * 40
             results = querier.findDocuments(self.query)
             webappConfig = INodeConfiguration(context)
             p2pQuery = P2pQuery(webappConfig.get_node_id(),
@@ -389,14 +418,15 @@
                                 self.query)
             self.queryId = p2pQuery.qid
             self.p2pQuery = p2pQuery
-            self.results = results
-            # self.results = self.querier.getQueryResults(self.queryId, offset=0)
-            # self.querier.pushDocuments(self.queryId, self.results, provider=None)
-        
+            self.querier.pushDocuments(self.queryId, results, provider=None)
+            self.results = self.querier.getQueryResults(self.queryId, offset=0)
+            
     def onNewResults(self, provider, results):
         results = [Document(**params) for params in results]
         self.querier.pushDocuments(self.queryId, results, provider)
-        results = self.querier.getQueryResults(self.queryId, offset=self.query.offset, onlyLocal=self.onlyLocal, onlyDistant=self.onlyDistant) # XXX limit ?
+        results = self.querier.getQueryResults(self.queryId, offset=self.query.offset,
+                                               onlyLocal=self.onlyLocal,
+                                               onlyDistant=self.onlyDistant)
         page = PleaseCloseYourEyes(results, self.querier, self.query, self.queryId,
                                    self.onlyLocal, self.onlyDistant).renderSynchronously()
         page = unicode(page, 'utf-8')
@@ -407,12 +437,14 @@
         #TODO: very soon, the line below will also be the p2pquerier's job
         self.p2pquerier.sendQuery(self.p2pQuery)
         self.p2pquerier.addAnswerCallback(self.p2pQuery.qid, self.onNewResults)
-        self.querier.pushDocuments(self.queryId, self.results, provider=None)
+        # self.querier.pushDocuments(self.queryId, self.results, provider=None)
         return u''
     
     def remote_browseResults(self, context, offset):
         self.query.offset = offset
-        results = self.querier.getQueryResults(self.queryId, offset=offset, onlyLocal=self.onlyLocal, onlyDistant=self.onlyDistant) # XXX limit ?
+        results = self.querier.getQueryResults(self.queryId, offset=offset,
+                                               onlyLocal=self.onlyLocal,
+                                               onlyDistant=self.onlyDistant)
         page = PleaseCloseYourEyes(results, self.querier, self.query, self.queryId,
                                    self.onlyLocal, self.onlyDistant).renderSynchronously()
         page = unicode(page, 'utf-8')
@@ -421,16 +453,19 @@
     def remote_setLocalFlag(self, context, flag):
         self.onlyLocal = flag
         self.onlyDistant = False
+        self.query.offset = 0
         return self.remote_browseResults(context, self.query.offset)
 
     def remote_setDistantFlag(self, context, flag):
         self.onlyDistant = flag
         self.onlyLocal = False
+        self.query.offset = 0
         return self.remote_browseResults(context, self.query.offset)
 
     def remote_unsetFlags(self, context):
         self.onlyDistant = False
         self.onlyLocal = False
+        self.query.offset = 0
         return self.remote_browseResults(context, self.query.offset)
     
 
@@ -442,6 +477,7 @@
     docFactory = loaders.xmlstr("""
   <div id="resultsDiv" xmlns="http://www.w3.org/1999/xhtml" xmlns:nevow="http://nevow.com/ns/nevow/0.1" >
    <div class="message" nevow:render="title">Results <b><nevow:slot name="start_result" /></b> - <b><nevow:slot name="end_result" /></b> of <b><nevow:slot name="count" /></b> for <b><nevow:slot name="words" /></b>.</div>
+    <div class="prevnext"><nevow:invisible nevow:macro="prevnext" /></div>
    <table>
      <tr>
        <td><div class="localPublicResult"><a href="javascript: onlyLocalResults();"><span nevow:render="localcount" /> local</a></div></td>
@@ -451,9 +487,6 @@
        <td><a href="javascript: allResults();"><span nevow:render="totalcount" /> all</a></td>
      </tr>
    </table>
-   <div class="prevnext"><a><nevow:attr name="href"
-    nevow:render="prevset_url"/>Previous</a> - <a><nevow:attr
-    name="href" nevow:render="nextset_url"/>Next</a></div>
     <table class="results" nevow:render="sequence" nevow:data="results">
       <tr nevow:pattern="item" nevow:render="row">
         <td>
@@ -475,9 +508,7 @@
         </td>
       </tr>
     </table>
-    <div class="prevnext"><a><nevow:attr name="href"
-    nevow:render="prevset_url"/>Previous</a> - <a><nevow:attr
-    name="href" nevow:render="nextset_url"/>Next</a></div>
+    <div class="prevnext"><nevow:invisible nevow:macro="prevnext" /></div>
     <nevow:invisble nevow:macro="footer" />
   </div>
     """)
@@ -499,7 +530,6 @@
     
     def render_row(self, context, data):
         document = data
-        print data
         ResultsPageMixIn.render_row(self, context, data)
         if document.host == 'localhost':
             baseurl = '/download?docid=%s' % (document.document_id,)



From dnf at berlios.de  Tue Nov 15 11:25:55 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Tue, 15 Nov 2005 11:25:55 +0100
Subject: [Maay-svncheckins] r494 - trunk/maay/data
Message-ID: <200511151025.jAFAPtQU015680@sheep.berlios.de>

Author: dnf
Date: 2005-11-15 11:25:52 +0100 (Tue, 15 Nov 2005)
New Revision: 494

Modified:
   trunk/maay/data/footer.html
   trunk/maay/data/maay.css
   trunk/maay/data/resultpage.html
Log:
Add link to francetelecom r&d site.



Modified: trunk/maay/data/footer.html
===================================================================
--- trunk/maay/data/footer.html	2005-11-15 10:19:27 UTC (rev 493)
+++ trunk/maay/data/footer.html	2005-11-15 10:25:52 UTC (rev 494)
@@ -6,7 +6,7 @@
     <tr>
       <td valign="top" width="100%"><a href="/" class="footlink">[Main&nbsp;page]</a></td>
       <td valign="top"><a href="http://maay.netofpeers.net/" class="footlink">[Maay&nbsp;Home&nbsp;page]</a></td>
-      <td align="right"><img src="/images/logoFT.png" /></td>
+      <td align="right"><a href="http://www.francetelecom.com/en/group/rd/"><img src="/images/logoFT.png" /></a></td>
     </tr>
   </table>
 </div>

Modified: trunk/maay/data/maay.css
===================================================================
--- trunk/maay/data/maay.css	2005-11-15 10:19:27 UTC (rev 493)
+++ trunk/maay/data/maay.css	2005-11-15 10:25:52 UTC (rev 494)
@@ -15,8 +15,10 @@
   text-align: right;
 }
 
+img {
+  border:0px
+}
 
-
 /** footer ********/
 a.footlink {
   /* display: block; */

Modified: trunk/maay/data/resultpage.html
===================================================================
--- trunk/maay/data/resultpage.html	2005-11-15 10:19:27 UTC (rev 493)
+++ trunk/maay/data/resultpage.html	2005-11-15 10:25:52 UTC (rev 494)
@@ -6,7 +6,7 @@
     <form action="search" accept-charset="utf-8">
       <table>
         <tr>
-          <td><a href="/"><img border="0" src="images/smallmaay.png" /></a></td>
+          <td><a href="/"><img src="images/smallmaay.png" /></a></td>
           <td><input type="text" name="words" nevow:render="searchfield"><nevow:attr name="value" ><nevow:slot name="words" /></nevow:attr></input></td>
           <td><input type="submit" class="searchButton" value="search" /></td>
 	</tr>



From aurelienc at berlios.de  Tue Nov 15 12:27:42 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Tue, 15 Nov 2005 12:27:42 +0100
Subject: [Maay-svncheckins] r495 - trunk/maay
Message-ID: <200511151127.jAFBRgTN024065@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-15 12:27:38 +0100 (Tue, 15 Nov 2005)
New Revision: 495

Modified:
   trunk/maay/configuration.py
   trunk/maay/webapplication.py
Log:
-new configuration option : download_index_dir, in which distant docs shall be automagically placed
-place any downloaded distant doc in the above `download_index_dir`


Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-15 10:25:52 UTC (rev 494)
+++ trunk/maay/configuration.py	2005-11-15 11:27:38 UTC (rev 495)
@@ -252,8 +252,18 @@
                 continue
         raise ValueError('Unable to find a writable directory to store the node id')
 
-################ Indexer stuff 
+################ Indexer stuff
 
+    
+def _download_index_dir():
+    if sys.platform == 'win32':
+        theDir = "C:\Documents and Settings\All Users\Documents\MaayDownloads"
+    else:
+        theDir = osp.expanduser('~/maay-downloads/')
+    if not osp.exists(theDir):
+        os.makedirs(theDir)
+    return theDir
+
 class IndexerConfiguration(Configuration):
     options = Configuration.options + [
         ('host',
@@ -301,14 +311,19 @@
           'help': 'index this directory with the public indexer',
           'default' : []
           }),
-         
         ('public-skip-dir',
          {'type': 'csv',
           'metavar': '<csv>', 'short': 'S',
           'help': 'the public indexer will skip this directory',
           'default' : []
           }),
-
+        ('download-index-dir',
+         {'type': 'string',
+          'metavar': '<downloads>',
+          'help': 'downloaded files will go there and be immediately indexed',
+          'default' : _download_index_dir()
+          }),
+        
         ('verbose',
          {'type': 'yn',
           'metavar': '<y or n>', 'short': 'v',
@@ -320,7 +335,7 @@
           'help' : 'purge the set of indexed documents and returns immediately',
           'metavar' : '<y or n>',
           'default' : False,
-          }),
+          })
         ]
 
     config_file = 'indexer.ini'

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-15 10:25:52 UTC (rev 494)
+++ trunk/maay/webapplication.py	2005-11-15 11:27:38 UTC (rev 495)
@@ -106,46 +106,49 @@
             context.fillSlots(attrname, getattr(peerNode, attrname, 'N/A'))
         return context.tag
 
-class DownloadedDocs:
-    """manage automatic removal of locally downloaded
-       documents in a clunky way
-       note : tmpdirs should contain exactly one file
-              and last no longer than the file
-    """
+## class DownloadedDocs:
+##     """manage automatic removal of locally downloaded
+##        documents in a clunky way
+##        note : tmpdirs should contain exactly one file
+##               and last no longer than the file
+##     """
     
-    DIRS = {}
+##     DIRS = {}
 
-    def makeTmpDir():
-        tempdir = mkdtemp()
-        DownloadedDocs.DIRS[tempdir] = []
-        print "DownaloadedDocs makeTmpDir : created %s" % tempdir
-        return tempdir
-    makeTmpDir = staticmethod(makeTmpDir)
+##     def makeTmpDir():
+##         tempdir = mkdtemp()
+##         DownloadedDocs.DIRS[tempdir] = []
+##         print "DownaloadedDocs makeTmpDir : created %s" % tempdir
+##         return tempdir
+##     makeTmpDir = staticmethod(makeTmpDir)
 
-    def addFile(tempdir, thefile):
-        DownloadedDocs.DIRS[tempdir].append(thefile)
-        print "DownaloadedDocs makeTmpDir : added %s to %s" \
-              % (osp.basename(thefile), tempdir)
-        reactor.callLater(30, DownloadedDocs.cleanup)
-    addFile = staticmethod(addFile)
+##     def addFile(tempdir, thefile):
+##         DownloadedDocs.DIRS[tempdir].append(thefile)
+##         print "DownaloadedDocs makeTmpDir : added %s to %s" \
+##               % (osp.basename(thefile), tempdir)
+##         reactor.callLater(30, DownloadedDocs.cleanup)
+##     addFile = staticmethod(addFile)
 
-    def cleanup():
-        for tmpdir in DownloadedDocs.DIRS:
-            files = DownloadedDocs.DIRS[tmpdir]
-            for fil in files:
-                try:
-                    os.unlink(fil)
-                    print "DownloadedDocs cleanup : removing %s" % fil
-                except:
-                    import traceback
-                    traceback.print_exc()
-            try:
-                os.rmdir(tmpdir)
-                print "DownloadedDocs cleanup : removing %s" % tmpdir
-            except:
-                import traceback
-                traceback.print_exc()
-    cleanup = staticmethod(cleanup)
+##     def cleanup():
+##         for tmpdir in DownloadedDocs.DIRS:
+##             files = DownloadedDocs.DIRS[tmpdir]
+##             for fil in files:
+##                 try:
+##                     os.unlink(fil)
+##                     print "DownloadedDocs cleanup : removing %s" % fil
+##                 except:
+##                     import traceback
+##                     traceback.print_exc()
+##             try:
+##                 os.rmdir(tmpdir)
+##                 print "DownloadedDocs cleanup : removing %s" % tmpdir
+##             except:
+##                 import traceback
+##                 traceback.print_exc()
+##     cleanup = staticmethod(cleanup)
+
+_idxcfg = IndexerConfiguration()
+_idxcfg.load()
                     
 class SearchForm(MaayPage):
     """default search form"""
@@ -156,6 +159,7 @@
         MaayPage.__init__(self, maayId)
         self.querier = querier
         self.p2pquerier = p2pquerier
+        self.download_dir = _idxcfg.download_index_dir
         
     def logout(self):
         print "Bye %s !" % (self.maayId,)
@@ -186,15 +190,15 @@
     
     # XXX make sure that the requested document is really in the database
     # XXX don't forget to update the download statistics of the document
-    def child_download(self, context):
-        print "I HOPE WE NEVER GET THERE"
-        docid = context.arg('docid')
-        query = Query.fromRawQuery(unicode(context.arg('words'), 'utf-8'))
-        docurl = self.querier.notifyDownload(docid, query.words)
-        if docurl:
-            return static.File(docurl)
-        else:
-            return Maay404()
+##     def child_download(self, context):
+##         print "I HOPE WE NEVER GET THERE"
+##         docid = context.arg('docid')
+##         query = Query.fromRawQuery(unicode(context.arg('words'), 'utf-8'))
+##         docurl = self.querier.notifyDownload(docid, query.words)
+##         if docurl:
+##             return static.File(docurl)
+##         else:
+##             return Maay404()
 
     def child_distantfile(self, context):
         host = context.arg('host')
@@ -214,27 +218,21 @@
     def gotDataBack(self, rpcFriendlyData, filename):
         fileData = rpcFriendlyData.data
         print " ... downloaded !"
-        tmpdir = DownloadedDocs.makeTmpDir()
-        filepath = osp.join(tmpdir, filename)
+        filepath = osp.join(self.download_dir, filename)
         f=file(filepath,'wb')
         f.write(fileData)
         f.close()
-        return DistantFilePage(tmpdir, filepath)
+        return DistantFilePage(filepath)
 
     def onDownloadFileError(self, error, filename):
         msg = "Error while downloading file: %s" % (filename,)
         return Maay404(msg)
     
 class DistantFilePage(static.File):
-    def __init__(self, tmpdir, filepath):
+    def __init__(self, filepath):
         static.File.__init__(self, filepath)
-        self.tmpdir = tmpdir
         self.filepath = filepath
         
-    def __del__(self):
-        DownloadedDocs.addFile(self.tmpdir, self.filepath)
-    
-
 class IndexationPage(MaayPage):
     # just for the demo. Should be moved to a adminpanel interface later.
     """index page"""



From adimasci at berlios.de  Tue Nov 15 12:36:53 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Tue, 15 Nov 2005 12:36:53 +0100
Subject: [Maay-svncheckins] r496 - trunk/maay/sql
Message-ID: <200511151136.jAFBarZa028478@sheep.berlios.de>

Author: adimasci
Date: 2005-11-15 12:36:45 +0100 (Tue, 15 Nov 2005)
New Revision: 496

Modified:
   trunk/maay/sql/mysql.sql
Log:
added a timestamp for results' records

Modified: trunk/maay/sql/mysql.sql
===================================================================
--- trunk/maay/sql/mysql.sql	2005-11-15 11:27:38 UTC (rev 495)
+++ trunk/maay/sql/mysql.sql	2005-11-15 11:36:45 UTC (rev 496)
@@ -158,6 +158,7 @@
   `host` varchar(15),
   `port` int(11), -- check this
   `login` varchar(255),
+  `record_ts` TIMESTAMP(8), -- DEFAULT NOW() is not necessary because records are not updated
   PRIMARY KEY (`db_document_id`, `query_id`, `host`, `port`)
 --  KEY `document_id` (`document_id`),
 --  KEY `url` (`url`)



From aurelienc at berlios.de  Tue Nov 15 12:50:04 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Tue, 15 Nov 2005 12:50:04 +0100
Subject: [Maay-svncheckins] r497 - trunk/maay
Message-ID: <200511151150.jAFBo4Is000115@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-15 12:49:58 +0100 (Tue, 15 Nov 2005)
New Revision: 497

Modified:
   trunk/maay/webapplication.py
Log:
Remove dead code, and restore unduly removed code


Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-15 11:36:45 UTC (rev 496)
+++ trunk/maay/webapplication.py	2005-11-15 11:49:58 UTC (rev 497)
@@ -106,47 +106,6 @@
             context.fillSlots(attrname, getattr(peerNode, attrname, 'N/A'))
         return context.tag
 
-## class DownloadedDocs:
-##     """manage automatic removal of locally downloaded
-##        documents in a clunky way
-##        note : tmpdirs should contain exactly one file
-##               and last no longer than the file
-##     """
-    
-##     DIRS = {}
-
-##     def makeTmpDir():
-##         tempdir = mkdtemp()
-##         DownloadedDocs.DIRS[tempdir] = []
-##         print "DownaloadedDocs makeTmpDir : created %s" % tempdir
-##         return tempdir
-##     makeTmpDir = staticmethod(makeTmpDir)
-
-##     def addFile(tempdir, thefile):
-##         DownloadedDocs.DIRS[tempdir].append(thefile)
-##         print "DownaloadedDocs makeTmpDir : added %s to %s" \
-##               % (osp.basename(thefile), tempdir)
-##         reactor.callLater(30, DownloadedDocs.cleanup)
-##     addFile = staticmethod(addFile)
-
-##     def cleanup():
-##         for tmpdir in DownloadedDocs.DIRS:
-##             files = DownloadedDocs.DIRS[tmpdir]
-##             for fil in files:
-##                 try:
-##                     os.unlink(fil)
-##                     print "DownloadedDocs cleanup : removing %s" % fil
-##                 except:
-##                     import traceback
-##                     traceback.print_exc()
-##             try:
-##                 os.rmdir(tmpdir)
-##                 print "DownloadedDocs cleanup : removing %s" % tmpdir
-##             except:
-##                 import traceback
-##                 traceback.print_exc()
-##     cleanup = staticmethod(cleanup)
-
 _idxcfg = IndexerConfiguration()
 _idxcfg.load()
                     
@@ -190,17 +149,18 @@
     
     # XXX make sure that the requested document is really in the database
     # XXX don't forget to update the download statistics of the document
-##     def child_download(self, context):
-##         print "I HOPE WE NEVER GET THERE"
-##         docid = context.arg('docid')
-##         query = Query.fromRawQuery(unicode(context.arg('words'), 'utf-8'))
-##         docurl = self.querier.notifyDownload(docid, query.words)
-##         if docurl:
-##             return static.File(docurl)
-##         else:
-##             return Maay404()
+    def child_download(self, context):
+        """download *local* file"""
+        docid = context.arg('docid')
+        query = Query.fromRawQuery(unicode(context.arg('words'), 'utf-8'))
+        docurl = self.querier.notifyDownload(docid, query.words)
+        if docurl:
+            return static.File(docurl)
+        else:
+            return Maay404()
 
     def child_distantfile(self, context):
+        """download distant file and put it in a public indexable directory"""
         host = context.arg('host')
         port = context.arg('port')
         words = context.arg('words').split()



From adimasci at berlios.de  Tue Nov 15 12:58:07 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Tue, 15 Nov 2005 12:58:07 +0100
Subject: [Maay-svncheckins] r498 - trunk/maay
Message-ID: <200511151158.jAFBw77N004719@sheep.berlios.de>

Author: adimasci
Date: 2005-11-15 12:58:01 +0100 (Tue, 15 Nov 2005)
New Revision: 498

Modified:
   trunk/maay/querier.py
   trunk/maay/webapplication.py
Log:
- added a method on querier to purge "old" results (for
  now, treshold is arbitrary fixed to one hour)
- call the purge method on a new query (could be done
  with reactor.callLater instead, but oh well ...)

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-15 11:49:58 UTC (rev 497)
+++ trunk/maay/querier.py	2005-11-15 11:58:01 UTC (rev 498)
@@ -25,6 +25,7 @@
 __metaclass__ = type
 
 import time
+from mx.DateTime import now, DateTimeDelta
 import traceback
 from math import sqrt, log
 
@@ -41,6 +42,7 @@
 
 ANONYMOUS_AVATARID = '__anonymous__'
 WEB_AVATARID = '__may__'
+ONE_HOUR = DateTimeDelta(0, 1)
     
 class IQuerier(Interface):
     """defines the High-Level interface to Maay SQL database"""
@@ -123,7 +125,6 @@
             cursor.execute(query, args)
             results = cursor.fetchall()
         except:
-            import traceback
             traceback.print_exc()
             print "GOT ERROR while executing %r/%s ... rollback" % (query, args)
             cursor.close()
@@ -156,7 +157,6 @@
             return Document.selectContaining(cursor, words, query.filetype,
                                              query.offset, self.searchInPrivate)
         finally:
-            import traceback
             traceback.print_exc()
             cursor.close()
         return []
@@ -338,9 +338,23 @@
             cursor.close()
             self._cnx.commit()
         except:
-            import traceback
             traceback.print_exc()
             self._cnx.rollback()
+
+    def purgeOldResults(self):
+        """removes old records in the results table"""
+        tresholdDate = now() - ONE_HOUR
+        query = 'DELETE FROM results WHERE record_ts < %(treshold)s'
+        cursor = self._cnx.cursor()
+        try:
+            cursor.execute(query, {'treshold' : tresholdDate})
+        except:
+            traceback.print_exc()
+            cursor.close()
+            self._cnx.rollback()
+        else:
+            cursor.close()
+            self._cnx.commit()
         
 class MaayQuerier(AnonymousQuerier):
     """High-Level interface to Maay SQL database.

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-15 11:49:58 UTC (rev 497)
+++ trunk/maay/webapplication.py	2005-11-15 11:58:01 UTC (rev 498)
@@ -376,6 +376,8 @@
                                 self.query)
             self.queryId = p2pQuery.qid
             self.p2pQuery = p2pQuery
+            # purge old results
+            self.querier.purgeOldResults()
             self.querier.pushDocuments(self.queryId, results, provider=None)
             self.results = self.querier.getQueryResults(self.queryId, offset=0)
             



From aurelienc at berlios.de  Tue Nov 15 14:08:58 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Tue, 15 Nov 2005 14:08:58 +0100
Subject: [Maay-svncheckins] r499 - trunk/maay
Message-ID: <200511151308.jAFD8waZ005460@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-15 14:08:55 +0100 (Tue, 15 Nov 2005)
New Revision: 499

Modified:
   trunk/maay/configuration.py
   trunk/maay/webapplication.py
Log:
Restore correct configuration beheviour for nodes


Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-15 11:58:01 UTC (rev 498)
+++ trunk/maay/configuration.py	2005-11-15 13:08:55 UTC (rev 499)
@@ -87,13 +87,30 @@
     return [file_obj for file_obj in file_list
             if os.access(file_obj, access_criterium)]
 
+def _download_index_dir():
+    if sys.platform == 'win32':
+        theDir = "C:\Documents and Settings\All Users\Documents\MaayDownloads"
+    else:
+        theDir = osp.expanduser('~/maay-downloads/')
+    if not osp.exists(theDir):
+        os.makedirs(theDir)
+    return theDir
+
 class Configuration(BaseConfiguration):
     options = [
         ('config-name',
          {'type' : "string", 'metavar' : "<config-name>", 'short' : "C",
          'help' : "allow to specify a config directory name",
           'default' : "maay",
-        })]
+        }),
+        ('download-index-dir',
+         {'type': 'string',
+          'metavar': '<downloads>',
+          'help': 'downloaded files will go there and be immediately indexed',
+          'default' : _download_index_dir()
+          })
+
+        ]
     config_file = None
 
     def __init__(self, name=None):
@@ -253,17 +270,7 @@
         raise ValueError('Unable to find a writable directory to store the node id')
 
 ################ Indexer stuff
-
     
-def _download_index_dir():
-    if sys.platform == 'win32':
-        theDir = "C:\Documents and Settings\All Users\Documents\MaayDownloads"
-    else:
-        theDir = osp.expanduser('~/maay-downloads/')
-    if not osp.exists(theDir):
-        os.makedirs(theDir)
-    return theDir
-
 class IndexerConfiguration(Configuration):
     options = Configuration.options + [
         ('host',
@@ -317,12 +324,6 @@
           'help': 'the public indexer will skip this directory',
           'default' : []
           }),
-        ('download-index-dir',
-         {'type': 'string',
-          'metavar': '<downloads>',
-          'help': 'downloaded files will go there and be immediately indexed',
-          'default' : _download_index_dir()
-          }),
         
         ('verbose',
          {'type': 'yn',

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-15 11:58:01 UTC (rev 498)
+++ trunk/maay/webapplication.py	2005-11-15 13:08:55 UTC (rev 499)
@@ -36,7 +36,7 @@
 from logilab.common.textutils import normalize_text
 
 from maay.querier import WEB_AVATARID
-from maay.configuration import get_path_of, IndexerConfiguration
+from maay.configuration import get_path_of, NodeConfiguration
 from maay.texttool import makeAbstract, WORDS_RGX, normalizeText, boldifyText
 from maay.query import Query
 from maay.p2pquerier import P2pQuerier, P2pQuery
@@ -72,7 +72,6 @@
         self.msg = msg
 
     def render_errormsg(self, context, data):
-        print "Rendering error msg", self.msg
         return self.msg
     
     def renderHTTP_notFound(self, context):
@@ -106,7 +105,7 @@
             context.fillSlots(attrname, getattr(peerNode, attrname, 'N/A'))
         return context.tag
 
-_idxcfg = IndexerConfiguration()
+_idxcfg = NodeConfiguration()
 _idxcfg.load()
                     
 class SearchForm(MaayPage):



From afayolle at berlios.de  Tue Nov 15 14:51:58 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Tue, 15 Nov 2005 14:51:58 +0100
Subject: [Maay-svncheckins] r500 - in trunk/maay: . data
Message-ID: <200511151351.jAFDpwaC018552@sheep.berlios.de>

Author: afayolle
Date: 2005-11-15 14:51:50 +0100 (Tue, 15 Nov 2005)
New Revision: 500

Added:
   trunk/maay/data/MochiKit.js
   trunk/maay/data/MochiKitLogConsole.js
   trunk/maay/data/athena.js
   trunk/maay/data/liveglue.js
   trunk/maay/data/livetest-postscripts.js
   trunk/maay/data/livetest.js
Modified:
   trunk/maay/webapplication.py
Log:
workaround for nevow having problems to find its js code once py2exe'd 


Added: trunk/maay/data/MochiKit.js
===================================================================
--- trunk/maay/data/MochiKit.js	2005-11-15 13:08:55 UTC (rev 499)
+++ trunk/maay/data/MochiKit.js	2005-11-15 13:51:50 UTC (rev 500)
@@ -0,0 +1,3930 @@
+/***
+
+    MochiKit.MochiKit 1.0 : PACKED VERSION
+
+    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
+    diff against the source tree, not this file.
+
+    See <http://mochikit.com/> for documentation, downloads, license, etc.
+
+    (c) 2005 Bob Ippolito.  All rights Reserved.
+
+***/
+
+if(typeof (dojo)!="undefined"){
+dojo.provide("MochiKit.Compat");
+}
+if(typeof (MochiKit)=="undefined"){
+MochiKit={};
+}
+if(typeof (MochiKit.Compat)=="undefined"){
+MochiKit.Compat={};
+}
+MochiKit.Compat.NAME="MochiKit.Compat";
+MochiKit.Compat.VERSION="1.0";
+MochiKit.Compat.__repr__=function(){
+return "["+this.NAME+" "+this.VERSION+"]";
+};
+MochiKit.Compat.toString=function(){
+return this.__repr__();
+};
+if(!Array.prototype.push){
+Array.prototype.push=function(){
+var _1=this.length;
+for(var i=0;i<arguments.length;i++){
+this[_1+i]=arguments[i];
+}
+return this.length;
+};
+}
+if(!Function.prototype.apply){
+Function.prototype.apply=function(_3,_4){
+var _5=[];
+if(!_3){
+_3=window;
+}
+if(!_4){
+_4=[];
+}
+for(var i=0;i<_4.length;i++){
+_5[i]="parameters["+i+"]";
+}
+_3.__apply__=this;
+var _6=eval("object.__apply__("+_5.join(", ")+")");
+_3.__apply__=null;
+return _6;
+};
+}
+MochiKit.Compat.EXPORT=[];
+MochiKit.Compat.EXPORT_OK=[];
+MochiKit.Compat.EXPORT_TAGS={":all":[],":common":[]};
+if(typeof (dojo)!="undefined"){
+dojo.provide("MochiKit.Base");
+}
+if(typeof (MochiKit)=="undefined"){
+MochiKit={};
+}
+if(typeof (MochiKit.Base)=="undefined"){
+MochiKit.Base={};
+}
+MochiKit.Base.VERSION="1.0";
+MochiKit.Base.NAME="MochiKit.Base";
+MochiKit.Base.__repr__=function(){
+return "["+this.NAME+" "+this.VERSION+"]";
+};
+MochiKit.Base.toString=function(){
+return this.__repr__();
+};
+MochiKit.Base.clone=function(_7){
+var me=arguments.callee;
+if(arguments.length==1){
+me.prototype=_7;
+return new me();
+}
+};
+MochiKit.Base.extend=function(_9,obj,_11){
+if(!_11){
+_11=0;
+}
+if(obj){
+var l=obj.length;
+if(typeof (l)!="number"){
+if(MochiKit.Iter){
+obj=MochiKit.Iter.list(obj);
+l=obj.length;
+}else{
+throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
+}
+}
+if(!_9){
+_9=[];
+}
+for(var i=_11;i<l;i++){
+_9.push(obj[i]);
+}
+}
+return _9;
+};
+MochiKit.Base.updatetree=function(_13,obj){
+if(_13==null){
+_13={};
+}
+for(var i=1;i<arguments.length;i++){
+var o=arguments[i];
+if(typeof (o)!="undefined"&&o!=null){
+for(var k in o){
+var v=o[k];
+if(typeof (_13[k])=="object"&&typeof (v)=="object"){
+arguments.callee(_13[k],v);
+}else{
+_13[k]=v;
+}
+}
+}
+}
+return _13;
+};
+MochiKit.Base.update=function(_17,obj){
+if(_17==null){
+_17={};
+}
+for(var i=1;i<arguments.length;i++){
+var o=arguments[i];
+if(typeof (o)!="undefined"&&o!=null){
+for(var k in o){
+_17[k]=o[k];
+}
+}
+}
+return _17;
+};
+MochiKit.Base.setdefault=function(_18,obj){
+if(_18==null){
+_18={};
+}
+for(var i=1;i<arguments.length;i++){
+var o=arguments[i];
+for(var k in o){
+if(!(k in _18)){
+_18[k]=o[k];
+}
+}
+}
+return _18;
+};
+MochiKit.Base.keys=function(obj){
+var _19=[];
+for(var _20 in obj){
+_19.push(_20);
+}
+return _19;
+};
+MochiKit.Base.items=function(obj){
+var _21=[];
+for(var _22 in obj){
+_21.push([_22,obj[_22]]);
+}
+return _21;
+};
+MochiKit.Base.NamedError=function(_23){
+this.message=_23;
+this.name=_23;
+};
+MochiKit.Base.NamedError.prototype=new Error();
+MochiKit.Base.NamedError.prototype.repr=function(){
+if(this.message&&this.message!=this.name){
+return this.name+"("+repr(this.message)+")";
+}else{
+return this.name+"()";
+}
+};
+MochiKit.Base.NamedError.prototype.toString=function(){
+return this.repr();
+};
+MochiKit.Base.operator={"truth":function(a){
+return !!a;
+},"lognot":function(a){
+return !a;
+},"identity":function(a){
+return a;
+},"not":function(a){
+return ~a;
+},"neg":function(a){
+return -a;
+},"add":function(a,b){
+return a+b;
+},"sub":function(a,b){
+return a-b;
+},"div":function(a,b){
+return a/b;
+},"mod":function(a,b){
+return a%b;
+},"and":function(a,b){
+return a&b;
+},"or":function(a,b){
+return a|b;
+},"xor":function(a,b){
+return a^b;
+},"lshift":function(a,b){
+return a<<b;
+},"rshift":function(a,b){
+return a>>b;
+},"zrshift":function(a,b){
+return a>>>b;
+},"eq":function(a,b){
+return a==b;
+},"ne":function(a,b){
+return a!=b;
+},"gt":function(a,b){
+return a>b;
+},"ge":function(a,b){
+return a>=b;
+},"lt":function(a,b){
+return a<b;
+},"le":function(a,b){
+return a<=b;
+},"ceq":function(a,b){
+return MochiKit.Base.compare(a,b)==0;
+},"cne":function(a,b){
+return MochiKit.Base.compare(a,b)!=0;
+},"cgt":function(a,b){
+return MochiKit.Base.compare(a,b)==1;
+},"cge":function(a,b){
+return MochiKit.Base.compare(a,b)!=-1;
+},"clt":function(a,b){
+return MochiKit.Base.compare(a,b)==-1;
+},"cle":function(a,b){
+return MochiKit.Base.compare(a,b)!=1;
+},"logand":function(a,b){
+return a&&b;
+},"logor":function(a,b){
+return a||b;
+},"contains":function(a,b){
+return b in a;
+}};
+MochiKit.Base.forward=function(_26){
+return function(){
+return this[_26].apply(this,arguments);
+};
+};
+MochiKit.Base.itemgetter=function(_27){
+return function(arg){
+return arg[_27];
+};
+};
+MochiKit.Base.typeMatcher=function(){
+var _29={};
+for(var i=0;i<arguments.length;i++){
+var typ=arguments[i];
+_29[typ]=typ;
+}
+return function(){
+for(var i=0;i<arguments.length;i++){
+if(!(typeof (arguments[i]) in _29)){
+return false;
+}
+}
+return true;
+};
+};
+MochiKit.Base.isNull=function(){
+for(var i=0;i<arguments.length;i++){
+if(arguments[i]!=null){
+return false;
+}
+}
+return true;
+};
+MochiKit.Base.isUndefinedOrNull=function(){
+for(var i=0;i<arguments.length;i++){
+var o=arguments[i];
+if(!(typeof (o)=="undefined"||o==null)){
+return false;
+}
+}
+return true;
+};
+MochiKit.Base.isNotEmpty=function(obj){
+for(var i=0;i<arguments.length;i++){
+var o=arguments[i];
+if(!(o&&o.length)){
+return false;
+}
+}
+return true;
+};
+MochiKit.Base.isArrayLike=function(){
+for(var i=0;i<arguments.length;i++){
+var o=arguments[i];
+var typ=typeof (o);
+if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o==null||typeof (o.length)!="number"){
+return false;
+}
+}
+return true;
+};
+MochiKit.Base.isDateLike=function(){
+for(var i=0;i<arguments.length;i++){
+var o=arguments[i];
+if(typeof (o)!="object"||typeof (o.getTime)!="function"){
+return false;
+}
+}
+return true;
+};
+MochiKit.Base.xmap=function(fn){
+if(fn==null){
+return MochiKit.Base.extend(null,arguments,1);
+}
+var _32=[];
+for(var i=1;i<arguments.length;i++){
+_32.push(fn(arguments[i]));
+}
+return _32;
+};
+MochiKit.Base.map=function(fn,lst){
+var _34=MochiKit.Base.isArrayLike;
+if(arguments.length<=2){
+if(!_34(lst)){
+if(MochiKit.Iter){
+lst=MochiKit.Iter.list(lst);
+if(fn==null){
+return lst;
+}
+}else{
+throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
+}
+}
+if(fn==null){
+return MochiKit.Base.extend(null,lst);
+}
+if(false&&typeof (Array.prototype.map)=="function"){
+return Array.prototype.map.call(lst,fn);
+}
+var _35=[];
+for(var i=0;i<lst.length;i++){
+_35.push(fn(lst[i]));
+}
+return _35;
+}else{
+if(fn==null){
+fn=Array;
+}
+var _36=null;
+for(i=1;i<arguments.length;i++){
+if(!_34(arguments[i])){
+if(MochiKit.Iter){
+arguments[i]=MochiKit.Iter.list(arguments[i]);
+}else{
+throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
+}
+}
+var l=arguments[i].length;
+if(_36==null||_36>l){
+_36=l;
+}
+}
+_35=[];
+for(i=0;i<_36;i++){
+var _37=[];
+for(var j=1;j<arguments.length;j++){
+_37.push(arguments[j][i]);
+}
+_35.push(fn.apply(this,_37));
+}
+return _35;
+}
+};
+MochiKit.Base.xfilter=function(fn){
+var _39=[];
+if(fn==null){
+fn=MochiKit.Base.operator.truth;
+}
+for(var i=1;i<arguments.length;i++){
+var o=arguments[i];
+if(fn(o)){
+_39.push(o);
+}
+}
+return _39;
+};
+MochiKit.Base.filter=function(fn,lst,_40){
+var _41=[];
+if(!MochiKit.Base.isArrayLike(lst)){
+if(MochiKit.Iter){
+lst=MochiKit.Iter.list(lst);
+}else{
+throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
+}
+}
+if(fn==null){
+fn=MochiKit.Base.operator.truth;
+}
+if(typeof (Array.prototype.filter)=="function"){
+return Array.prototype.filter.call(lst,fn,_40);
+}else{
+if(typeof (_40)=="undefined"||_40==null){
+for(var i=0;i<lst.length;i++){
+var o=lst[i];
+if(fn(o)){
+_41.push(o);
+}
+}
+}else{
+for(i=0;i<lst.length;i++){
+o=lst[i];
+if(fn.call(_40,o)){
+_41.push(o);
+}
+}
+}
+}
+return _41;
+};
+MochiKit.Base._wrapDumpFunction=function(_42){
+return function(){
+switch(arguments.length){
+case 0:
+return _42();
+case 1:
+return _42(arguments[0]);
+case 2:
+return _42(arguments[0],arguments[1]);
+case 3:
+return _42(arguments[0],arguments[1],arguments[2]);
+}
+var _43=[];
+for(var i=0;i<arguments.length;i++){
+_43.push("arguments["+i+"]");
+}
+return eval("(func("+_43.join(",")+"))");
+};
+};
+MochiKit.Base.bind=function(_44,_45){
+var _46=_44.im_func;
+var _47=_44.im_preargs;
+var _48=_44.im_self;
+if(typeof (_44)=="function"&&typeof (_44.apply)=="undefined"){
+_44=MochiKit.Base._wrapDumbFunction(_44);
+}
+if(typeof (_46)!="function"){
+_46=_44;
+}
+if(typeof (_45)!="undefined"){
+_48=_45;
+}
+if(typeof (_47)=="undefined"){
+_47=[];
+}else{
+_47=_47.slice();
+}
+MochiKit.Base.extend(_47,arguments,2);
+var _49=function(){
+var _50=arguments;
+var me=arguments.callee;
+if(me.im_preargs.length>0){
+_50=MochiKit.Base.concat(me.im_preargs,_50);
+}
+var _45=me.im_self;
+if(!_45){
+_45=this;
+}
+return me.im_func.apply(_45,_50);
+};
+_49.im_self=_48;
+_49.im_func=_46;
+_49.im_preargs=_47;
+return _49;
+};
+MochiKit.Base.bindMethods=function(_51){
+for(var k in _51){
+var _52=_51[k];
+if(typeof (_52)=="function"){
+_51[k]=bind(_52,_51);
+}
+}
+};
+MochiKit.Base.NotFound=new MochiKit.Base.NamedError("MochiKit.Base.NotFound");
+MochiKit.Base.AdapterRegistry=function(){
+this.pairs=[];
+};
+MochiKit.Base.AdapterRegistry.prototype.register=function(_53,_54,_55,_56){
+if(_56){
+this.pairs.unshift([_53,_54,_55]);
+}else{
+this.pairs.push([_53,_54,_55]);
+}
+};
+MochiKit.Base.AdapterRegistry.prototype.match=function(){
+for(var i=0;i<this.pairs.length;i++){
+var _57=this.pairs[i];
+if(_57[1].apply(this,arguments)){
+return _57[2].apply(this,arguments);
+}
+}
+throw MochiKit.Base.NotFound;
+};
+MochiKit.Base.AdapterRegistry.prototype.unregister=function(_58){
+for(var i=0;i<this.pairs.length;i++){
+var _59=this.pairs[i];
+if(_59[0]==_58){
+this.pairs.splice(i,1);
+return true;
+}
+}
+return false;
+};
+MochiKit.Base.registerComparator=function(_60,_61,_62,_63){
+MochiKit.Base.comparatorRegistry.register(_60,_61,_62,_63);
+};
+MochiKit.Base.compare=function(a,b){
+if(a==b){
+return 0;
+}
+var _64=(typeof (a)=="undefined"||a==null);
+var _65=(typeof (b)=="undefined"||b==null);
+if(_64&&_65){
+return 0;
+}else{
+if(_64){
+return -1;
+}else{
+if(_65){
+return 1;
+}
+}
+}
+try{
+return MochiKit.Base.comparatorRegistry.match(a,b);
+}
+catch(e){
+if(e!=MochiKit.Base.NotFound){
+throw e;
+}
+if(a<b){
+return -1;
+}else{
+if(a>b){
+return 1;
+}
+}
+var _66=MochiKit.Base.repr;
+throw new TypeError(_66(a)+" and "+_66(b)+" can not be compared");
+}
+};
+MochiKit.Base.compareDateLike=function(a,b){
+a=a.getTime();
+b=b.getTime();
+if(a==b){
+return 0;
+}else{
+if(a<b){
+return -1;
+}else{
+if(a>b){
+return 1;
+}
+}
+}
+var _67=MochiKit.Base.repr;
+throw new TypeError(_67(a)+" and "+_67(b)+" can not be compared");
+};
+MochiKit.Base.compareArrayLike=function(a,b){
+var _68=MochiKit.Base.compare;
+var _69=a.length;
+var _70=0;
+if(_69>b.length){
+_70=1;
+_69=b.length;
+}else{
+if(_69<b.length){
+_70=-1;
+}
+}
+for(var i=0;i<_69;i++){
+var cmp=_68(a[i],b[i]);
+if(cmp){
+return cmp;
+}
+}
+return _70;
+};
+MochiKit.Base.registerRepr=function(_72,_73,_74,_75){
+MochiKit.Base.reprRegistry.register(_72,_73,_74,_75);
+};
+MochiKit.Base.repr=function(o){
+if(typeof (o)=="undefined"){
+return "undefined";
+}else{
+if(o===null){
+return "null";
+}
+}
+try{
+if(typeof (o.__repr__)=="function"){
+return o.__repr__();
+}else{
+if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
+return o.repr();
+}
+}
+return MochiKit.Base.reprRegistry.match(o);
+}
+catch(e){
+if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
+return o.NAME;
+}
+}
+if(typeof (o)=="function"){
+o=(o+"");
+o=o.replace(/^\s+/,"");
+o=o.replace(/\s+$/,"");
+var idx=o.indexOf("{");
+if(idx!=-1){
+o=o.substr(0,idx)+"{...}";
+}
+}
+return o+"";
+};
+MochiKit.Base.reprArrayLike=function(o){
+return "["+MochiKit.Base.map(MochiKit.Base.repr,o).join(", ")+"]";
+};
+MochiKit.Base.reprString=function(o){
+o="\""+o.replace(/(["\\])/g,"\\$1")+"\"";
+o=o.replace(/[\f]/g,"\\f");
+o=o.replace(/[\b]/g,"\\b");
+o=o.replace(/[\n]/g,"\\n");
+o=o.replace(/[\t]/g,"\\t");
+o=o.replace(/[\r]/g,"\\r");
+return o;
+};
+MochiKit.Base.reprNumber=function(o){
+return o.toString();
+};
+MochiKit.Base.registerJSON=function(_77,_78,_79,_80){
+MochiKit.Base.jsonRegistry.register(_77,_78,_79,_80);
+};
+MochiKit.Base.evalJSON=function(o){
+return eval("("+o+")");
+};
+MochiKit.Base.serializeJSON=function(o){
+var _81=typeof (o);
+if(_81=="undefined"){
+return "undefined";
+}else{
+if(_81=="number"||_81=="boolean"){
+return o.toString();
+}else{
+if(o===null){
+return "null";
+}
+}
+}
+var _82=MochiKit.Base.reprString;
+if(_81=="string"){
+return _82(o);
+}
+var me=arguments.callee;
+var _83;
+if(typeof (o.__json__)=="function"){
+_83=o.__json__();
+if(o!==_83){
+return me(_83);
+}
+}
+if(typeof (o.json)=="function"){
+_83=o.json();
+if(o!==_83){
+return me(_83);
+}
+}
+if(_81!="function"&&typeof (o.length)=="number"){
+var res=[];
+for(var i=0;i<o.length;i++){
+var val=me(o[i]);
+if(typeof (val)!="string"){
+val="undefined";
+}
+res.push(val);
+}
+return "["+res.join(",")+"]";
+}
+try{
+_83=MochiKit.Base.jsonRegistry.match(o);
+return me(_83);
+}
+catch(e){
+if(e!=MochiKit.Base.NotFound){
+throw e;
+}
+}
+if(_81=="function"){
+return null;
+}
+res=[];
+for(var k in o){
+var _86;
+if(typeof (k)=="number"){
+_86="\""+k.toString()+"\"";
+}else{
+if(typeof (k)=="string"){
+_86=_82(k);
+}else{
+continue;
+}
+}
+val=me(o[k]);
+if(typeof (val)!="string"){
+continue;
+}
+res.push(_86+":"+val);
+}
+return "{"+res.join(",")+"}";
+};
+MochiKit.Base.objEqual=function(a,b){
+return (MochiKit.Base.compare(a,b)==0);
+};
+MochiKit.Base.arrayEqual=function(_87,arr){
+if(_87.length!=arr.length){
+return false;
+}
+return (MochiKit.Base.compare(_87,arr)==0);
+};
+MochiKit.Base.concat=function(){
+var _89=[];
+var _90=MochiKit.Base.extend;
+for(var i=0;i<arguments.length;i++){
+_90(_89,arguments[i]);
+}
+return _89;
+};
+MochiKit.Base.keyComparator=function(key){
+var _92=MochiKit.Base.compare;
+if(arguments.length==1){
+return function(a,b){
+return _92(a[key],b[key]);
+};
+}
+var _93=MochiKit.Base.extend(null,arguments);
+return function(a,b){
+var _94=0;
+for(var i=0;(_94==0)&&(i<_93.length);i++){
+var key=_93[i];
+_94=_92(a[key],b[key]);
+}
+return _94;
+};
+};
+MochiKit.Base.reverseKeyComparator=function(key){
+var _95=MochiKit.Base.keyComparator.apply(this,arguments);
+return function(a,b){
+return _95(b,a);
+};
+};
+MochiKit.Base.partial=function(_96){
+return MochiKit.Base.bind.apply(this,MochiKit.Base.extend([_96,undefined],arguments,1));
+};
+MochiKit.Base.listMinMax=function(_97,lst){
+if(lst.length==0){
+return null;
+}
+var cur=lst[0];
+var _99=MochiKit.Base.compare;
+for(var i=1;i<lst.length;i++){
+var o=lst[i];
+if(_99(o,cur)==_97){
+cur=o;
+}
+}
+return cur;
+};
+MochiKit.Base.objMax=function(){
+return MochiKit.Base.listMinMax(1,arguments);
+};
+MochiKit.Base.objMin=function(){
+return MochiKit.Base.listMinMax(-1,arguments);
+};
+MochiKit.Base.nodeWalk=function(node,_101){
+var _102=[node];
+var _103=MochiKit.Base.extend;
+while(_102.length){
+var res=_101(_102.shift());
+if(res){
+_103(_102,res);
+}
+}
+};
+MochiKit.Base.nameFunctions=function(_104){
+var base=_104.NAME;
+if(typeof (base)=="undefined"){
+base="";
+}else{
+base=base+".";
+}
+for(var name in _104){
+var o=_104[name];
+if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
+try{
+o.NAME=base+name;
+}
+catch(e){
+}
+}
+}
+};
+if(typeof (encodeURIComponent)!="undefined"){
+MochiKit.Base.urlEncode=function(_107){
+var rval=encodeURIComponent(_107);
+return rval.replace(/\'/g,"%27");
+};
+}else{
+MochiKit.Base.urlEncode=function(_109){
+var rval=escape(_109).replace(/\+/g,"%2B").replace(/\"/g,"%22");
+return rval.replace(/\'/g,"%27");
+};
+}
+MochiKit.Base.queryString=function(_110,_111){
+if(arguments.length==1){
+var o=_110;
+_110=[];
+_111=[];
+for(var k in o){
+var v=o[k];
+if(typeof (v)!="function"){
+_110.push(k);
+_111.push(v);
+}
+}
+}
+var rval=[];
+var len=Math.min(_110.length,_111.length);
+var _113=MochiKit.Base.urlEncode;
+for(var i=0;i<len;i++){
+v=_111[i];
+if(typeof (v)!="undefined"&&v!=null){
+rval.push(_113(_110[i])+"="+_113(v));
+}
+}
+return rval.join("&");
+};
+MochiKit.Base.parseQueryString=function(_114,_115){
+var _116=_114.replace(/\+/g,"%20").split("&");
+var o={};
+var _117;
+if(typeof (decodeURIComponent)!="undefined"){
+_117=decodeURIComponent;
+}else{
+_117=unescape;
+}
+if(_115){
+for(var i=0;i<_116.length;i++){
+var pair=_116[i].split("=");
+var name=_117(pair[0]);
+var arr=o[name];
+if(!(arr instanceof Array)){
+arr=[];
+o[name]=arr;
+}
+arr.push(_117(pair[1]));
+}
+}else{
+for(i=0;i<_116.length;i++){
+pair=_116[i].split("=");
+o[_117(pair[0])]=_117(pair[1]);
+}
+}
+return o;
+};
+MochiKit.Base.EXPORT=["clone","extend","update","updatetree","setdefault","keys","items","NamedError","operator","forward","itemgetter","typeMatcher","isCallable","isUndefined","isUndefinedOrNull","isNull","isNotEmpty","isArrayLike","isDateLike","xmap","map","xfilter","filter","bind","bindMethods","NotFound","AdapterRegistry","registerComparator","compare","registerRepr","repr","objEqual","arrayEqual","concat","keyComparator","reverseKeyComparator","partial","merge","listMinMax","listMax","listMin","objMax","objMin","nodeWalk","zip","urlEncode","queryString","serializeJSON","registerJSON","evalJSON","parseQueryString"];
+MochiKit.Base.EXPORT_OK=["nameFunctions","comparatorRegistry","reprRegistry","jsonRegistry","compareDateLike","compareArrayLike","reprArrayLike","reprString","reprNumber"];
+MochiKit.Base.__new__=function(){
+this.listMax=this.partial(this.listMinMax,1);
+this.listMin=this.partial(this.listMinMax,-1);
+this.isCallable=this.typeMatcher("function");
+this.isUndefined=this.typeMatcher("undefined");
+this.merge=this.partial(this.update,null);
+this.zip=this.partial(this.map,null);
+this.comparatorRegistry=new this.AdapterRegistry();
+this.registerComparator("dateLike",this.isDateLike,this.compareDateLike);
+this.registerComparator("arrayLike",this.isArrayLike,this.compareArrayLike);
+this.reprRegistry=new this.AdapterRegistry();
+this.registerRepr("arrayLike",this.isArrayLike,this.reprArrayLike);
+this.registerRepr("string",this.typeMatcher("string"),this.reprString);
+this.registerRepr("numbers",this.typeMatcher("number","boolean"),this.reprNumber);
+this.jsonRegistry=new this.AdapterRegistry();
+var all=this.concat(this.EXPORT,this.EXPORT_OK);
+this.EXPORT_TAGS={":common":this.concat(this.EXPORT_OK),":all":all};
+this.nameFunctions(this);
+};
+MochiKit.Base.__new__();
+compare=MochiKit.Base.compare;
+if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
+(function(self){
+var all=self.EXPORT_TAGS[":all"];
+for(var i=0;i<all.length;i++){
+this[all[i]]=self[all[i]];
+}
+})(MochiKit.Base);
+}
+if(typeof (dojo)!="undefined"){
+dojo.provide("MochiKit.Iter");
+dojo.require("MochiKit.Base");
+}
+if(typeof (JSAN)!="undefined"){
+JSAN.use("MochiKit.Base",[]);
+}
+try{
+if(typeof (MochiKit.Base)=="undefined"){
+throw "";
+}
+}
+catch(e){
+throw "MochiKit.Iter depends on MochiKit.Base!";
+}
+if(typeof (MochiKit.Iter)=="undefined"){
+MochiKit.Iter={};
+}
+MochiKit.Iter.NAME="MochiKit.Iter";
+MochiKit.Iter.VERSION="1.0";
+MochiKit.Iter.__repr__=function(){
+return "["+this.NAME+" "+this.VERSION+"]";
+};
+MochiKit.Iter.toString=function(){
+return this.__repr__();
+};
+MochiKit.Iter.registerIteratorFactory=function(name,_121,_122,_123){
+MochiKit.Iter.iteratorRegistry.register(name,_121,_122,_123);
+};
+MochiKit.Iter.iter=function(_124,_125){
+if(arguments.length==2){
+return MochiKit.Iter.takewhile(function(a){
+return a!=_125;
+},_124);
+}
+if(typeof (_124.next)=="function"){
+return _124;
+}else{
+if(typeof (_124.iter)=="function"){
+return _124.iter();
+}
+}
+try{
+return MochiKit.Iter.iteratorRegistry.match(_124);
+}
+catch(e){
+if(e==MochiKit.Base.NotFound){
+e=new TypeError(typeof (_124)+": "+MochiKit.Base.repr(_124)+" is not iterable");
+}
+throw e;
+}
+};
+MochiKit.Iter.count=function(n){
+if(!n){
+n=0;
+}
+return {"repr":function(){
+return "count("+n+")";
+},"toString":MochiKit.Base.forward("repr"),"next":function(){
+return n++;
+}};
+};
+MochiKit.Iter.cycle=function(p){
+var lst=[];
+var _128=MochiKit.Iter.iter(p);
+return {"repr":function(){
+return "cycle(...)";
+},"toString":MochiKit.Base.forward("repr"),"next":function(){
+try{
+var rval=_128.next();
+lst.push(rval);
+return rval;
+}
+catch(e){
+if(e!=MochiKit.Iter.StopIteration){
+throw e;
+}
+if(lst.length==0){
+this.next=function(){
+throw MochiKit.Iter.StopIteration;
+};
+}else{
+var i=-1;
+this.next=function(){
+i=(i+1)%lst.length;
+return lst[i];
+};
+}
+return this.next();
+}
+}};
+};
+MochiKit.Iter.repeat=function(elem,n){
+if(typeof (n)=="undefined"){
+return {"repr":function(){
+return "repeat("+MochiKit.Base.repr(elem)+")";
+},"toString":MochiKit.Base.forward("repr"),"next":function(){
+return elem;
+}};
+}
+return {"repr":function(){
+return "repeat("+MochiKit.Base.repr(elem)+", "+n+")";
+},"toString":MochiKit.Base.forward("repr"),"next":function(){
+if(n<=0){
+throw MochiKit.Iter.StopIteration;
+}
+n-=1;
+return elem;
+}};
+};
+MochiKit.Iter.next=function(_130){
+return _130.next();
+};
+MochiKit.Iter.izip=function(p,q){
+var map=MochiKit.Base.map;
+var next=MochiKit.Iter.next;
+var _134=map(iter,arguments);
+return {"repr":function(){
+return "izip(...)";
+},"toString":MochiKit.Base.forward("repr"),"next":function(){
+return map(next,_134);
+}};
+};
+MochiKit.Iter.ifilter=function(pred,seq){
+seq=MochiKit.Iter.iter(seq);
+if(pred==null){
+pred=MochiKit.Base.operator.truth;
+}
+return {"repr":function(){
+return "ifilter(...)";
+},"toString":MochiKit.Base.forward("repr"),"next":function(){
+while(true){
+var rval=seq.next();
+if(pred(rval)){
+return rval;
+}
+}
+return undefined;
+}};
+};
+MochiKit.Iter.ifilterfalse=function(pred,seq){
+seq=MochiKit.Iter.iter(seq);
+if(pred==null){
+pred=MochiKit.Base.operator.truth;
+}
+return {"repr":function(){
+return "ifilterfalse(...)";
+},"toString":MochiKit.Base.forward("repr"),"next":function(){
+while(true){
+var rval=seq.next();
+if(!pred(rval)){
+return rval;
+}
+}
+return undefined;
+}};
+};
+MochiKit.Iter.islice=function(seq){
+seq=MochiKit.Iter.iter(seq);
+var _137=0;
+var stop=0;
+var step=1;
+var i=-1;
+if(arguments.length==2){
+stop=arguments[1];
+}else{
+if(arguments.length==3){
+_137=arguments[1];
+stop=arguments[2];
+}else{
+_137=arguments[1];
+stop=arguments[2];
+step=arguments[3];
+}
+}
+return {"repr":function(){
+return "islice("+["...",_137,stop,step].join(", ")+")";
+},"toString":MochiKit.Base.forward("repr"),"next":function(){
+var rval;
+while(i<_137){
+rval=seq.next();
+i++;
+}
+if(_137>=stop){
+throw MochiKit.Iter.StopIteration;
+}
+_137+=step;
+return rval;
+}};
+};
+MochiKit.Iter.imap=function(fun,p,q){
+var map=MochiKit.Base.map;
+var _141=map(MochiKit.Iter.iter,MochiKit.Base.extend(null,arguments,1));
+var next=MochiKit.Iter.next;
+return {"repr":function(){
+return "imap(...)";
+},"toString":MochiKit.Base.forward("repr"),"next":function(){
+return fun.apply(this,map(next,_141));
+}};
+};
+MochiKit.Iter.applymap=function(fun,seq,self){
+seq=MochiKit.Iter.iter(seq);
+return {"repr":function(){
+return "applymap(...)";
+},"toString":MochiKit.Base.forward("repr"),"next":function(){
+return fun.apply(self,seq.next());
+}};
+};
+MochiKit.Iter.chain=function(p,q){
+var iter=MochiKit.Iter.iter;
+if(arguments.length==1){
+return iter(arguments[0]);
+}
+var _143=MochiKit.Base.map(iter,arguments);
+var bind=MochiKit.Base.bind;
+return {"repr":function(){
+return "chain(...)";
+},"toString":MochiKit.Base.forward("repr"),"next":function(){
+while(_143.length>1){
+try{
+return _143[0].next();
+}
+catch(e){
+if(e!=MochiKit.Iter.StopIteration){
+throw e;
+}
+_143.shift();
+}
+}
+if(_143.length==1){
+var arg=_143.shift();
+this.next=bind(arg.next,arg);
+return this.next();
+}
+throw MochiKit.Iter.StopIteration;
+}};
+};
+MochiKit.Iter.takewhile=function(pred,seq){
+seq=MochiKit.Iter.iter(seq);
+return {"repr":function(){
+return "takewhile(...)";
+},"toString":MochiKit.Base.forward("repr"),"next":function(){
+var rval=seq.next();
+if(!pred(rval)){
+this.next=function(){
+throw MochiKit.Iter.StopIteration;
+};
+throw MochiKit.Iter.StopIteration;
+}
+return rval;
+}};
+};
+MochiKit.Iter.dropwhile=function(pred,seq){
+seq=MochiKit.Iter.iter(seq);
+var bind=MochiKit.Base.bind;
+return {"repr":function(){
+return "dropwhile(...)";
+},"toString":MochiKit.Base.forward("repr"),"next":function(){
+while(true){
+var rval=seq.next();
+if(!pred(rval)){
+break;
+}
+}
+this.next=bind(seq.next,seq);
+return rval;
+}};
+};
+MochiKit.Iter._tee=function(_145,sync,_147){
+sync.pos[_145]=-1;
+var _148=MochiKit.Base.listMin;
+return {"repr":function(){
+return "tee("+_145+", ...)";
+},"toString":MochiKit.Base.forward("repr"),"next":function(){
+var rval;
+var i=sync.pos[_145];
+if(i==sync.max){
+rval=_147.next();
+sync.deque.push(rval);
+sync.max+=1;
+sync.pos[_145]+=1;
+}else{
+rval=sync.deque[i-sync.min];
+sync.pos[_145]+=1;
+if(i==sync.min&&_148(sync.pos)!=sync.min){
+sync.min+=1;
+sync.deque.shift();
+}
+}
+return rval;
+}};
+};
+MochiKit.Iter.tee=function(_149,n){
+var rval=[];
+var sync={"pos":[],"deque":[],"max":-1,"min":-1};
+if(arguments.length==1){
+n=2;
+}
+_149=MochiKit.Iter.iter(_149);
+var _tee=MochiKit.Iter._tee;
+for(var i=0;i<n;i++){
+rval.push(_tee(i,sync,_149));
+}
+return rval;
+};
+MochiKit.Iter.list=function(_151){
+if(typeof (_151.slice)=="function"){
+return _151.slice();
+}else{
+if(MochiKit.Base.isArrayLike(_151)){
+return MochiKit.Base.concat(_151);
+}
+}
+_151=MochiKit.Iter.iter(_151);
+var rval=[];
+try{
+while(true){
+rval.push(_151.next());
+}
+}
+catch(e){
+if(e!=MochiKit.Iter.StopIteration){
+throw e;
+}
+return rval;
+}
+return undefined;
+};
+MochiKit.Iter.reduce=function(fn,_152,_153){
+var i=0;
+var x=_153;
+_152=MochiKit.Iter.iter(_152);
+if(arguments.length<3){
+try{
+x=_152.next();
+}
+catch(e){
+if(e==MochiKit.Iter.StopIteration){
+e=new TypeError("reduce() of empty sequence with no initial value");
+}
+throw e;
+}
+i++;
+}
+try{
+while(true){
+x=fn(x,_152.next());
+}
+}
+catch(e){
+if(e!=MochiKit.Iter.StopIteration){
+throw e;
+}
+}
+return x;
+};
+MochiKit.Iter.range=function(){
+var _155=0;
+var stop=0;
+var step=1;
+if(arguments.length==1){
+stop=arguments[0];
+}else{
+if(arguments.length==2){
+_155=arguments[0];
+stop=arguments[1];
+}else{
+if(arguments.length==3){
+_155=arguments[0];
+stop=arguments[1];
+step=arguments[2];
+}else{
+throw TypeError("range() takes 1, 2, or 3 arguments!");
+}
+}
+}
+return {"next":function(){
+if(_155>=stop){
+throw MochiKit.Iter.StopIteration;
+}
+var rval=_155;
+_155+=step;
+return rval;
+},"repr":function(){
+return "range("+[_155,stop,step].join(", ")+")";
+},"toString":MochiKit.Base.forward("repr")};
+};
+MochiKit.Iter.sum=function(_156,_157){
+var x=_157?_157:0;
+_156=MochiKit.Iter.iter(_156);
+try{
+while(true){
+x+=_156.next();
+}
+}
+catch(e){
+if(e!=MochiKit.Iter.StopIteration){
+throw e;
+}
+}
+return x;
+};
+MochiKit.Iter.exhaust=function(_158){
+_158=MochiKit.Iter.iter(_158);
+try{
+while(true){
+_158.next();
+}
+}
+catch(e){
+if(e!=MochiKit.Iter.StopIteration){
+throw e;
+}
+}
+};
+MochiKit.Iter.forEach=function(_159,func,self){
+if(arguments.length>2){
+func=MochiKit.Base.bind(func,self);
+}
+if(MochiKit.Base.isArrayLike(_159)){
+for(var i=0;i<_159.length;i++){
+func(_159[i]);
+}
+}else{
+MochiKit.Iter.exhaust(MochiKit.Iter.imap(func,_159));
+}
+};
+MochiKit.Iter.every=function(_161,func){
+try{
+MochiKit.Iter.ifilterfalse(func,_161).next();
+return false;
+}
+catch(e){
+if(e!=MochiKit.Iter.StopIteration){
+throw e;
+}
+return true;
+}
+};
+MochiKit.Iter.sorted=function(_162,cmp){
+var rval=MochiKit.Iter.list(_162);
+if(arguments.length==1){
+cmp=MochiKit.Base.compare;
+}
+rval.sort(cmp);
+return rval;
+};
+MochiKit.Iter.reversed=function(_163){
+var rval=MochiKit.Iter.list(_163);
+rval.reverse();
+return rval;
+};
+MochiKit.Iter.some=function(_164,func){
+try{
+MochiKit.Iter.ifilter(func,_164).next();
+return true;
+}
+catch(e){
+if(e!=MochiKit.Iter.StopIteration){
+throw e;
+}
+return false;
+}
+};
+MochiKit.Iter.iextend=function(lst,_165){
+if(MochiKit.Base.isArrayLike(_165)){
+for(var i=0;i<_165.length;i++){
+lst.push(_165[i]);
+}
+}else{
+_165=MochiKit.Iter.iter(_165);
+try{
+while(true){
+lst.push(_165.next());
+}
+}
+catch(e){
+if(e!=MochiKit.Iter.StopIteration){
+throw e;
+}
+}
+}
+return lst;
+};
+MochiKit.Iter.arrayLikeIter=function(_166){
+var i=0;
+return {"repr":function(){
+return "arrayLikeIter(...)";
+},"toString":MochiKit.Base.forward("repr"),"next":function(){
+if(i>=_166.length){
+throw MochiKit.Iter.StopIteration;
+}
+return _166[i++];
+}};
+};
+MochiKit.Iter.EXPORT_OK=["iteratorRegistry","arrayLikeIter"];
+MochiKit.Iter.EXPORT=["StopIteration","registerIteratorFactory","iter","count","cycle","repeat","next","izip","ifilter","ifilterfalse","islice","imap","applymap","chain","takewhile","dropwhile","tee","list","reduce","range","sum","exhaust","forEach","every","sorted","reversed","some","iextend"];
+MochiKit.Iter.__new__=function(){
+this.StopIteration=new MochiKit.Base.NamedError("StopIteration");
+this.iteratorRegistry=new MochiKit.Base.AdapterRegistry();
+this.registerIteratorFactory("arrayLike",MochiKit.Base.isArrayLike,this.arrayLikeIter);
+this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
+MochiKit.Base.nameFunctions(this);
+};
+MochiKit.Iter.__new__();
+reduce=MochiKit.Iter.reduce;
+if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
+(function(self){
+var all=self.EXPORT_TAGS[":all"];
+for(var i=0;i<all.length;i++){
+this[all[i]]=self[all[i]];
+}
+})(MochiKit.Iter);
+}
+if(typeof (dojo)!="undefined"){
+dojo.provide("MochiKit.Logging");
+dojo.require("MochiKit.Base");
+}
+if(typeof (JSAN)!="undefined"){
+JSAN.use("MochiKit.Base",[]);
+}
+try{
+if(typeof (MochiKit.Base)=="undefined"){
+throw "";
+}
+}
+catch(e){
+throw "MochiKit.Logging depends on MochiKit.Base!";
+}
+if(typeof (MochiKit.Logging)=="undefined"){
+MochiKit.Logging={};
+}
+MochiKit.Logging.NAME="MochiKit.Logging";
+MochiKit.Logging.VERSION="1.0";
+MochiKit.Logging.__repr__=function(){
+return "["+this.NAME+" "+this.VERSION+"]";
+};
+MochiKit.Logging.toString=function(){
+return this.__repr__();
+};
+MochiKit.Logging.EXPORT=["LogLevel","LogMessage","Logger","alertListener","logger","log","logError","logDebug","logFatal","logWarning"];
+MochiKit.Logging.EXPORT_OK=["logLevelAtLeast","isLogMessage","compareLogMessage"];
+MochiKit.Logging.logLevelAtLeast=function(_167){
+if(typeof (_167)=="string"){
+_167=MochiKit.Logging.LogLevel[_167];
+}
+return function(msg){
+var _169=msg.level;
+if(typeof (_169)=="string"){
+_169=MochiKit.Logging.LogLevel[_169];
+}
+return _169>=_167;
+};
+};
+MochiKit.Logging.LogMessage=function(num,_171,info){
+this.num=num;
+this.level=_171;
+this.info=info;
+this.timestamp=new Date();
+};
+MochiKit.Logging.LogMessage.prototype.repr=function(){
+return "LogMessage("+MochiKit.Base.map(MochiKit.Base.repr,[this.num,this.level,this.info]).join(", ")+")";
+};
+MochiKit.Logging.LogMessage.prototype.toString=function(){
+return this.repr();
+};
+MochiKit.Logging.isLogMessage=function(){
+var _173=MochiKit.Logging.LogMessage;
+for(var i=0;i<arguments.length;i++){
+if(!(arguments[i] instanceof _173)){
+return false;
+}
+}
+return true;
+};
+MochiKit.Logging.compareLogMessage=function(a,b){
+return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
+};
+MochiKit.Logging.Logger=function(_174){
+this.counter=0;
+if(typeof (_174)=="undefined"||_174==null){
+_174=-1;
+}
+this.maxSize=_174;
+this._messages=[];
+this.listeners={};
+};
+MochiKit.Logging.Logger.prototype.clear=function(){
+this._messages.splice(0,this._messages.length);
+};
+MochiKit.Logging.Logger.prototype.dispatchListeners=function(msg){
+for(var k in this.listeners){
+var pair=this.listeners[k];
+if(pair[0]&&!pair[0](msg)){
+continue;
+}
+pair[1](msg);
+}
+};
+MochiKit.Logging.Logger.prototype.addListener=function(_175,_176,_177){
+if(typeof (_176)=="string"){
+_176=MochiKit.Logging.logLevelAtLeast(_176);
+}
+this.listeners[_175]=[_176,_177];
+};
+MochiKit.Logging.Logger.prototype.removeListener=function(_178){
+delete this.listeners[_178];
+};
+MochiKit.Logging.Logger.prototype.baseLog=function(_179,_180){
+var msg=new MochiKit.Logging.LogMessage(this.counter,_179,MochiKit.Base.extend(null,arguments,1));
+this._messages.push(msg);
+this.dispatchListeners(msg);
+this.counter+=1;
+while(this.maxSize>=0&&this._messages.length>this.maxSize){
+this._messges.shift();
+}
+};
+MochiKit.Logging.Logger.prototype.getMessages=function(_181){
+var _182=0;
+if(!(typeof (_181)=="undefined"||_181==null)){
+_182=Math.max(0,this._messages.length-_181);
+}
+return this._messages.slice(_182);
+};
+MochiKit.Logging.Logger.prototype.getMessageText=function(_183){
+if(typeof (_183)=="undefined"||_183==null){
+_183=30;
+}
+var _184=this.getMessages(_183);
+if(_184.length){
+var lst=map(function(m){
+return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
+},_184);
+lst.unshift("LAST "+_184.length+" MESSAGES:");
+return lst.join("");
+}
+return "";
+};
+MochiKit.Logging.Logger.prototype.debuggingBookmarklet=function(_186){
+if(typeof (MochiKit.LoggingPane)=="undefined"){
+alert(this.getMessageText());
+}else{
+MochiKit.LoggingPane.createLoggingPane(_186||false);
+}
+};
+MochiKit.Logging.alertListener=function(msg){
+alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
+};
+MochiKit.Logging.__new__=function(){
+this.LogLevel={"ERROR":40,"FATAL":50,"WARNING":30,"INFO":20,"DEBUG":10};
+MochiKit.Base.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
+var _187=MochiKit.Base.partial;
+var _188=this.Logger;
+_188.prototype.debug=_187(_188.prototype.baseLog,"DEBUG");
+_188.prototype.log=_187(_188.prototype.baseLog,"INFO");
+_188.prototype.error=_187(_188.prototype.baseLog,"ERROR");
+_188.prototype.fatal=_187(_188.prototype.baseLog,"FATAL");
+_188.prototype.warning=_187(_188.prototype.baseLog,"WARNING");
+var self=this;
+var _189=function(name){
+return function(){
+self.logger[name].apply(self.logger,arguments);
+};
+};
+this.log=_189("log");
+this.logError=_189("error");
+this.logDebug=_189("debug");
+this.logFatal=_189("fatal");
+this.logWarning=_189("warning");
+this.logger=new _188();
+this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
+MochiKit.Base.nameFunctions(this);
+};
+MochiKit.Logging.__new__();
+if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
+(function(self){
+var all=self.EXPORT_TAGS[":all"];
+for(var i=0;i<all.length;i++){
+this[all[i]]=self[all[i]];
+}
+})(MochiKit.Logging);
+}
+if(typeof (dojo)!="undefined"){
+dojo.provide("MochiKit.DateTime");
+}
+if(typeof (MochiKit)=="undefined"){
+MochiKit={};
+}
+if(typeof (MochiKit.DateTime)=="undefined"){
+MochiKit.DateTime={};
+}
+MochiKit.DateTime.NAME="MochiKit.DateTime";
+MochiKit.DateTime.VERSION="1.0";
+MochiKit.DateTime.__repr__=function(){
+return "["+this.NAME+" "+this.VERSION+"]";
+};
+MochiKit.DateTime.toString=function(){
+return this.__repr__();
+};
+MochiKit.DateTime.isoDate=function(str){
+str=str+"";
+if(typeof (str)!="string"||str.length==0){
+return null;
+}
+var iso=str.split("-");
+if(iso.length==0){
+return null;
+}
+return new Date(iso[0],iso[1]-1,iso[2]);
+};
+MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
+MochiKit.DateTime.isoTimestamp=function(str){
+str=str+"";
+if(typeof (str)!="string"||str.length==0){
+return null;
+}
+var res=str.match(MochiKit.DateTime._isoRegexp);
+if(typeof (res)=="undefined"||res==null){
+return null;
+}
+var year,month,day,hour,min,sec,msec;
+year=parseInt(res[1],10);
+if(typeof (res[2])=="undefined"||res[2]==""){
+return new Date(year);
+}
+month=parseInt(res[2],10)-1;
+day=parseInt(res[3],10);
+if(typeof (res[4])=="undefined"||res[4]==""){
+return new Date(year,month,day);
+}
+hour=parseInt(res[4],10);
+min=parseInt(res[5],10);
+sec=(typeof (res[6])!="undefined"&&res[6]!="")?parseInt(res[6],10):0;
+if(typeof (res[7])!="undefined"&&res[7]!=""){
+msec=Math.round(1000*parseFloat("0."+res[7]));
+}else{
+msec=0;
+}
+if((typeof (res[8])=="undefined"||res[8]=="")&&(typeof (res[9])=="undefined"||res[9]=="")){
+return new Date(year,month,day,hour,min,sec,msec);
+}
+var ofs;
+if(typeof (res[9])!="undefined"&&res[9]!=""){
+ofs=parseInt(res[10],10)*3600;
+if(typeof (res[11])!="undefined"&&res[11]!=""){
+ofs+=parseInt(res[11],10)*60;
+}
+if(res[9]=="-"){
+ofs=-ofs;
+}
+}else{
+ofs=0;
+}
+return new Date(Date.UTC(year,month,day,hour,min,sec,msec)+ofs);
+};
+MochiKit.DateTime.toISOTime=function(date){
+if(typeof (date)=="undefined"||date==null){
+return null;
+}
+var _195=MochiKit.DateTime._padTwo;
+var hh=date.getHours();
+var mm=date.getMinutes();
+var ss=date.getSeconds();
+var lst=[hh,((mm<10)?"0"+mm:mm),((ss<10)?"0"+ss:ss)];
+return lst.join(":");
+};
+MochiKit.DateTime.toISOTimestamp=function(date,_199){
+if(typeof (date)=="undefined"||date==null){
+return null;
+}
+var sep=_199?"T":" ";
+var foot=_199?"Z":"";
+if(_199){
+date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
+}
+return MochiKit.DateTime.toISODate(date)+sep+MochiKit.DateTime.toISOTime(date)+foot;
+};
+MochiKit.DateTime.toISODate=function(date){
+if(typeof (date)=="undefined"||date==null){
+return null;
+}
+var _202=MochiKit.DateTime._padTwo;
+return [date.getFullYear(),_202(date.getMonth()+1),_202(date.getDate())].join("-");
+};
+MochiKit.DateTime.americanDate=function(d){
+d=d+"";
+if(typeof (d)!="string"||d.length==0){
+return null;
+}
+var a=d.split("/");
+return new Date(a[2],a[0]-1,a[1]);
+};
+MochiKit.DateTime._padTwo=function(n){
+return (n>9)?n:"0"+n;
+};
+MochiKit.DateTime.toPaddedAmericanDate=function(d){
+if(typeof (d)=="undefined"||d==null){
+return null;
+}
+var _204=MochiKit.DateTime._padTwo;
+return [_204(d.getMonth()+1),_204(d.getDate()),d.getFullYear()].join("/");
+};
+MochiKit.DateTime.toAmericanDate=function(d){
+if(typeof (d)=="undefined"||d==null){
+return null;
+}
+return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
+};
+MochiKit.DateTime.EXPORT=["isoDate","isoTimestamp","toISOTime","toISOTimestamp","toISODate","americanDate","toPaddedAmericanDate","toAmericanDate"];
+MochiKit.DateTime.EXPORT_OK=[];
+MochiKit.DateTime.EXPORT_TAGS={":common":MochiKit.DateTime.EXPORT,":all":MochiKit.DateTime.EXPORT};
+MochiKit.DateTime.__new__=function(){
+var base=this.NAME+".";
+for(var k in this){
+var o=this[k];
+if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
+try{
+o.NAME=base+k;
+}
+catch(e){
+}
+}
+}
+};
+MochiKit.DateTime.__new__();
+if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
+(function(self){
+var all=self.EXPORT_TAGS[":all"];
+for(var i=0;i<all.length;i++){
+this[all[i]]=self[all[i]];
+}
+})(MochiKit.DateTime);
+}
+if(typeof (dojo)!="undefined"){
+dojo.provide("MochiKit.Format");
+}
+if(typeof (MochiKit)=="undefined"){
+MochiKit={};
+}
+if(typeof (MochiKit.Format)=="undefined"){
+MochiKit.Format={};
+}
+MochiKit.Format.NAME="MochiKit.Format";
+MochiKit.Format.VERSION="1.0";
+MochiKit.Format.__repr__=function(){
+return "["+this.NAME+" "+this.VERSION+"]";
+};
+MochiKit.Format.toString=function(){
+return this.__repr__();
+};
+MochiKit.Format._numberFormatter=function(_205,_206,_207,_208,_209,_210,_211,_212,_213){
+return function(num){
+num=parseFloat(num);
+if(typeof (num)=="undefined"||num==null||isNaN(num)){
+return _205;
+}
+var _214=_206;
+var _215=_207;
+if(num<0){
+num=-num;
+}else{
+_214=_214.replace(/-/,"");
+}
+var me=arguments.callee;
+var fmt=MochiKit.Format.formatLocale(_208);
+if(_209){
+num=num*100;
+_215=fmt.percent+_215;
+}
+num=MochiKit.Format.roundToFixed(num,_210);
+var _217=num.split(/\./);
+var _218=_217[0];
+var frac=(_217.length==1)?"":_217[1];
+var res="";
+while(_218.length<_211){
+_218="0"+_218;
+}
+if(_212){
+while(_218.length>_212){
+var i=_218.length-_212;
+res=res+fmt.separator+_218.substring(i,_218.length);
+_218=_218.substring(0,i);
+}
+}
+res=_218+res;
+if(_210>0){
+while(frac.length<_213){
+frac=frac+"0";
+}
+res=res+fmt.decimal+frac;
+}
+return _214+res+_215;
+};
+};
+MochiKit.Format.numberFormatter=function(_220,_221,_222){
+if(typeof (_221)=="undefined"){
+_221="";
+}
+var _223=_220.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
+if(!_223){
+throw TypeError("Invalid pattern");
+}
+var _224=_220.substr(0,_223.index);
+var _225=_220.substr(_223.index+_223[0].length);
+if(_224.search(/-/)==-1){
+_224=_224+"-";
+}
+var _226=_223[1];
+var frac=(typeof (_223[2])=="string"&&_223[2]!="")?_223[2]:"";
+var _227=(typeof (_223[3])=="string"&&_223[3]!="");
+var tmp=_226.split(/,/);
+var _229;
+if(typeof (_222)=="undefined"){
+_222="default";
+}
+if(tmp.length==1){
+_229=null;
+}else{
+_229=tmp[1].length;
+}
+var _230=_226.length-_226.replace(/0/g,"").length;
+var _231=frac.length-frac.replace(/0/g,"").length;
+var _232=frac.length;
+return MochiKit.Format._numberFormatter(_221,_224,_225,_222,_227,_232,_230,_229,_231);
+};
+MochiKit.Format.formatLocale=function(_233){
+if(typeof (_233)=="undefined"||_233==null){
+_233="default";
+}
+if(typeof (_233)=="string"){
+var rval=MochiKit.Format.LOCALE[_233];
+if(typeof (rval)=="string"){
+rval=arguments.callee(rval);
+MochiKit.Format.LOCALE[_233]=rval;
+}
+return rval;
+}else{
+return _233;
+}
+};
+MochiKit.Format.twoDigitAverage=function(_234,_235){
+if(_235){
+var res=_234/_235;
+if(!isNaN(res)){
+return MochiKit.Format.twoDigitFloat(_234/_235);
+}
+}
+return "0";
+};
+MochiKit.Format.twoDigitFloat=function(_236){
+var sign=(_236<0?"-":"");
+var s=Math.floor(Math.abs(_236)*100).toString();
+if(s=="0"){
+return s;
+}
+if(s.length<3){
+while(s.charAt(s.length-1)=="0"){
+s=s.substring(0,s.length-1);
+}
+return sign+"0."+s;
+}
+var head=sign+s.substring(0,s.length-2);
+var tail=s.substring(s.length-2,s.length);
+if(tail=="00"){
+return head;
+}else{
+if(tail.charAt(1)=="0"){
+return head+"."+tail.charAt(0);
+}else{
+return head+"."+tail;
+}
+}
+};
+MochiKit.Format.lstrip=function(str,_241){
+str=str+"";
+if(typeof (str)!="string"){
+return null;
+}
+if(!_241){
+return str.replace(/^\s+/,"");
+}else{
+return str.replace(new RegExp("^["+_241+"]+"),"");
+}
+};
+MochiKit.Format.rstrip=function(str,_242){
+str=str+"";
+if(typeof (str)!="string"){
+return null;
+}
+if(!_242){
+return str.replace(/\s+$/,"");
+}else{
+return str.replace(new RegExp("["+_242+"]+$"),"");
+}
+};
+MochiKit.Format.strip=function(str,_243){
+var self=MochiKit.Format;
+return self.rstrip(self.lstrip(str,_243),_243);
+};
+MochiKit.Format.truncToFixed=function(_244,_245){
+_244=Math.floor(_244*Math.pow(10,_245));
+var res=(_244*Math.pow(10,-_245)).toFixed(_245);
+if(res.charAt(0)=="."){
+res="0"+res;
+}
+return res;
+};
+MochiKit.Format.roundToFixed=function(_246,_247){
+return MochiKit.Format.truncToFixed(_246+0.5*Math.pow(10,-_247),_247);
+};
+MochiKit.Format.percentFormat=function(_248){
+return MochiKit.Format.twoDigitFloat(100*_248)+"%";
+};
+MochiKit.Format.EXPORT=["truncToFixed","roundToFixed","numberFormatter","formatLocale","twoDigitAverage","twoDigitFloat","percentFormat","lstrip","rstrip","strip"];
+MochiKit.Format.LOCALE={"en_US":{"separator":",","decimal":".","percent":"%"},"de_DE":{"separator":".","decimal":",","percent":"%"},"fr_FR":{"separator":" ","decimal":",","percent":"%"},"default":"en_US"};
+MochiKit.Format.EXPORT_OK=[];
+MochiKit.Format.EXPORT_TAGS={":all":MochiKit.Format.EXPORT,":common":MochiKit.Format.EXPORT};
+MochiKit.Format.__new__=function(){
+var base=this.NAME+".";
+for(var k in this){
+var o=this[k];
+if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
+try{
+o.NAME=base+k;
+}
+catch(e){
+}
+}
+}
+};
+MochiKit.Format.__new__();
+if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
+(function(self){
+var all=self.EXPORT_TAGS[":all"];
+for(var i=0;i<all.length;i++){
+this[all[i]]=self[all[i]];
+}
+})(MochiKit.Format);
+}
+if(typeof (dojo)!="undefined"){
+dojo.provide("MochiKit.Async");
+dojo.require("MochiKit.Base");
+}
+if(typeof (JSAN)!="undefined"){
+JSAN.use("MochiKit.Base",[]);
+}
+try{
+if(typeof (MochiKit.Base)=="undefined"){
+throw "";
+}
+}
+catch(e){
+throw "MochiKit.Async depends on MochiKit.Base!";
+}
+if(typeof (MochiKit.Async)=="undefined"){
+MochiKit.Async={};
+}
+MochiKit.Async.NAME="MochiKit.Async";
+MochiKit.Async.VERSION="1.0";
+MochiKit.Async.__repr__=function(){
+return "["+this.NAME+" "+this.VERSION+"]";
+};
+MochiKit.Async.toString=function(){
+return this.__repr__();
+};
+MochiKit.Async.AlreadyCalledError=function(_249){
+this.deferred=_249;
+};
+MochiKit.Async.AlreadyCalledError.prototype=new MochiKit.Base.NamedError("MochiKit.Async.AlreadyCalledError");
+MochiKit.Async.CancelledError=function(_250){
+this.deferred=_250;
+};
+MochiKit.Async.CancelledError.prototype=new MochiKit.Base.NamedError("MochiKit.Async.CancelledError");
+MochiKit.Async.BrowserComplianceError=function(msg){
+this.message=msg;
+};
+MochiKit.Async.BrowserComplianceError.prototype=new MochiKit.Base.NamedError("MochiKit.Async.BrowserComplianceError");
+MochiKit.Async.GenericError=function(msg){
+this.message=msg;
+};
+MochiKit.Async.GenericError.prototype=new MochiKit.Base.NamedError("MochiKit.Async.GenericError");
+MochiKit.Async.XMLHttpRequestError=function(req,msg){
+this.req=req;
+this.message=msg;
+try{
+this.number=req.status;
+}
+catch(e){
+}
+};
+MochiKit.Async.XMLHttpRequestError.prototype=new MochiKit.Base.NamedError("MochiKit.Async.XMLHttpRequestError");
+MochiKit.Async.Deferred=function(_252){
+this.chain=[];
+this.id=this._nextId();
+this.fired=-1;
+this.paused=0;
+this.results=[null,null];
+this.canceller=_252;
+this.silentlyCancelled=false;
+};
+MochiKit.Async.Deferred.prototype.repr=function(){
+var _253;
+if(this.fired==-1){
+_253="unfired";
+}else{
+if(this.fired==0){
+_253="success";
+}else{
+_253="error";
+}
+}
+return "Deferred("+this.id+", "+_253+")";
+};
+MochiKit.Async.Deferred.prototype.toString=MochiKit.Base.forward("repr");
+MochiKit.Async.Deferred.prototype._nextId=(function(){
+var x=0;
+return function(){
+return ++x;
+};
+})();
+MochiKit.Async.Deferred.prototype.cancel=function(){
+if(this.fired==-1){
+if(this.canceller){
+this.canceller(this);
+}else{
+this.silentlyCancelled=true;
+}
+if(this.fired==-1){
+this.errback(new MochiKit.Async.CancelledError(this));
+}
+}else{
+if((this.fired==0)&&(this.results[0] instanceof MochiKit.Async.Deferred)){
+this.results[0].cancel();
+}
+}
+};
+MochiKit.Async.Deferred.prototype._pause=function(){
+this.paused++;
+};
+MochiKit.Async.Deferred.prototype._unpause=function(){
+this.paused--;
+if((this.paused==0)&&(this.fired>=0)){
+this._fire();
+}
+};
+MochiKit.Async.Deferred.prototype._continue=function(res){
+this._resback(res);
+this._unpause();
+};
+MochiKit.Async.Deferred.prototype._resback=function(res){
+this.fired=((res instanceof Error)?1:0);
+this.results[this.fired]=res;
+this._fire();
+};
+MochiKit.Async.Deferred.prototype._check=function(){
+if(this.fired!=-1){
+if(!this.silentlyCancelled){
+throw new MochiKit.Async.AlreadyCalledError(this);
+}
+this.silentlyCancelled=false;
+return;
+}
+};
+MochiKit.Async.Deferred.prototype.callback=function(res){
+this._check();
+this._resback(res);
+};
+MochiKit.Async.Deferred.prototype.errback=function(res){
+this._check();
+if(!(res instanceof Error)){
+res=new MochiKit.Async.GenericError(res);
+}
+this._resback(res);
+};
+MochiKit.Async.Deferred.prototype.addBoth=function(fn){
+return this.addCallbacks(fn,fn);
+};
+MochiKit.Async.Deferred.prototype.addCallback=function(fn){
+return this.addCallbacks(fn,null);
+};
+MochiKit.Async.Deferred.prototype.addErrback=function(fn){
+return this.addCallbacks(null,fn);
+};
+MochiKit.Async.Deferred.prototype.addCallbacks=function(cb,eb){
+this.chain.push([cb,eb]);
+if(this.fired>=0){
+this._fire();
+}
+return this;
+};
+MochiKit.Async.Deferred.prototype._fire=function(){
+var _256=this.chain;
+var _257=this.fired;
+var res=this.results[_257];
+var self=this;
+var cb=null;
+while(_256.length>0&&this.paused==0){
+var pair=_256.shift();
+var f=pair[_257];
+if(f==null){
+continue;
+}
+try{
+res=f(res);
+_257=((res instanceof Error)?1:0);
+if(res instanceof MochiKit.Async.Deferred){
+cb=function(res){
+self._continue(res);
+};
+this._pause();
+}
+}
+catch(err){
+_257=1;
+res=err;
+}
+}
+this.fired=_257;
+this.results[_257]=res;
+if(cb&&this.paused){
+res.addBoth(cb);
+}
+};
+MochiKit.Async.evalJSONRequest=function(req){
+return eval("("+req.responseText+")");
+};
+MochiKit.Async.succeed=function(_259){
+var d=new MochiKit.Async.Deferred();
+d.callback.apply(d,arguments);
+return d;
+};
+MochiKit.Async.fail=function(_260){
+var d=new MochiKit.Async.Deferred();
+d.errback.apply(d,arguments);
+return d;
+};
+MochiKit.Async.getXMLHttpRequest=function(){
+var self=arguments.callee;
+if(!self.XMLHttpRequest){
+var _261=[function(){
+return new XMLHttpRequest();
+},function(){
+return new ActiveXObject("Msxml2.XMLHTTP");
+},function(){
+return new ActiveXObject("Microsoft.XMLHTTP");
+},function(){
+return new ActiveXObject("Msxml2.XMLHTTP.4.0");
+},function(){
+throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
+}];
+for(var i=0;i<_261.length;i++){
+var func=_261[i];
+try{
+self.XMLHttpRequest=func;
+return func();
+}
+catch(e){
+}
+}
+}
+return self.XMLHttpRequest();
+};
+MochiKit.Async.sendXMLHttpRequest=function(req,_262){
+if(typeof (_262)=="undefined"){
+send=null;
+}
+var _263=function(){
+try{
+req.onreadystatechange=null;
+}
+catch(e){
+try{
+req.onreadystatechange=function(){
+};
+}
+catch(e){
+}
+}
+req.abort();
+};
+var d=new MochiKit.Async.Deferred(_263);
+var _264=function(){
+if(req.readyState==4){
+try{
+req.onreadystatechange=null;
+}
+catch(e){
+try{
+req.onreadystatechange=function(){
+};
+}
+catch(e){
+}
+}
+var _265=null;
+try{
+_265=req.status;
+if(!_265&&MochiKit.Base.isNotEmpty(req.responseText)){
+_265=304;
+}
+}
+catch(e){
+}
+if(_265==200||_265==304){
+d.callback(req);
+}else{
+var err=new MochiKit.Async.XMLHttpRequestError(req,"Request failed");
+if(err.number){
+d.errback(err);
+}else{
+d.errback(err);
+}
+}
+}
+};
+try{
+req.onreadystatechange=_264;
+req.send(_262);
+}
+catch(e){
+try{
+req.onreadystatechange=null;
+}
+catch(ignore){
+}
+d.errback(e);
+}
+return d;
+};
+MochiKit.Async.doSimpleXMLHttpRequest=function(url){
+var req=MochiKit.Async.getXMLHttpRequest();
+req.open("GET",url,true);
+return MochiKit.Async.sendXMLHttpRequest(req);
+};
+MochiKit.Async.loadJSONDoc=function(url){
+var d=MochiKit.Async.doSimpleXMLHttpRequest(url);
+d=d.addCallback(MochiKit.Async.evalJSONRequest);
+return d;
+};
+MochiKit.Async.wait=function(_268,_269){
+var d=new MochiKit.Async.Deferred();
+var bind=MochiKit.Base.bind;
+var _270=MochiKit.Base.partial;
+if(typeof (_269)!="undefined"){
+d.addCallback(function(){
+return _269;
+});
+}
+var _271=setTimeout(bind(d.callback,d),Math.floor(_268*1000));
+d.canceller=function(){
+try{
+clearTimeout(_271);
+}
+catch(e){
+}
+};
+return d;
+};
+MochiKit.Async.callLater=function(_272,func){
+var m=MochiKit.Base;
+var _273=m.partial.apply(null,m.extend(null,arguments,1));
+return MochiKit.Async.wait(_272).addCallback(function(res){
+return _273();
+});
+};
+MochiKit.Async.EXPORT=["AlreadyCalledError","CancelledError","BrowserComplianceError","GenericError","XMLHttpRequestError","Deferred","succeed","fail","getXMLHttpRequest","doSimpleXMLHttpRequest","loadJSONDoc","wait","callLater","sendXMLHttpRequest"];
+MochiKit.Async.EXPORT_OK=["evalJSONRequest"];
+MochiKit.Async.__new__=function(){
+this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
+MochiKit.Base.nameFunctions(this);
+};
+MochiKit.Async.__new__();
+if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
+(function(self){
+var all=self.EXPORT_TAGS[":all"];
+for(var i=0;i<all.length;i++){
+this[all[i]]=self[all[i]];
+}
+})(MochiKit.Async);
+}
+if(typeof (dojo)!="undefined"){
+dojo.provide("MochiKit.DOM");
+dojo.require("MochiKit.Iter");
+}
+if(typeof (JSAN)!="undefined"){
+JSAN.use("MochiKit.Iter",[]);
+}
+try{
+if(typeof (MochiKit.Iter)=="undefined"){
+throw "";
+}
+}
+catch(e){
+throw "MochiKit.DOM depends on MochiKit.Iter!";
+}
+if(typeof (MochiKit.DOM)=="undefined"){
+MochiKit.DOM={};
+}
+MochiKit.DOM.NAME="MochiKit.DOM";
+MochiKit.DOM.VERSION="1.0";
+MochiKit.DOM.__repr__=function(){
+return "["+this.NAME+" "+this.VERSION+"]";
+};
+MochiKit.DOM.toString=function(){
+return this.__repr__();
+};
+MochiKit.DOM.EXPORT=["registerDOMConverter","coerceToDOM","createDOM","createDOMFunc","updateNodeAttributes","appendChildNodes","replaceChildNodes","swapDOM","BUTTON","TT","PRE","H1","H2","H3","BR","HR","LABEL","TEXTAREA","FORM","P","UL","OL","LI","TD","TR","THEAD","TBODY","TFOOT","TABLE","TH","INPUT","SPAN","A","DIV","IMG","getElement","$","getElementsByTagAndClassName","addToCallStack","addLoadEvent","focusOnLoad","setElementClass","toggleElementClass","addElementClass","removeElementClass","swapElementClass","hasElementClass","escapeHTML","toHTML","emitHTML","setDisplayForElement","hideElement","showElement","scrapeText"];
+MochiKit.DOM.EXPORT_OK=["domConverters"];
+MochiKit.DOM.registerDOMConverter=function(name,_274,wrap,_276){
+MochiKit.DOM.domConverters.register(name,_274,wrap,_276);
+};
+MochiKit.DOM.coerceToDOM=function(node,ctx){
+var iter=MochiKit.Iter.iter;
+var _278=MochiKit.Iter.repeat;
+var imap=MochiKit.Iter.imap;
+var _280=MochiKit.DOM.domConverters;
+var _281=MochiKit.DOM.coerceToDOM;
+var _282=MochiKit.Base.NotFound;
+while(true){
+if(typeof (node)=="undefined"||node==null){
+return null;
+}
+if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
+return node;
+}
+if(typeof (node)=="number"||typeof (node)=="bool"){
+node=node.toString();
+}
+if(typeof (node)=="string"){
+return document.createTextNode(node);
+}
+if(typeof (node.toDOM)=="function"){
+node=node.toDOM(ctx);
+continue;
+}
+if(typeof (node)=="function"){
+node=node(ctx);
+continue;
+}
+var _283=null;
+try{
+_283=iter(node);
+}
+catch(e){
+}
+if(_283){
+return imap(_281,_283,_278(ctx));
+}
+try{
+node=_280.match(node,ctx);
+continue;
+}
+catch(e){
+if(e!=_282){
+throw e;
+}
+}
+return document.createTextNode(node.toString());
+}
+return undefined;
+};
+MochiKit.DOM.updateNodeAttributes=function(node,_284){
+var elem=node;
+if(typeof (node)=="string"){
+elem=MochiKit.DOM.getElement(node);
+}
+if(_284){
+var _285=MochiKit.Base.updatetree;
+if(MochiKit.DOM.attributeArray.compliant){
+for(var k in _284){
+var v=_284[k];
+if(typeof (v)=="object"&&typeof (elem[k])=="object"){
+_285(elem[k],v);
+}else{
+if(k.substring(0,2)=="on"){
+if(typeof (v)=="string"){
+v=new Function(v);
+}
+elem[k]=v;
+}else{
+elem.setAttribute(k,v);
+}
+}
+}
+}else{
+var _286={"class":"className","checked":"defaultChecked"};
+for(k in _284){
+v=_284[k];
+var _287=_286[k];
+if(typeof (_287)=="string"){
+elem[_287]=v;
+}else{
+if(typeof (elem[k])=="object"&&typeof (v)=="object"){
+_285(elem[k],v);
+}else{
+if(k.substring(0,2)=="on"){
+if(typeof (v)=="string"){
+v=new Function(v);
+}
+elem[k]=v;
+}else{
+elem.setAttribute(k,v);
+}
+}
+}
+}
+}
+}
+return elem;
+};
+MochiKit.DOM.appendChildNodes=function(node){
+var elem=node;
+if(typeof (node)=="string"){
+elem=MochiKit.DOM.getElement(node);
+}
+var _288=[MochiKit.DOM.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
+var _289=MochiKit.Iter.iextend;
+while(_288.length){
+var n=_288.shift();
+if(typeof (n)=="undefined"||n==null){
+}else{
+if(typeof (n.nodeType)=="number"){
+elem.appendChild(n);
+}else{
+_289(_288,n);
+}
+}
+}
+return elem;
+};
+MochiKit.DOM.replaceChildNodes=function(node){
+var elem=node;
+if(typeof (node)=="string"){
+elem=MochiKit.DOM.getElement(node);
+arguments[0]=elem;
+}
+var _290;
+while((_290=elem.firstChild)){
+elem.removeChild(_290);
+}
+if(arguments.length<2){
+return elem;
+}else{
+return MochiKit.DOM.appendChildNodes.apply(this,arguments);
+}
+};
+MochiKit.DOM.createDOM=function(name,_291){
+var elem;
+if(typeof (name)=="string"){
+elem=document.createElement(name);
+}else{
+elem=name;
+}
+if(_291){
+MochiKit.DOM.updateNodeAttributes(elem,_291);
+}
+if(arguments.length<=2){
+return elem;
+}else{
+var args=MochiKit.Base.extend([elem],arguments,2);
+return MochiKit.DOM.appendChildNodes.apply(this,args);
+}
+};
+MochiKit.DOM.createDOMFunc=function(){
+return MochiKit.Base.partial.apply(this,MochiKit.Base.extend([MochiKit.DOM.createDOM],arguments));
+};
+MochiKit.DOM.swapDOM=function(dest,src){
+dest=MochiKit.DOM.getElement(dest);
+var _295=dest.parentNode;
+if(src){
+src=MochiKit.DOM.getElement(src);
+_295.replaceChild(src,dest);
+}else{
+_295.removeChild(dest);
+}
+return src;
+};
+MochiKit.DOM.getElement=function(id){
+if(arguments.length==1){
+return ((typeof (id)=="string")?document.getElementById(id):id);
+}else{
+return MochiKit.Base.map(getElement,arguments);
+}
+};
+MochiKit.DOM.getElementsByTagAndClassName=function(_297,_298,_299){
+if(typeof (_297)=="undefined"||_297==null){
+_297="*";
+}
+if(typeof (_299)=="undefined"||_299==null){
+_299=document;
+}
+_299=MochiKit.DOM.getElement(_299);
+var _300=_299.getElementsByTagName(_297)||document.all;
+if(typeof (_298)=="undefined"||_298==null){
+return MochiKit.Base.extend(null,_300);
+}
+var _301=[];
+for(var i=0;i<_300.length;i++){
+var _302=_300[i];
+var _303=_302.className.split(" ");
+for(var j=0;j<_303.length;j++){
+if(_303[j]==_298){
+_301.push(_302);
+break;
+}
+}
+}
+return _301;
+};
+MochiKit.DOM.addToCallStack=function(_304,path,func,once){
+var _307=_304[path];
+var _308=_307;
+if(!(typeof (_307)=="function"&&_307.callStack)){
+_308=function(){
+var _309=_308.callStack;
+for(var i=0;i<_309.length;i++){
+if(_309[i].apply(this,arguments)===false){
+break;
+}
+}
+if(once){
+try{
+_304[path]=null;
+}
+catch(e){
+}
+}
+};
+_308.callStack=[];
+if(typeof (_307)=="function"){
+_308.callStack.push(_307);
+}
+_304[path]=_308;
+}
+_308.callStack.push(func);
+};
+MochiKit.DOM.addLoadEvent=function(func){
+MochiKit.DOM.addToCallStack(window,"onload",func,true);
+};
+MochiKit.DOM.focusOnLoad=function(_310){
+MochiKit.DOM.addLoadEvent(function(){
+_310=MochiKit.DOM.getElement(_310);
+if(_310){
+_310.focus();
+}
+});
+};
+MochiKit.DOM.setElementClass=function(_311,_312){
+var obj=MochiKit.DOM.getElement(_311);
+if(MochiKit.DOM.attributeArray.compliant){
+obj.setAttribute("class",_312);
+}else{
+obj.setAttribute("className",_312);
+}
+};
+MochiKit.DOM.toggleElementClass=function(_313){
+var _314=MochiKit.DOM.getElement;
+var _315=MochiKit.DOM.addElementClass;
+var _316=MochiKit.DOM.removeElementClass;
+for(var i=1;i<arguments.length;i++){
+var obj=_314(arguments[i]);
+if(!_315(obj,_313)){
+_316(obj,_313);
+}
+}
+};
+MochiKit.DOM.addElementClass=function(_317,_318){
+var obj=MochiKit.DOM.getElement(_317);
+var cls=obj.className;
+if(cls.length==0){
+MochiKit.DOM.setElementClass(obj,_318);
+return true;
+}
+if(cls==_318){
+return false;
+}
+var _320=obj.className.split(" ");
+for(var i=0;i<_320.length;i++){
+if(_320[i]==_318){
+return false;
+}
+}
+MochiKit.DOM.setElementClass(obj,cls+" "+_318);
+return true;
+};
+MochiKit.DOM.removeElementClass=function(_321,_322){
+var obj=MochiKit.DOM.getElement(_321);
+var cls=obj.className;
+if(cls.length==0){
+return false;
+}
+if(cls==_322){
+MochiKit.DOM.setElementClass(obj,"");
+return true;
+}
+var _323=obj.className.split(" ");
+for(var i=0;i<_323.length;i++){
+if(_323[i]==_322){
+_323.splice(i,1);
+MochiKit.DOM.setElementClass(obj,_323.join(" "));
+return true;
+}
+}
+return false;
+};
+MochiKit.DOM.swapElementClass=function(_324,_325,_326){
+var obj=MochiKit.DOM.getElement(_324);
+var res=MochiKit.DOM.removeElementClass(obj,_325);
+if(res){
+MochiKit.DOM.addElementClass(obj,_326);
+}
+return res;
+};
+MochiKit.DOM.hasElementClass=function(_327,_328){
+var obj=MochiKit.DOM.getElement(_327);
+var _329=obj.className.split(" ");
+for(var i=1;i<arguments.length;i++){
+var good=false;
+for(var j=0;j<_329.length;j++){
+if(_329[j]==arguments[i]){
+good=true;
+break;
+}
+}
+if(!good){
+return false;
+}
+}
+return true;
+};
+MochiKit.DOM.escapeHTML=function(s){
+var buf=[];
+var _332=MochiKit.DOM._TRANSTABLE;
+for(var i=0;i<s.length;i++){
+var c=s.charAt(i);
+var o=_332[c];
+if(o){
+c=o;
+}
+buf.push(c);
+}
+return buf.join("");
+};
+MochiKit.DOM.toHTML=function(dom){
+return MochiKit.DOM.emitHTML(dom).join("");
+};
+MochiKit.DOM.emitHTML=function(dom,lst){
+if(typeof (lst)=="undefined"||lst==null){
+lst=[];
+}
+var _335=[dom];
+var _336=MochiKit.DOM.escapeHTML;
+var _337=MochiKit.DOM.attributeArray;
+while(_335.length){
+dom=_335.pop();
+if(typeof (dom)=="string"){
+lst.push(dom);
+}else{
+if(dom.nodeType==1){
+lst.push("<"+dom.nodeName.toLowerCase());
+var _338=[];
+var _339=_337(dom);
+for(var i=0;i<_339.length;i++){
+var a=_339[i];
+_338.push([" ",a.name,"=\"",_336(a.value),"\""]);
+}
+_338.sort();
+for(i=0;i<_338.length;i++){
+var _340=_338[i];
+for(var j=0;j<_340.length;j++){
+lst.push(_340[j]);
+}
+}
+if(dom.hasChildNodes()){
+lst.push(">");
+_335.push("</"+dom.nodeName.toLowerCase()+">");
+var _341=dom.childNodes;
+for(i=_341.length-1;i>=0;i--){
+_335.push(_341[i]);
+}
+}else{
+lst.push("/>");
+}
+}else{
+if(dom.nodeType==3){
+lst.push(_336(dom.nodeValue));
+}
+}
+}
+}
+return lst;
+};
+MochiKit.DOM.setDisplayForElement=function(_342,_343){
+var _344=MochiKit.Base.extend(null,arguments,1);
+MochiKit.Iter.forEach(MochiKit.Base.filter(null,MochiKit.Base.map(getElement,_344)),function(_343){
+_343.style.display=_342;
+});
+};
+MochiKit.DOM.scrapeText=function(node,_345){
+var rval=[];
+MochiKit.Base.nodeWalk(node,function(node){
+var _346=node.nodeValue;
+if(typeof (_346)=="string"){
+rval.push(_346);
+}
+return node.childNodes;
+});
+if(_345){
+return rval;
+}else{
+return rval.join("");
+}
+};
+MochiKit.DOM.__new__=function(){
+this.domConverters=new MochiKit.Base.AdapterRegistry();
+var _347=document.createElement("span");
+var _348;
+if(_347.attributes.length>0){
+var _349=MochiKit.Base.filter;
+_348=function(node){
+return _349(_348.ignoreAttrFilter,node.attributes);
+};
+_348.ignoreAttr={};
+MochiKit.Iter.forEach(_347.attributes,function(a){
+_348.ignoreAttr[a.name]=a.value;
+});
+_348.ignoreAttrFilter=function(a){
+return (_348.ignoreAttr[a.name]!=a.value);
+};
+_348.compliant=false;
+}else{
+_348=function(node){
+return node.attributes;
+};
+_348.compliant=true;
+}
+this.attributeArray=_348;
+var _350=this.createDOMFunc;
+this.UL=_350("ul");
+this.OL=_350("ol");
+this.LI=_350("li");
+this.TD=_350("td");
+this.TR=_350("tr");
+this.TBODY=_350("tbody");
+this.THEAD=_350("thead");
+this.TFOOT=_350("tfoot");
+this.TABLE=_350("table");
+this.TH=_350("th");
+this.INPUT=_350("input");
+this.SPAN=_350("span");
+this.A=_350("a");
+this.DIV=_350("div");
+this.IMG=_350("img");
+this.BUTTON=_350("button");
+this.TT=_350("tt");
+this.PRE=_350("pre");
+this.H1=_350("h1");
+this.H2=_350("h2");
+this.H3=_350("h3");
+this.BR=_350("br");
+this.HR=_350("hr");
+this.LABEL=_350("label");
+this.TEXTAREA=_350("textarea");
+this.FORM=_350("form");
+this.P=_350("p");
+this._TRANSTABLE={"<":"&lt;",">":"&gt;","&":"&amp;","'":"&apos;","\"":"&quot;"};
+var _351=MochiKit.Base.partial;
+this.hideElement=_351(this.setDisplayForElement,"none");
+this.showElement=_351(this.setDisplayForElement,"block");
+this.$=this.getElement;
+this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
+MochiKit.Base.nameFunctions(this);
+};
+MochiKit.DOM.__new__();
+if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
+(function(self){
+var all=self.EXPORT_TAGS[":all"];
+for(var i=0;i<all.length;i++){
+this[all[i]]=self[all[i]];
+}
+})(MochiKit.DOM);
+}
+if(typeof (dojo)!="undefined"){
+dojo.provide("MochiKit.LoggingPane");
+dojo.require("MochiKit.Logging");
+dojo.require("MochiKit.Base");
+}
+if(typeof (JSAN)!="undefined"){
+JSAN.use("MochiKit.Logging",[]);
+JSAN.use("MochiKit.Base",[]);
+}
+try{
+if(typeof (MochiKit.Base)=="undefined"||typeof (MochiKit.Logging)=="undefined"){
+throw "";
+}
+}
+catch(e){
+throw "MochiKit.LoggingPane depends on MochiKit.Base and MochiKit.Logging!";
+}
+if(typeof (MochiKit.LoggingPane)=="undefined"){
+MochiKit.LoggingPane={};
+}
+MochiKit.LoggingPane.NAME="MochiKit.LoggingPane";
+MochiKit.LoggingPane.VERSION="1.0";
+MochiKit.LoggingPane.__repr__=function(){
+return "["+this.NAME+" "+this.VERSION+"]";
+};
+MochiKit.LoggingPane.toString=function(){
+return this.__repr__();
+};
+MochiKit.LoggingPane.createLoggingPane=function(_352){
+var m=MochiKit.LoggingPane;
+_352=!(!_352);
+if(m._loggingPane&&m._loggingPane.inline!=_352){
+m._loggingPane.closePane();
+m._loggingPane=null;
+}
+if(!m._loggingPane||m._loggingPane.closed){
+m._loggingPane=new m.LoggingPane(_352,MochiKit.Logging.logger);
+}
+return m._loggingPane;
+};
+MochiKit.LoggingPane.LoggingPane=function(_353,_354){
+var doc=document;
+if(typeof (_354)=="undefined"||_354==null){
+MochiKit.Logging.logger;
+}
+var _356=MochiKit.Base.update;
+var _357=MochiKit.Base.updatetree;
+var bind=MochiKit.Base.bind;
+var _358=MochiKit.Base.clone;
+var win;
+if(!_353){
+win=window.open("","","dependent,resizable,height=200");
+if(!win){
+alert("Not able to open debugging window due to pop-up blocking.");
+return;
+}
+doc=win.document;
+}
+this.doc=doc;
+var _360=doc.createElement("div");
+var _361=doc.createElement("input");
+var _362=doc.createElement("input");
+var _363=doc.createElement("button");
+var _364=doc.createElement("button");
+var _365=doc.createElement("button");
+var _366=doc.createElement("button");
+var _367=doc.createElement("div");
+var _368=doc.createElement("div");
+var _369="_debugPaneListener";
+this.colorTable=_358(this.colorTable);
+var _370=[];
+var _371=null;
+var _372=function(msg){
+var _373=msg.level;
+if(typeof (_373)=="number"){
+_373=MochiKit.Logging.LogLevel[_373];
+}
+return _373;
+};
+var _374=function(msg){
+return msg.info.join(" ");
+};
+var _375=bind(function(msg){
+var _376=_372(msg);
+var text=_374(msg);
+var c=this.colorTable[_376];
+var p=doc.createElement("span");
+p.style.color=c;
+p.style.margin="0";
+p.appendChild(doc.createTextNode(_376+": "+text));
+_368.appendChild(p);
+_368.appendChild(doc.createElement("br"));
+if(_367.offsetHeight>_367.scrollHeight){
+_367.scrollTop=0;
+}else{
+_367.scrollTop=_367.scrollHeight;
+}
+},this);
+var _378=function(msg){
+_370[_370.length]=msg;
+_375(msg);
+};
+var _379=function(){
+var _380,infore;
+try{
+_380=new RegExp(_361.value);
+infore=new RegExp(_362.value);
+}
+catch(e){
+logDebug("Error in filter regex: "+e.message);
+return null;
+}
+return function(msg){
+return (_380.test(_372(msg))&&infore.test(_374(msg)));
+};
+};
+var _381=function(){
+while(_368.firstChild){
+_368.removeChild(_368.firstChild);
+}
+};
+var _382=function(){
+_370=[];
+_381();
+};
+var _383=bind(function(){
+if(this.closed){
+return;
+}
+this.closed=true;
+if(MochiKit.LoggingPane._loggingPane==this){
+MochiKit.LoggingPane._loggingPane=null;
+}
+_354.removeListener(_369);
+if(_353){
+_360.parentNode.removeChild(_360);
+}else{
+this.win.close();
+}
+},this);
+var _384=function(){
+_381();
+for(var i=0;i<_370.length;i++){
+var msg=_370[i];
+if(_371==null||_371(msg)){
+_375(msg);
+}
+}
+};
+var _385=function(){
+_371=_379();
+_384();
+_354.removeListener(_369);
+_354.addListener(_369,_371,_378);
+};
+var _386=function(){
+_370=_354.getMessages();
+_384();
+};
+var _387=function(_388){
+_388=_388||window.event;
+key=_388.which||_388.keyCode;
+if(key==13){
+_385();
+}
+};
+var _389={"display":"block","position":"fixed","left":"0px","bottom":"0px","font":this.logFont,"width":"100%","height":"100%","backgroundColor":"white"};
+if(_353){
+_389.height="10em";
+_389.borderTop="2px solid black";
+}
+_356(_360.style,_389);
+doc.body.appendChild(_360);
+_389={"width":"33%","display":"inline","font":this.logFont};
+_357(_361,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_387,"style":_389});
+_360.appendChild(_361);
+_357(_362,{"value":".*","onkeypress":_387,"style":_389});
+_360.appendChild(_362);
+_389={"width":"8%","display":"inline","font":this.logFont};
+_363.appendChild(doc.createTextNode("Filter"));
+_363.onclick=_385;
+_356(_363.style,_389);
+_360.appendChild(_363);
+_364.appendChild(doc.createTextNode("Load"));
+_364.onclick=_386;
+_356(_364.style,_389);
+_360.appendChild(_364);
+_365.appendChild(doc.createTextNode("Clear"));
+_365.onclick=_382;
+_356(_365.style,_389);
+_360.appendChild(_365);
+_366.appendChild(doc.createTextNode("Close"));
+_366.onclick=_383;
+_356(_366.style,_389);
+_360.appendChild(_366);
+_360.style.display="block";
+_367.style.overflow="auto";
+_367.style.width="100%";
+_368.style.whitespace="preserve";
+_368.style.width="100%";
+_368.style.height="8em";
+_367.appendChild(_368);
+_360.appendChild(_367);
+_385();
+_386();
+this.win=win;
+this.inline=_353;
+this.closePane=_383;
+this.closed=false;
+};
+MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
+MochiKit.LoggingPane.EXPORT_OK=["LoggingPane"];
+MochiKit.LoggingPane.EXPORT=["createLoggingPane"];
+MochiKit.LoggingPane.__new__=function(){
+this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
+MochiKit.Base.nameFunctions(this);
+MochiKit.LoggingPane._loggingPane=null;
+};
+MochiKit.LoggingPane.__new__();
+if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
+(function(self){
+var all=self.EXPORT_TAGS[":all"];
+for(var i=0;i<all.length;i++){
+this[all[i]]=self[all[i]];
+}
+})(MochiKit.LoggingPane);
+}
+if(typeof (dojo)!="undefined"){
+dojo.provide("MochiKit.Visual");
+dojo.require("MochiKit.Base");
+dojo.require("MochiKit.DOM");
+}
+if(typeof (JSAN)!="undefined"){
+JSAN.use("MochiKit.Base",[]);
+JSAN.use("MochiKit.DOM",[]);
+}
+try{
+if(typeof (MochiKit.Base)=="undefined"||typeof (MochiKit.DOM)=="undefined"){
+throw "";
+}
+}
+catch(e){
+throw "MochiKit.Visual depends on MochiKit.Base and MochiKit.DOM!";
+}
+if(typeof (MochiKit.Visual)=="undefined"){
+MochiKit.Visual={};
+}
+MochiKit.Visual.NAME="MochiKit.Visual";
+MochiKit.Visual.VERSION="1.0";
+MochiKit.Visual.__repr__=function(){
+return "["+this.NAME+" "+this.VERSION+"]";
+};
+MochiKit.Visual.toString=function(){
+return this.__repr__();
+};
+MochiKit.Visual.clampColorComponent=function(v,_390){
+v*=_390;
+if(v<0){
+return 0;
+}else{
+if(v>_390){
+return _390;
+}else{
+return v;
+}
+}
+};
+MochiKit.Visual.Color=function(red,_392,blue,_394){
+if(typeof (_394)=="undefined"||_394==null){
+_394=1;
+}
+this.rgb={"r":red,"g":_392,"b":blue,"a":_394};
+};
+MochiKit.Visual.Color.prototype={"__class__":MochiKit.Visual.Color,"colorWithAlpha":function(_395){
+var rgb=this.rgb;
+var m=MochiKit.Visual;
+return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_395);
+},"colorWithHue":function(hue){
+var hsl=this.asHSL();
+hsl.h=hue;
+var m=MochiKit.Visual;
+return m.Color.fromHSL(hsl);
+},"colorWithSaturation":function(_399){
+var hsl=this.asHSL();
+hsl.s=_399;
+var m=MochiKit.Visual;
+return m.Color.fromHSL(hsl);
+},"colorWithLightness":function(_400){
+var hsl=this.asHSL();
+hsl.l=_400;
+var m=MochiKit.Visual;
+return m.Color.fromHSL(hsl);
+},"darkerColorWithLevel":function(_401){
+var hsl=this.asHSL();
+hsl.l=Math.max(hsl.l-_401,0);
+var m=MochiKit.Visual;
+return m.Color.fromHSL(hsl);
+},"lighterColorWithLevel":function(_402){
+var hsl=this.asHSL();
+Math.min(hsl.l+_402,1);
+var m=MochiKit.Visual;
+return m.Color.fromHSL(hsl);
+},"blendedColor":function(_403,_404){
+if(typeof (_404)=="undefined"||_404==null){
+_404=0.5;
+}
+var sf=1-_404;
+var s=this.rgb;
+var d=_403.rgb;
+var df=_404;
+return MochiKit.Visual.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
+},"compareRGB":function(_407){
+var a=this.asRGB();
+var b=_407.asRGB();
+return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
+},"isLight":function(){
+return this.asHSL().b>0.5;
+},"isDark":function(){
+return (!this.isLight());
+},"toHSLString":function(){
+var c=this.asHSL();
+var ccc=MochiKit.Visual.clampColorComponent;
+var rval=this._hslString;
+if(!rval){
+var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
+var a=c.a;
+if(a>=1){
+a=1;
+rval="hsl("+mid+")";
+}else{
+if(a<=0){
+a=0;
+}
+rval="hsla("+mid+","+a+")";
+}
+this._hslString=rval;
+}
+return rval;
+},"toRGBString":function(){
+var c=this.rgb;
+var ccc=MochiKit.Visual.clampColorComponent;
+var rval=this._rgbString;
+if(!rval){
+var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
+if(c.a!=1){
+rval="rgba("+mid+","+c.a+")";
+}else{
+rval="rgb("+mid+")";
+}
+this._rgbString=rval;
+}
+return rval;
+},"asRGB":function(){
+return MochiKit.Base.clone(this.rgb);
+},"toHexString":function(){
+var m=MochiKit.Visual;
+var c=this.rgb;
+var ccc=MochiKit.Visual.clampColorComponent;
+var rval=this._hexString;
+if(!rval){
+rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
+this._hexString=rval;
+}
+return rval;
+},"asHSV":function(){
+var hsv=this.hsv;
+var c=this.rgb;
+if(typeof (hsv)=="undefined"||hsv==null){
+hsv=MochiKit.Visual.rgbToHSV(this.rgb);
+this.hsv=hsv;
+}
+return MochiKit.Base.clone(hsv);
+},"asHSL":function(){
+var hsl=this.hsl;
+var c=this.rgb;
+if(typeof (hsl)=="undefined"||hsl==null){
+hsl=MochiKit.Visual.rgbToHSL(this.rgb);
+this.hsl=hsl;
+}
+return MochiKit.Base.clone(hsl);
+},"toString":function(){
+return this.toRGBString();
+},"repr":function(){
+var c=this.rgb;
+var col=[c.r,c.g,c.b,c.a];
+return this.__class__.NAME+"("+col.join(", ")+")";
+}};
+MochiKit.Visual.Color.fromRGB=function(red,_412,blue,_413){
+var _414=MochiKit.Visual.Color;
+if(arguments.length==1){
+var rgb=red;
+red=rgb.r;
+_412=rgb.g;
+blue=rgb.b;
+if(typeof (rgb.a)=="undefined"){
+_413=undefined;
+}else{
+_413=rgb.a;
+}
+}
+return new _414(red,_412,blue,_413);
+};
+MochiKit.Visual.Color.fromHSL=function(hue,_415,_416,_417){
+var m=MochiKit.Visual;
+return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
+};
+MochiKit.Visual.Color.fromHSV=function(hue,_418,_419,_420){
+var m=MochiKit.Visual;
+return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
+};
+MochiKit.Visual.Color.fromName=function(name){
+var _421=MochiKit.Visual.Color;
+var _422=_421._namedColors[name.toLowerCase()];
+if(typeof (_422)=="string"){
+return _421.fromHexString(_422);
+}else{
+if(name=="transparent"){
+return _421.transparentColor();
+}
+}
+return null;
+};
+MochiKit.Visual.Color.fromString=function(_423){
+var self=MochiKit.Visual.Color;
+var _424=_423.substr(0,3);
+if(_424=="rgb"){
+return self.fromRGBString(_423);
+}else{
+if(_424=="hsl"){
+return self.fromHSLString(_423);
+}else{
+if(_423.charAt(0)=="#"){
+return self.fromHexString(_423);
+}
+}
+}
+return self.fromName(_423);
+};
+MochiKit.Visual.Color.fromHexString=function(_425){
+if(_425.charAt(0)=="#"){
+_425=_425.substring(1);
+}
+var _426=[];
+var i,hex;
+if(_425.length==3){
+for(i=0;i<3;i++){
+hex=_425.substr(i,1);
+_426.push(parseInt(hex+hex,16)/255);
+}
+}else{
+for(i=0;i<6;i+=2){
+hex=_425.substr(i,2);
+_426.push(parseInt(hex,16)/255);
+}
+}
+var _427=MochiKit.Visual.Color;
+return _427.fromRGB.apply(_427,_426);
+};
+MochiKit.Visual.Color._fromColorString=function(pre,_429,_430,_431){
+if(_431.indexOf(pre)==0){
+_431=_431.substring(_431.indexOf("(",3)+1,_431.length-1);
+}
+var _432=_431.split(/\s*,\s*/);
+var _433=[];
+for(var i=0;i<_432.length;i++){
+var c=_432[i];
+var val;
+var _434=c.substring(c.length-3);
+if(c.charAt(c.length-1)=="%"){
+val=0.01*parseFloat(c.substring(0,c.length-1));
+}else{
+if(_434=="deg"){
+val=parseFloat(c)/360;
+}else{
+if(_434=="rad"){
+val=parseFloat(c)/(Math.PI*2);
+}else{
+val=_430[i]*parseFloat(c);
+}
+}
+}
+_433.push(val);
+}
+return this[_429].apply(this,_433);
+};
+MochiKit.Visual.Color.fromBackground=function(elem){
+var m=MochiKit.Visual;
+for(elem=MochiKit.DOM.getElement(elem);elem;elem=elem.parentNode){
+var _435=m.getElementsComputedStyle(elem,"backgroundColor","background-color");
+if(!_435){
+continue;
+}
+var _436=m.Color.fromString(_435);
+if(!_436){
+break;
+}
+if(_436.asRGB().a>0){
+return _436;
+}
+}
+return m.Color.whiteColor();
+};
+MochiKit.Visual._hslValue=function(n1,n2,hue){
+if(hue>6){
+hue-=6;
+}else{
+if(hue<0){
+hue+=6;
+}
+}
+var val;
+if(hue<1){
+val=n1+(n2-n1)*hue;
+}else{
+if(hue<3){
+val=n2;
+}else{
+if(hue<4){
+val=n1+(n2-n1)*(4-hue);
+}else{
+val=n1;
+}
+}
+}
+return val;
+};
+MochiKit.Visual.hsvToRGB=function(hue,_439,_440,_441){
+if(arguments.length==1){
+var hsv=hue;
+hue=hsv.h;
+_439=hsv.s;
+_440=hsv.v;
+_441=hsv.a;
+}
+var red;
+var _442;
+var blue;
+if(_439==0){
+red=0;
+_442=0;
+blue=0;
+}else{
+var i=Math.floor(hue*6);
+var f=(hue*6)-i;
+var p=_440*(1-_439);
+var q=_440*(1-(_439*f));
+var t=_440*(1-(_439*(1-f)));
+switch(i){
+case 1:
+red=q;
+_442=_440;
+blue=p;
+break;
+case 2:
+red=p;
+_442=_440;
+blue=t;
+break;
+case 3:
+red=p;
+_442=q;
+blue=_440;
+break;
+case 4:
+red=t;
+_442=p;
+blue=_440;
+break;
+case 5:
+red=_440;
+_442=p;
+blue=q;
+break;
+case 6:
+case 0:
+red=_440;
+_442=t;
+blue=p;
+break;
+}
+}
+return {"r":red,"g":_442,"b":blue,"a":_441};
+};
+MochiKit.Visual.hslToRGB=function(hue,_444,_445,_446){
+if(arguments.length==1){
+var hsl=hue;
+hue=hsl.h;
+_444=hsl.s;
+_445=hsl.l;
+_446=hsl.a;
+}
+var red;
+var _447;
+var blue;
+if(_444==0){
+red=_445;
+_447=_445;
+blue=_445;
+}else{
+var m2;
+if(_445<=0.5){
+m2=_445*(1+_444);
+}else{
+m2=_445+_444-(_445*_444);
+}
+var m1=(2*_445)-m2;
+var f=MochiKit.Visual._hslValue;
+var h6=hue*6;
+red=f(m1,m2,h6+2);
+_447=f(m1,m2,h6);
+blue=f(m1,m2,h6-2);
+}
+return {"r":red,"g":_447,"b":blue,"a":_446};
+};
+MochiKit.Visual.rgbToHSV=function(red,_451,blue,_452){
+if(arguments.length==1){
+var rgb=red;
+red=rgb.r;
+_451=rgb.g;
+blue=rgb.b;
+_452=rgb.a;
+}
+var max=Math.max(Math.max(red,_451),blue);
+var min=Math.min(Math.min(red,_451),blue);
+var hue;
+var _455;
+var _456=max;
+if(min==max){
+hue=0;
+_455=0;
+}else{
+var _457=(max-min);
+_455=_457/max;
+if(red==max){
+hue=(_451-blue)/_457;
+}else{
+if(_451==max){
+hue=2+((blue-red)/_457);
+}else{
+hue=4+((red-_451)/_457);
+}
+}
+hue/=6;
+if(hue<0){
+hue+=1;
+}
+if(hue>1){
+hue-=1;
+}
+}
+return {"h":hue,"s":_455,"v":_456,"a":_452};
+};
+MochiKit.Visual.rgbToHSL=function(red,_458,blue,_459){
+if(arguments.length==1){
+var rgb=red;
+red=rgb.r;
+_458=rgb.g;
+blue=rgb.b;
+_459=rgb.a;
+}
+var max=Math.max(red,Math.max(_458,blue));
+var min=Math.min(red,Math.min(_458,blue));
+var hue;
+var _460;
+var _461=(max+min)/2;
+var _462=max-min;
+if(_462==0){
+hue=0;
+_460=0;
+}else{
+if(_461<=0.5){
+_460=_462/(max+min);
+}else{
+_460=_462/(2-max-min);
+}
+if(red==max){
+hue=(_458-blue)/_462;
+}else{
+if(_458==max){
+hue=2+((blue-red)/_462);
+}else{
+hue=4+((red-_458)/_462);
+}
+}
+hue/=6;
+if(hue<0){
+hue+=1;
+}
+if(hue>1){
+hue-=1;
+}
+}
+return {"h":hue,"s":_460,"l":_461,"a":_459};
+};
+MochiKit.Visual.toColorPart=function(num){
+var _463=Math.round(num).toString(16);
+if(num<16){
+return "0"+_463;
+}
+return _463;
+};
+MochiKit.Visual.roundElement=function(e,_465){
+new MochiKit.Visual._RoundCorners(e,_465);
+};
+MochiKit.Visual.getElementsComputedStyle=function(_466,_467,_468){
+if(arguments.length==2){
+_468=_467;
+}
+var el=MochiKit.DOM.getElement(_466);
+if(!el||el==document){
+return undefined;
+}
+if(el.currentStyle){
+return el.currentStyle[_467];
+}
+if(typeof (document.defaultView)=="undefined"){
+return undefined;
+}
+if(document.defaultView==null){
+return undefined;
+}
+var _470=document.defaultView.getComputedStyle(el,null);
+if(typeof (_470)=="undefined"||_470==null){
+return undefined;
+}
+return _470.getPropertyValue(_468);
+};
+MochiKit.Visual._RoundCorners=function(e,_471){
+e=MochiKit.DOM.getElement(e);
+this._setOptions(_471);
+if(this.options.__unstable__wrapElement){
+e=this._doWrap(e);
+}
+var _472=this.options.color;
+var m=MochiKit.Visual;
+if(this.options.color=="fromElement"){
+_472=m.Color.fromBackground(e);
+}else{
+if(!(_472 instanceof m.Color)){
+_472=m.Color.fromString(_472);
+}
+}
+this.isTransparent=(_472.asRGB().a<=0);
+var _473=this.options.bgColor;
+if(this.options.bgColor=="fromParent"){
+_473=m.Color.fromBackground(e.offsetParent);
+}else{
+if(!(_473 instanceof m.Color)){
+_473=m.Color.fromString(_473);
+}
+}
+this._roundCornersImpl(e,_472,_473);
+};
+MochiKit.Visual._RoundCorners.prototype={"_doWrap":function(e){
+var _474=e.parentNode;
+if(typeof (document.defaultView)=="undefined"||document.defaultView==null){
+return e;
+}
+var _475=document.defaultView.getComputedStyle(e,null);
+if(typeof (_475)=="undefined"||_475==null){
+return e;
+}
+var _476=MochiKit.DOM.DIV({"style":{"display":"block","marginTop":_475.getPropertyValue("padding-top"),"marginRight":_475.getPropertyValue("padding-right"),"marginBottom":_475.getPropertyValue("padding-bottom"),"marginLeft":_475.getPropertyValue("padding-left"),"padding":"0px"}});
+_476.innerHTML=e.innerHTML;
+e.innerHTML="";
+e.appendChild(_476);
+return e;
+},"_roundCornersImpl":function(e,_477,_478){
+if(this.options.border){
+this._renderBorder(e,_478);
+}
+if(this._isTopRounded()){
+this._roundTopCorners(e,_477,_478);
+}
+if(this._isBottomRounded()){
+this._roundBottomCorners(e,_477,_478);
+}
+},"_renderBorder":function(el,_479){
+var _480="1px solid "+this._borderColor(_479);
+var _481="border-left: "+_480;
+var _482="border-right: "+_480;
+var _483="style='"+_481+";"+_482+"'";
+el.innerHTML="<div "+_483+">"+el.innerHTML+"</div>";
+},"_roundTopCorners":function(el,_484,_485){
+var _486=this._createCorner(_485);
+for(var i=0;i<this.options.numSlices;i++){
+_486.appendChild(this._createCornerSlice(_484,_485,i,"top"));
+}
+el.style.paddingTop=0;
+el.insertBefore(_486,el.firstChild);
+},"_roundBottomCorners":function(el,_487,_488){
+var _489=this._createCorner(_488);
+for(var i=(this.options.numSlices-1);i>=0;i--){
+_489.appendChild(this._createCornerSlice(_487,_488,i,"bottom"));
+}
+el.style.paddingBottom=0;
+el.appendChild(_489);
+},"_createCorner":function(_490){
+var _491=document.createElement("div");
+_491.style.backgroundColor=_490.toString();
+return _491;
+},"_createCornerSlice":function(_492,_493,n,_494){
+var _495=document.createElement("span");
+var _496=_495.style;
+_496.backgroundColor=_492.toString();
+_496.display="block";
+_496.height="1px";
+_496.overflow="hidden";
+_496.fontSize="1px";
+var _497=this._borderColor(_492,_493);
+if(this.options.border&&n==0){
+_496.borderTopStyle="solid";
+_496.borderTopWidth="1px";
+_496.borderLeftWidth="0px";
+_496.borderRightWidth="0px";
+_496.borderBottomWidth="0px";
+_496.height="0px";
+_496.borderColor=_497.toString();
+}else{
+if(_497){
+_496.borderColor=_497.toString();
+_496.borderStyle="solid";
+_496.borderWidth="0px 1px";
+}
+}
+if(!this.options.compact&&(n==(this.options.numSlices-1))){
+_496.height="2px";
+}
+this._setMargin(_495,n,_494);
+this._setBorder(_495,n,_494);
+return _495;
+},"_setOptions":function(_498){
+this.options={"corners":"all","color":"fromElement","bgColor":"fromParent","blend":true,"border":false,"compact":false,"__unstable__wrapElement":false};
+MochiKit.Base.update(this.options,_498);
+this.options.numSlices=(this.options.compact?2:4);
+},"_whichSideTop":function(){
+var _499=this.options.corners;
+if(this._hasString(_499,"all","top")){
+return "";
+}
+var _500=(_499.indexOf("tl")!=-1);
+var _501=(_499.indexOf("tr")!=-1);
+if(_500&&_501){
+return "";
+}
+if(_500){
+return "left";
+}
+if(_501){
+return "right";
+}
+return "";
+},"_whichSideBottom":function(){
+var _502=this.options.corners;
+if(this._hasString(_502,"all","bottom")){
+return "";
+}
+var _503=(_502.indexOf("bl")!=-1);
+var _504=(_502.indexOf("br")!=-1);
+if(_503&&_504){
+return "";
+}
+if(_503){
+return "left";
+}
+if(_504){
+return "right";
+}
+return "";
+},"_borderColor":function(_505,_506){
+if(_505=="transparent"){
+return _506;
+}else{
+if(this.options.border){
+return this.options.border;
+}else{
+if(this.options.blend){
+return _506.blendedColor(_505);
+}
+}
+}
+return "";
+},"_setMargin":function(el,n,_507){
+var _508=this._marginSize(n)+"px";
+var _509=(_507=="top"?this._whichSideTop():this._whichSideBottom());
+var _510=el.style;
+if(_509=="left"){
+_510.marginLeft=_508;
+_510.marginRight="0px";
+}else{
+if(_509=="right"){
+_510.marginRight=_508;
+_510.marginLeft="0px";
+}else{
+_510.marginLeft=_508;
+_510.marginRight=_508;
+}
+}
+},"_setBorder":function(el,n,_511){
+var _512=this._borderSize(n)+"px";
+var _513=(_511=="top"?this._whichSideTop():this._whichSideBottom());
+var _514=el.style;
+if(_513=="left"){
+_514.borderLeftWidth=_512;
+_514.borderRightWidth="0px";
+}else{
+if(_513=="right"){
+_514.borderRightWidth=_512;
+_514.borderLeftWidth="0px";
+}else{
+_514.borderLeftWidth=_512;
+_514.borderRightWidth=_512;
+}
+}
+},"_marginSize":function(n){
+if(this.isTransparent){
+return 0;
+}
+var o=this.options;
+if(o.compact&&o.blend){
+var _515=[1,0];
+return _515[n];
+}else{
+if(o.compact){
+var _516=[2,1];
+return _516[n];
+}else{
+if(o.blend){
+var _517=[3,2,1,0];
+return _517[n];
+}else{
+var _518=[5,3,2,1];
+return _518[n];
+}
+}
+}
+},"_borderSize":function(n){
+var o=this.options;
+var _519;
+if(o.compact&&(o.blend||this.isTransparent)){
+return 1;
+}else{
+if(o.compact){
+_519=[1,0];
+}else{
+if(o.blend){
+_519=[2,1,1,1];
+}else{
+if(o.border){
+_519=[0,2,0,0];
+}else{
+if(this.isTransparent){
+_519=[5,3,2,1];
+}else{
+return 0;
+}
+}
+}
+}
+}
+return _519[n];
+},"_hasString":function(str){
+for(var i=1;i<arguments.length;i++){
+if(str.indexOf(arguments[i])!=-1){
+return true;
+}
+}
+return false;
+},"_isTopRounded":function(){
+return this._hasString(this.options.corners,"all","top","tl","tr");
+},"_isBottomRounded":function(){
+return this._hasString(this.options.corners,"all","bottom","bl","br");
+},"_hasSingleTextChild":function(el){
+return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
+}};
+MochiKit.Visual.roundClass=function(_520,_521,_522){
+var _523=MochiKit.DOM.getElementsByTagAndClassName(_520,_521);
+for(var i=0;i<_523.length;i++){
+roundElement(_523[i],_522);
+}
+};
+MochiKit.Visual.__new__=function(){
+var bind=MochiKit.Base.bind;
+var map=MochiKit.Base.map;
+var _524=MochiKit.Base.concat;
+this.Color.fromRGBString=bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
+this.Color.fromHSLString=bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
+var _525=1/3;
+var _526={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_525,_525,_525],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_525,2*_525,2*_525],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
+var _527=function(name,r,g,b,a){
+var rval=this.fromRGB(r,g,b,a);
+this[name]=function(){
+return rval;
+};
+return rval;
+};
+for(var k in _526){
+var name=k+"Color";
+var _530=_524([_527,this.Color,name],_526[k]);
+this.Color[name]=bind.apply(null,_530);
+}
+var _531=function(){
+for(var i=0;i<arguments.length;i++){
+if(!(arguments[i] instanceof Color)){
+return false;
+}
+}
+return true;
+};
+var _532=function(a,b){
+return a.compareRGB(b);
+};
+MochiKit.Base.nameFunctions(this);
+MochiKit.Base.registerComparator(this.Color.NAME,_531,_532);
+this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
+};
+MochiKit.Visual.EXPORT=["Color","roundElement","roundClass"];
+MochiKit.Visual.EXPORT_OK=["clampColorComponent","rgbToHSL","hslToRGB","rgbToHSV","hsvToRGB","toColorPart"];
+MochiKit.Visual.__new__();
+if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
+(function(self){
+var all=self.EXPORT_TAGS[":all"];
+for(var i=0;i<all.length;i++){
+this[all[i]]=self[all[i]];
+}
+})(MochiKit.Visual);
+}
+MochiKit.Visual.Color.namedColors=function(){
+return MochiKit.Base.clone(MochiKit.Visual.Color._namedColors);
+};
+MochiKit.Visual.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgre!
 en:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1c!
 c",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:!
 "#f5fffa
",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
+if(typeof (MochiKit)=="undefined"){
+MochiKit={};
+}
+if(typeof (MochiKit.MochiKit)=="undefined"){
+MochiKit.MochiKit={};
+}
+MochiKit.MochiKit.NAME="MochiKit.MochiKit";
+MochiKit.MochiKit.VERSION="1.0";
+MochiKit.MochiKit.__repr__=function(){
+return "["+this.NAME+" "+this.VERSION+"]";
+};
+MochiKit.MochiKit.toString=function(){
+return this.__repr__();
+};
+MochiKit.MochiKit.SUBMODULES=["Base","Iter","Logging","DateTime","Format","Async","DOM","LoggingPane","Visual"];
+if(typeof (JSAN)!="undefined"||typeof (dojo)!="undefined"){
+if(typeof (dojo)!="undefined"){
+dojo.provide("MochiKit.MochiKit");
+dojo.require("MochiKit.*");
+}
+if(typeof (JSAN)!="undefined"){
+JSAN.use("MochiKit.Base",[]);
+JSAN.use("MochiKit.Iter",[]);
+JSAN.use("MochiKit.Logging",[]);
+JSAN.use("MochiKit.DateTime",[]);
+JSAN.use("MochiKit.Format",[]);
+JSAN.use("MochiKit.Async",[]);
+JSAN.use("MochiKit.DOM",[]);
+JSAN.use("MochiKit.Visual",[]);
+JSAN.use("MochiKit.LoggingPane",[]);
+}
+(function(){
+var _533=MochiKit.Base.extend;
+var self=MochiKit.MochiKit;
+var _534=self.SUBMODULES;
+var _535=[];
+var _536=[];
+var _537={};
+var i,k,m,all;
+for(i=0;i<_534.length;i++){
+m=MochiKit[_534[i]];
+_533(_535,m.EXPORT);
+_533(_536,m.EXPORT_OK);
+for(k in m.EXPORT_TAGS){
+_537[k]=_533(_537[k],m.EXPORT_TAGS[k]);
+}
+all=m.EXPORT_TAGS[":all"];
+if(!all){
+all=_533(null,m.EXPORT,m.EXPORT_OK);
+}
+for(i=0;i<all.length;i++){
+k=all[i];
+self[k]=m[k];
+}
+}
+self.EXPORT=_535;
+self.EXPORT_OK=_536;
+self.EXPORT_TAGS=_537;
+}());
+}else{
+if(typeof (MochiKit.__compat__)=="undefined"){
+MochiKit.__compat__=true;
+}
+(function(){
+var _538=document.getElementsByTagName("script");
+var _539="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
+var base=null;
+var _540=null;
+var _541={};
+var i;
+for(i=0;i<_538.length;i++){
+var src=_538[i].getAttribute("src");
+if(!src){
+continue;
+}
+_541[src]=true;
+if(src.match(/MochiKit.js$/)){
+base=src.substring(0,src.lastIndexOf("MochiKit.js"));
+_540=_538[i];
+}
+}
+if(base==null){
+return;
+}
+var _542=MochiKit.MochiKit.SUBMODULES;
+_542.unshift("Compat");
+for(i=0;i<_542.length;i++){
+if(MochiKit[_542[i]]){
+continue;
+}
+var uri=base+_542[i]+".js";
+if(uri in _541){
+continue;
+}
+if(document.documentElement&&document.documentElement.namespaceURI==_539){
+var s=document.createElementNS(_539,"script");
+s.setAttribute("id","MochiKit_"+base+_542[i]);
+s.setAttribute("src",uri);
+s.setAttribute("type","application/x-javascript");
+_540.parentNode.appendChild(s);
+}else{
+var tag="<"+"script src=\""+uri+"\" type=\"text/javascript\""+">"+"<"+"/script"+">";
+document.write(tag);
+}
+}
+})();
+}
+
+

Added: trunk/maay/data/MochiKitLogConsole.js
===================================================================
--- trunk/maay/data/MochiKitLogConsole.js	2005-11-15 13:08:55 UTC (rev 499)
+++ trunk/maay/data/MochiKitLogConsole.js	2005-11-15 13:51:50 UTC (rev 500)
@@ -0,0 +1,114 @@
+var consoleDoc = ''+
+'<html>'+
+'  <head>'+
+'    <title>Log Console</title>'+
+'    <script type="text/javascript" src="mochikit.js"></script>'+
+'    <script type="text/javascript" src="MochiKitLogConsole.js"></script>'+
+'    <style type="text/css">'+
+'    body {'+
+'      background-color: #fff;'+
+'      color: #333;'+
+'      font-size: 8pt;'+
+'      margin: 0;'+
+'      padding: 0;'+
+'    }'+
+'    #clear {'+
+'      position: absolute;'+
+'      right: 1em;'+
+'      color: #900;'+
+'    }'+
+'    #console {'+
+'      position: absolute;'+
+'      top: 3em;'+
+'      bottom: 0;'+
+'      left: 0;'+
+'      right: 0;'+
+'      overflow: scroll;'+
+'      font-family: monospace;'+
+'      padding: 0 0.5em;'+
+'    }'+
+'    .message {'+
+'      margin: 0 0 0 0;'+
+'      padding: 0;'+
+'      border-bottom: 1px dashed #ccf;'+
+'    }'+
+'     .timestamp {'+
+'       display: block;'+
+'       font-weight: bold;'+
+'       color: #999;'+
+'     }'+
+'     .level {'+
+'       font-weight: bold;'+
+'       color: #666;'+
+'     }'+
+'    </style>'+
+'  </head>'+
+'  <body onload="LogConsole.init()">'+
+'    <div id="controls" />'+
+'      <label><input type="checkbox" id="timestamp" onclick="LogConsole.init()"/>Show timestamps</label>'+
+'      <a href="#" id="clear" onclick="LogConsole.clear(); return false;">Clear</a>'+
+'    </div>'+
+'    <div id="console" />'+
+'  </body>'+
+'</html>'
+
+if(typeof(LogConsole) == "undefined") {
+    LogConsole = {}
+}
+
+LogConsole.show = function() {
+    var consoleWindow = window.open('', 'MochiKitLogConsole', 'dependent=yes,height=600,width=400,resizable=yes');
+    consoleWindow.document.write(consoleDoc);
+    consoleWindow.document.close();
+}
+
+LogConsole.init = function() {
+    // Clear all messages
+    MochiKit.DOM.replaceChildNodes(MochiKit.DOM.getElement("console"), null);
+    // Work out how much room the scroll bar along the bottom takes up o we
+    // can tell if the user was scrolled to the end of the list.
+    var console = MochiKit.DOM.getElement('console');
+    LogConsole.scrollBarHeight = console.offsetHeight-console.scrollHeight;
+    // Load the current message list into the console.
+    var logger = LogConsole.getLogger();
+    msgs = logger.getMessages();
+    forEach(msgs, LogConsole.appendMessage);
+    // Listen for new messages
+    //logger.removeListener('logConsole');
+    logger.addListener('logConsole', null, LogConsole.appendMessage);
+}
+
+LogConsole.scrollBarHeight = null;
+
+LogConsole.getLogger = function() {
+    return window.opener.logger;
+}
+
+LogConsole.appendMessage = function(message) {
+
+    var console = MochiKit.DOM.getElement('console');
+    var showTimestamp = MochiKit.DOM.getElement('timestamp').checked;
+
+    var tsTag = SPAN({'class':'timestamp'}, [message.timestamp]);
+    var levelTag = SPAN({'class':'level'}, [message.level]);
+    var infoTag = message.info;
+
+    if(showTimestamp) {
+        var tags = [tsTag, ' ', levelTag, ' ', infoTag];
+    } else {
+        var tags = [levelTag, ' ', infoTag];
+    }
+
+    var wasAtEnd = console.scrollTop+console.offsetHeight-console.scrollHeight == LogConsole.scrollBarHeight;
+    appendChildNodes(console, P({'class':'message'}, tags));
+
+    if(wasAtEnd) {
+        console.scrollTop = console.scrollHeight;
+    }
+}
+
+LogConsole.clear = function() {
+    LogConsole.getLogger().clear();
+    LogConsole.init();
+}
+

Added: trunk/maay/data/athena.js
===================================================================
--- trunk/maay/data/athena.js	2005-11-15 13:08:55 UTC (rev 499)
+++ trunk/maay/data/athena.js	2005-11-15 13:51:50 UTC (rev 500)
@@ -0,0 +1,273 @@
+function nevow_baseURL() {
+
+    // Use "cached" value if it exists
+    if (typeof(_nevow_baseURL) != "undefined") {
+        return _nevow_baseURL;
+    }
+
+    var baseURL = this.location.toString();
+    var queryParamIndex = baseURL.indexOf('?');
+
+    if (queryParamIndex != -1) {
+        baseURL = baseURL.substring(0, queryParamIndex);
+    }
+
+    if (baseURL.charAt(baseURL.length - 1) != '/') {
+        baseURL += '/';
+    }
+
+    baseURL += 'transport';
+
+    // "Cache" and return
+    _nevow_baseURL = baseURL;
+    return _nevow_baseURL;
+}
+
+var nevow_debugging = true;
+function nevow_debug(msg) {
+    if (nevow_debugging) {
+        MochiKit.Logging.logDebug(msg);
+    }
+}
+
+function nevow_constructActionURL(action, arguments) {
+    var argumentQueryArgument = MochiKit.Base.serializeJSON(arguments);
+    return (nevow_baseURL()
+            + '?action='
+            + encodeURIComponent(action)
+            + '&args='
+            + encodeURIComponent(argumentQueryArgument));
+}
+
+var nevow_failureCount = 0;
+var nevow_remoteCallCount = 0;
+var nevow_remoteCalls = {};
+var nevow_outstandingTransports = 0;
+var nevow_responseDispatchTable = new Object();
+
+nevow_responseDispatchTable['text/xml'] = function(d, content) {
+    d.callback(TEH_XML_PARSER(content));
+}
+
+nevow_responseDispatchTable['text/json'] = function(d, content) {
+    d.callback(content);
+}
+
+function nevow_XMLHttpRequestFinished(passthrough) {
+    nevow_outstandingTransports--;
+    return passthrough;
+}
+
+function nevow_XMLHttpRequestReady(req) {
+    nevow_debug('A request is completed: ' + req.responseText);
+
+    /* The response's content is a JSON-encoded 4-array of [Response-Id,
+     * Request-Id, Content-Type, Content].  If this is a response to a
+     * previous request, responseId will not be null.  If this is a
+     * server-initiated request, requestId will not be null.
+     */
+
+    if (req.responseText == '') {
+        /* Server timed out the transport, just re-request */
+        nevow_debug('Empty server message, reconnecting');
+        if (nevow_outstandingTransports == 0) {
+            nevow_debug('No outstanding transports, sending no-op');
+            nevow_sendNoOp();
+        }
+        return;
+    }
+
+    nevow_debug('evaluating json in responseText');
+    var responseParts = MochiKit.Base.evalJSON(req.responseText);
+    nevow_debug('evaluated it');
+
+    nevow_failureCount = 0;
+
+    var responseId = responseParts[0];
+    var requestId = responseParts[1];
+
+    if (requestId != null) {
+        nevow_debug('Got a response to a request');
+
+        var contentType = responseParts[2];
+        var contentBody = responseParts[3];
+
+        var d = nevow_remoteCalls[requestId];
+        var handler = nevow_responseDispatchTable[contentType];
+        delete nevow_remoteCalls[requestId];
+
+        if (handler != null) {
+            handler(d, contentBody);
+        } else {
+            nevow_debug("Unknown content-type: " + contentType);
+            d.errback(new Error("Unhandled content type: " + contentType));
+        }
+
+    } else if (responseId != null) {
+        nevow_debug('Server initiated request');
+
+        var contentBody = responseParts[2];
+
+        var objectId = contentBody[0];
+        var methodName = contentBody[1];
+        var methodArgs = contentBody[2];
+
+        /*
+        var resultD = nevow_localObjectTable[objectId].dispatch(methodName, methodArgs);
+        resultD.addCallbacks(nevow_respondToRequest
+        */
+
+        nevow_debug('Invoking ' + new String(methodName) + ' with arguments ' + new String(methodArgs));
+        var result = eval(methodName).apply(null, methodArgs);
+        nevow_debug('Invoked it');
+
+        var isDeferred = false;
+
+        if (result == undefined) {
+            nevow_debug('it was undefined');
+            result = null;
+        } else {
+            /* if it quacks like a duck ...
+               this sucks!!!  */
+            isDeferred = (typeof(result.addCallback) != 'undefined' &&
+                          typeof(result.addErrback) != 'undefined');
+        }
+        nevow_debug('Is it a deferred? ' + new String(isDeferred));
+
+        if (isDeferred) {
+            nevow_debug('It is a deferred, adding a callback');
+            result.addCallback(function(result) {
+                nevow_respondToRemote(responseId, result);
+            });
+        } else {
+            nevow_debug('Responding synchronously to remote request with ID ' + new String(responseId));
+            nevow_respondToRemote(responseId, result);
+        }
+
+    }
+
+    /* Client code has had a chance to run now, in response to
+     * receiving the result.  If it issued a new request, we've got an
+     * output channel already.  If it didn't, though, we might not
+     * have one.  In that case, issue a no-op to the server so it can
+     * send us things if it needs to. */
+    if (nevow_outstandingTransports == 0) {
+        nevow_sendNoOp();
+    }
+}
+
+function nevow_XMLHttpRequestFail(err) {
+    nevow_debug('A request failed!');
+
+    nevow_failureCount++;
+
+    if (nevow_failureCount >= 3) {
+        nevow_debug('There are too many failures!');
+        var calls = nevow_remoteCalls;
+        nevow_remoteCalls = {};
+        for (var k in calls) {
+            calls[k].errback(new Error("Connection lost"));
+        }
+        return;
+    } else {
+        nevow_debug('There are not too many failures.');
+    }
+
+    if (nevow_outstandingTransports == 0) {
+        nevow_sendNoOp();
+    }
+}
+
+function nevow_prepareRemoteAction(actionType, args) {
+
+    var url = nevow_constructActionURL(actionType, args);
+    var req = MochiKit.Async.getXMLHttpRequest();
+
+    try {
+        req.open('GET', url, true);
+        yes = 1;
+    } catch (err) {
+        return resultD = MochiKit.Async.fail(err);
+    }
+
+    nevow_outstandingTransports++;
+
+    nevow_debug("Setting livepage id " + new String(nevow_livepageId));
+    req.setRequestHeader('Livepage-Id', nevow_livepageId);
+    return resultD = MochiKit.Async.succeed(req);
+}
+
+function nevow_respondToRemote(requestID, args) {
+    var reqD = nevow_prepareRemoteAction('respond', [args]);
+    reqD.addCallback(function(req) {
+        req.setRequestHeader('Response-Id', requestID);
+        var reqD2 = MochiKit.Async.sendXMLHttpRequest(req);
+        reqD2.addBoth(nevow_XMLHttpRequestFinished);
+        reqD2.addCallback(nevow_XMLHttpRequestReady);
+        reqD2.addErrback(nevow_XMLHttpRequestFail);
+    });
+}
+
+function nevow_sendNoOp() {
+    nevow_debug('Sending no-op');
+    var reqD = nevow_prepareRemoteAction('noop', []);
+    nevow_debug('Prepared remote action');
+    reqD.addCallback(function(req) {
+        nevow_debug('Got request');
+        var reqD2 = MochiKit.Async.sendXMLHttpRequest(req);
+        reqD2.addBoth(nevow_XMLHttpRequestFinished);
+        nevow_debug('Sent request');
+        reqD2.addCallback(function(ign) {
+            nevow_debug('reqD2 succeeded');
+            return nevow_XMLHttpRequestReady(req);
+        });
+        reqD2.addErrback(function(err) {
+            nevow_debug('reqD2 failed');
+            return nevow_XMLHttpRequestFail(err);
+        });
+        nevow_debug('Added callback and errback');
+    });
+}
+
+function nevow_callRemote(methodName, args) {
+    var resultDeferred = new MochiKit.Async.Deferred();
+    var reqD = nevow_prepareRemoteAction('call', MochiKit.Base.extend([methodName], args));
+    var requestId = 'c2s' + nevow_remoteCallCount;
+
+    nevow_remoteCallCount++;
+    nevow_remoteCalls[requestId] = resultDeferred;
+
+    reqD.addCallback(function(req) {
+        req.setRequestHeader('Request-Id', requestId);
+
+        var reqD2 = MochiKit.Async.sendXMLHttpRequest(req);
+        reqD2.addBoth(nevow_XMLHttpRequestFinished);
+        reqD2.addCallback(nevow_XMLHttpRequestReady);
+        return reqD2
+    });
+
+    reqD.addErrback(nevow_XMLHttpRequestFail);
+
+    return resultDeferred;
+}
+
+var server = {
+    /* Backwards compatibility API - you really want callRemote */
+    handle: function(handlerName /*, ... */ ) {
+        var args = [handlerName];
+        for (var idx = 1; idx < arguments.length; idx++) {
+            args.push(arguments[idx]);
+        }
+        nevow_callRemote('handle', args).addCallback(eval);
+    },
+
+    /* Invoke a method on the server.  Return a Deferred that fires
+     * when the method completes. */
+    callRemote: function(methodName /*, ... */) {
+        var args = [];
+        for (var idx = 1; idx < arguments.length; idx++) {
+            args.push(arguments[idx]);
+        }
+        return nevow_callRemote(methodName, args);
+    }
+};

Added: trunk/maay/data/liveglue.js
===================================================================
--- trunk/maay/data/liveglue.js	2005-11-15 13:08:55 UTC (rev 499)
+++ trunk/maay/data/liveglue.js	2005-11-15 13:51:50 UTC (rev 500)
@@ -0,0 +1,273 @@
+
+var nevow_clientHandleId;       /* This variable must be defined in your HTML.
+                                 */
+
+var liveevil_unload = false;
+var auto_open = true;
+
+var last_request = null;
+var last_server_message_time = null;
+
+var disconnectListeners = [];
+
+var inputListeners = [];
+var listenerId = 0;
+
+var base_url = this.location.toString();
+var queryParamIndex = base_url.indexOf('?');
+var userAgent = navigator.userAgent.toLowerCase();
+
+if (queryParamIndex != -1) {
+  base_url = base_url.substring(0, queryParamIndex);
+ }
+
+if (base_url.charAt(base_url.length-1) != '/') {
+  base_url += '/';
+ }
+
+base_url += 'livepage_client/'
+
+
+function createRequest() {
+    if (window.XMLHttpRequest) {
+      req = new XMLHttpRequest();
+    } else {
+        req = new ActiveXObject("Microsoft.XMLHTTP")
+    }
+    reqObj = new Object()
+    reqObj.request = req
+    return reqObj
+}
+
+function connect(outputNum) {
+  var xmlhttp = createRequest();
+  last_request = xmlhttp.request;
+  xmlhttp.request.onreadystatechange = function() {
+    if (xmlhttp.request.readyState == 4) {
+      if (xmlhttp.request.responseText) {
+        last_server_message_time = new Date()
+        eval(xmlhttp.request.responseText)
+        if (!liveevil_unload && auto_open) {
+          connect(outputNum + 1)
+        }
+      } else {
+        for (var i=0; i<disconnectListeners.length; i++) {
+          disconnectListeners[i]()
+          disconnectListeners = []
+        }
+        last_request = null
+      }
+    }
+  }
+  var U = base_url + nevow_clientHandleId + "/output?outputNum=" + outputNum;
+  xmlhttp.request.open("GET", U, true);
+  xmlhttp.request.send(null);
+}
+
+
+if (userAgent.indexOf("msie") != -1) {
+    /* IE specific stuff */
+    /* Abort last request so we don't 'leak' connections */
+    window.attachEvent("onbeforeunload", function() { if (last_request != null) {last_request.abort();} } )
+    /* Set unload flag */
+    window.attachEvent("onbeforeunload", function() { liveevil_unload = true; } )
+} else if (document.implementation && document.implementation.createDocument) {
+    /* Mozilla specific stuff (onbeforeunload is in v1.7+ only) */
+    window.addEventListener("beforeunload", function() { liveevil_unload = true; }, false)
+}
+
+
+function listener(callWhenAllDone) {
+    this.listenerId = listenerId
+    listenerId += 1
+    this.events = []
+    this.callWhenAllDone = callWhenAllDone
+    this.fired = false
+    this.inputDone = function(what) {
+        var found = false
+        for (var i=0; i<this.events.length; i++) {
+            if (this.events[i] == what) {
+                this.events.splice(i, 1)
+                found = true
+                break
+            }
+        }
+        if (this.events.length == 0) {
+            if (this.fired) {
+                alert("Tried to fire twice :(")
+            } else {
+                this.callWhenAllDone()
+                this.fired = true
+            }
+        }
+    }
+}
+
+
+function listenForInputEvents(callWhenAllDone) {
+    var newListener = new listener(callWhenAllDone)
+    inputListeners.push(newListener)
+    return newListener
+}
+
+
+function stopListening(theListener) {
+    for (var i=0; i<inputListeners.length; i++) {
+        if (inputListeners[i] == theListener) {
+            inputListeners.splice(i, 1)
+            break
+        }
+    }
+    if (theListener.events.length == 0) {
+        theListener.callWhenAllDone()
+    }
+}
+
+function addDisconnectListener(callback) {
+    disconnectListeners.push(callback)
+    return callback
+}
+
+function delDisconnectListener(theListener) {
+    for (var i=0; i<disconnectListeners.length; i++) {
+	if (disconnectListeners[i] == theListener){
+	    disconnectListeners.splice(i, 1)
+	    break
+	}
+    }
+}
+
+function nevow_clientToServerEvent(theTarget, evalAfterDone) {
+    if (theTarget != 'close' && liveevil_unload) {
+        // Server had previously closed the output; let's open it again.
+        if (auto_open) {
+            liveevil_unload = false }
+        connect(0)
+    }
+    var additionalArguments = ''
+    for (i = 2; i<arguments.length; i++) {
+        additionalArguments += '&arguments='
+        additionalArguments += encodeURIComponent(arguments[i])
+    }
+    var input = createRequest()
+    input.request.onreadystatechange = function() {
+        if (input.request.readyState == 4) {
+            eval(input.request.responseText)
+            if (evalAfterDone) {
+               eval(evalAfterDone)
+            }
+            for (var i=0; i<input.events.length; i++) {
+                input.events[i].inputDone(input.request)
+            }
+        }
+    }
+    input.events = []
+    for (var i=0; i<inputListeners.length; i++) {
+        inputListeners[i].events.push(input.request)
+        input.events.push(inputListeners[i])
+    }
+    input.request.open(
+      "GET",
+      base_url +
+      nevow_clientHandleId +
+      "/input?" +
+      "handler-path=&handler-name=" +
+      encodeURIComponent(theTarget) +
+      additionalArguments)
+
+    input.request.send(null)
+}
+
+function nevow_setNode(node, to) {
+    document.getElementById(node).innerHTML = to;
+}
+
+function nevow_appendNode(node, what) {
+    var oldnode = document.getElementById(node);
+    var newspan = document.createElement('span');
+    newspan.innerHTML = what;
+    for (i=0; i<newspan.childNodes.length; i++) {
+        oldnode.appendChild(newspan.childNodes[i]);
+    }
+}
+
+function nevow_prependNode(node, what) {
+  var oldnode = document.getElementById(node);
+  var newspan = document.createElement('span');
+  newspan.innerHTML = what;
+  for (i=newspan.childNodes.length-1; i>=0; i--){
+    if (oldnode.childNodes.length == 0)
+      oldnode.appendChild(newspan.childNodes[i]);
+    else
+      oldnode.insertBefore(newspan.childNodes[i], oldnode.childNodes[0]);
+  }
+}
+
+function nevow_insertNode(node, before) {
+    var oldnode = document.getElementById('before');
+    var newspan = document.createElement('span');
+    newspan.innerHTML = what;
+    var previous = oldnode;
+    for (i=0; i<newspan.childNodes.length; i++) {
+        previous.parentNode.insertBefore(newspan.childNodes[i], previous);
+        previous = newspan.childNodes[i];
+    }
+}
+
+function nevow_closeLive(evalAfterDone) {
+    // Tell connect() not to complain at us when the server closes the
+    // connection with no serverToClientEvent
+    liveevil_unload = true
+    var old_auto_open = auto_open
+    auto_open = false
+    // Tell the server we know we're done, send us an empty event
+    // evalAfterDone will be evalled after the server sends us an empty event
+    nevow_clientToServerEvent('close', '', evalAfterDone)
+    auto_open = old_auto_open
+}
+
+
+var server = {
+    handle: function(handlerName) {
+        var args = [handlerName, '']
+        for (var i = 1; i < arguments.length; i++) {
+            args.push(arguments[i])
+        }
+        nevow_clientToServerEvent.apply(this, args)
+    }
+};
+
+function nevow_startLivePage() {
+  if (nevow_clientHandleId == null) {
+    alert('UNSUPPORTED!  USE AT YOUR OWN RISK!');
+    var x = createRequest();
+    x.request.onreadstatechange = function () {
+      if (x.request.readyState == 4) {
+        nevow_clientHandleId = x.request.responseText;
+        nevow_startLivePage();
+      }
+    };
+    x.request.open("GET", base_url + "new");
+    x.request.send(null);
+  } else {
+    connect(0);
+  }
+}
+
+
+var nevow_origOnLoad = window.onload;
+function nevow_onLoad() {
+    if (nevow_origOnLoad) {
+      if(typeof(nevow_origOnLoad) == "string") {
+        eval(nevow_origOnLoad);
+      }
+      else {
+        nevow_origOnLoad();
+      }
+    }      
+    if (auto_open) {
+        nevow_startLivePage();
+    }
+}
+window.onload = nevow_onLoad;
+

Added: trunk/maay/data/livetest-postscripts.js
===================================================================
--- trunk/maay/data/livetest-postscripts.js	2005-11-15 13:08:55 UTC (rev 499)
+++ trunk/maay/data/livetest-postscripts.js	2005-11-15 13:51:50 UTC (rev 500)
@@ -0,0 +1,49 @@
+
+var testFrameNode = document.getElementById('testframe');
+testFrameNode.addEventListener('load', loadNotify, true);
+
+var sendSubmitEvent = function(theTarget, callWhenDone) {
+    var theEvent = testFrameNode.contentDocument.createEvent("HTMLEvents");
+    theEvent.initEvent("submit",
+        true,
+        true);
+    theTarget.dispatchEvent(theEvent);
+    callWhenDone()
+}
+
+var ifTesteeUsingLivePage = function(runThisCode, otherwise) {
+    if (testFrameNode.contentDocument.defaultView.listenForInputEvents) {
+        runThisCode()
+    } else {
+        otherwise()
+    }
+}
+
+var sendClickEvent = function(theTarget, callWhenDone) {
+    var doEventOfType = function(eventType) {
+        var theEvent = testFrameNode.contentDocument.createEvent("MouseEvents");
+        var evt = document.createEvent("MouseEvents")
+        evt.initMouseEvent(eventType,
+            true, //can bubble
+            true,
+            window,
+            1,
+            theTarget.offsetLeft + theTarget.offsetWidth / 2 + window.screenX, //screen x
+            theTarget.offsetTop + theTarget.offsetTop / 2 + window.screenY, //screen y
+            theTarget.offsetLeft + theTarget.offsetWidth / 2, //client x
+            theTarget.offsetTop + theTarget.offsetTop / 2, //client y
+            false,
+            false,
+            false,
+            false,
+            1,
+            theTarget);
+
+        theTarget.dispatchEvent(evt);
+    }
+    doEventOfType('mousedown');
+    doEventOfType('mouseup');
+    doEventOfType('click');
+    callWhenDone();
+}
+

Added: trunk/maay/data/livetest.js
===================================================================
--- trunk/maay/data/livetest.js	2005-11-15 13:08:55 UTC (rev 499)
+++ trunk/maay/data/livetest.js	2005-11-15 13:51:50 UTC (rev 500)
@@ -0,0 +1,35 @@
+
+var loadObservers = [];
+
+var addLoadObserver = function(observer) {
+    loadObservers.push(observer);
+}
+
+var loadNotify = function() {
+    for (var i in loadObservers) {
+        loadObservers[i]();
+    }
+    loadObservers = [];
+}
+
+var numPassed = 0;
+var numFailed = 0;
+
+var passed = function(whichTest) {
+    numPassed += 1;
+    document.getElementById('test-'+whichTest).className = 'test-passes';
+    document.getElementById('test-passes').innerHTML = numPassed;
+}
+
+var failed = function(whichTest, text) {
+    numFailed += 1;
+    var testRow = document.getElementById('test-'+whichTest)
+    testRow.className = 'test-failures';
+    testRow.childNodes[0].title = text;
+    document.getElementById('test-failures').innerHTML = numFailed;
+}
+
+var setContentLocation = function(newLocation) {
+    return document.getElementById('testframe').contentDocument.location = newLocation;
+}
+

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-15 13:08:55 UTC (rev 499)
+++ trunk/maay/webapplication.py	2005-11-15 13:51:50 UTC (rev 500)
@@ -22,7 +22,6 @@
 __revision__ = '$Id$'
 
 from datetime import datetime
-#from xmlrpclib import ServerProxy
 from itertools import cycle
 from tempfile import mkdtemp
 import os, os.path as osp
@@ -380,6 +379,20 @@
             self.querier.pushDocuments(self.queryId, results, provider=None)
             self.results = self.querier.getQueryResults(self.queryId, offset=0)
             
+    def childFactory(self, ctx, name):
+        print "~"*80
+        print self._javascript
+        print name, get_path_of(self._javascript[name])
+        if name in self._javascript:
+            return static.File(get_path_of(self._javascript[name]))
+
+# XXX: do we need to override the following 2 methods too ?
+##     def child_MochiKit(self, ctx):
+##         return static.File(get_path_of('MochiKit'))
+
+##     def child_MochiKitLogConsole(self, ctx):
+##         return static.File(get_path_of('MochiKit'))
+        
     def onNewResults(self, provider, results):
         results = [Document(**params) for params in results]
         self.querier.pushDocuments(self.queryId, results, provider)



From aurelienc at berlios.de  Tue Nov 15 15:51:27 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Tue, 15 Nov 2005 15:51:27 +0100
Subject: [Maay-svncheckins] r501 - trunk/maay
Message-ID: <200511151451.jAFEpRZi005724@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-15 15:51:24 +0100 (Tue, 15 Nov 2005)
New Revision: 501

Modified:
   trunk/maay/webapplication.py
Log:
Restore indexation from webpage (missing import)


Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-15 13:51:50 UTC (rev 500)
+++ trunk/maay/webapplication.py	2005-11-15 14:51:24 UTC (rev 501)
@@ -35,7 +35,7 @@
 from logilab.common.textutils import normalize_text
 
 from maay.querier import WEB_AVATARID
-from maay.configuration import get_path_of, NodeConfiguration
+from maay.configuration import get_path_of, NodeConfiguration, IndexerConfiguration
 from maay.texttool import makeAbstract, WORDS_RGX, normalizeText, boldifyText
 from maay.query import Query
 from maay.p2pquerier import P2pQuerier, P2pQuery
@@ -226,7 +226,6 @@
             return ["No skipped public directory."]
         return self.indexerConfig.public_skip_dir
 
-
     def render_directory(self, context, name):
         print "directory = %s" % name
         context.fillSlots("name", name)



From afayolle at berlios.de  Tue Nov 15 15:52:23 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Tue, 15 Nov 2005 15:52:23 +0100
Subject: [Maay-svncheckins] r502 - trunk
Message-ID: <200511151452.jAFEqN2Q006467@sheep.berlios.de>

Author: afayolle
Date: 2005-11-15 15:52:19 +0100 (Tue, 15 Nov 2005)
New Revision: 502

Modified:
   trunk/maay.iss
Log:
updates for maay-0.2

Modified: trunk/maay.iss
===================================================================
--- trunk/maay.iss	2005-11-15 14:51:24 UTC (rev 501)
+++ trunk/maay.iss	2005-11-15 14:52:19 UTC (rev 502)
@@ -10,7 +10,6 @@
 DefaultDirName={pf}\Maay
 DefaultGroupName=Maay
 UninstallDisplayIcon={app}\maay_node.exe
-Compression=bzip
 SolidCompression=yes
 LicenseFile=COPYING
 ; Require 50 MB for the database files. We can tune this later.
@@ -30,6 +29,7 @@
 Source: "maay\data\images\*.gif"; DestDir: "{app}\data\images"
 Source: "maay\data\images\*.png"; DestDir: "{app}\data\images"
 Source: "maay\data\images\*.ico"; DestDir: "{app}\data\images"
+Source: "maay\data\*.js"; DestDir: "{app}\data\"
 Source: "maay\sql\mysql.sql"; DestDir: "{app}"
 Source: "thirdparty\mysql\data\*"; DestDir: "{app}\mysql\data" ; Flags: recursesubdirs
 Source: "thirdparty\mysql\share\*"; DestDir: "{app}\mysql\share" ; Flags: recursesubdirs
@@ -39,12 +39,13 @@
 Source: "thirdparty\antiword\*"; DestDir: "c:\antiword" ; Flags: recursesubdirs
 Source: "thirdparty\pdftohtml-0.36\*"; DestDir: "{app}\pdftohtml" ; Flags: recursesubdirs
 Source: "maay\configuration\win32\*.ini"; DestDir: "{app}"
-Source: "README.txt"; DestDir: "{app}"
+Source: "doc\README.html"; DestDir: "{app}\documentation"
+Source: "doc\default.css"; DestDir: "{app}\documentation"
 Source: "ChangeLog"; DestDir: "{app}"
 Source: "ReleaseNotes"; DestDir: "{app}"
 
 [Icons]
-Name: "{group}\README.txt"; Filename: "{app}\README.txt"; Comment: "Required reading before launching Maay"
+Name: "{group}\Documentation.html"; Filename: "{app}\documentation\README.html"; Comment: "Required reading before launching Maay"
 Name: "{group}\ReleaseNotes.txt"; Filename: "{app}\ReleaseNotes"; Comment: "Required reading before launching Maay"
 Name: "{group}\Maay Node"; Filename: "{app}\maay_node.exe"; WorkingDir: "{app}"; Comment: "The Maay node component"
 Name: "{group}\Maay Indexer"; Filename: "{app}\maay_indexer.exe"; WorkingDir: "{app}"; Comment: "The Maay indexer component"
@@ -57,18 +58,18 @@
 Filename: "{app}\mysql\bin\mysqld-max-nt.exe"; Parameters:"--install MySQL --defaults-file=""{app}\mysql\my-maay.ini"""; StatusMsg: "Registering MySQL as a service"; WorkingDir:"{app}\mysql"; Flags:runhidden
 Filename: "NET"; Parameters:"start MySQL"; StatusMsg: "Starting MySQL server"; WorkingDir:"{app}\mysql"; Flags:runhidden
 Filename: "{app}\createdb.exe"; StatusMsg: "Installing database"; WorkingDir:"{app}"; Flags:runhidden
-Filename: "{app}\updateconfig.exe"; Parameters:"""{userdesktop}"" ""{userdocs}"""; WorkingDir:"{app}"; Flags:runhidden
+Filename: "{app}\updateconfig.exe"; Parameters:"""{userdesktop}"" ""{userdocs}"""; WorkingDir:"{app}"; StatusMsg: "Auto configuration";
 Filename: "{app}\maay.exe"; Parameters:"-install"; StatusMsg: "Registering Maay as a service"; WorkingDir:"{app}"; Flags:runhidden
 Filename: "NET"; Parameters: "start Maay"; StatusMsg: "Starting Maay node"; Flags:runhidden
 ;Filename: "{app}\maay_node.exe"; StatusMsg: "Launching maay node"; WorkingDir:"{app}"; Flags:postinstall nowait
 
 
 [UninstallRun]
+Filename: "NET"; Parameters: "stop Maay"; StatusMsg: "Stopping Maay node"; Flags:runhidden
 Filename: "NET"; Parameters: "stop MySQL"; StatusMsg: "Stopping MySQL database"; Flags:runhidden
-Filename: "NET"; Parameters: "stop Maay"; StatusMsg: "Stopping Maay node"; Flags:runhidden
 Filename: "{app}\mysql\bin\mysqld-max-nt.exe"; Parameters:"--remove MySQL"; StatusMsg: "Unregistering MySQL as a service"; WorkingDir:"{app}\mysql"; Flags:runhidden
 Filename: "{app}\maay.exe"; Parameters:"-remove"; StatusMsg: "Unregistering Maay as a service"; WorkingDir:"{app}\mysql"; Flags:runhidden
 
 [UninstallDelete]
-Type: filesandordirs; Name: {app}\mysql\
+Type: filesandordirs; Name: {app}\mysql\data
 Type: files; Name: {app}\node_id



From aurelienc at berlios.de  Tue Nov 15 17:09:58 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Tue, 15 Nov 2005 17:09:58 +0100
Subject: [Maay-svncheckins] r503 - trunk/maay
Message-ID: <200511151609.jAFG9wCn023171@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-15 17:09:57 +0100 (Tue, 15 Nov 2005)
New Revision: 503

Modified:
   trunk/maay/configuration.py
Log:
-fix windows default maay download dir
-minor cleanup + prints


Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-15 14:52:19 UTC (rev 502)
+++ trunk/maay/configuration.py	2005-11-15 16:09:57 UTC (rev 503)
@@ -89,7 +89,7 @@
 
 def _download_index_dir():
     if sys.platform == 'win32':
-        theDir = "C:\Documents and Settings\All Users\Documents\MaayDownloads"
+        theDir = osp.join(osp.expanduser('~'),'MaayDownloads')
     else:
         theDir = osp.expanduser('~/maay-downloads/')
     if not osp.exists(theDir):
@@ -117,10 +117,12 @@
         BaseConfiguration.__init__(self, options=self.options,
                                    config_file=self.config_file,
                                    name=name)
+        
+    def load(self):
+        # line below to take early into account the config name var
         self.load_command_line_configuration()
-        self.config_name = self['config-name']
 
-    def load(self):
+        print "Configuration load %s" % self.config_name
         if self.config_file:
             for directory in self.get_config_dirs():
                 path = os.path.join(directory, self.config_file)
@@ -133,7 +135,6 @@
         if sys.platform == "win32": # XXX: fix Win32 with self.config_name attr
             return [os.path.normpath(os.path.join(_get_data_dir(), '..'))]
         else:
-            #XXX: should '.' really be an acceptable config dir ?
             return _filter_files_with([osp.join('/etc/', self.config_name),
                                        os.path.expanduser('~/.' + self.config_name),
                                        '.'],



From adimasci at berlios.de  Tue Nov 15 17:48:45 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Tue, 15 Nov 2005 17:48:45 +0100
Subject: [Maay-svncheckins] r504 - in trunk/maay: . data
Message-ID: <200511151648.jAFGmj13029334@sheep.berlios.de>

Author: adimasci
Date: 2005-11-15 17:48:45 +0100 (Tue, 15 Nov 2005)
New Revision: 504

Added:
   trunk/maay/data/prevnext.html
Modified:
   trunk/maay/data/liveresults.html
   trunk/maay/webapplication.py
Log:
- fixed weird bug related to "Previous" / "Next" links

Modified: trunk/maay/data/liveresults.html
===================================================================
--- trunk/maay/data/liveresults.html	2005-11-15 16:09:57 UTC (rev 503)
+++ trunk/maay/data/liveresults.html	2005-11-15 16:48:45 UTC (rev 504)
@@ -59,7 +59,7 @@
    <a href="javascript: onlyDistantResults();"><span nevow:render="distantcount" /> distant results</a><br/>
    <a href="javascript: allResults();"><span nevow:render="totalcount" /> results</a><br/>
    <div class="message" nevow:render="title">Results <nevow:slot name="start_result" /> - <nevow:slot name="end_result" /> (<nevow:slot name="count" />) for <b><nevow:slot name="words" /></b>.</div>
-   <div class="prevnext"><nevow:invisible nevow:macro="prevnext" /></div>
+   <nevow:invisible nevow:macro="prevnext" />
     <table class="results" nevow:render="sequence" nevow:data="results">
       <tr nevow:pattern="item" nevow:render="row">
         <td>
@@ -71,7 +71,7 @@
         </td>
       </tr>
     </table>
-    <div class="prevnext"><nevow:invisible nevow:macro="prevnext" /></div>
+    <nevow:invisible nevow:macro="prevnext" />
     <nevow:invisible nevow:macro="footer" />
   </div>
  </body>

Added: trunk/maay/data/prevnext.html
===================================================================
--- trunk/maay/data/prevnext.html	2005-11-15 16:09:57 UTC (rev 503)
+++ trunk/maay/data/prevnext.html	2005-11-15 16:48:45 UTC (rev 504)
@@ -0,0 +1,5 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<div class="prevnext" xmlns="http://www.w3.org/1999/xhtml" xmlns:nevow="http://nevow.com/ns/nevow/0.1">
+  <span nevow:render="previous" /> &nbsp; <span nevow:render="next" />
+</div>

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-15 16:09:57 UTC (rev 503)
+++ trunk/maay/webapplication.py	2005-11-15 16:48:45 UTC (rev 504)
@@ -240,43 +240,7 @@
         return loaders.xmlfile(get_path_of('footer.html'))
 
     def macro_prevnext(self, context):
-        return loaders.stan(
-          tags.invisible()[
-            tags.invisible(render=tags.directive("onFirstSlice"))[
-              tags.invisible(pattern="Previous")[
-                tags.a(href=tags.invisible(render=self.prevset_url))['Previous'],
-                tags.xml(" &nbsp; "),
-                ],
-              ],
-            tags.invisible(render=tags.directive("onLastSlice"))[
-              tags.a(pattern="Next", href=tags.invisible(render=self.nextset_url))['Next']
-            ],
-          ],
-        )
-
-    def render_onLastSlice(self, context, data):
-        """returns a specific pattern to tell if we're on last slice or not"""
-        q = inevow.IQ(context)
-        nextPattern = q.onePattern('Next')
-        localCount, distantCount = self.querier.countResults(self.queryId)
-        if self.onlyDistant:
-            resultsCount = distantCount
-        elif self.onlyLocal:
-            resultsCount = localCount
-        else:
-            resultsCount = localCount + distantCount
-        offset = self.query.offset
-        if (offset + 15) > resultsCount:
-            return context.tag().clear()
-        return nextPattern or context.tag().clear()
-
-    def render_onFirstSlice(self, context, data):
-        """returns a specific pattern to tell if we're on first slice or not"""
-        q = inevow.IQ(context)
-        falsePattern = q.onePattern('Previous')
-        if (self.query.offset <= 0):
-            return context.tag().clear()
-        return falsePattern or context.tag().clear()
+        return loaders.xmlfile(get_path_of('prevnext.html'))
     
     def render_title(self, context, data):
         localCount, distantCount = self.querier.countResults(self.queryId)
@@ -309,14 +273,28 @@
         context.fillSlots('words', self.query.joinwords(' ')) #WORDS
         return context.tag
 
-    def nextset_url(self, context, data):
-        return 'javascript: browseResults(%s);' % (self.query.offset + 15,)
-
-    def prevset_url(self, context, data):
+    def render_next(self, context, data):
+        """computes 'Next' link"""
+        localCount, distantCount = self.querier.countResults(self.queryId)
+        if self.onlyDistant:
+            resultsCount = distantCount
+        elif self.onlyLocal:
+            resultsCount = localCount
+        else:
+            resultsCount = localCount + distantCount
         offset = self.query.offset
-        if offset:
-            offset -= 15
-        return 'javascript: browseResults(%s);' % (offset,)
+        if (offset + 15) < resultsCount:
+            return tags.xml('<a href="javascript: browseResults(%s);">Next</a>' % (offset + 15))
+        return ''
+        
+    
+    def render_previous(self, context, data):
+        """computes 'Previous' link"""
+        if self.query.offset <= 0:
+            return ''
+        offset = self.query.offset - 15
+        return tags.xml('<a href="javascript: browseResults(%s);">Previous</a>' % (offset))
+    
 
     def render_row(self, context, data):
         document = data
@@ -406,6 +384,7 @@
     def remote_connect(self, context):
         """just here to start the connection between client and server (Ajax)"""
         #TODO: very soon, the line below will also be the p2pquerier's job
+        self.query.offset = 0
         self.p2pquerier.sendQuery(self.p2pQuery)
         self.p2pquerier.addAnswerCallback(self.p2pQuery.qid, self.onNewResults)
         # self.querier.pushDocuments(self.queryId, self.results, provider=None)
@@ -448,7 +427,7 @@
     docFactory = loaders.xmlstr("""
   <div id="resultsDiv" xmlns="http://www.w3.org/1999/xhtml" xmlns:nevow="http://nevow.com/ns/nevow/0.1" >
    <div class="message" nevow:render="title">Results <b><nevow:slot name="start_result" /></b> - <b><nevow:slot name="end_result" /></b> of <b><nevow:slot name="count" /></b> for <b><nevow:slot name="words" /></b>.</div>
-    <div class="prevnext"><nevow:invisible nevow:macro="prevnext" /></div>
+    <nevow:invisible nevow:macro="prevnext" />
    <table>
      <tr>
        <td><div class="localPublicResult"><a href="javascript: onlyLocalResults();"><span nevow:render="localcount" /> local</a></div></td>
@@ -479,7 +458,7 @@
         </td>
       </tr>
     </table>
-    <div class="prevnext"><nevow:invisible nevow:macro="prevnext" /></div>
+    <nevow:invisible nevow:macro="prevnext" />
     <nevow:invisble nevow:macro="footer" />
   </div>
     """)
@@ -518,16 +497,6 @@
         context.fillSlots('url', baseurl)
         return context.tag
 
-    def render_nextset_url(self, context, data):
-        return 'javascript: browseResults(%s);' % (self.query.offset + 15,)
-
-    def render_prevset_url(self, context, data):
-        offset = self.query.offset
-        if offset:
-            offset -= 15
-        return 'javascript: browseResults(%s);' % (offset,)
-
-
 class ResultsPageFactory(athena.LivePageFactory):
     def getLivePage(self, context):
         livepageId = inevow.IRequest(context).getHeader('Livepage-Id')



From afayolle at berlios.de  Tue Nov 15 19:00:20 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Tue, 15 Nov 2005 19:00:20 +0100
Subject: [Maay-svncheckins] r505 - in trunk: . maay/win32
Message-ID: <200511151800.jAFI0KEK024010@sheep.berlios.de>

Author: afayolle
Date: 2005-11-15 18:59:19 +0100 (Tue, 15 Nov 2005)
New Revision: 505

Modified:
   trunk/maay.iss
   trunk/maay/win32/updateconfig.py
Log:
fixed download directory

Modified: trunk/maay/win32/updateconfig.py
===================================================================
--- trunk/maay/win32/updateconfig.py	2005-11-15 16:48:45 UTC (rev 504)
+++ trunk/maay/win32/updateconfig.py	2005-11-15 17:59:19 UTC (rev 505)
@@ -56,6 +56,7 @@
 password=maay
 presence-host=%(presence)s
 presence-port=%(port)d
+download-index-dir=%(download)s
 """
 import socket
 
@@ -72,7 +73,8 @@
     f = open("node.ini", "w")
     presence, port = probe_presence_config()
     values = {'presence': presence,
-              'port': port}
+              'port': port,
+              'download': '%s\\Maay Documents\\downloaded' % myDesktop,}
     f.write(node_config % values)
     f.close()
 

Modified: trunk/maay.iss
===================================================================
--- trunk/maay.iss	2005-11-15 16:48:45 UTC (rev 504)
+++ trunk/maay.iss	2005-11-15 17:59:19 UTC (rev 505)
@@ -21,6 +21,7 @@
 
 [Dirs]
 Name: "{userdesktop}\Maay Documents";
+Name: "{userdesktop}\Maay Documents\downloaded";
 
 [Files]
 Source: "dist\*"; DestDir: "{app}"



From afayolle at berlios.de  Tue Nov 15 19:02:47 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Tue, 15 Nov 2005 19:02:47 +0100
Subject: [Maay-svncheckins] r506 - trunk
Message-ID: <200511151802.jAFI2lQg024192@sheep.berlios.de>

Author: afayolle
Date: 2005-11-15 19:02:07 +0100 (Tue, 15 Nov 2005)
New Revision: 506

Modified:
   trunk/MANIFEST.in
Log:
added missing files

Modified: trunk/MANIFEST.in
===================================================================
--- trunk/MANIFEST.in	2005-11-15 17:59:19 UTC (rev 505)
+++ trunk/MANIFEST.in	2005-11-15 18:02:07 UTC (rev 506)
@@ -1,8 +1,9 @@
 # revision: $Id$
 recursive-include maay/test/ *.py *.txt *.txt.bz2 *.txt.gz *.xml *.html *.ini
-recursive-include maay/data/ *.html *.css *.gif *.png *.jpg *.ico
+recursive-include maay/data/ *.html *.css *.gif *.png *.jpg *.ico *.js
 recursive-include maay/sql *.sql
 include maay/bin/maay-server
 include maay/bin/maay-indexer
 include ReleaseNotes
 include ChangeLog
+recursive-include  doc/ *.html *.css



From afayolle at berlios.de  Tue Nov 15 20:00:13 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Tue, 15 Nov 2005 20:00:13 +0100
Subject: [Maay-svncheckins] r507 - trunk/maay
Message-ID: <200511151900.jAFJ0DDE023582@sheep.berlios.de>

Author: afayolle
Date: 2005-11-15 20:00:12 +0100 (Tue, 15 Nov 2005)
New Revision: 507

Modified:
   trunk/maay/webapplication.py
Log:
reduced verbosity

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-15 18:02:07 UTC (rev 506)
+++ trunk/maay/webapplication.py	2005-11-15 19:00:12 UTC (rev 507)
@@ -357,9 +357,6 @@
             self.results = self.querier.getQueryResults(self.queryId, offset=0)
             
     def childFactory(self, ctx, name):
-        print "~"*80
-        print self._javascript
-        print name, get_path_of(self._javascript[name])
         if name in self._javascript:
             return static.File(get_path_of(self._javascript[name]))
 



From afayolle at berlios.de  Tue Nov 15 20:10:44 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Tue, 15 Nov 2005 20:10:44 +0100
Subject: [Maay-svncheckins] r508 - trunk
Message-ID: <200511151910.jAFJAiT7029314@sheep.berlios.de>

Author: afayolle
Date: 2005-11-15 20:10:24 +0100 (Tue, 15 Nov 2005)
New Revision: 508

Modified:
   trunk/MANIFEST.in
Log:
added COPYING


Modified: trunk/MANIFEST.in
===================================================================
--- trunk/MANIFEST.in	2005-11-15 19:00:12 UTC (rev 507)
+++ trunk/MANIFEST.in	2005-11-15 19:10:24 UTC (rev 508)
@@ -6,4 +6,5 @@
 include maay/bin/maay-indexer
 include ReleaseNotes
 include ChangeLog
+include COPYING
 recursive-include  doc/ *.html *.css



From afayolle at berlios.de  Wed Nov 16 09:10:01 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Wed, 16 Nov 2005 09:10:01 +0100
Subject: [Maay-svncheckins] r509 - trunk/maay
Message-ID: <200511160810.jAG8A1J8030252@sheep.berlios.de>

Author: afayolle
Date: 2005-11-16 09:09:54 +0100 (Wed, 16 Nov 2005)
New Revision: 509

Modified:
   trunk/maay/node.py
Log:
log to a file instead of stdout

Modified: trunk/maay/node.py
===================================================================
--- trunk/maay/node.py	2005-11-15 19:10:24 UTC (rev 508)
+++ trunk/maay/node.py	2005-11-16 08:09:54 UTC (rev 509)
@@ -42,6 +42,7 @@
 from twisted.web import server
 from twisted.python import failure
 from nevow import inevow, appserver, guard
+from twisted.python import log
 
 # These imports are not used, but they help py2exe tremendously.
 # Do not remove them (that is, unless we change the database backend
@@ -247,6 +248,7 @@
     
     
 def run():
+    log.startLogging(open('maay-node.log', 'w'))
     nodeConfig = NodeConfiguration()
     nodeConfig.load()
     maayPortal = MaayPortal(nodeConfig)



From adimasci at berlios.de  Wed Nov 16 10:11:05 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Wed, 16 Nov 2005 10:11:05 +0100
Subject: [Maay-svncheckins] r510 - trunk/maay/data
Message-ID: <200511160911.jAG9B53I002540@sheep.berlios.de>

Author: adimasci
Date: 2005-11-16 10:11:01 +0100 (Wed, 16 Nov 2005)
New Revision: 510

Modified:
   trunk/maay/data/liveresults.html
Log:
LookAndFeel unification

Modified: trunk/maay/data/liveresults.html
===================================================================
--- trunk/maay/data/liveresults.html	2005-11-16 08:09:54 UTC (rev 509)
+++ trunk/maay/data/liveresults.html	2005-11-16 09:11:01 UTC (rev 510)
@@ -55,11 +55,17 @@
     <div class="sort"><a href="">Sort by date</a> - <a href="">Sort by popularity</a></div>
   -->
   <div id="resultsDiv">
-   <a href="javascript: onlyLocalResults();"><span nevow:render="localcount" /> local results</a><br/>
-   <a href="javascript: onlyDistantResults();"><span nevow:render="distantcount" /> distant results</a><br/>
-   <a href="javascript: allResults();"><span nevow:render="totalcount" /> results</a><br/>
    <div class="message" nevow:render="title">Results <nevow:slot name="start_result" /> - <nevow:slot name="end_result" /> (<nevow:slot name="count" />) for <b><nevow:slot name="words" /></b>.</div>
    <nevow:invisible nevow:macro="prevnext" />
+   <table>
+     <tr>
+       <td><div class="localPublicResult"><a href="javascript: onlyLocalResults();"><span nevow:render="localcount" /> local</a></div></td>
+       <td> - </td>
+       <td> <div class="distantResult"><a href="javascript: onlyDistantResults();"><span nevow:render="distantcount" /> distant</a></div></td>
+       <td>-</td>
+       <td><a href="javascript: allResults();"><span nevow:render="totalcount" /> all</a></td>
+     </tr>
+   </table>
     <table class="results" nevow:render="sequence" nevow:data="results">
       <tr nevow:pattern="item" nevow:render="row">
         <td>



From adimasci at berlios.de  Wed Nov 16 10:43:56 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Wed, 16 Nov 2005 10:43:56 +0100
Subject: [Maay-svncheckins] r511 - trunk/maay
Message-ID: <200511160943.jAG9huAM006562@sheep.berlios.de>

Author: adimasci
Date: 2005-11-16 10:43:55 +0100 (Wed, 16 Nov 2005)
New Revision: 511

Modified:
   trunk/maay/p2pquerier.py
Log:
**try** to guess current user's login when os.getlogin() fails.
IMPORTANT NOTE : This fixes a bug on windows platforms :
os.getlogin() raised a AttributeError preventing node
to relay answer

Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-16 09:11:01 UTC (rev 510)
+++ trunk/maay/p2pquerier.py	2005-11-16 09:43:55 UTC (rev 511)
@@ -43,6 +43,22 @@
     hasher.update('%s' % time.time())
     return hasher.hexdigest()
 
+def getUserLogin():
+    """uses os.getlogin() when available, and if not provides a simple
+    (and *unreliable*) replacement.
+    """
+    try:
+        return os.getlogin()
+    except (OSError, AttributeError):
+        # OSError can occur on some Linux platforms.
+        # AttributeError occurs on any non-UNIX platform
+        # try to make a rough guess ...
+        for var in ('USERNAME', 'USER', 'LOGNAME'):
+            guessed = os.environ.get(var)
+            if guessed:
+                return guessed
+        return 'anonymous'
+
 class QueryVersionMismatch(Exception):
     """we beginning a versionning nightmare trip on queries
        maybe I'll be shot for this, but who knows"""
@@ -296,17 +312,7 @@
             doc.text = untagText(removeSpace(abstract))
 
         # provider is a triple (login, IP, xmlrpc-port)
-        # FIXME: method os.getlogin() raises an exception (under Linux).
-        # >>> os.getlogin()
-        # Traceback (most recent call last):
-        #   File "<stdin>", line 1, in ?
-        #   OSError: [Errno 2] No such file or directory
-        try:
-            login = os.getlogin()
-        except OSError:
-            login = "anonymous"
-
-        provider = (login,
+        provider = (getUserLogin(),
                     socket.gethostbyname(socket.gethostname()),
                     P2pQuerier._ourRPCPort)
             



From dnf at berlios.de  Wed Nov 16 11:15:10 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Wed, 16 Nov 2005 11:15:10 +0100
Subject: [Maay-svncheckins] r512 - in trunk/maay: . data
Message-ID: <200511161015.jAGAFARn011289@sheep.berlios.de>

Author: dnf
Date: 2005-11-16 11:15:04 +0100 (Wed, 16 Nov 2005)
New Revision: 512

Modified:
   trunk/maay/data/liveresults.html
   trunk/maay/webapplication.py
Log:
- Unify presentation of results (colored bar aside result).
- Fix bug in Indexation Page (public directories may not be displayed in some c
ase)




Modified: trunk/maay/data/liveresults.html
===================================================================
--- trunk/maay/data/liveresults.html	2005-11-16 09:43:55 UTC (rev 511)
+++ trunk/maay/data/liveresults.html	2005-11-16 10:15:04 UTC (rev 512)
@@ -69,7 +69,8 @@
     <table class="results" nevow:render="sequence" nevow:data="results">
       <tr nevow:pattern="item" nevow:render="row">
         <td>
-  	<div class="resultItem">
+  	<div>
+      <nevow:attr name="class"><nevow:slot name="resultClass" /></nevow:attr>
   	  <table><tr><td><div><nevow:attr name="class"><nevow:slot name="mime_type" /></nevow:attr></div></td><td><a class="docTitle"><nevow:attr name="href">/download?docid=<nevow:slot name="docid" />&amp;words=<nevow:slot name="words" /></nevow:attr><nevow:slot name="doctitle">DOC TITLE</nevow:slot></a></td></tr></table>
   	  <div class="resultDesc"><nevow:slot name="abstract" /></div>
   	  <span class="resultUrl"><nevow:attr name="href"><nevow:slot name="docurl" /></nevow:attr><nevow:slot name="docurl" /> - <nevow:slot name="readable_size" /> - <nevow:slot name="publication_date" /></span>

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-16 09:43:55 UTC (rev 511)
+++ trunk/maay/webapplication.py	2005-11-16 10:15:04 UTC (rev 512)
@@ -217,7 +217,7 @@
         return self.indexerConfig.private_skip_dir
 
     def data_indexedpublicdirectories(self, context, data):
-        if not self.indexerConfig.private_skip_dir:
+        if not self.indexerConfig.public_index_dir:
             return ["No indexed public directory."]
         return self.indexerConfig.public_index_dir
 
@@ -318,6 +318,7 @@
         context.fillSlots('readable_size', document.readable_size())
         date = datetime.fromtimestamp(document.publication_time)
         context.fillSlots('publication_date', date.strftime('%d %b %Y'))
+        context.fillSlots('resultClass', "localPublicResult")
         return context.tag
     
 from nevow import athena, inevow



From adimasci at berlios.de  Wed Nov 16 11:52:50 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Wed, 16 Nov 2005 11:52:50 +0100
Subject: [Maay-svncheckins] r513 - trunk/maay
Message-ID: <200511161052.jAGAqoXB016929@sheep.berlios.de>

Author: adimasci
Date: 2005-11-16 11:52:38 +0100 (Wed, 16 Nov 2005)
New Revision: 513

Modified:
   trunk/maay/querier.py
Log:
catch and log "node not found" related errors

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-16 10:15:04 UTC (rev 512)
+++ trunk/maay/querier.py	2005-11-16 10:52:38 UTC (rev 513)
@@ -27,8 +27,9 @@
 import time
 from mx.DateTime import now, DateTimeDelta
 import traceback
-from math import sqrt, log
+from math import sqrt, log as mathlog
 
+from twisted.python import log
 from zope.interface import Interface, implements
 
 from logilab.common.db import get_dbapi_compliant_module
@@ -284,7 +285,12 @@
 
     def registerNodeActivity(self, nodeId):
         cursor = self._cnx.cursor()
-        node = Node.selectWhere(cursor, node_id=nodeId)[0]
+        nodes = Node.selectWhere(cursor, node_id=nodeId)
+        if nodes:
+            node = nodes[0]
+        else:
+            log.debug('No matching node found for id {%s}' % nodeId,
+                      category='[warning]')
         node.last_seen_time = int(time.time())
         node.commit(cursor, update=True)
         cursor.close()
@@ -496,4 +502,4 @@
         return doc
 
 def hoeffding_deviation(occurence, confidence=0.9):
-     return sqrt(-log(confidence / 2) / (2 * occurence))
+     return sqrt(-mathlog(confidence / 2) / (2 * occurence))



From afayolle at berlios.de  Wed Nov 16 12:23:35 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Wed, 16 Nov 2005 12:23:35 +0100
Subject: [Maay-svncheckins] r514 - in trunk/maay: . test
Message-ID: <200511161123.jAGBNZ7C020747@sheep.berlios.de>

Author: afayolle
Date: 2005-11-16 12:23:27 +0100 (Wed, 16 Nov 2005)
New Revision: 514

Modified:
   trunk/maay/test/test_texttool.py
   trunk/maay/texttool.py
Log:
fixed bug 5648 (index out of range in makeAbstract)

Modified: trunk/maay/test/test_texttool.py
===================================================================
--- trunk/maay/test/test_texttool.py	2005-11-16 10:52:38 UTC (rev 513)
+++ trunk/maay/test/test_texttool.py	2005-11-16 11:23:27 UTC (rev 514)
@@ -229,7 +229,13 @@
         expected = ' <b>...</b>  Inc., 51 Franklin St, Fifth Floor, <b>Boston</b>, MA  02110-1301 USA'
         self.assertEquals(expected, abstract)
 
+    def testLength200AndUnknownWord(self):
+        try:
+            abstract = makeAbstract(self.text[:200], [u'tralala'])
+        except IndexError:
+            self.fail('bug #5648 is present')
 
+
 if __name__ == '__main__':
     unittest.main()
 

Modified: trunk/maay/texttool.py
===================================================================
--- trunk/maay/texttool.py	2005-11-16 10:52:38 UTC (rev 513)
+++ trunk/maay/texttool.py	2005-11-16 11:23:27 UTC (rev 514)
@@ -440,9 +440,10 @@
     EXCERPT_MAX_HALF_LEN = EXCERPT_MAX_LEN / 2
 
     if not excerptPositions:
-        if text_length >= 200:
+        if text_length > 200:
             end = 200
-            while text[end].isalpha(): end -= 1
+            while text[end].isalpha():
+                end -= 1
             return text[:end] + " <b>...</b>"
         else:
             return text



From aurelienc at berlios.de  Wed Nov 16 12:34:35 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Wed, 16 Nov 2005 12:34:35 +0100
Subject: [Maay-svncheckins] r515 - trunk/maay
Message-ID: <200511161134.jAGBYZVQ023345@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-16 12:34:30 +0100 (Wed, 16 Nov 2005)
New Revision: 515

Modified:
   trunk/maay/indexer.py
   trunk/maay/webapplication.py
Log:
Enable immediate indexation of downloaded files (certified working on Linux (TM))


Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-16 11:23:27 UTC (rev 514)
+++ trunk/maay/indexer.py	2005-11-16 11:34:30 UTC (rev 515)
@@ -51,6 +51,14 @@
         data = stream.read(4096)
     stream.close()
     return hasher.hexdigest()
+
+def docState(privateness):
+    """from boolean to Document internal special state"""
+    if privateness:
+        state = Document.PRIVATE_STATE
+    else:
+        state = Document.PUBLISHED_STATE
+    return state
     
 # TODO: manage periodical runs
 # TODO: memorize state of indexed document to avoid db lookup at each run
@@ -93,6 +101,7 @@
             print "private indexation of", indexed, "omitting", skipped
         else:
             indexed = self.indexerConfig.public_index_dir
+            indexed.append(self.indexerConfig.download_index_dir)
             skipped = self.indexerConfig.public_skip_dir
             print "public indexation of", indexed, "omitting", skipped
         return FileIterator(indexed, skipped)
@@ -127,11 +136,7 @@
     def runIndexer(self, isPrivate=True):
         existingFiles = Set()
         
-        if isPrivate:
-            state = Document.PRIVATE_STATE
-        else:
-            state = Document.PUBLISHED_STATE
-            
+        state = docState(isPrivate)
         for filename in self.getFileIterator(isPrivate):
             existingFiles.add(filename)
             if not self.isIndexable(filename):
@@ -161,7 +166,34 @@
                                                   content_hash=docId, mime_type=mime_type,
                                                   state=state))
         return existingFiles
-        
+
+    def indexFile(self, filepath, isPrivate=True):
+        if not self.isIndexable(filepath):
+            if self.verbose:
+                print "Indexer indexFile : can't index %s" % filepath
+            return
+
+        state = docState(isPrivate)
+        fileSize = os.path.getsize(filepath)
+        lastModificationTime = os.path.getmtime(filepath)
+        lastIdxTime, lastIdxState = self.getLastIndexationTimeAndState(filepath)
+        try:
+            title, text, _, _ = converter.extractWordsFromFile(filepath)
+        except converter.IndexationFailure, exc:
+            if self.verbose:
+                print exc
+                return
+        docId = makeDocumentId(filepath)
+        mime_type = mimetypes.guess_type(filepath)[0]
+        doc = FutureDocument(filename=unicode(filepath,
+                                              self.filesystemEncoding),
+                             title=title, text=text,
+                             fileSize=fileSize,
+                             lastModificationTime=lastModificationTime,
+                             content_hash=docId, mime_type=mime_type,
+                             state=state)
+        self.indexDocument(doc)
+       
     def getLastIndexationTimeAndState(self, filename):
         filename = unicode(filename, self.filesystemEncoding)
         answer = self.serverProxy.lastIndexationTimeAndState(self.cnxId, filename)
@@ -248,6 +280,10 @@
 
 running = False
 
+## helpers for calls from the node, probably needs a serious fix
+
+# run the indexer from webapp
+
 def _run_thread():
     maay.indexer.running = True
     try:
@@ -261,6 +297,27 @@
         return
     start_new_thread(_run_thread, ())
 
+# index one file from webapp
+
+def indexJustOneFile(filepath):
+    start_new_thread(_just_one, (filepath,))
+
+def _just_one(filepath):
+    indexerConfig = IndexerConfiguration()
+    indexerConfig.load()
+    try:
+        try:
+            indexer = Indexer(indexerConfig)
+        except MaayAuthenticationError, exc:
+            print "AuthenticationError:", exc
+            return
+        print 'going to index file %s', filepath
+        indexer.indexFile(filepath, isPrivate=False)
+    except socket.error, exc:
+        print "Cannot contact Node:", exc
+        print "Check that the Node is running on %s:%s" % \
+              (indexerConfig.host, indexerConfig.port)
+
 if __name__ == '__main__':
     run()
 

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-16 11:23:27 UTC (rev 514)
+++ trunk/maay/webapplication.py	2005-11-16 11:34:30 UTC (rev 515)
@@ -190,6 +190,8 @@
     def __init__(self, filepath):
         static.File.__init__(self, filepath)
         self.filepath = filepath
+        maay.indexer.indexJustOneFile(self.filepath)
+
         
 class IndexationPage(MaayPage):
     # just for the demo. Should be moved to a adminpanel interface later.



From afayolle at berlios.de  Wed Nov 16 13:22:06 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Wed, 16 Nov 2005 13:22:06 +0100
Subject: [Maay-svncheckins] r516 - trunk
Message-ID: <200511161222.jAGCM6Fn016406@sheep.berlios.de>

Author: afayolle
Date: 2005-11-16 13:22:04 +0100 (Wed, 16 Nov 2005)
New Revision: 516

Modified:
   trunk/ChangeLog
Log:
updated changelog for 0.2.1

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2005-11-16 11:34:30 UTC (rev 515)
+++ trunk/ChangeLog	2005-11-16 12:22:04 UTC (rev 516)
@@ -1,3 +1,12 @@
+Maay-0.2.1 2005-11-16
+        * Fixed bug preventing P2P queries from being processed on
+        Windows
+        * Fixed off by one error in document abstract generation
+        * Fixed auto indexation of downloaded documents
+        * Fixed some display inconsistencies in web interface
+        * Added missing directories in indexation web page
+        * Logging now happens in maay-node.log
+
 Maay-0.2.0 2005-11-15
 	* Added P2P queries
         * Added presence server



From afayolle at berlios.de  Wed Nov 16 13:22:56 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Wed, 16 Nov 2005 13:22:56 +0100
Subject: [Maay-svncheckins] r517 - trunk
Message-ID: <200511161222.jAGCMuVb016917@sheep.berlios.de>

Author: afayolle
Date: 2005-11-16 13:22:52 +0100 (Wed, 16 Nov 2005)
New Revision: 517

Modified:
   trunk/maay.iss
   trunk/setup.py
Log:
updated for 0.2.1

Modified: trunk/maay.iss
===================================================================
--- trunk/maay.iss	2005-11-16 12:22:04 UTC (rev 516)
+++ trunk/maay.iss	2005-11-16 12:22:52 UTC (rev 517)
@@ -6,7 +6,7 @@
 
 [Setup]
 AppName=Maay
-AppVerName=Maay-0.2
+AppVerName=Maay-0.2.1
 DefaultDirName={pf}\Maay
 DefaultGroupName=Maay
 UninstallDisplayIcon={app}\maay_node.exe

Modified: trunk/setup.py
===================================================================
--- trunk/setup.py	2005-11-16 12:22:04 UTC (rev 516)
+++ trunk/setup.py	2005-11-16 12:22:52 UTC (rev 517)
@@ -23,7 +23,7 @@
 import sys
 from glob import glob
 
-version = '0.2.0'
+version = '0.2.1'
 author = "France Telecom R&D"
 author_email = "maay-dev at lists.berlios.de"
 copyright = "Copyright (c)2004-2005 France Telecom R&D"



From aurelienc at berlios.de  Wed Nov 16 14:13:40 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Wed, 16 Nov 2005 14:13:40 +0100
Subject: [Maay-svncheckins] r518 - trunk/maay
Message-ID: <200511161313.jAGDDeh6004033@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-16 14:13:22 +0100 (Wed, 16 Nov 2005)
New Revision: 518

Modified:
   trunk/maay/indexer.py
Log:
Indexer refactoring (indexFile functionality extracted from runIndexer)


Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-16 12:22:52 UTC (rev 517)
+++ trunk/maay/indexer.py	2005-11-16 13:13:22 UTC (rev 518)
@@ -139,32 +139,7 @@
         state = docState(isPrivate)
         for filename in self.getFileIterator(isPrivate):
             existingFiles.add(filename)
-            if not self.isIndexable(filename):
-                continue
-            lastModificationTime = os.path.getmtime(filename)
-            lastIdxTime, lastIdxState = self.getLastIndexationTimeAndState(filename)
-            if lastIdxState == state and lastIdxTime >= lastModificationTime:
-                if self.verbose:
-                    print "%s didn't change since last indexation" % filename
-                continue
-            else:
-                fileSize = os.path.getsize(filename)
-                try:
-                    title, text, _, _ = converter.extractWordsFromFile(filename)
-                except converter.IndexationFailure, exc:
-                    if self.verbose:
-                        print exc
-                    continue                    
-                docId = makeDocumentId(filename)
-                mime_type = mimetypes.guess_type(filename)[0]
-
-                self.indexDocument(FutureDocument(filename=unicode(filename,
-                                                                   self.filesystemEncoding),
-                                                  title=title, text=text,
-                                                  fileSize=fileSize,
-                                                  lastModificationTime=lastModificationTime,
-                                                  content_hash=docId, mime_type=mime_type,
-                                                  state=state))
+            self.indexFile(filename, isPrivate)
         return existingFiles
 
     def indexFile(self, filepath, isPrivate=True):
@@ -177,12 +152,16 @@
         fileSize = os.path.getsize(filepath)
         lastModificationTime = os.path.getmtime(filepath)
         lastIdxTime, lastIdxState = self.getLastIndexationTimeAndState(filepath)
+        if lastIdxState == state and lastIdxTime >= lastModificationTime:
+            if self.verbose:
+                print "%s didn't change since last indexation" % filepath
+                return
         try:
             title, text, _, _ = converter.extractWordsFromFile(filepath)
         except converter.IndexationFailure, exc:
             if self.verbose:
                 print exc
-                return
+            return
         docId = makeDocumentId(filepath)
         mime_type = mimetypes.guess_type(filepath)[0]
         doc = FutureDocument(filename=unicode(filepath,



From adimasci at berlios.de  Wed Nov 16 14:46:42 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Wed, 16 Nov 2005 14:46:42 +0100
Subject: [Maay-svncheckins] r519 - in trunk: . maay
Message-ID: <200511161346.jAGDkgDp016143@sheep.berlios.de>

Author: adimasci
Date: 2005-11-16 14:46:28 +0100 (Wed, 16 Nov 2005)
New Revision: 519

Modified:
   trunk/ChangeLog
   trunk/maay/p2pquerier.py
Log:
- use socket.gethostname() instead of 'anonymous' when
  user's login could not be guessed
- P2P queries now returns files' basename instead of 
  absolute path (because os.path.basename() on the
  originator's machine might give bad results if
  platforms differ)

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2005-11-16 13:13:22 UTC (rev 518)
+++ trunk/ChangeLog	2005-11-16 13:46:28 UTC (rev 519)
@@ -1,6 +1,6 @@
 Maay-0.2.1 2005-11-16
-        * Fixed bug preventing P2P queries from being processed on
-        Windows
+        * Fixed bug #5647 caused by bad use of os.getlogin() preventing P2P
+	   queries from being processed on Windows
         * Fixed off by one error in document abstract generation
         * Fixed auto indexation of downloaded documents
         * Fixed some display inconsistencies in web interface
@@ -8,7 +8,7 @@
         * Logging now happens in maay-node.log
 
 Maay-0.2.0 2005-11-15
-	* Added P2P queries
+        * Added P2P queries
         * Added presence server
         * Can launch indexation through web interface
         * Maay node runs as a windows service

Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-16 13:13:22 UTC (rev 518)
+++ trunk/maay/p2pquerier.py	2005-11-16 13:46:28 UTC (rev 519)
@@ -57,7 +57,8 @@
             guessed = os.environ.get(var)
             if guessed:
                 return guessed
-        return 'anonymous'
+        # could not guess username, use host name
+        return socket.gethostname()
 
 class QueryVersionMismatch(Exception):
     """we beginning a versionning nightmare trip on queries
@@ -339,6 +340,8 @@
         for document in answer.documents:
             if not isinstance(document, dict):
                 document = document.__dict__
+                if 'url' in document:
+                    document['url'] = os.path.basename(document['url'])
             # TODO: record answer in database if local is False
             # auc : to cache them ?
             if not query.isKnown(document):



From afayolle at berlios.de  Wed Nov 16 15:06:35 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Wed, 16 Nov 2005 15:06:35 +0100
Subject: [Maay-svncheckins] r520 - trunk/maay
Message-ID: <200511161406.jAGE6Zm3024153@sheep.berlios.de>

Author: afayolle
Date: 2005-11-16 15:06:14 +0100 (Wed, 16 Nov 2005)
New Revision: 520

Modified:
   trunk/maay/configuration.py
Log:
reduced verbosity

Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-16 13:46:28 UTC (rev 519)
+++ trunk/maay/configuration.py	2005-11-16 14:06:14 UTC (rev 520)
@@ -121,8 +121,6 @@
     def load(self):
         # line below to take early into account the config name var
         self.load_command_line_configuration()
-
-        print "Configuration load %s" % self.config_name
         if self.config_file:
             for directory in self.get_config_dirs():
                 path = os.path.join(directory, self.config_file)



From afayolle at berlios.de  Wed Nov 16 15:07:37 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Wed, 16 Nov 2005 15:07:37 +0100
Subject: [Maay-svncheckins] r522 - trunk
Message-ID: <200511161407.jAGE7bKb024416@sheep.berlios.de>

Author: afayolle
Date: 2005-11-16 15:07:32 +0100 (Wed, 16 Nov 2005)
New Revision: 522

Modified:
   trunk/ChangeLog
Log:
small improvement of ChangeLog

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2005-11-16 14:06:58 UTC (rev 521)
+++ trunk/ChangeLog	2005-11-16 14:07:32 UTC (rev 522)
@@ -1,7 +1,7 @@
 Maay-0.2.1 2005-11-16
         * Fixed bug #5647 caused by bad use of os.getlogin() preventing P2P
 	   queries from being processed on Windows
-        * Fixed off by one error in document abstract generation
+        * Fixed off by one error in document abstract generation (#5648)
         * Fixed auto indexation of downloaded documents
         * Fixed some display inconsistencies in web interface
         * Added missing directories in indexation web page



From afayolle at berlios.de  Wed Nov 16 15:07:05 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Wed, 16 Nov 2005 15:07:05 +0100
Subject: [Maay-svncheckins] r521 - in trunk/maay: . test
Message-ID: <200511161407.jAGE752b024232@sheep.berlios.de>

Author: afayolle
Date: 2005-11-16 15:06:58 +0100 (Wed, 16 Nov 2005)
New Revision: 521

Modified:
   trunk/maay/indexer.py
   trunk/maay/test/test_indexer.py
   trunk/maay/webapplication.py
Log:
small cleanup of threading in indexation

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-16 14:06:14 UTC (rev 520)
+++ trunk/maay/indexer.py	2005-11-16 14:06:58 UTC (rev 521)
@@ -33,14 +33,17 @@
 import mimetypes
 import socket
 
-import maay.indexer
+
 from maay import converter
 from maay.configuration import IndexerConfiguration
 from maay.dbentity import FutureDocument, Document, FileInfo
 from maay.querier import MaayAuthenticationError
 from maay.texttool import removeControlChar
-from thread import start_new_thread
+from threading import Thread
 
+#log.startLogging(open('maay-indexer.log', 'w'))
+
+
 def makeDocumentId(filename):
     """return the SHA hash value from of the contents of the file"""
     stream = file(filename, 'rb')
@@ -112,11 +115,10 @@
     def purgeFiles(self,fileset):
         for filename in fileset:
             if self.verbose:
-                print "Requesting unindexation of %s" % filename
+                print "Requesting unindexation of %s" % \
+                      filename.encode('iso-8859-1',
+                                      'replace')
             self.serverProxy.removeFileInfo(self.cnxId, filename)
-            #XXX: fix by alf, below, causes indexer crash on auc personnal machine
-##                                             unicode(filename,
-##                                                     self.filesystemEncoding))
         if self.verbose:
             print "Requesting cleanup of unreferenced documents"
         self.serverProxy.removeUnreferencedDocuments(self.cnxId)
@@ -145,7 +147,8 @@
     def indexFile(self, filepath, isPrivate=True):
         if not self.isIndexable(filepath):
             if self.verbose:
-                print "Indexer indexFile : can't index %s" % filepath
+                print "Indexer indexFile : can't index %s" % \
+                      filepath.encode('iso-8859-1', 'replace')
             return
 
         state = docState(isPrivate)
@@ -154,7 +157,8 @@
         lastIdxTime, lastIdxState = self.getLastIndexationTimeAndState(filepath)
         if lastIdxState == state and lastIdxTime >= lastModificationTime:
             if self.verbose:
-                print "%s didn't change since last indexation" % filepath
+                print "%s didn't change since last indexation" % \
+                      filepath.encode('iso-8859-1', 'replace')
                 return
         try:
             title, text, _, _ = converter.extractWordsFromFile(filepath)
@@ -184,22 +188,24 @@
     def indexDocument(self, futureDoc):
         futureDoc.file_state=FileInfo.CREATED_FILE_STATE
         if self.verbose:
-            print "Requesting indexation of %s" % futureDoc.filename,
+            print "Requesting indexation of %s" % \
+                  futureDoc.filename.encode('iso-8859-1', 'replace'),
         try:
             futureDoc.title = removeControlChar(futureDoc.title) 
             futureDoc.text = removeControlChar(futureDoc.text)
             if self.verbose:
-                print '('+futureDoc.title.encode('utf-8')+')'
+                print '('+futureDoc.title.encode('iso-8859-1', 'replace')+')'
             self.serverProxy.indexDocument(self.cnxId, futureDoc)
 
         except (Fault, ProtocolError), exc:
             if self.verbose:
                 print "An error occured on the Node while indexing %s" % \
-                      futureDoc.filename.encode('iso-8859-1')
+                      futureDoc.filename.encode('iso-8859-1', 'replace')
                 print exc
                 print "See Node log for details"
             else:
-                print "Error indexing %s: %s" % (futureDoc.filename.encode('iso-8859-1'), exc)
+                print "Error indexing %s: %s" % \
+                      (futureDoc.filename.encode('iso-8859-1', 'replace'), exc)
         
 
 ######### FileIterator
@@ -257,29 +263,37 @@
               (indexerConfig.host, indexerConfig.port)
         sys.exit(1)
 
-running = False
 
 ## helpers for calls from the node, probably needs a serious fix
 
 # run the indexer from webapp
-
+indexer_thread = None
 def _run_thread():
-    maay.indexer.running = True
+    global running
+    running = True
     try:
         run()
     finally:    
-        maay.indexer.running = False
+        running = False
 
+def is_running():
+    print '** is_running()', indexer_thread
+    return indexer_thread and indexer_thread.isAlive()
+
 def start_as_thread():
-    if maay.indexer.running:
-        print "Indexer already running"
-        return
-    start_new_thread(_run_thread, ())
+    global indexer_thread
+    if is_running():
+        print "Indexer already running", indexer_thread
+    else:
+        print "launching indexer"
+        indexer_thread = Thread(target=run)
+        indexer_thread.start()
 
-# index one file from webapp
+# index one file from webapp in a thread
 
 def indexJustOneFile(filepath):
-    start_new_thread(_just_one, (filepath,))
+    thread = Thread(target=_just_one, args=(filepath,))
+    thread.start()
 
 def _just_one(filepath):
     indexerConfig = IndexerConfiguration()

Modified: trunk/maay/test/test_indexer.py
===================================================================
--- trunk/maay/test/test_indexer.py	2005-11-16 14:06:14 UTC (rev 520)
+++ trunk/maay/test/test_indexer.py	2005-11-16 14:06:58 UTC (rev 521)
@@ -23,6 +23,7 @@
 import os
 
 from maay.indexer import *
+from maay import indexer
 
 class GlobalFunctionTC(unittest.TestCase):
 
@@ -41,7 +42,26 @@
 #         # as text files
 #         self.assertEquals('text/plain', mimetypes.types_map['.py'])
         
+
+class DummyThread:
+    alive = False
+    def isAlive(self):
+        return self.alive
+
+class ThreadsTC(unittest.TestCase):
+
+    def tearDown(self):
+        indexer.indexer_thread = None
         
+    def test_is_running(self):
+        self.failIf(is_running())
+        indexer.indexer_thread = DummyThread()
+        self.failIf(is_running())
+        indexer.indexer_thread.alive = True
+        self.failUnless(is_running())
 
+    
+        
+
 if __name__ == '__main__':
     unittest.main()

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-16 14:06:14 UTC (rev 520)
+++ trunk/maay/webapplication.py	2005-11-16 14:06:58 UTC (rev 521)
@@ -40,7 +40,7 @@
 from maay.query import Query
 from maay.p2pquerier import P2pQuerier, P2pQuery
 from maay.dbentity import Document
-import maay.indexer
+from maay import indexer 
 
 class INodeConfiguration(Interface):
     """provide an interface in order to be able to remember webappconfig"""
@@ -129,16 +129,16 @@
     def child_indexation(self, context):
         start = int(context.arg('start', 0))
         if start == 0:
-            if maay.indexer.running:
+            if indexer.is_running():
                 msg = "Indexer running"
             else:
                 msg = "Indexer not running"
         else:
-            if maay.indexer.running:    
+            if indexer.is_running():    
                 msg = "Indexer already running"
             else:
                 msg = "Indexer started"
-                maay.indexer.start_as_thread()
+                indexer.start_as_thread()
 
         return IndexationPage(msg)
 
@@ -190,7 +190,7 @@
     def __init__(self, filepath):
         static.File.__init__(self, filepath)
         self.filepath = filepath
-        maay.indexer.indexJustOneFile(self.filepath)
+        indexer.indexJustOneFile(self.filepath)
 
         
 class IndexationPage(MaayPage):



From dnf at berlios.de  Wed Nov 16 15:27:11 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Wed, 16 Nov 2005 15:27:11 +0100
Subject: [Maay-svncheckins] r523 - trunk/maay/data
Message-ID: <200511161427.jAGERBN1007990@sheep.berlios.de>

Author: dnf
Date: 2005-11-16 15:27:09 +0100 (Wed, 16 Nov 2005)
New Revision: 523

Modified:
   trunk/maay/data/liveresults.html
Log:
Add indexation link on top of the result page.


Modified: trunk/maay/data/liveresults.html
===================================================================
--- trunk/maay/data/liveresults.html	2005-11-16 14:07:32 UTC (rev 522)
+++ trunk/maay/data/liveresults.html	2005-11-16 14:27:09 UTC (rev 523)
@@ -40,6 +40,7 @@
 
   </head>
   <body onload="startConnection()">
+  <div class="headlinks"><a href="/indexation" class="headlink">[Indexation&nbsp;Page]&nbsp;</a></div>
   <div class="reSearch">
     <form action="search" accept-charset="utf-8">
       <table>



From dnf at berlios.de  Wed Nov 16 15:29:14 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Wed, 16 Nov 2005 15:29:14 +0100
Subject: [Maay-svncheckins] r524 - trunk/maay
Message-ID: <200511161429.jAGETEBl008979@sheep.berlios.de>

Author: dnf
Date: 2005-11-16 15:29:10 +0100 (Wed, 16 Nov 2005)
New Revision: 524

Modified:
   trunk/maay/webapplication.py
Log:
Remove yellow overline of distant results.



Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-16 14:27:09 UTC (rev 523)
+++ trunk/maay/webapplication.py	2005-11-16 14:29:10 UTC (rev 524)
@@ -445,7 +445,7 @@
             <table>
               <tr><td><div><nevow:attr name="class"><nevow:slot name="mime_type"/></nevow:attr></div></td>
                   <td>
-                   <a><nevow:attr name="class"><nevow:slot name="linkClass" /></nevow:attr>
+                   <a>
                     <nevow:attr name="href"><nevow:slot name="url" /></nevow:attr>
                     <nevow:slot name="doctitle">DOC TITLE</nevow:slot>
                    </a>
@@ -483,12 +483,10 @@
         ResultsPageMixIn.render_row(self, context, data)
         if document.host == 'localhost':
             baseurl = '/download?docid=%s' % (document.document_id,)
-            context.fillSlots('linkClass', "docTitle")
             # TODO: make a difference between private and public results
             context.fillSlots('resultClass', "localPublicResult")
         else:
             baseurl = '/distantfile?docid=%s' % (document.document_id,)
-            context.fillSlots('linkClass', "distantDocTitle")
             context.fillSlots('resultClass', "distantResult")
             baseurl += '&host=%s' % (document.host,)
             baseurl += '&port=%s' % (document.port,)



From afayolle at berlios.de  Wed Nov 16 16:05:11 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Wed, 16 Nov 2005 16:05:11 +0100
Subject: [Maay-svncheckins] r525 - trunk
Message-ID: <200511161505.jAGF5Bm4024796@sheep.berlios.de>

Author: afayolle
Date: 2005-11-16 16:04:50 +0100 (Wed, 16 Nov 2005)
New Revision: 525

Modified:
   trunk/ReleaseNotes
Log:
updated for 0.2.1

Modified: trunk/ReleaseNotes
===================================================================
--- trunk/ReleaseNotes	2005-11-16 14:29:10 UTC (rev 524)
+++ trunk/ReleaseNotes	2005-11-16 15:04:50 UTC (rev 525)
@@ -1,11 +1,15 @@
-Release Notes for version 0.2.0
+Release Notes for version 0.2.1
 
 See README.txt for installation and quick start instructions. 
 
-This release is beta-level software. There are known problems 
-with the web interface when accessed through Microsoft Internet 
-Explorer. Using Firefox or Mozilla should work fine. 
+This release is beta-level software, which contains several bug fixes
+and improvements over 0.2.0. 
 
+There may be some problems with the web interface when accessed
+through Microsoft Internet Explorer. Please give some feedback on
+using Maay with this web browser.  Using Firefox or Mozilla should
+work fine.
+
 The windows installer will install and set up all the required
 dependencies (including mysql and twisted). It uses Inno Setup and
 Py2exe.



From adimasci at berlios.de  Wed Nov 16 16:35:14 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Wed, 16 Nov 2005 16:35:14 +0100
Subject: [Maay-svncheckins] r526 - in trunk: . maay
Message-ID: <200511161535.jAGFZEx6014636@sheep.berlios.de>

Author: adimasci
Date: 2005-11-16 16:35:10 +0100 (Wed, 16 Nov 2005)
New Revision: 526

Modified:
   trunk/maay.iss
   trunk/maay/configuration.py
Log:
Do not hardcode windows's main drive letter, let the
system decide

Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-16 15:04:50 UTC (rev 525)
+++ trunk/maay/configuration.py	2005-11-16 15:35:10 UTC (rev 526)
@@ -60,7 +60,7 @@
     path = []
     if os.environ.get('PATH'):
         path.append(os.environ.get('PATH'))
-    for directory in (u'pdftohtml', os.path.join(u'mysql', u'bin'), ur'c:\antiword'):
+    for directory in (u'pdftohtml', os.path.join(u'mysql', u'bin'), ur'\antiword'):
         if path and directory not in path[0]:
             path.append(os.path.join(maay_dir, directory))
     os.environ['PATH'] =  os.pathsep.join(path)
@@ -70,7 +70,7 @@
 ## def XXX_update_env_path(maay_dir):
 ##     assert sys.platform == 'win32', 'This method must not be called on non windows platforms'
 ##     path = os.environ.get('PATH', '').split(os.pathsep)
-##     for otherPath in (u'pdftohtml', os.path.join(u'mysql', u'bin'), ur'c:\antiword'):
+##     for otherPath in (u'pdftohtml', os.path.join(u'mysql', u'bin'), ur'\antiword'):
 ##         if otherPath not in path:
 ##             path.append(os.path.join(maay_dir, otherPath))
 ##     os.environ['PATH'] = os.pathsep.join(path)

Modified: trunk/maay.iss
===================================================================
--- trunk/maay.iss	2005-11-16 15:04:50 UTC (rev 525)
+++ trunk/maay.iss	2005-11-16 15:35:10 UTC (rev 526)
@@ -37,7 +37,7 @@
 Source: "thirdparty\mysql\bin\mysqlshutdown.exe"; DestDir: "{app}\mysql\bin"
 Source: "thirdparty\mysql\bin\mysqld-max-nt.exe"; DestDir: "{app}\mysql\bin"
 Source: "thirdparty\mysql\bin\mysql.exe"; DestDir: "{app}\mysql\bin"
-Source: "thirdparty\antiword\*"; DestDir: "c:\antiword" ; Flags: recursesubdirs
+Source: "thirdparty\antiword\*"; DestDir: "\antiword" ; Flags: recursesubdirs
 Source: "thirdparty\pdftohtml-0.36\*"; DestDir: "{app}\pdftohtml" ; Flags: recursesubdirs
 Source: "maay\configuration\win32\*.ini"; DestDir: "{app}"
 Source: "doc\README.html"; DestDir: "{app}\documentation"



From afayolle at berlios.de  Wed Nov 16 16:48:20 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Wed, 16 Nov 2005 16:48:20 +0100
Subject: [Maay-svncheckins] r527 - trunk
Message-ID: <200511161548.jAGFmK4e016663@sheep.berlios.de>

Author: afayolle
Date: 2005-11-16 16:48:17 +0100 (Wed, 16 Nov 2005)
New Revision: 527

Modified:
   trunk/MANIFEST.in
Log:
small fix

Modified: trunk/MANIFEST.in
===================================================================
--- trunk/MANIFEST.in	2005-11-16 15:35:10 UTC (rev 526)
+++ trunk/MANIFEST.in	2005-11-16 15:48:17 UTC (rev 527)
@@ -2,7 +2,7 @@
 recursive-include maay/test/ *.py *.txt *.txt.bz2 *.txt.gz *.xml *.html *.ini
 recursive-include maay/data/ *.html *.css *.gif *.png *.jpg *.ico *.js
 recursive-include maay/sql *.sql
-include maay/bin/maay-server
+include maay/bin/maay-node
 include maay/bin/maay-indexer
 include ReleaseNotes
 include ChangeLog



From adimasci at berlios.de  Wed Nov 16 17:30:22 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Wed, 16 Nov 2005 17:30:22 +0100
Subject: [Maay-svncheckins] r528 - trunk/maay
Message-ID: <200511161630.jAGGUMaM022382@sheep.berlios.de>

Author: adimasci
Date: 2005-11-16 17:30:13 +0100 (Wed, 16 Nov 2005)
New Revision: 528

Modified:
   trunk/maay/converter.py
   trunk/maay/image.py
   trunk/maay/texttool.py
Log:
a bit of refactoring for Image management (only moves)

Modified: trunk/maay/converter.py
===================================================================
--- trunk/maay/converter.py	2005-11-16 15:48:17 UTC (rev 527)
+++ trunk/maay/converter.py	2005-11-16 16:30:13 UTC (rev 528)
@@ -50,7 +50,7 @@
 import gzip
 import bz2
 
-from maay.texttool import TextParser, ExifParser, MaayHTMLParser as HTMLParser, ParsingError
+from maay.texttool import TextParser, MaayHTMLParser as HTMLParser, ParsingError
 
 # REGISTRY is a mimetype / converterList map
 REGISTRY = {}
@@ -123,16 +123,21 @@
     def getParser(self):
         return HTMLParser() # This is really MaayHTMLParser from texttool
 
-class ImageConverter(BaseConverter):
-    """provides base Image converter
-       In the future, it may hold EXIF information retrieval methods"""
-    OUTPUT_TYPE = 'image'
-    MIME_TYPES = ('image/jpeg','image/png', 'image/x-xpixmap')
+try:
+    from maay.image import ExifParser
+    class ImageConverter(BaseConverter):
+        """provides base Image converter
+           In the future, it may hold EXIF information retrieval methods"""
+        OUTPUT_TYPE = 'image'
+        MIME_TYPES = ('image/jpeg','image/png', 'image/x-xpixmap')
 
-    def getParser(self):
-        return ExifParser()
+        def getParser(self):
+            return ExifParser()
+except ImportError:
+    print "Python Imaging Library not installed for your version of Python.",
+    print "Thumbnail support will not work."
+    
 
-
 def uncompressFile(filepath, outputDir):
     """returns a filepath for the same, uncompressed, file
        located in the provided output dir

Modified: trunk/maay/image.py
===================================================================
--- trunk/maay/image.py	2005-11-16 15:48:17 UTC (rev 527)
+++ trunk/maay/image.py	2005-11-16 16:30:13 UTC (rev 528)
@@ -21,15 +21,10 @@
 __revision__ = '$Id$'
 
 import stat, os, os.path as osp
+import sys
 
-try:
-    import Image
-except:
-    print "Python Imaging Library not installed for your version of Python.",
-    print "Thumbnail support will not work."
+import Image
 
-import os.path as osp
-
 ############# Thumbnail bizness
 
 class ThumbnailCreationError(Exception):
@@ -50,7 +45,40 @@
 
 
 ############## EXIF stuff
+from maay.configuration import ImageConfiguration as ImConfig
+from maay.texttool import AbstractParser
 
+class ExifParser(AbstractParser):
+    """A parser for Exif information found in image files"""
+
+    def __init__(self):
+        self.thumbnails_dir = None
+
+    def get_thumbnails_dir(self):
+        if not self.thumbnails_dir:
+            self.thumbnails_dir = ImConfig().get_thumbnails_dir()
+        return self.thumbnails_dir
+
+    def parseFile(self, filepath, pristineFilename, encoding=None):
+        """returns a 4-uple (title, normalized_text, links, offset)
+        TODO: port original code from htmltotext
+        :param encoding: if None, then need to be guessed
+        """
+        title = unicode(pristineFilename, sys.getfilesystemencoding())
+        try:
+            result = 'EXIF : ' + get_ustring_from_exif(filepath)
+##             try:
+##                 thumb = make_thumbnail(filepath, self.get_thumbnails_dir())
+##             except Exception, e:
+##                 print "Can't make thumbnail. Cause : %s" % e
+##                 traceback.print_exc()
+##                 thumb = None
+##             return title, result, [thumb], 0
+            return title, result, [], 0
+        except Exception, e:
+            print "No EXIF nor thumbnails. Cause : %s" % e
+        return title, u'No EXIF information available', [], 0
+
 # Mapping from number to (descriptor, type)
 exif_dict = {
     256 : ('ImageWidth', int),

Modified: trunk/maay/texttool.py
===================================================================
--- trunk/maay/texttool.py	2005-11-16 15:48:17 UTC (rev 527)
+++ trunk/maay/texttool.py	2005-11-16 16:30:13 UTC (rev 528)
@@ -31,10 +31,7 @@
 import bz2
 import traceback
 
-from maay.image import get_ustring_from_exif, make_thumbnail
-from maay.configuration import ImageConfiguration as ImConfig
 
-
 WORD_MIN_LEN = 2
 WORD_MAX_LEN = 50
 
@@ -221,39 +218,6 @@
             self.title = u''
         return self.title, result, self.links, 0
 
-
-
-class ExifParser(AbstractParser):
-    """A parser for Exif information found in image files"""
-
-    def __init__(self):
-        self.thumbnails_dir = None
-
-    def get_thumbnails_dir(self):
-        if not self.thumbnails_dir:
-            self.thumbnails_dir = ImConfig().get_thumbnails_dir()
-        return self.thumbnails_dir
-
-    def parseFile(self, filepath, pristineFilename, encoding=None):
-        """returns a 4-uple (title, normalized_text, links, offset)
-        TODO: port original code from htmltotext
-        :param encoding: if None, then need to be guessed
-        """
-        title = unicode(pristineFilename, sys.getfilesystemencoding())
-        try:
-            result = 'EXIF : ' + get_ustring_from_exif(filepath)
-##             try:
-##                 thumb = make_thumbnail(filepath, self.get_thumbnails_dir())
-##             except Exception, e:
-##                 print "Can't make thumbnail. Cause : %s" % e
-##                 traceback.print_exc()
-##                 thumb = None
-##             return title, result, [thumb], 0
-            return title, result, [], 0
-        except Exception, e:
-            print "No EXIF nor thumbnails. Cause : %s" % e
-        return title, u'No EXIF information available', [], 0
-
         
 _table = {}
 for i in xrange(32):



From aurelienc at berlios.de  Wed Nov 16 17:34:52 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Wed, 16 Nov 2005 17:34:52 +0100
Subject: [Maay-svncheckins] r529 - trunk/maay
Message-ID: <200511161634.jAGGYqMa023005@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-16 17:34:37 +0100 (Wed, 16 Nov 2005)
New Revision: 529

Modified:
   trunk/maay/configuration.py
   trunk/maay/indexer.py
   trunk/maay/node.py
Log:
Little tweak to the configuration mess ; now, in appearance at least, it's slightly less broken.


Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-16 16:30:13 UTC (rev 528)
+++ trunk/maay/configuration.py	2005-11-16 16:34:37 UTC (rev 529)
@@ -87,48 +87,35 @@
     return [file_obj for file_obj in file_list
             if os.access(file_obj, access_criterium)]
 
-def _download_index_dir():
-    if sys.platform == 'win32':
-        theDir = osp.join(osp.expanduser('~'),'MaayDownloads')
-    else:
-        theDir = osp.expanduser('~/maay-downloads/')
-    if not osp.exists(theDir):
-        os.makedirs(theDir)
-    return theDir
 
 class Configuration(BaseConfiguration):
+
+    config_file = None
     options = [
         ('config-name',
          {'type' : "string", 'metavar' : "<config-name>", 'short' : "C",
          'help' : "allow to specify a config directory name",
           'default' : "maay",
         }),
-        ('download-index-dir',
-         {'type': 'string',
-          'metavar': '<downloads>',
-          'help': 'downloaded files will go there and be immediately indexed',
-          'default' : _download_index_dir()
-          })
-
         ]
-    config_file = None
 
+
     def __init__(self, name=None):
         BaseConfiguration.__init__(self, options=self.options,
                                    config_file=self.config_file,
                                    name=name)
         
     def load(self):
-        # line below to take early into account the config name var
         self.load_command_line_configuration()
-        if self.config_file:
-            for directory in self.get_config_dirs():
-                path = os.path.join(directory, self.config_file)
-                self.load_file_configuration(path)
+        self.load_from_files()
         # then override with command-line options
         self.load_command_line_configuration()
-    
 
+    def load_from_files(self):
+        for directory in self.get_config_dirs():
+            path = os.path.join(directory, self.config_file)
+            self.load_file_configuration(path)
+
     def get_config_dirs(self):
         if sys.platform == "win32": # XXX: fix Win32 with self.config_name attr
             return [os.path.normpath(os.path.join(_get_data_dir(), '..'))]
@@ -269,6 +256,16 @@
         raise ValueError('Unable to find a writable directory to store the node id')
 
 ################ Indexer stuff
+
+def _download_index_dir():
+    if sys.platform == 'win32':
+        theDir = r'C:\Documents and Settings\All Users\Desktop\Maay Documents\downloaded'
+    else:
+        theDir = osp.expanduser('~/maay-downloads/')
+    if not osp.exists(theDir):
+        os.makedirs(theDir)
+    return theDir
+
     
 class IndexerConfiguration(Configuration):
     options = Configuration.options + [
@@ -335,7 +332,14 @@
           'help' : 'purge the set of indexed documents and returns immediately',
           'metavar' : '<y or n>',
           'default' : False,
+          }),
+        ('download-index-dir',
+         {'type': 'string',
+          'metavar': '<downloads>',
+          'help': 'downloaded files will go there and be immediately indexed',
+          'default' : _download_index_dir()
           })
+        
         ]
 
     config_file = 'indexer.ini'
@@ -387,6 +391,3 @@
             return path
         else:
             raise NoThumbnailsDir("Access to %s is impossible." % path)
-
-
-

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-16 16:30:13 UTC (rev 528)
+++ trunk/maay/indexer.py	2005-11-16 16:34:37 UTC (rev 529)
@@ -25,6 +25,11 @@
 
 __revision__ = '$Id$'
 
+from maay.configuration import IndexerConfiguration
+indexerConfig = IndexerConfiguration()
+indexerConfig.load()
+
+
 import os
 import sys
 import sha
@@ -35,7 +40,6 @@
 
 
 from maay import converter
-from maay.configuration import IndexerConfiguration
 from maay.dbentity import FutureDocument, Document, FileInfo
 from maay.querier import MaayAuthenticationError
 from maay.texttool import removeControlChar
@@ -248,8 +252,6 @@
 ## main() ##################################################
 
 def run():
-    indexerConfig = IndexerConfiguration()
-    indexerConfig.load()
     try:
         try:
             indexer = Indexer(indexerConfig)

Modified: trunk/maay/node.py
===================================================================
--- trunk/maay/node.py	2005-11-16 16:30:13 UTC (rev 528)
+++ trunk/maay/node.py	2005-11-16 16:34:37 UTC (rev 529)
@@ -24,6 +24,9 @@
 
 __revision__ = '$Id$'
 
+from maay.configuration import NodeConfiguration
+nodeConfig = NodeConfiguration()
+nodeConfig.load()
 
 import platform
 import sha
@@ -57,7 +60,7 @@
 from maay.querier import MaayQuerier, IQuerier, AnonymousQuerier, \
      MaayAuthenticationError, WEB_AVATARID
 from maay.rpc import MaayRPCServer
-from maay.configuration import NodeConfiguration
+
 from maay import presenceclient
 from maay.webapplication import Maay404, INodeConfiguration, SearchForm
 
@@ -245,12 +248,10 @@
 
 ##     def _forceLoginPage(self, *args):
 ##         return LoginForm(), ''
+
     
-    
 def run():
     log.startLogging(open('maay-node.log', 'w'))
-    nodeConfig = NodeConfiguration()
-    nodeConfig.load()
     maayPortal = MaayPortal(nodeConfig)
     website = appserver.NevowSite(MaaySessionWrapper(maayPortal,
                                                      mindFactory=MaayMindFactory))



From afayolle at berlios.de  Wed Nov 16 17:53:52 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Wed, 16 Nov 2005 17:53:52 +0100
Subject: [Maay-svncheckins] r530 - trunk
Message-ID: <200511161653.jAGGrqqP025848@sheep.berlios.de>

Author: afayolle
Date: 2005-11-16 17:53:49 +0100 (Wed, 16 Nov 2005)
New Revision: 530

Removed:
   trunk/maay.orig/
Log:
moved maay.orig to tags



From afayolle at berlios.de  Wed Nov 16 17:58:50 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Wed, 16 Nov 2005 17:58:50 +0100
Subject: [Maay-svncheckins] r531 - tags
Message-ID: <200511161658.jAGGwo0O026462@sheep.berlios.de>

Author: afayolle
Date: 2005-11-16 17:58:40 +0100 (Wed, 16 Nov 2005)
New Revision: 531

Added:
   tags/maay.orig/
Log:
moved maay.orig to tags

Copied: tags/maay.orig (from rev 397, trunk/maay.orig)



From afayolle at berlios.de  Wed Nov 16 18:03:33 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Wed, 16 Nov 2005 18:03:33 +0100
Subject: [Maay-svncheckins] r532 - in tags: . release-0.2.1 release-0.2.1/maay
Message-ID: <200511161703.jAGH3XXx026926@sheep.berlios.de>

Author: afayolle
Date: 2005-11-16 18:03:32 +0100 (Wed, 16 Nov 2005)
New Revision: 532

Added:
   tags/release-0.2.1/
Removed:
   tags/release-0.2.1/maay.orig/
   tags/release-0.2.1/maay/graphical_indexer.py
Log:
tagged 0.2.1

Copied: tags/release-0.2.1 (from rev 397, trunk)

Deleted: tags/release-0.2.1/maay/graphical_indexer.py
===================================================================
--- trunk/maay/graphical_indexer.py	2005-11-10 11:38:51 UTC (rev 397)
+++ tags/release-0.2.1/maay/graphical_indexer.py	2005-11-16 17:03:32 UTC (rev 532)
@@ -1,37 +0,0 @@
-#     Copyright (C) 2005 France Telecom R&D
-#
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
-#
-#     This program is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
-#
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
-
-"""This module contains a Tk wrapper around the indexer, for easier
-operation on Windows boxes
-"""
-
-__revision__ = '$Id$'
-
-from Tkinter import Tk
-
-from maay import indexer
-
-class IndexerGui(Tk):
-
-    def __init__(self, *args, **kwargs):
-        Tk.__init__(self, *args, **kwargs)
-        self.title("Maay Indexer")
-        self._build_interface()
-        
-    def _build_interface(self):
-        for line, (label, info) in enumerate(indexer.IndexerConfiguration.options):
-            pass
-        



From aurelienc at berlios.de  Wed Nov 16 18:48:00 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Wed, 16 Nov 2005 18:48:00 +0100
Subject: [Maay-svncheckins] r533 - in trunk/maay: . test
Message-ID: <200511161748.jAGHm08E012925@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-16 18:47:56 +0100 (Wed, 16 Nov 2005)
New Revision: 533

Added:
   trunk/maay/test/test_presenceserver.py
Modified:
   trunk/maay/presenceserver.py
Log:
Maintain a bijective relation bewteen nodeId and (ip, port) in presence server, plus tests


Modified: trunk/maay/presenceserver.py
===================================================================
--- trunk/maay/presenceserver.py	2005-11-16 17:03:32 UTC (rev 532)
+++ trunk/maay/presenceserver.py	2005-11-16 17:47:56 UTC (rev 533)
@@ -33,7 +33,8 @@
 class PresenceServer(LineReceiver):
     # define this as a static class member since a new instance of the class
     # is created after each request
-    _registeredUsers = {} 
+    _registeredUsers = {}
+    _ruReverseMap = {}
     _ruTimestamp = {}
     # TODO: auto logout after a given time to save memory
 
@@ -47,9 +48,11 @@
         for nodeId, values in PresenceServer._ruTimestamp.items():
             dt = now - values
             if dt.seconds > self._autoExpirationDelayInSecs:
+                ip, port = PresenceServer._registeredUsers[nodeId] [2:3]
                 if verbose:
-                    print "%s removed" % str(PresenceServer._registeredUsers[nodeId])
+                    print "%s:%s removed" % (ip, port)
                 del PresenceServer._registeredUsers[nodeId]
+                del PresenceServer._ruReverseMap[(ip, port)]
                 del PresenceServer._ruTimestamp[nodeId]
             elif verbose:
                 print "keep: %s (%s)" % (str(PresenceServer._registeredUsers[nodeId]), str(values))
@@ -90,11 +93,18 @@
             print "%s was already registered" % (nodeId,)
         lastseen = datetime.utcnow()
         PresenceServer._ruTimestamp[nodeId] = lastseen
+        # check bijection betwen (ip, port) and nodeId
+        # same (ip, port) shouldn't be registered several times
+        if (ip, port) in PresenceServer._ruReverseMap:
+            oldId = PresenceServer._ruReverseMap[(ip, port)]
+            del PresenceServer._registeredUsers[oldId]
+            del PresenceServer._ruTimestamp[oldId]
         PresenceServer._registeredUsers[nodeId] = (lastseen.isoformat(),
                                          nodeId,
                                          self.transport.getPeer().host,
                                          port,
                                          bandwidth)
+        PresenceServer._ruReverseMap[(ip, port)] = nodeId
 
     def do_logout(self, nodeId):
         try:

Added: trunk/maay/test/test_presenceserver.py
===================================================================
--- trunk/maay/test/test_presenceserver.py	2005-11-16 17:03:32 UTC (rev 532)
+++ trunk/maay/test/test_presenceserver.py	2005-11-16 17:47:56 UTC (rev 533)
@@ -0,0 +1,80 @@
+#     Maay : a network of peers for document search
+#
+#     Copyright (C) 2005 France Telecom R&D
+#
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
+#
+#     This library is distributed in the hope that it will be useful,
+#     but WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
+#
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+
+"""unit tests for presenceserver.py
+"""
+__revision__ = '$Id: test_boilerplate.py 481 2005-11-15 08:10:46Z afayolle $'
+
+import unittest
+from maay.presenceserver import PresenceServer
+
+class MockTransport:
+
+    def __init__(self, host):
+        self.host = host
+
+    def getPeer(self):
+        return self
+
+
+class PresenceServerTC(unittest.TestCase):
+    """test suite to be completed ...
+    """
+    def setUp(self):
+        self.srv = PresenceServer()
+        
+    def tearDown(self):
+        PresenceServer._registeredUsers = {}
+        PresenceServer._ruReverseMap = {}
+        PresenceServer._ruTimestamp = {}
+        
+    def testSimpleNotify(self):
+        self.srv.transport = MockTransport('1.2.3.4')
+        self.assertEquals(self.srv._registeredUsers, {})
+        self.assertEquals(self.srv._ruReverseMap, {})
+        self.srv.lineReceived("notify:FOONODEA:1.2.3.4:5678:9")
+        # check first injection
+        self.assertEquals(self.srv._registeredUsers['FOONODEA'][1:],
+                          ('FOONODEA','1.2.3.4','5678','9'))
+        self.assertEquals(self.srv._ruReverseMap[('1.2.3.4','5678')],
+                          'FOONODEA')
+        # inject second
+        self.srv.lineReceived("notify:FOONODEB:1.2.3.4:567:8")        
+        # check both are still there
+        self.assertEquals(self.srv._registeredUsers['FOONODEA'][1:],
+                          ('FOONODEA','1.2.3.4','5678','9'))
+        self.assertEquals(self.srv._registeredUsers['FOONODEB'][1:],
+                          ('FOONODEB','1.2.3.4','567','8'))
+        self.assertEquals(self.srv._ruReverseMap, {('1.2.3.4', '5678') : 'FOONODEA',
+                                                   ('1.2.3.4', '567') : 'FOONODEB',})
+
+
+    def testNotifyTwice(self):
+        self.srv.transport = MockTransport('1.2.3.4')
+        self.assertEquals(self.srv._registeredUsers, {})
+        self.assertEquals(self.srv._ruReverseMap, {})
+        self.srv.lineReceived("notify:FOONODEA:1.2.3.4:5678:9")
+        self.srv.lineReceived("notify:FOONODEB:1.2.3.4:5678:9")
+        self.assertEquals(self.srv._registeredUsers['FOONODEB'][1:],
+                          ('FOONODEB','1.2.3.4','5678','9'))
+        self.assertEquals(self.srv._ruReverseMap[('1.2.3.4','5678')],
+                          'FOONODEB')
+        
+
+if __name__ == '__main__':
+    unittest.main()



From adimasci at berlios.de  Thu Nov 17 09:07:25 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Thu, 17 Nov 2005 09:07:25 +0100
Subject: [Maay-svncheckins] r534 - trunk/maay
Message-ID: <200511170807.jAH87PUS000380@sheep.berlios.de>

Author: adimasci
Date: 2005-11-17 09:07:09 +0100 (Thu, 17 Nov 2005)
New Revision: 534

Modified:
   trunk/maay/dbentity.py
Log:
sort results' table in reverse order

Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-16 17:47:56 UTC (rev 533)
+++ trunk/maay/dbentity.py	2005-11-17 08:07:09 UTC (rev 534)
@@ -326,7 +326,7 @@
             where += " AND host != 'localhost' "
         elif onlyLocal:
             where += " AND host = 'localhost' "
-        query = 'SELECT %s FROM %s%s ORDER BY publication_time LIMIT %s OFFSET %s' % (
+        query = 'SELECT %s FROM %s%s ORDER BY publication_time DESC LIMIT %s OFFSET %s' % (
             ', '.join(cls.attributes),
             cls.tableName,
             where, limit, offset)



From aurelienc at berlios.de  Thu Nov 17 09:47:14 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Thu, 17 Nov 2005 09:47:14 +0100
Subject: [Maay-svncheckins] r535 - trunk/maay
Message-ID: <200511170847.jAH8lEWk025579@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-17 09:47:07 +0100 (Thu, 17 Nov 2005)
New Revision: 535

Modified:
   trunk/maay/TODO.txt
Log:
Up-to-date TODO


Modified: trunk/maay/TODO.txt
===================================================================
--- trunk/maay/TODO.txt	2005-11-17 08:07:09 UTC (rev 534)
+++ trunk/maay/TODO.txt	2005-11-17 08:47:07 UTC (rev 535)
@@ -16,14 +16,23 @@
 
 * What's Next
 
+ - GC des noeuds morts (ping ? heartbeats ? etc.)
+ - Ne pas mettre dans le wizzard d'installation de question du genre
+   "o? souhaitez vous installer Maay ?"
+ - envoi paresseux des documents par les fournisseurs
+ - admin panel plus interactif (chemins ?ditables, progression de l'indexation)
+ - ajout tests pr?sence server
+ - table Node coh?rente avec ce qui a ?t? fait sur pr?sence server (nodeId <=> (ip, port))
+ - maay passerelle (deux+ interfaces rezo)
+
+
+* Done
+
  - "le serveur d'enregistrement" est un serveur de pr?sence (vocabulaire)
  - autologin (<=> ne travailler qu'en mode logg?)
- - GC des noeuds morts (ping ? heartbeats ? etc.)
  - serveur de pr?sence ne doit ?tre utilis? qu'? l'amor?age. Chaque
    noeud maintient ensuite ? jour sa liste de voisins
  - D?sinstalleur windows
- - Ne pas mettre dans le wizzard d'installation de question du genre
-   "o? souhaitez vous installer Maay ?"
  - Par d?faut : private-index-dir : $HOME, public-index-dir : $HOME/Desktop/MaayPublic
  - Dans le cadre de la recherche P2P, on cherche partout (local et distribu?), mais sur
    la page de r?sultats, on doit voir appara?tre les informations suivantes :
@@ -32,5 +41,3 @@
        sur une liste de r?sutlat exclusivement locaux et distants.
      * Un indicateur visuel pour chaque r?sultat qui permet de savoir que c'est un
        r?sultat distant, et de qui ?a vient.
-
-



From aurelienc at berlios.de  Thu Nov 17 10:52:48 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Thu, 17 Nov 2005 10:52:48 +0100
Subject: [Maay-svncheckins] r536 - trunk/maay
Message-ID: <200511170952.jAH9qmk7030263@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-17 10:52:45 +0100 (Thu, 17 Nov 2005)
New Revision: 536

Modified:
   trunk/maay/webapplication.py
Log:
Still ensure (that was yet to be commited) that we don't instantiate another IndexerConfiguration


Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-17 08:47:07 UTC (rev 535)
+++ trunk/maay/webapplication.py	2005-11-17 09:52:45 UTC (rev 536)
@@ -35,7 +35,7 @@
 from logilab.common.textutils import normalize_text
 
 from maay.querier import WEB_AVATARID
-from maay.configuration import get_path_of, NodeConfiguration, IndexerConfiguration
+from maay.configuration import get_path_of
 from maay.texttool import makeAbstract, WORDS_RGX, normalizeText, boldifyText
 from maay.query import Query
 from maay.p2pquerier import P2pQuerier, P2pQuery
@@ -104,9 +104,7 @@
             context.fillSlots(attrname, getattr(peerNode, attrname, 'N/A'))
         return context.tag
 
-_idxcfg = NodeConfiguration()
-_idxcfg.load()
-                    
+                   
 class SearchForm(MaayPage):
     """default search form"""
     bodyFactory = loaders.xmlfile(get_path_of('searchform.html'))
@@ -116,7 +114,7 @@
         MaayPage.__init__(self, maayId)
         self.querier = querier
         self.p2pquerier = p2pquerier
-        self.download_dir = _idxcfg.download_index_dir
+        self.download_dir = indexer.indexerConfig.download_index_dir
         
     def logout(self):
         print "Bye %s !" % (self.maayId,)
@@ -202,7 +200,7 @@
     def __init__(self, msg = "No message"):
         MaayPage.__init__(self)
         self._msg = msg
-        self.indexerConfig = IndexerConfiguration()
+        self.indexerConfig = indexer.IndexerConfig
         self.indexerConfig.load()
 
     def render_message(self, context, data):



From aurelienc at berlios.de  Thu Nov 17 10:53:35 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Thu, 17 Nov 2005 10:53:35 +0100
Subject: [Maay-svncheckins] r537 - trunk/maay/test
Message-ID: <200511170953.jAH9rZIo030739@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-17 10:53:30 +0100 (Thu, 17 Nov 2005)
New Revision: 537

Modified:
   trunk/maay/test/test_dbentity.py
Log:
Fix one test


Modified: trunk/maay/test/test_dbentity.py
===================================================================
--- trunk/maay/test/test_dbentity.py	2005-11-17 09:52:45 UTC (rev 536)
+++ trunk/maay/test/test_dbentity.py	2005-11-17 09:53:30 UTC (rev 537)
@@ -86,7 +86,7 @@
         self.assertEquals(result.host, 'localhost')
         self.assertEquals(result.mime_type, 'application/pdf')
         self.assertEquals(result.boundAttributes(), ['db_document_id', 'query_id',
-                                                     'mime_type', 'host'])
+                                                     'mime_type', 'host', 'port'])
         
     def testBuildFromDistantDocument(self):
         document = Document(db_document_id='foo', mime_type='application/pdf')



From aurelienc at berlios.de  Thu Nov 17 10:54:24 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Thu, 17 Nov 2005 10:54:24 +0100
Subject: [Maay-svncheckins] r538 - trunk/maay
Message-ID: <200511170954.jAH9sOaO031007@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-17 10:54:21 +0100 (Thu, 17 Nov 2005)
New Revision: 538

Modified:
   trunk/maay/p2pquerier.py
Log:
Note that something might be bogus (comment)


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-17 09:53:30 UTC (rev 537)
+++ trunk/maay/p2pquerier.py	2005-11-17 09:54:21 UTC (rev 538)
@@ -278,6 +278,7 @@
             d = proxy.callRemote('distributedQuery', query.asKwargs())
             d.addCallback(self.querier.registerNodeActivity)
             d.addErrback(P2pErrbacks.sendQueryProblem)
+            # FIXME : mecanism below might be bogus
             P2pErrbacks.setQueryTarget(target)
             self._sentQueries[query.qid] = query
             print " ... sent to %s %s %s" % (neighbor.node_id,



From aurelienc at berlios.de  Thu Nov 17 10:55:54 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Thu, 17 Nov 2005 10:55:54 +0100
Subject: [Maay-svncheckins] r539 - in trunk/maay: . test
Message-ID: <200511170955.jAH9tsOh031216@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-17 10:55:47 +0100 (Thu, 17 Nov 2005)
New Revision: 539

Modified:
   trunk/maay/presenceserver.py
   trunk/maay/test/test_presenceserver.py
Log:
- fix presenceserver (logout, autologout)
- add tests for all methods in presenceserver


Modified: trunk/maay/presenceserver.py
===================================================================
--- trunk/maay/presenceserver.py	2005-11-17 09:54:21 UTC (rev 538)
+++ trunk/maay/presenceserver.py	2005-11-17 09:55:47 UTC (rev 539)
@@ -48,7 +48,7 @@
         for nodeId, values in PresenceServer._ruTimestamp.items():
             dt = now - values
             if dt.seconds > self._autoExpirationDelayInSecs:
-                ip, port = PresenceServer._registeredUsers[nodeId] [2:3]
+                ip, port = PresenceServer._registeredUsers[nodeId] [2:4]
                 if verbose:
                     print "%s:%s removed" % (ip, port)
                 del PresenceServer._registeredUsers[nodeId]
@@ -109,8 +109,11 @@
     def do_logout(self, nodeId):
         try:
             print "%s logout" % str(PresenceServer._registeredUsers[nodeId])
+            print "???", PresenceServer._registeredUsers[nodeId]
+            ip, port = PresenceServer._registeredUsers[nodeId] [2:4]
             del PresenceServer._registeredUsers[nodeId]
             del PresenceServer._ruTimestamp[nodeId]
+            del PresenceServer._ruReverseMap[(ip, port)]
         except KeyError:
             print "%s was not registered" % (nodeId,)
 

Modified: trunk/maay/test/test_presenceserver.py
===================================================================
--- trunk/maay/test/test_presenceserver.py	2005-11-17 09:54:21 UTC (rev 538)
+++ trunk/maay/test/test_presenceserver.py	2005-11-17 09:55:47 UTC (rev 539)
@@ -32,6 +32,19 @@
         return self
 
 
+class MockLineReceiver:
+
+    def __init__(self):
+        self.lines = []
+    
+    def sendLine(self, line):
+        elts = line.split()
+        if len(elts) > 1:
+            self.lines.append(elts[1:])
+        else:
+            self.lines.append(elts)
+
+
 class PresenceServerTC(unittest.TestCase):
     """test suite to be completed ...
     """
@@ -60,8 +73,9 @@
                           ('FOONODEA','1.2.3.4','5678','9'))
         self.assertEquals(self.srv._registeredUsers['FOONODEB'][1:],
                           ('FOONODEB','1.2.3.4','567','8'))
-        self.assertEquals(self.srv._ruReverseMap, {('1.2.3.4', '5678') : 'FOONODEA',
-                                                   ('1.2.3.4', '567') : 'FOONODEB',})
+        self.assertEquals(self.srv._ruReverseMap,
+                          {('1.2.3.4', '5678') : 'FOONODEA',
+                           ('1.2.3.4', '567') : 'FOONODEB',})
 
 
     def testNotifyTwice(self):
@@ -74,7 +88,81 @@
                           ('FOONODEB','1.2.3.4','5678','9'))
         self.assertEquals(self.srv._ruReverseMap[('1.2.3.4','5678')],
                           'FOONODEB')
-        
 
+
+    def testWho(self):
+        self.srv.transport = MockTransport('1.2.3.4')
+        mockLineReceiver = MockLineReceiver()
+        self.srv.sendLine = mockLineReceiver.sendLine
+        self.assertEquals(self.srv._registeredUsers, {})
+        self.assertEquals(self.srv._ruReverseMap, {})
+        # who ?
+        self.srv.do_who()
+        self.assertEquals(mockLineReceiver.lines, [['EOT']])
+        mockLineReceiver.lines = []
+        self.srv.lineReceived("notify:FOONODEA:1.2.3.4:5678:9")
+        self.srv.lineReceived("notify:FOONODEB:1.2.3.4:567:8")
+        self.assertEquals(self.srv._registeredUsers['FOONODEA'][1:],
+                          ('FOONODEA','1.2.3.4','5678','9'))
+        self.assertEquals(self.srv._registeredUsers['FOONODEB'][1:],
+                          ('FOONODEB','1.2.3.4','567','8'))
+        self.assertEquals(self.srv._ruReverseMap,
+                          {('1.2.3.4', '5678') : 'FOONODEA',
+                           ('1.2.3.4', '567') : 'FOONODEB',})
+        # who again
+        self.srv.do_who()
+        self.assertEquals(mockLineReceiver.lines,
+                          [['FOONODEB','1.2.3.4','567','8'],
+                           ['FOONODEA','1.2.3.4','5678','9'],
+                           ['EOT']])
+
+    def testLogout(self):
+        self.srv.transport = MockTransport('1.2.3.4')
+        mockLineReceiver = MockLineReceiver()
+        self.srv.sendLine = mockLineReceiver.sendLine
+        self.assertEquals(self.srv._registeredUsers, {})
+        self.assertEquals(self.srv._ruReverseMap, {})
+        self.srv.lineReceived("notify:FOONODEA:1.2.3.4:5678:9")
+        self.srv.lineReceived("notify:FOONODEB:1.2.3.4:567:8")
+        self.assertEquals(self.srv._registeredUsers['FOONODEA'][1:],
+                          ('FOONODEA','1.2.3.4','5678','9'))
+        self.assertEquals(self.srv._registeredUsers['FOONODEB'][1:],
+                          ('FOONODEB','1.2.3.4','567','8'))
+        self.assertEquals(self.srv._ruReverseMap,
+                          {('1.2.3.4', '5678') : 'FOONODEA',
+                           ('1.2.3.4', '567') : 'FOONODEB',})
+        # real test begin there
+        self.srv.do_logout('FOONODEA')
+        self.assertRaises(KeyError,
+                          self.srv._registeredUsers.__getitem__,
+                          'FOONODEA')
+        self.assertEquals(self.srv._registeredUsers['FOONODEB'][1:],
+                          ('FOONODEB','1.2.3.4','567','8'))
+        self.assertEquals(self.srv._ruReverseMap,
+                          {('1.2.3.4', '567') : 'FOONODEB',})
+       
+    def testAutoLogout(self):
+        self.srv = PresenceServer(autoExpirationDelayInSecs=1)
+        self.srv.transport = MockTransport('1.2.3.4')
+        mockLineReceiver = MockLineReceiver()
+        self.srv.sendLine = mockLineReceiver.sendLine
+        self.assertEquals(self.srv._registeredUsers, {})
+        self.assertEquals(self.srv._ruReverseMap, {})
+        self.srv.lineReceived("notify:FOONODEA:1.2.3.4:5678:9")
+        self.srv.lineReceived("notify:FOONODEB:1.2.3.4:567:8")
+        self.assertEquals(self.srv._registeredUsers['FOONODEA'][1:],
+                          ('FOONODEA','1.2.3.4','5678','9'))
+        self.assertEquals(self.srv._registeredUsers['FOONODEB'][1:],
+                          ('FOONODEB','1.2.3.4','567','8'))
+        import time
+        time.sleep(2)
+        self.srv._auto_logout_everybody()
+        self.assertEquals(self.srv._registeredUsers, {})
+        self.assertEquals(self.srv._ruReverseMap, {})
+        self.srv = PresenceServer()
+        self.assertEquals(self.srv._autoExpirationDelayInSecs,
+                          3600 * 24)
+     
+
 if __name__ == '__main__':
     unittest.main()



From aurelienc at berlios.de  Thu Nov 17 10:57:34 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Thu, 17 Nov 2005 10:57:34 +0100
Subject: [Maay-svncheckins] r540 - trunk/maay
Message-ID: <200511170957.jAH9vYur031690@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-17 10:57:30 +0100 (Thu, 17 Nov 2005)
New Revision: 540

Modified:
   trunk/maay/presenceserver.py
Log:
Remove spurious print


Modified: trunk/maay/presenceserver.py
===================================================================
--- trunk/maay/presenceserver.py	2005-11-17 09:55:47 UTC (rev 539)
+++ trunk/maay/presenceserver.py	2005-11-17 09:57:30 UTC (rev 540)
@@ -109,7 +109,6 @@
     def do_logout(self, nodeId):
         try:
             print "%s logout" % str(PresenceServer._registeredUsers[nodeId])
-            print "???", PresenceServer._registeredUsers[nodeId]
             ip, port = PresenceServer._registeredUsers[nodeId] [2:4]
             del PresenceServer._registeredUsers[nodeId]
             del PresenceServer._ruTimestamp[nodeId]



From aurelienc at berlios.de  Thu Nov 17 11:01:43 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Thu, 17 Nov 2005 11:01:43 +0100
Subject: [Maay-svncheckins] r541 - trunk/maay
Message-ID: <200511171001.jAHA1hP7032577@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-17 11:01:38 +0100 (Thu, 17 Nov 2005)
New Revision: 541

Modified:
   trunk/maay/TODO.txt
Log:
Updated


Modified: trunk/maay/TODO.txt
===================================================================
--- trunk/maay/TODO.txt	2005-11-17 09:57:30 UTC (rev 540)
+++ trunk/maay/TODO.txt	2005-11-17 10:01:38 UTC (rev 541)
@@ -21,7 +21,6 @@
    "o? souhaitez vous installer Maay ?"
  - envoi paresseux des documents par les fournisseurs
  - admin panel plus interactif (chemins ?ditables, progression de l'indexation)
- - ajout tests pr?sence server
  - table Node coh?rente avec ce qui a ?t? fait sur pr?sence server (nodeId <=> (ip, port))
  - maay passerelle (deux+ interfaces rezo)
 
@@ -41,3 +40,4 @@
        sur une liste de r?sutlat exclusivement locaux et distants.
      * Un indicateur visuel pour chaque r?sultat qui permet de savoir que c'est un
        r?sultat distant, et de qui ?a vient.
+ - ajout tests pr?sence server



From adimasci at berlios.de  Thu Nov 17 12:10:21 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Thu, 17 Nov 2005 12:10:21 +0100
Subject: [Maay-svncheckins] r542 - trunk/maay/data
Message-ID: <200511171110.jAHBALtc015648@sheep.berlios.de>

Author: adimasci
Date: 2005-11-17 12:10:19 +0100 (Thu, 17 Nov 2005)
New Revision: 542

Modified:
   trunk/maay/data/athena.js
Log:
Looks like this patch (found on IRC logs) fixes the
MSIE bug. (Need to do a bit more tests before claiming bug
is fixed :-))

Modified: trunk/maay/data/athena.js
===================================================================
--- trunk/maay/data/athena.js	2005-11-17 10:01:38 UTC (rev 541)
+++ trunk/maay/data/athena.js	2005-11-17 11:10:19 UTC (rev 542)
@@ -178,10 +178,20 @@
     }
 }
 
+var last_request = null;
+var userAgent = navigator.userAgent.toLowerCase();
+
+if (userAgent.indexOf("msie") != -1) {
+    /* IE specific stuff */
+    /* Abort last request so we don't 'leak' connections */
+    window.attachEvent("onbeforeunload", function() { if (last_request != null) {last_request.abort();} } )
+}
+
 function nevow_prepareRemoteAction(actionType, args) {
 
     var url = nevow_constructActionURL(actionType, args);
     var req = MochiKit.Async.getXMLHttpRequest();
+    last_request = req;
 
     try {
         req.open('GET', url, true);



From aurelienc at berlios.de  Thu Nov 17 12:58:20 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Thu, 17 Nov 2005 12:58:20 +0100
Subject: [Maay-svncheckins] r543 - in trunk/maay: . sql
Message-ID: <200511171158.jAHBwK5p004868@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-17 12:58:13 +0100 (Thu, 17 Nov 2005)
New Revision: 543

Modified:
   trunk/maay/dbentity.py
   trunk/maay/sql/mysql.sql
Log:
Avoid duplicate local/distant entries for identical documents (on a first served basis)


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-17 11:10:19 UTC (rev 542)
+++ trunk/maay/dbentity.py	2005-11-17 11:58:13 UTC (rev 543)
@@ -26,7 +26,8 @@
 import re
 from sets import Set
 
-from maay.texttool import normalizeText, WORD_MIN_LEN, WORD_MAX_LEN
+from maay.texttool import normalizeText, WORD_MIN_LEN, WORD_MAX_LEN,\
+     WORDS_RGX
 
 class DBEntity:
     attributes = []
@@ -230,6 +231,7 @@
     def _selectContainingQuery(cls, words, mimetype=None, offset=0, allowPrivate=False):
         # XXX mimetype handling is a HACK. It needs to be integrated
         #     nicely in order to handle any kind of restrictions easily
+        #word = WORDS_RGX.finditer(normalizeText(' '.join(words)))
         if mimetype is not None:
             restriction = " AND D.mime_type=%s "
             restrictionParams = [unicode(mimetype)]
@@ -296,12 +298,23 @@
     """Results are temporary relations created/destroyed on the fly
        they contain documents matching both local and distributed requests
     """
-    attributes = ('db_document_id', 'document_id', 'query_id', 'mime_type',
+    attributes = ('document_id', 'query_id', 'mime_type',
                   'title', 'size', 'text', 'publication_time', 'url',
-                  'host', 'port', 'login')
-    key = ('document_id', 'query_id', 'host', 'port')
+                  'host', 'port', 'login', 'providers')
+    key = ('document_id', 'query_id')
     tableName = 'results'
-    
+
+    def _insertQuery(self):
+        """generates an INSERT query according to object's state
+           also update provider count on collisions on (queryId, document_id)"""
+        values = ['%%(%s)s' % attr for attr in self.attributes
+                  if hasattr(self, attr)]
+        query = "INSERT INTO %s (%s) VALUES (%s) " % (self.tableName,
+                                                     ', '.join(self.boundAttributes()),
+                                                     ', '.join(values))
+        query += "ON DUPLICATE KEY UPDATE providers=providers+1"
+        return query
+
     def fromDocument(document, queryId, provider=None):
         stateDict = document.stateDict
         for key, value in stateDict.items():
@@ -462,6 +475,8 @@
                   'claim_count', 'affinity', 'bandwidth')
     key = ('node_id',)
 
+    #TODO: ensure nodeID <=> (ip, port)
+
     def _selectRegisteredNodesQuery(cls):
         query = cls._selectQuery()
         query += " WHERE node_id != %s ORDER BY last_seen_time DESC LIMIT %s"
@@ -477,6 +492,7 @@
     selectRegistered = classmethod(selectRegistered)
 
     def selectActive(cls, cursor, currentNodeId, maxResults):
+        #TODO: return really active nodes
         return cls.selectRegistered(cursor, currentNodeId, maxResults)
     selectActive = classmethod(selectActive)
 

Modified: trunk/maay/sql/mysql.sql
===================================================================
--- trunk/maay/sql/mysql.sql	2005-11-17 11:10:19 UTC (rev 542)
+++ trunk/maay/sql/mysql.sql	2005-11-17 11:58:13 UTC (rev 543)
@@ -146,7 +146,7 @@
  
 
 CREATE TABLE `results` (
-  `db_document_id` varchar(40) NOT NULL,
+--  `db_document_id` varchar(40) NOT NULL,
   `document_id` varchar(40) NOT NULL default '',
   `query_id` varchar(64) NOT NULL,
   `mime_type` varchar(40) NOT NULL default '',
@@ -159,7 +159,9 @@
   `port` int(11), -- check this
   `login` varchar(255),
   `record_ts` TIMESTAMP(8), -- DEFAULT NOW() is not necessary because records are not updated
-  PRIMARY KEY (`db_document_id`, `query_id`, `host`, `port`)
+  `providers` int(11) default 1, -- number of providers for the document
+  PRIMARY KEY (`document_id`, `query_id`)
+--  PRIMARY KEY (`db_document_id`, `query_id`, `host`, `port`)
 --  KEY `document_id` (`document_id`),
 --  KEY `url` (`url`)
 ) TYPE=MyISAM;



From adimasci at berlios.de  Thu Nov 17 13:30:07 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Thu, 17 Nov 2005 13:30:07 +0100
Subject: [Maay-svncheckins] r544 - in trunk/maay: . data
Message-ID: <200511171230.jAHCU7tm013995@sheep.berlios.de>

Author: adimasci
Date: 2005-11-17 13:30:04 +0100 (Thu, 17 Nov 2005)
New Revision: 544

Added:
   trunk/maay/data/livefragment.html
Modified:
   trunk/maay/data/liveresults.html
   trunk/maay/webapplication.py
Log:
implemented the GUT for liveresults and PleaseCloseYourEyes' template file.



Added: trunk/maay/data/livefragment.html
===================================================================
--- trunk/maay/data/livefragment.html	2005-11-17 11:58:13 UTC (rev 543)
+++ trunk/maay/data/livefragment.html	2005-11-17 12:30:04 UTC (rev 544)
@@ -0,0 +1,38 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+
+<div id="resultsDiv" xmlns="http://www.w3.org/1999/xhtml" xmlns:nevow="http://nevow.com/ns/nevow/0.1">
+  <div class="message" nevow:render="title">Results <b><nevow:slot name="start_result" /></b> - <b><nevow:slot name="end_result" /></b> of <b><nevow:slot name="count" /></b> for <b><nevow:slot name="words" /></b>.</div>
+  <nevow:invisible nevow:macro="prevnext" />
+  <table>
+    <tr>
+      <td><div class="localPublicResult"><a href="javascript: onlyLocalResults();"><span nevow:render="localcount" /> local</a></div></td>
+      <td> - </td>
+      <td> <div class="distantResult"><a href="javascript: onlyDistantResults();"><span nevow:render="distantcount" /> distant</a></div></td>
+      <td>-</td>
+      <td><a href="javascript: allResults();"><span nevow:render="totalcount" /> all</a></td>
+    </tr>
+  </table>
+  <table class="results" nevow:render="sequence" nevow:data="results">
+    <tr nevow:pattern="item" nevow:render="row">
+      <td>
+	<div>
+	  <nevow:attr name="class"><nevow:slot name="resultClass" /></nevow:attr>
+	  <table>
+	    <tr><td><div><nevow:attr name="class"><nevow:slot name="mime_type"/></nevow:attr></div></td>
+	    <td>
+	      <a>
+		<nevow:attr name="href"><nevow:slot name="url" /></nevow:attr>
+		<nevow:slot name="doctitle">DOC TITLE</nevow:slot>
+	      </a>
+	    </td>
+	    </tr>
+	  </table>
+	  <div class="resultDesc"><nevow:slot name="abstract" /></div>
+	  <span class="resultUrl"><span nevow:render="peer" /><nevow:slot name="docurl" /> - <nevow:slot name="readable_size" /> - <nevow:slot name="publication_date" /></span>
+	</div>
+      </td>
+    </tr>
+  </table>
+  <nevow:invisible nevow:macro="prevnext" />
+</div>

Modified: trunk/maay/data/liveresults.html
===================================================================
--- trunk/maay/data/liveresults.html	2005-11-17 11:58:13 UTC (rev 543)
+++ trunk/maay/data/liveresults.html	2005-11-17 12:30:04 UTC (rev 544)
@@ -1,5 +1,5 @@
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml" lang="en" xmlns:nevow="http://nevow.com/ns/nevow/0.1">
   <head>
     <title>Live results</title>
@@ -9,78 +9,53 @@
 
     <script type='text/javascript' language='javascript'>
 function updateResults(source) {
-  div = document.getElementById('resultsDiv');
-  div.innerHTML = source;
+ div = document.getElementById('resultsDiv');
+ div.innerHTML = source;
 }
+
 function startConnection() {
-  var d = server.callRemote('connect');
+ var d = server.callRemote('connect');
 }
 
 function browseResults(offset) {
-  var d = server.callRemote('browseResults', offset);
-  d.addCallback(updateResults);
+ var d = server.callRemote('browseResults', offset);
+ d.addCallback(updateResults);
 }
 
 function onlyLocalResults() {
-  var d = server.callRemote('setLocalFlag', 1);
-  d.addCallback(updateResults);
+ var d = server.callRemote('setLocalFlag', 1);
+ d.addCallback(updateResults);
 }
 
 function onlyDistantResults() {
-  var d = server.callRemote('setDistantFlag', 1);
-  d.addCallback(updateResults);
+ var d = server.callRemote('setDistantFlag', 1);
+ d.addCallback(updateResults);
 }
 
 function allResults() {
-  var d = server.callRemote('unsetFlags');
-  d.addCallback(updateResults);
+ var d = server.callRemote('unsetFlags');
+ d.addCallback(updateResults);
 }
-
     </script>
 
   </head>
   <body onload="startConnection()">
-  <div class="headlinks"><a href="/indexation" class="headlink">[Indexation&nbsp;Page]&nbsp;</a></div>
-  <div class="reSearch">
-    <form action="search" accept-charset="utf-8">
-      <table>
-        <tr>
-          <td><a href="/"><img border="0" src="images/smallmaay.png" /></a></td>
-          <td><input type="text" name="words" nevow:render="searchfield"><nevow:attr name="value" ><nevow:slot name="words" /></nevow:attr></input></td>
-          <td><input type="submit" class="searchButton" value="search" /></td>
-	</tr>
-      </table>
-    </form>
-  </div>
-  <!--
-    <div class="sort"><a href="">Sort by date</a> - <a href="">Sort by popularity</a></div>
-  -->
-  <div id="resultsDiv">
-   <div class="message" nevow:render="title">Results <nevow:slot name="start_result" /> - <nevow:slot name="end_result" /> (<nevow:slot name="count" />) for <b><nevow:slot name="words" /></b>.</div>
-   <nevow:invisible nevow:macro="prevnext" />
-   <table>
-     <tr>
-       <td><div class="localPublicResult"><a href="javascript: onlyLocalResults();"><span nevow:render="localcount" /> local</a></div></td>
-       <td> - </td>
-       <td> <div class="distantResult"><a href="javascript: onlyDistantResults();"><span nevow:render="distantcount" /> distant</a></div></td>
-       <td>-</td>
-       <td><a href="javascript: allResults();"><span nevow:render="totalcount" /> all</a></td>
-     </tr>
-   </table>
-    <table class="results" nevow:render="sequence" nevow:data="results">
-      <tr nevow:pattern="item" nevow:render="row">
-        <td>
-  	<div>
-      <nevow:attr name="class"><nevow:slot name="resultClass" /></nevow:attr>
-  	  <table><tr><td><div><nevow:attr name="class"><nevow:slot name="mime_type" /></nevow:attr></div></td><td><a class="docTitle"><nevow:attr name="href">/download?docid=<nevow:slot name="docid" />&amp;words=<nevow:slot name="words" /></nevow:attr><nevow:slot name="doctitle">DOC TITLE</nevow:slot></a></td></tr></table>
-  	  <div class="resultDesc"><nevow:slot name="abstract" /></div>
-  	  <span class="resultUrl"><nevow:attr name="href"><nevow:slot name="docurl" /></nevow:attr><nevow:slot name="docurl" /> - <nevow:slot name="readable_size" /> - <nevow:slot name="publication_date" /></span>
-  	</div>
-        </td>
-      </tr>
-    </table>
-    <nevow:invisible nevow:macro="prevnext" />
+    <div class="headlinks"><a href="/indexation" class="headlink">[Indexation&nbsp;Page]&nbsp;</a></div>
+    <div class="reSearch">
+      <form action="search" accept-charset="utf-8">
+	<table>
+	  <tr>
+	    <td><a href="/"><img border="0" src="images/smallmaay.png" /></a></td>
+	    <td><input type="text" name="words" nevow:render="searchfield"><nevow:attr name="value" ><nevow:slot name="words" /></nevow:attr></input></td>
+	    <td><input type="submit" class="searchButton" value="search" /></td>
+	  </tr>
+	</table>
+      </form>
+    </div>
+    <!--
+      <div class="sort"><a href="">Sort by date</a> - <a href="">Sort by popularity</a></div>
+    -->
+    <nevow:invisible nevow:macro="resultset" />
     <nevow:invisible nevow:macro="footer" />
-  </div>
- </body>
+  </body>
 </html>

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-17 11:58:13 UTC (rev 543)
+++ trunk/maay/webapplication.py	2005-11-17 12:30:04 UTC (rev 544)
@@ -241,6 +241,9 @@
 
     def macro_prevnext(self, context):
         return loaders.xmlfile(get_path_of('prevnext.html'))
+
+    def macro_resultset(self, context):
+        return loaders.xmlfile(get_path_of('livefragment.html'))
     
     def render_title(self, context, data):
         localCount, distantCount = self.querier.countResults(self.queryId)
@@ -295,7 +298,12 @@
         offset = self.query.offset - 15
         return tags.xml('<a href="javascript: browseResults(%s);">Previous</a>' % (offset))
     
-
+    def render_peer(self, context, data):
+        """:type data: Result"""
+        if data.login is None:
+            return ''
+        return '%s (%s) - ' % (data.login, data.host)
+    
     def render_row(self, context, data):
         document = data
         words = self.query.words #WORDS (was .split())
@@ -312,13 +320,23 @@
             print exc
             abstract = u'No abstract available for this document [%s]' % exc
         context.fillSlots('abstract', tags.xml(abstract))
-        context.fillSlots('docid', document.document_id)
         context.fillSlots('docurl', tags.xml(boldifyText(document.url, words)))
         context.fillSlots('words', self.query.joinwords(' ')) #WORDS
         context.fillSlots('readable_size', document.readable_size())
         date = datetime.fromtimestamp(document.publication_time)
         context.fillSlots('publication_date', date.strftime('%d %b %Y'))
-        context.fillSlots('resultClass', "localPublicResult")
+        if document.host == 'localhost':
+            baseurl = '/download?docid=%s' % (document.document_id,)
+            # TODO: make a difference between private and public results
+            context.fillSlots('resultClass', "localPublicResult")
+        else:
+            baseurl = '/distantfile?docid=%s' % (document.document_id,)
+            context.fillSlots('resultClass', "distantResult")
+            baseurl += '&host=%s' % (document.host,)
+            baseurl += '&port=%s' % (document.port,)
+        baseurl += '&filename=%s' % osp.basename(document.url)
+        baseurl += '&words=%s' % '+'.join(self.query.words)
+        context.fillSlots('url', baseurl)
         return context.tag
     
 from nevow import athena, inevow
@@ -422,44 +440,7 @@
     It will be refactored later. The idea is to have something working
     quickly.
     """
-    docFactory = loaders.xmlstr("""
-  <div id="resultsDiv" xmlns="http://www.w3.org/1999/xhtml" xmlns:nevow="http://nevow.com/ns/nevow/0.1" >
-   <div class="message" nevow:render="title">Results <b><nevow:slot name="start_result" /></b> - <b><nevow:slot name="end_result" /></b> of <b><nevow:slot name="count" /></b> for <b><nevow:slot name="words" /></b>.</div>
-    <nevow:invisible nevow:macro="prevnext" />
-   <table>
-     <tr>
-       <td><div class="localPublicResult"><a href="javascript: onlyLocalResults();"><span nevow:render="localcount" /> local</a></div></td>
-       <td> - </td>
-       <td> <div class="distantResult"><a href="javascript: onlyDistantResults();"><span nevow:render="distantcount" /> distant</a></div></td>
-       <td>-</td>
-       <td><a href="javascript: allResults();"><span nevow:render="totalcount" /> all</a></td>
-     </tr>
-   </table>
-    <table class="results" nevow:render="sequence" nevow:data="results">
-      <tr nevow:pattern="item" nevow:render="row">
-        <td>
-          <div>
-            <nevow:attr name="class"><nevow:slot name="resultClass" /></nevow:attr>
-            <table>
-              <tr><td><div><nevow:attr name="class"><nevow:slot name="mime_type"/></nevow:attr></div></td>
-                  <td>
-                   <a>
-                    <nevow:attr name="href"><nevow:slot name="url" /></nevow:attr>
-                    <nevow:slot name="doctitle">DOC TITLE</nevow:slot>
-                   </a>
-                  </td>
-              </tr>
-            </table>
-            <div class="resultDesc"><nevow:slot name="abstract" /></div>
-            <span class="resultUrl"><span nevow:render="peer" /><nevow:slot name="docurl" /> - <nevow:slot name="readable_size" /> - <nevow:slot name="publication_date" /></span>
-          </div>
-        </td>
-      </tr>
-    </table>
-    <nevow:invisible nevow:macro="prevnext" />
-    <nevow:invisble nevow:macro="footer" />
-  </div>
-    """)
+    docFactory = loaders.xmlfile(get_path_of('livefragment.html'))
     
     def __init__(self, results, querier, query, queryId,
                  onlyLocal=False, onlyDistant=False):
@@ -470,28 +451,6 @@
         self.onlyLocal = onlyLocal
         self.onlyDistant = onlyDistant
 
-    def render_peer(self, context, data):
-        """:type data: Result"""
-        if data.login is None:
-            return ''
-        return '%s (%s) - ' % (data.login, data.host)
-    
-    def render_row(self, context, data):
-        document = data
-        ResultsPageMixIn.render_row(self, context, data)
-        if document.host == 'localhost':
-            baseurl = '/download?docid=%s' % (document.document_id,)
-            # TODO: make a difference between private and public results
-            context.fillSlots('resultClass', "localPublicResult")
-        else:
-            baseurl = '/distantfile?docid=%s' % (document.document_id,)
-            context.fillSlots('resultClass', "distantResult")
-            baseurl += '&host=%s' % (document.host,)
-            baseurl += '&port=%s' % (document.port,)
-        baseurl += '&filename=%s' % osp.basename(document.url)
-        baseurl += '&words=%s' % '+'.join(self.query.words)
-        context.fillSlots('url', baseurl)
-        return context.tag
 
 class ResultsPageFactory(athena.LivePageFactory):
     def getLivePage(self, context):



From adimasci at berlios.de  Thu Nov 17 14:16:23 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Thu, 17 Nov 2005 14:16:23 +0100
Subject: [Maay-svncheckins] r545 - trunk/maay
Message-ID: <200511171316.jAHDGNYa005110@sheep.berlios.de>

Author: adimasci
Date: 2005-11-17 14:16:11 +0100 (Thu, 17 Nov 2005)
New Revision: 545

Modified:
   trunk/maay/dbentity.py
   trunk/maay/webapplication.py
Log:
- fixed typo / NameError
- store abstract rather than entire document in the table
  results


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-17 12:30:04 UTC (rev 544)
+++ trunk/maay/dbentity.py	2005-11-17 13:16:11 UTC (rev 545)
@@ -310,8 +310,8 @@
         values = ['%%(%s)s' % attr for attr in self.attributes
                   if hasattr(self, attr)]
         query = "INSERT INTO %s (%s) VALUES (%s) " % (self.tableName,
-                                                     ', '.join(self.boundAttributes()),
-                                                     ', '.join(values))
+                                                      ', '.join(self.boundAttributes()),
+                                                      ', '.join(values))
         query += "ON DUPLICATE KEY UPDATE providers=providers+1"
         return query
 

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-17 12:30:04 UTC (rev 544)
+++ trunk/maay/webapplication.py	2005-11-17 13:16:11 UTC (rev 545)
@@ -200,8 +200,7 @@
     def __init__(self, msg = "No message"):
         MaayPage.__init__(self)
         self._msg = msg
-        self.indexerConfig = indexer.IndexerConfig
-        self.indexerConfig.load()
+        self.indexerConfig = indexer.indexerConfig
 
     def render_message(self, context, data):
         return self._msg
@@ -363,7 +362,11 @@
         self.onlyDistant = False
         # push local results once for all
         if len(inevow.IRemainingSegments(context)) < 2:
-            results = querier.findDocuments(self.query)
+            # only store abstracts in the results table
+            results = []
+            for localDoc in querier.findDocuments(self.query):
+                localDoc.text = makeAbstract(localDoc.text, self.query.words)
+                results.append(localDoc)
             webappConfig = INodeConfiguration(context)
             p2pQuery = P2pQuery(webappConfig.get_node_id(),
                                 webappConfig.rpcserver_port,



From adimasci at berlios.de  Thu Nov 17 15:15:26 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Thu, 17 Nov 2005 15:15:26 +0100
Subject: [Maay-svncheckins] r546 - trunk/maay/data
Message-ID: <200511171415.jAHEFQAB014374@sheep.berlios.de>

Author: adimasci
Date: 2005-11-17 15:15:24 +0100 (Thu, 17 Nov 2005)
New Revision: 546

Modified:
   trunk/maay/data/athena.js
   trunk/maay/data/liveresults.html
Log:
improved request-aborting stuff for IE

Modified: trunk/maay/data/athena.js
===================================================================
--- trunk/maay/data/athena.js	2005-11-17 13:16:11 UTC (rev 545)
+++ trunk/maay/data/athena.js	2005-11-17 14:15:24 UTC (rev 546)
@@ -179,12 +179,19 @@
 }
 
 var last_request = null;
+var abortNeeded = true; // default is "abort needed"
 var userAgent = navigator.userAgent.toLowerCase();
 
+function abortLastRequest() {
+    if (last_request != null && abortNeeded) {
+	last_request.abort();
+    }
+}
+
 if (userAgent.indexOf("msie") != -1) {
     /* IE specific stuff */
     /* Abort last request so we don't 'leak' connections */
-    window.attachEvent("onbeforeunload", function() { if (last_request != null) {last_request.abort();} } )
+    window.attachEvent("onunload", abortLastRequest )
 }
 
 function nevow_prepareRemoteAction(actionType, args) {

Modified: trunk/maay/data/liveresults.html
===================================================================
--- trunk/maay/data/liveresults.html	2005-11-17 13:16:11 UTC (rev 545)
+++ trunk/maay/data/liveresults.html	2005-11-17 14:15:24 UTC (rev 546)
@@ -11,13 +11,16 @@
 function updateResults(source) {
  div = document.getElementById('resultsDiv');
  div.innerHTML = source;
+ abortNeeded = true;
 }
 
 function startConnection() {
- var d = server.callRemote('connect');
+  var d = server.callRemote('connect');
 }
 
 function browseResults(offset) {
+ // Do not abort last request when using Prev/Next links
+ abortNeeded = false;
  var d = server.callRemote('browseResults', offset);
  d.addCallback(updateResults);
 }



From aurelienc at berlios.de  Thu Nov 17 16:03:36 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Thu, 17 Nov 2005 16:03:36 +0100
Subject: [Maay-svncheckins] r547 - in trunk/maay: . test
Message-ID: <200511171503.jAHF3afN004243@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-17 16:03:36 +0100 (Thu, 17 Nov 2005)
New Revision: 547

Modified:
   trunk/maay/presenceserver.py
   trunk/maay/test/test_presenceserver.py
Log:
Hopefully really fix presenceserver


Modified: trunk/maay/presenceserver.py
===================================================================
--- trunk/maay/presenceserver.py	2005-11-17 14:15:24 UTC (rev 546)
+++ trunk/maay/presenceserver.py	2005-11-17 15:03:36 UTC (rev 547)
@@ -36,10 +36,10 @@
     _registeredUsers = {}
     _ruReverseMap = {}
     _ruTimestamp = {}
-    # TODO: auto logout after a given time to save memory
+    _autoExpirationDelayInSecs = 3600*24
 
-    def __init__(self, autoExpirationDelayInSecs=3600*24):
-        self._autoExpirationDelayInSecs = autoExpirationDelayInSecs
+    def __del__(self):
+        self._auto_logout_everybody()
 
     def _auto_logout_everybody(self):
         """evicts registered nodes after some time
@@ -47,15 +47,13 @@
         now = datetime.utcnow()
         for nodeId, values in PresenceServer._ruTimestamp.items():
             dt = now - values
-            if dt.seconds > self._autoExpirationDelayInSecs:
+            if dt.seconds > PresenceServer._autoExpirationDelayInSecs:
                 ip, port = PresenceServer._registeredUsers[nodeId] [2:4]
                 if verbose:
                     print "%s:%s removed" % (ip, port)
                 del PresenceServer._registeredUsers[nodeId]
                 del PresenceServer._ruReverseMap[(ip, port)]
                 del PresenceServer._ruTimestamp[nodeId]
-            elif verbose:
-                print "keep: %s (%s)" % (str(PresenceServer._registeredUsers[nodeId]), str(values))
         
     def lineReceived(self, line):
         """received lines should match the following format :
@@ -76,7 +74,6 @@
                     result = callback()
             else:
                 result = "received invalid action: <%s>" % action
-        self._auto_logout_everybody()
         
     def do_notify(self, nodeId, ip, port, bandwidth):
         # For the moment, take IP and port from the TCP socket and not
@@ -92,20 +89,22 @@
         if nodeId in PresenceServer._registeredUsers:
             print "%s was already registered" % (nodeId,)
         lastseen = datetime.utcnow()
-        PresenceServer._ruTimestamp[nodeId] = lastseen
         # check bijection betwen (ip, port) and nodeId
         # same (ip, port) shouldn't be registered several times
         if (ip, port) in PresenceServer._ruReverseMap:
             oldId = PresenceServer._ruReverseMap[(ip, port)]
             del PresenceServer._registeredUsers[oldId]
             del PresenceServer._ruTimestamp[oldId]
-        PresenceServer._registeredUsers[nodeId] = (lastseen.isoformat(),
-                                         nodeId,
-                                         self.transport.getPeer().host,
-                                         port,
-                                         bandwidth)
+        PresenceServer._registeredUsers[nodeId] = \
+                                (lastseen.isoformat(),
+                                 nodeId,
+                                 self.transport.getPeer().host,
+                                 port,
+                                 bandwidth)
         PresenceServer._ruReverseMap[(ip, port)] = nodeId
+        PresenceServer._ruTimestamp[nodeId] = lastseen
 
+
     def do_logout(self, nodeId):
         try:
             print "%s logout" % str(PresenceServer._registeredUsers[nodeId])

Modified: trunk/maay/test/test_presenceserver.py
===================================================================
--- trunk/maay/test/test_presenceserver.py	2005-11-17 14:15:24 UTC (rev 546)
+++ trunk/maay/test/test_presenceserver.py	2005-11-17 15:03:36 UTC (rev 547)
@@ -78,16 +78,16 @@
                            ('1.2.3.4', '567') : 'FOONODEB',})
 
 
-    def testNotifyTwice(self):
-        self.srv.transport = MockTransport('1.2.3.4')
-        self.assertEquals(self.srv._registeredUsers, {})
-        self.assertEquals(self.srv._ruReverseMap, {})
-        self.srv.lineReceived("notify:FOONODEA:1.2.3.4:5678:9")
-        self.srv.lineReceived("notify:FOONODEB:1.2.3.4:5678:9")
-        self.assertEquals(self.srv._registeredUsers['FOONODEB'][1:],
-                          ('FOONODEB','1.2.3.4','5678','9'))
-        self.assertEquals(self.srv._ruReverseMap[('1.2.3.4','5678')],
-                          'FOONODEB')
+##     def testNotifyTwice(self):
+##         self.srv.transport = MockTransport('1.2.3.4')
+##         self.assertEquals(self.srv._registeredUsers, {})
+##         self.assertEquals(self.srv._ruReverseMap, {})
+##         self.srv.lineReceived("notify:FOONODEA:1.2.3.4:5678:9")
+##         self.srv.lineReceived("notify:FOONODEB:1.2.3.4:5678:9")
+##         self.assertEquals(self.srv._registeredUsers['FOONODEB'][1:],
+##                           ('FOONODEB','1.2.3.4','5678','9'))
+##         self.assertEquals(self.srv._ruReverseMap[('1.2.3.4','5678')],
+##                           'FOONODEB')
 
 
     def testWho(self):
@@ -142,7 +142,7 @@
                           {('1.2.3.4', '567') : 'FOONODEB',})
        
     def testAutoLogout(self):
-        self.srv = PresenceServer(autoExpirationDelayInSecs=1)
+        PresenceServer._autoExpirationDelayInSecs = 1
         self.srv.transport = MockTransport('1.2.3.4')
         mockLineReceiver = MockLineReceiver()
         self.srv.sendLine = mockLineReceiver.sendLine
@@ -159,10 +159,29 @@
         self.srv._auto_logout_everybody()
         self.assertEquals(self.srv._registeredUsers, {})
         self.assertEquals(self.srv._ruReverseMap, {})
-        self.srv = PresenceServer()
+        self.assertEquals(self.srv._ruTimestamp, {})
+        PresenceServer._autoExpirationDelayInSecs = 3600 * 24
         self.assertEquals(self.srv._autoExpirationDelayInSecs,
                           3600 * 24)
-     
 
+        
+    def testCrashOnSameNotification(self):
+        self.srv.transport = MockTransport('1.2.3.4')
+        mockLineReceiver = MockLineReceiver()
+        self.srv.sendLine = mockLineReceiver.sendLine
+        self.assertEquals(self.srv._registeredUsers, {})
+        self.assertEquals(self.srv._ruTimestamp, {})
+        self.assertEquals(self.srv._ruReverseMap, {})
+        # same everything
+        self.srv.lineReceived("notify:FOONODEA:1.2.3.4:5678:9")
+        self.srv.lineReceived("notify:FOONODEA:1.2.3.4:5678:9")
+        # same Id, diff ip/port
+        self.srv.lineReceived("notify:FOONODEA:1.2.3.0:5678:9")
+        self.srv.lineReceived("notify:FOONODEA:1.2.3.4:5678:9")
+        # diff Id, same ip/port (we once were crashing on this one)
+        self.srv.lineReceived("notify:FOONODEA:1.2.3.4:5678:9")
+        self.srv.lineReceived("notify:FOONODEB:1.2.3.4:5678:9")
+
+
 if __name__ == '__main__':
     unittest.main()



From afayolle at berlios.de  Thu Nov 17 17:21:56 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Thu, 17 Nov 2005 17:21:56 +0100
Subject: [Maay-svncheckins] r548 - trunk/doc
Message-ID: <200511171621.jAHGLu4K014601@sheep.berlios.de>

Author: afayolle
Date: 2005-11-17 17:21:45 +0100 (Thu, 17 Nov 2005)
New Revision: 548

Added:
   trunk/doc/CR_20051117.rest
Log:
added minutes of today's meeting


Added: trunk/doc/CR_20051117.rest
===================================================================
--- trunk/doc/CR_20051117.rest	2005-11-17 15:03:36 UTC (rev 547)
+++ trunk/doc/CR_20051117.rest	2005-11-17 16:21:45 UTC (rev 548)
@@ -0,0 +1,102 @@
+==========================================
+Compte rendu de la r?union du 17 Nov. 2005
+==========================================
+
+Participants
+~~~~~~~~~~~~
+
+Joaquin Keller (FTRD)
+Fr?d?ric Dang Ngoc (FTRD)
+Alexandre Fayolle (Logilab)
+
+But de la r?union
+~~~~~~~~~~~~~~~~~
+
+Bilan sur l'installation de la version 0.2.1 et perspectives pour la suite. 
+
+?ch?ances
+~~~~~~~~~~
+
+D?monstration publique le 30 Nov. 
+
+D?ploiment ? large ?chelle chez FT ? compter du 21 Nov. d'une version
+0.2.2 de Maay. 
+
+Points abord?s
+~~~~~~~~~~~~~~
+
+Retour sur les premi?res installations
+--------------------------------------
+
+Il y a quelques points ? modifier dans l'aspect cosm?tique de
+l'interface Web. 
+
+L'installeur doit :
+
+ * ajouter un ic?ne uninstall dans le menu D?marrer ;
+
+ * cr?er un lien vers http://localhost:7777 dans le menu d?marrer et
+   sur le bureau ;
+
+ * afficher la page principale de Maay dans le navigateur apr?s
+   l'installation.
+
+Les modifications de l'interface Web seront r?alis?es par FTRD et
+celles concernant l'installeur Windows par Logilab. Elles donneront
+lieu ? la publication de Maay-0.2.2.
+
+Anomalies d?tect?es par Logilab
+-------------------------------
+
+Fayolle signale deux anomalies d?tect?es par Logilab apr?s la
+publication de Maay-0.2.1 :
+
+ * les documents sont tri?s du plus vieux au plus r?cent et non pas le
+   contraire (corrig? dans SVN)
+
+ * l'utilisation de Maay ? travers Internet Explorer peut causer des
+   blocages temporaires du navigateur qui ne se produisent pas avec
+   Firefox.
+
+Cette deuxi?me anomalie est probl?matique car IE est utilis? sur de
+nombreux postes ? FTRD. Un correctif a ?t? fourni par Logilab, et il
+est en cours de validation. 
+
+Ces deux anomalies seront corrig?es dans la version 0.2.2 de Maay.
+
+D?veloppements futurs
+---------------------
+
+Entre la publication de Maay-0.2.2 et la d?monstration du 30 Nov. une
+version 0.3 devrait ?tre publi?e qui servira de base ? la
+d?monstration. Cette version devrait offrir de nouvelles possibilit?
+en mati?re de classement des documents renvoy?s :
+
+ * les documents pourront ?tre tri?s par relevance
+
+ * l'utilisateur pourra choisir un crit?re de tri depuis l'interface
+   web (date ou relevance) et un sens de tri (croissant ou
+   d?croissant)
+
+ * dans le cas ou un m?me document est renvoy? par plusieurs noeuds
+   distants, un seul r?sultat est affich? sur la page, avec la liste
+   tous les noeuds, et le crit?re de tri est calcul? comme suit: date
+   la plus r?cente (ou la plus ancienne pour un tri d?croissant) ou
+   somme des relevances. 
+
+Conclusion de la r?union
+~~~~~~~~~~~~~~~~~~~~~~~~
+
+La version 0.2.2 de Maay devrait ?tre publi?e le 18 Nov. en fin de
+journ?e ou le 21 Nov. au matin au plus tard, afin que FTRD puisse la
+valider avant de proc?der ? l'annonce de la disponibilit? du produit
+en interne. 
+
+Le travail sur Maay-0.3.0 commencera en d?but de semaine prochaine. 
+
+ -- Alexandre Fayolle <alexandre.fayolle at logilab.fr>  Thu, 17 Nov 2005 17:19:44 +0100
+
+
+
+
+



From afayolle at berlios.de  Thu Nov 17 18:07:43 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Thu, 17 Nov 2005 18:07:43 +0100
Subject: [Maay-svncheckins] r549 - trunk/maay/sql
Message-ID: <200511171707.jAHH7hbM022292@sheep.berlios.de>

Author: afayolle
Date: 2005-11-17 18:07:41 +0100 (Thu, 17 Nov 2005)
New Revision: 549

Modified:
   trunk/maay/sql/mysql.sql
Log:
cleanup

Modified: trunk/maay/sql/mysql.sql
===================================================================
--- trunk/maay/sql/mysql.sql	2005-11-17 16:21:45 UTC (rev 548)
+++ trunk/maay/sql/mysql.sql	2005-11-17 17:07:41 UTC (rev 549)
@@ -172,8 +172,3 @@
 -- ---------------------------------------------------------
 
 grant all on maay.* to "maay"@"localhost" identified by "maay";
--- grant udpate on maay.documents to "maay"@"localhost" identified by "maay";
--- grant update on maay.words to "maay"@"localhost" identified by "maay";
--- grant update on maay.nodes to "maay"@"localhost" identified by "maay";
--- grant update on maay.nodes_interests to "maay"@"localhost" identified by "maay";
--- grant update on document_scores to "maay"@"localhost" identified by "maay";



From afayolle at berlios.de  Thu Nov 17 18:13:36 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Thu, 17 Nov 2005 18:13:36 +0100
Subject: [Maay-svncheckins] r550 - trunk/maay/win32
Message-ID: <200511171713.jAHHDaOo022953@sheep.berlios.de>

Author: afayolle
Date: 2005-11-17 18:13:35 +0100 (Thu, 17 Nov 2005)
New Revision: 550

Modified:
   trunk/maay/win32/updateconfig.py
Log:
use IP instead of name to avoid DNS timeout

Modified: trunk/maay/win32/updateconfig.py
===================================================================
--- trunk/maay/win32/updateconfig.py	2005-11-17 17:07:41 UTC (rev 549)
+++ trunk/maay/win32/updateconfig.py	2005-11-17 17:13:35 UTC (rev 550)
@@ -80,7 +80,7 @@
 
 def probe_presence_config():
     default = ('192.33.178.29', 2345)
-    private_ft = ('maay.rd.francetelecom.fr', 2345)
+    private_ft = ('10.193.165.35', 2345)
     crater = ('172.17.1.4', 2345)
     jenkins = ('192.168.74.105', 2345)
     for addr in (private_ft,



From dnf at berlios.de  Thu Nov 17 18:42:59 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Thu, 17 Nov 2005 18:42:59 +0100
Subject: [Maay-svncheckins] r551 - in trunk/maay: . data
Message-ID: <200511171742.jAHHgxa2005323@sheep.berlios.de>

Author: dnf
Date: 2005-11-17 18:42:57 +0100 (Thu, 17 Nov 2005)
New Revision: 551

Modified:
   trunk/maay/data/indexationpage.html
   trunk/maay/data/maay.css
   trunk/maay/webapplication.py
Log:
First changes on indexation page to handle add/remove of folders.
I will finish the work tomorrow :
- save change in the configuration file (indexer.ini)
- merge the public-skip-dir and private-skip-dir (into skip-dir) in all files 

IMPORTANT: to get things easier for the user, there will only be three
folders set :
  - private-dir 
  - public-dir
  - skip-dir (indexer skip these folders for the private directory and public directory)
We think that in most usual cases, we do not need to differentiate public-skip-dir and private-skip-dir.

What do you think ?



Modified: trunk/maay/data/indexationpage.html
===================================================================
--- trunk/maay/data/indexationpage.html	2005-11-17 17:13:35 UTC (rev 550)
+++ trunk/maay/data/indexationpage.html	2005-11-17 17:42:57 UTC (rev 551)
@@ -1,34 +1,36 @@
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
 <nevow:invisible xmlns="http://www.w3.org/1999/xhtml" lang="en" xmlns:nevow="http://nevow.com/ns/nevow/0.1">
+<form action="/indexation" method="post">
 <table>
   <tr>
     <td><a href="/"><img border="0" src="images/smallmaay.png" /></a></td>
-    <td><h1>Indexation Page</h1></td>
+    <td><h1>Folders</h1></td>
   </tr>
 </table>
   <br />
-  <div class="message"><b>Status: </b><span nevow:render="message" /></div>
-  <hr />
-  <h2>Private Directories</h2>
-  <h3>Indexed</h3>
-    <div nevow:render="sequence" nevow:data="indexedprivatedirectories">
-      <div class="indexedDirectoryName" nevow:pattern="item" nevow:render="directory"><nevow:slot name="name" /></div>
+  <h2>Search these private folders</h2>
+   <div nevow:render="sequence" nevow:data="privatefolders">
+      <div class="indexedFolderName" nevow:pattern="item" nevow:render="directory"><a><nevow:attr name="href">/indexation?removePrivateFolder=<nevow:slot name="name" /></nevow:attr>X</a> - <nevow:slot name="name" /></div>
+   </div>
+    <input type="text" name="addPrivateFolder" size="50" />
+    <input type="submit" value="Add" />
+  <h2>Search and share these public folders</h2>
+    <div nevow:render="sequence" nevow:data="publicfolders">
+      <div class="indexedFolderName" nevow:pattern="item" nevow:render="directory"><a><nevow:attr name="href">/indexation?removePublicFolder=<nevow:slot name="name" /></nevow:attr>X</a> - <nevow:slot name="name" /></div>
     </div>
-  <h3>Skipped</h3>
-    <div nevow:render="sequence" nevow:data="skippedprivatedirectories">
-      <div class="skippedDirectoryName" nevow:pattern="item" nevow:render="directory"><nevow:slot name="name" /></div>
+    <input type="text" name="addPublicFolder" size="50" />
+    <input type="submit" value="Add" />
+  <h2>Don't search these folders</h2>
+    <div nevow:render="sequence" nevow:data="skippedfolders">
+      <div class="skippedFolderName" nevow:pattern="item" nevow:render="directory"><a><nevow:attr name="href">/indexation?removeSkippedFolder=<nevow:slot name="name" /></nevow:attr>X</a> - <nevow:slot name="name" /></div>
     </div>
-  <h2>Public Directories</h2>
-  <h3>Indexed</h3>
-    <div nevow:render="sequence" nevow:data="indexedpublicdirectories">
-      <div class="indexedDirectoryName" nevow:pattern="item" nevow:render="directory"><nevow:slot name="name" /></div>
-    </div>
-    <h3>Skipped</h3>
-    <div nevow:render="sequence" nevow:data="skippedpublicdirectories">
-      <div class="skippedDirectoryName" nevow:pattern="item" nevow:render="directory"><nevow:slot name="name" /></div>
-    </div>
+    <input type="text" name="addSkippedFolder" size="50" />
+    <input type="submit" value="Add" />
+ 
+  </form>
   <hr />
+  <div class="message"><span nevow:render="message" /></div><br />
   <form action="/indexation" method="PUT">
     <input type="hidden" name="start" value="1" />
     <input type="submit" value="Index now" /> 

Modified: trunk/maay/data/maay.css
===================================================================
--- trunk/maay/data/maay.css	2005-11-17 17:13:35 UTC (rev 550)
+++ trunk/maay/data/maay.css	2005-11-17 17:42:57 UTC (rev 551)
@@ -133,13 +133,13 @@
 
 
 /** indexation page *******/
-div.indexedDirectoryName {
+div.indexedFolderName {
   font-size: 60%;
   color: #448844; 
   margin-left: 10px;
 }
 
-div.skippedDirectoryName {
+div.skippedFolderName {
   font-size: 60%;
   color: #884444; 
   margin-left: 10px;

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-17 17:13:35 UTC (rev 550)
+++ trunk/maay/webapplication.py	2005-11-17 17:42:57 UTC (rev 551)
@@ -125,6 +125,42 @@
         return PeersList(self.maayId, self.querier)
 
     def child_indexation(self, context):
+        # Actions (add/remove) on private folders
+        addPrivateFolder = context.arg('addPrivateFolder', 0)
+        if addPrivateFolder:
+                indexer.indexerConfig.private_index_dir.append(addPrivateFolder)
+ 
+        removePrivateFolder = context.arg('removePrivateFolder', 0)
+        if removePrivateFolder:
+            try:
+                indexer.indexerConfig.private_index_dir.remove(removePrivateFolder)
+            except ValueError:
+                print "Folder '%s' not in the private directory list"
+
+        # Actions (add/remove) on public folders
+        addPublicFolder = context.arg('addPublicFolder', 0)
+        if addPublicFolder:
+                indexer.indexerConfig.public_index_dir.append(addPublicFolder)
+ 
+        removePublicFolder = context.arg('removePublicFolder', 0)
+        if removePublicFolder:
+            try:
+                indexer.indexerConfig.public_index_dir.remove(removePublicFolder)
+            except ValueError:
+                print "Folder '%s' not in the private directory list"
+
+        # Actions (add/remove) on skipped folders
+        addSkippedFolder = context.arg('addSkippedFolder', 0)
+        if addSkippedFolder:
+                indexer.indexerConfig.public_skip_dir.append(addSkippedFolder)
+ 
+        removeSkippedFolder = context.arg('removeSkippedFolder', 0)
+        if removeSkippedFolder:
+            try:
+                indexer.indexerConfig.public_skip_dir.remove(removeSkippedFolder)
+            except ValueError:
+                print "Folder '%s' not in the private directory list"
+
         start = int(context.arg('start', 0))
         if start == 0:
             if indexer.is_running():
@@ -205,22 +241,17 @@
     def render_message(self, context, data):
         return self._msg
 
-    def data_indexedprivatedirectories(self, context, data):
+    def data_privatefolders(self, context, data):
         if not self.indexerConfig.private_index_dir:
-            return ["No indexed private directory."]
+            return ["No private folder."]
         return self.indexerConfig.private_index_dir
 
-    def data_skippedprivatedirectories(self, context, data):
-        if not self.indexerConfig.private_skip_dir:
-            return ["No skipped private directory."]
-        return self.indexerConfig.private_skip_dir
-
-    def data_indexedpublicdirectories(self, context, data):
+    def data_publicfolders(self, context, data):
         if not self.indexerConfig.public_index_dir:
-            return ["No indexed public directory."]
+            return ["No public folder."]
         return self.indexerConfig.public_index_dir
 
-    def data_skippedpublicdirectories(self, context, data):
+    def data_skippedfolders(self, context, data):
         if not self.indexerConfig.public_skip_dir:
             return ["No skipped public directory."]
         return self.indexerConfig.public_skip_dir



From afayolle at berlios.de  Thu Nov 17 19:30:56 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Thu, 17 Nov 2005 19:30:56 +0100
Subject: [Maay-svncheckins] r552 - trunk/maay
Message-ID: <200511171830.jAHIUuTu027395@sheep.berlios.de>

Author: afayolle
Date: 2005-11-17 19:30:54 +0100 (Thu, 17 Nov 2005)
New Revision: 552

Modified:
   trunk/maay/querier.py
Log:
avoid negative popularity and relevance

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-17 17:42:57 UTC (rev 551)
+++ trunk/maay/querier.py	2005-11-17 18:30:54 UTC (rev 552)
@@ -257,9 +257,11 @@
             
             score.popularity = score.download_count / winfo_downloads
             score.popularity -= hoeffding_deviation(winfo_downloads)
+            score.popularity = max(1e-6, score.popularity)
             
             score.relevance = score.download_count / document.download_count
             score.relevance -= hoeffding_deviation(document.download_count)
+            score.relevance = max(1e-6, score.relevance)
             
             score.commit(cursor, update=True)
         cursor.close()



From adimasci at gmail.com  Thu Nov 17 20:27:36 2005
From: adimasci at gmail.com (Adrien Di Mascio)
Date: Thu, 17 Nov 2005 20:27:36 +0100
Subject: [Maay-svncheckins] r551 - in trunk/maay: . data
In-Reply-To: <200511171742.jAHHgxa2005323@sheep.berlios.de>
References: <200511171742.jAHHgxa2005323@sheep.berlios.de>
Message-ID: <437de8500511171127u726b4dedyd0f42dc6dd3bbbcc@mail.gmail.com>

Hi Fr?d?ric,

> Log:
> First changes on indexation page to handle add/remove of folders.
> I will finish the work tomorrow :
> - save change in the configuration file (indexer.ini)
> - merge the public-skip-dir and private-skip-dir (into skip-dir) in all files

I guess it would be good to use the "formless" package or the new "forms"
package, but we'll do that later.

> IMPORTANT: to get things easier for the user, there will only be three
> folders set :
>   - private-dir
>   - public-dir
>   - skip-dir (indexer skip these folders for the private directory and public directory)
> We think that in most usual cases, we do not need to differentiate public-skip-dir and private-skip-dir.
>
> What do you think ?

That's fine with me. It will probably help to avoid confusion, and as
far as I can see,
having this distinction between private-skip-dir and public-skip-dir
doesn't provide
any functionality.

Btw. I'm thinking on changing a bit the Indexation Page in order for it to be
updated automatically during indexation (the status message would be updated
regularly). I'll try to do that tomorrow.


From aurelienc at berlios.de  Thu Nov 17 20:31:48 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Thu, 17 Nov 2005 20:31:48 +0100
Subject: [Maay-svncheckins] r553 - trunk/maay
Message-ID: <200511171931.jAHJVm6C023333@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-17 20:31:46 +0100 (Thu, 17 Nov 2005)
New Revision: 553

Modified:
   trunk/maay/TODO.txt
Log:
Update


Modified: trunk/maay/TODO.txt
===================================================================
--- trunk/maay/TODO.txt	2005-11-17 18:30:54 UTC (rev 552)
+++ trunk/maay/TODO.txt	2005-11-17 19:31:46 UTC (rev 553)
@@ -17,8 +17,6 @@
 * What's Next
 
  - GC des noeuds morts (ping ? heartbeats ? etc.)
- - Ne pas mettre dans le wizzard d'installation de question du genre
-   "o? souhaitez vous installer Maay ?"
  - envoi paresseux des documents par les fournisseurs
  - admin panel plus interactif (chemins ?ditables, progression de l'indexation)
  - table Node coh?rente avec ce qui a ?t? fait sur pr?sence server (nodeId <=> (ip, port))



From aurelienc at berlios.de  Fri Nov 18 09:27:15 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Fri, 18 Nov 2005 09:27:15 +0100
Subject: [Maay-svncheckins] r554 - trunk/maay
Message-ID: <200511180827.jAI8RFLq014727@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-18 09:26:39 +0100 (Fri, 18 Nov 2005)
New Revision: 554

Modified:
   trunk/maay/TODO.txt
Log:
Sync with yesterday's minutes


Modified: trunk/maay/TODO.txt
===================================================================
--- trunk/maay/TODO.txt	2005-11-17 19:31:46 UTC (rev 553)
+++ trunk/maay/TODO.txt	2005-11-18 08:26:39 UTC (rev 554)
@@ -16,15 +16,19 @@
 
 * What's Next
 
+ - ajouter ic?ne pour d?sinstaller Maay
+ - cr?er un lien vers http://localhost:7777 dans le menu d?marrer et sur le bureau
+ - afficher la page principale de Maay dans le navigateur apr?s l'installation.
  - GC des noeuds morts (ping ? heartbeats ? etc.)
  - envoi paresseux des documents par les fournisseurs
- - admin panel plus interactif (chemins ?ditables, progression de l'indexation)
+ - admin panel plus interactif (chemins ?ditables)
  - table Node coh?rente avec ce qui a ?t? fait sur pr?sence server (nodeId <=> (ip, port))
  - maay passerelle (deux+ interfaces rezo)
 
 
 * Done
 
+ - admin panel plus interactif (progression de l'indexation)
  - "le serveur d'enregistrement" est un serveur de pr?sence (vocabulaire)
  - autologin (<=> ne travailler qu'en mode logg?)
  - serveur de pr?sence ne doit ?tre utilis? qu'? l'amor?age. Chaque



From afayolle at berlios.de  Fri Nov 18 09:41:29 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Fri, 18 Nov 2005 09:41:29 +0100
Subject: [Maay-svncheckins] r555 - trunk/debian
Message-ID: <200511180841.jAI8fTii031556@sheep.berlios.de>

Author: afayolle
Date: 2005-11-18 09:41:28 +0100 (Fri, 18 Nov 2005)
New Revision: 555

Modified:
   trunk/debian/control
Log:
added recommends on gs-common for ps2ascii

Modified: trunk/debian/control
===================================================================
--- trunk/debian/control	2005-11-18 08:26:39 UTC (rev 554)
+++ trunk/debian/control	2005-11-18 08:41:28 UTC (rev 555)
@@ -8,7 +8,7 @@
 Package: maay
 Architecture: all
 Depends: ${misc:Depends}, mysql-server-4.1, python, python-mysql, python-nevow (>= 0.6.0), python-twisted (>= 2.0), python-logilab-common (>=0.12.0-3)
-Recommends: antiword, unrtf, pdftohtml, python-imaging
+Recommends: antiword, unrtf, pdftohtml, python-imaging, gs-common
 Description: peer to peer indexation and search engine
  Maay can index files on your computer, and export them to other
  members of the Maay P2P network. You can also issue searches which



From adimasci at berlios.de  Fri Nov 18 10:12:27 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Fri, 18 Nov 2005 10:12:27 +0100
Subject: [Maay-svncheckins] r556 - in trunk/maay: . data
Message-ID: <200511180912.jAI9CR6H017828@sheep.berlios.de>

Author: adimasci
Date: 2005-11-18 10:12:23 +0100 (Fri, 18 Nov 2005)
New Revision: 556

Modified:
   trunk/maay/data/indexationpage.html
   trunk/maay/indexer.py
   trunk/maay/webapplication.py
Log:
made indexation a bit more interactive

Modified: trunk/maay/data/indexationpage.html
===================================================================
--- trunk/maay/data/indexationpage.html	2005-11-18 08:41:28 UTC (rev 555)
+++ trunk/maay/data/indexationpage.html	2005-11-18 09:12:23 UTC (rev 556)
@@ -1,6 +1,25 @@
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-<nevow:invisible xmlns="http://www.w3.org/1999/xhtml" lang="en" xmlns:nevow="http://nevow.com/ns/nevow/0.1">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xmlns:nevow="http://nevow.com/ns/nevow/0.1">
+  <head>
+    <title>Live results</title>
+    <link rel="stylesheet" type="text/css" href="maaycss"/>
+    <link rel="shortcut icon" href="images/maay.ico" />
+    <nevow:invisible nevow:render="liveglue" />
+
+    <script type='text/javascript' language='javascript'>
+function live() {
+  server.callRemote('live');
+}
+
+function updateStatus(msg) {
+  elt = document.getElementById('statusMessage');
+  elt.innerHTML = msg;
+}
+    </script>
+  </head>
+  <body onload="live();">
+
 <form action="/indexation" method="post">
 <table>
   <tr>
@@ -9,6 +28,8 @@
   </tr>
 </table>
   <br />
+  <div class="message"><b>Status: </b><span id="statusMessage"><span nevow:render="message" /></span></div>
+  <br />
   <h2>Search these private folders</h2>
    <div nevow:render="sequence" nevow:data="privatefolders">
       <div class="indexedFolderName" nevow:pattern="item" nevow:render="directory"><a><nevow:attr name="href">/indexation?removePrivateFolder=<nevow:slot name="name" /></nevow:attr>X</a> - <nevow:slot name="name" /></div>
@@ -29,10 +50,10 @@
     <input type="submit" value="Add" />
  
   </form>
-  <hr />
-  <div class="message"><span nevow:render="message" /></div><br />
   <form action="/indexation" method="PUT">
     <input type="hidden" name="start" value="1" />
     <input type="submit" value="Index now" /> 
   </form>
-</nevow:invisible>
+  <nevow:invisble nevow:macro="footer" />
+</body>
+</html>

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-18 08:41:28 UTC (rev 555)
+++ trunk/maay/indexer.py	2005-11-18 09:12:23 UTC (rev 556)
@@ -38,6 +38,7 @@
 import mimetypes
 import socket
 
+from zope.interface import Interface
 
 from maay import converter
 from maay.dbentity import FutureDocument, Document, FileInfo
@@ -47,7 +48,16 @@
 
 #log.startLogging(open('maay-indexer.log', 'w'))
 
+class IIndexerObserver(Interface):
 
+    def newDocumentIndexed(filename):
+        """called by indexer when a document was just indexed"""
+
+    def indexationCompleted():
+        """called when indexation is over"""
+
+
+
 def makeDocumentId(filename):
     """return the SHA hash value from of the contents of the file"""
     stream = file(filename, 'rb')
@@ -78,7 +88,7 @@
     decide to do nothing if it detects that the database is up-to-date.
     """
     
-    def __init__(self, indexerConfig):
+    def __init__(self, indexerConfig, observers=None):
         self.indexerConfig = indexerConfig
         username = self.indexerConfig.user
         password = self.indexerConfig.password
@@ -91,6 +101,7 @@
                                        encoding='utf-8')
         self.cnxId, errmsg = self.serverProxy.authenticate(username, password)
         self.verbose = indexerConfig.verbose
+        self.observers = observers or []
         if not self.cnxId:
             if self.verbose:
                 print "Got failure from Node:", errmsg
@@ -138,6 +149,8 @@
         indexedFiles = Set(self.serverProxy.getIndexedFiles(self.cnxId))
         oldFiles = indexedFiles - existingFiles
         self.purgeFiles(oldFiles)
+        for obs in self.observers:
+            obs.indexationCompleted()
 
     def runIndexer(self, isPrivate=True):
         existingFiles = Set()
@@ -210,7 +223,8 @@
             else:
                 print "Error indexing %s: %s" % \
                       (futureDoc.filename.encode('iso-8859-1', 'replace'), exc)
-        
+        for obs in self.observers:
+            obs.newDocumentIndexed(futureDoc.filename)
 
 ######### FileIterator
 
@@ -251,10 +265,10 @@
 
 ## main() ##################################################
 
-def run():
+def run(webpage):
     try:
         try:
-            indexer = Indexer(indexerConfig)
+            indexer = Indexer(indexerConfig, observers=[webpage])
         except MaayAuthenticationError, exc:
             print "AuthenticationError:", exc
             sys.exit(1)
@@ -282,13 +296,13 @@
     print '** is_running()', indexer_thread
     return indexer_thread and indexer_thread.isAlive()
 
-def start_as_thread():
+def start_as_thread(webpage):
     global indexer_thread
     if is_running():
         print "Indexer already running", indexer_thread
     else:
         print "launching indexer"
-        indexer_thread = Thread(target=run)
+        indexer_thread = Thread(target=run, args=(webpage,))
         indexer_thread.start()
 
 # index one file from webapp in a thread

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-18 08:41:28 UTC (rev 555)
+++ trunk/maay/webapplication.py	2005-11-18 09:12:23 UTC (rev 556)
@@ -26,12 +26,14 @@
 from tempfile import mkdtemp
 import os, os.path as osp
 
-from zope.interface import Interface
+from zope.interface import Interface, implements
 from twisted.web import static
 from twisted.web.xmlrpc import Proxy
 from twisted.internet import reactor
-from nevow import rend, tags, loaders
+from twisted.python import log
 
+from nevow import rend, tags, loaders, athena, inevow
+
 from logilab.common.textutils import normalize_text
 
 from maay.querier import WEB_AVATARID
@@ -104,7 +106,82 @@
             context.fillSlots(attrname, getattr(peerNode, attrname, 'N/A'))
         return context.tag
 
-                   
+
+class IndexationPage(athena.LivePage):
+    docFactory = loaders.xmlfile(get_path_of('indexationpage.html'))
+    implements(indexer.IIndexerObserver)
+
+    # share counter among instances
+    counter = 0
+    
+    def __init__(self):
+        athena.LivePage.__init__(self)
+        self.indexerConfig = indexer.indexerConfig
+        self.msg = 'not running'
+
+    def macro_footer(self, context):
+        return loaders.xmlfile(get_path_of('footer.html'))
+
+    def remote_live(self, context):
+        """let's start !"""
+        return 0
+
+    # XXX (refactoring): provide a common base class for LivePages
+    # Maay / py2exe / win32 related trick : we provide our own javascript
+    # files, so we need to override the default LivePage mechanism
+    # to find them
+    def childFactory(self, ctx, name):
+        if name in self._javascript:
+            return static.File(get_path_of(self._javascript[name]))
+
+    def updateStatus(self, message):
+        self.callRemote('updateStatus', message)
+
+    def newDocumentIndexed(self, filename):
+        IndexationPage.counter += 1
+        if (IndexationPage.counter % 10) == 0:
+            self.updateStatus(u'Indexation in progress - %s docouments indexed'
+                              % IndexationPage.counter)
+
+    def indexationCompleted(self):
+        self.updateStatus(u'Indexation completed (%s doucments indexed)' %
+                          (IndexationPage.counter,))
+
+    def render_message(self, context, data):
+        return self.msg
+
+    def data_privatefolders(self, context, data):
+        if not self.indexerConfig.private_index_dir:
+            return ["No private folder."]
+        return self.indexerConfig.private_index_dir
+
+    def data_publicfolders(self, context, data):
+        if not self.indexerConfig.public_index_dir:
+            return ["No public folder."]
+        return self.indexerConfig.public_index_dir
+
+    def data_skippedfolders(self, context, data):
+        if not self.indexerConfig.public_skip_dir:
+            return ["No skipped public directory."]
+        return self.indexerConfig.public_skip_dir
+
+    def render_directory(self, context, name):
+        print "directory = %s" % name
+        context.fillSlots("name", name)
+        return context.tag
+
+class IndexationPageFactory(athena.LivePageFactory):
+    implements(indexer.IIndexerObserver)
+
+    def newDocumentIndexed(self, filename):
+        for webpage in self.clients.itervalues():
+            webpage.newDocumentIndexed(filename)
+        
+    def indexationCompleted(self):
+        for webpage in self.clients.itervalues():
+            webpage.indexationCompleted()
+    
+
 class SearchForm(MaayPage):
     """default search form"""
     bodyFactory = loaders.xmlfile(get_path_of('searchform.html'))
@@ -124,7 +201,7 @@
     def child_peers(self, context):
         return PeersList(self.maayId, self.querier)
 
-    def child_indexation(self, context):
+    def child_indexation(self, context, _factory=IndexationPageFactory(IndexationPage)):
         # Actions (add/remove) on private folders
         addPrivateFolder = context.arg('addPrivateFolder', 0)
         if addPrivateFolder:
@@ -162,6 +239,7 @@
                 print "Folder '%s' not in the private directory list"
 
         start = int(context.arg('start', 0))
+        indexationPage = _factory.clientFactory(context)
         if start == 0:
             if indexer.is_running():
                 msg = "Indexer running"
@@ -172,10 +250,10 @@
                 msg = "Indexer already running"
             else:
                 msg = "Indexer started"
-                indexer.start_as_thread()
+                indexer.start_as_thread(_factory)
+        indexationPage.msg = msg
+        return indexationPage
 
-        return IndexationPage(msg)
-
     def child_search(self, context):
         return FACTORY.clientFactory(context, self.querier, self.p2pquerier)
     
@@ -226,41 +304,6 @@
         self.filepath = filepath
         indexer.indexJustOneFile(self.filepath)
 
-        
-class IndexationPage(MaayPage):
-    # just for the demo. Should be moved to a adminpanel interface later.
-    """index page"""
-    bodyFactory = loaders.xmlfile(get_path_of('indexationpage.html'))
-    addSlash = False
-    
-    def __init__(self, msg = "No message"):
-        MaayPage.__init__(self)
-        self._msg = msg
-        self.indexerConfig = indexer.indexerConfig
-
-    def render_message(self, context, data):
-        return self._msg
-
-    def data_privatefolders(self, context, data):
-        if not self.indexerConfig.private_index_dir:
-            return ["No private folder."]
-        return self.indexerConfig.private_index_dir
-
-    def data_publicfolders(self, context, data):
-        if not self.indexerConfig.public_index_dir:
-            return ["No public folder."]
-        return self.indexerConfig.public_index_dir
-
-    def data_skippedfolders(self, context, data):
-        if not self.indexerConfig.public_skip_dir:
-            return ["No skipped public directory."]
-        return self.indexerConfig.public_skip_dir
-
-    def render_directory(self, context, name):
-        print "directory = %s" % name
-        context.fillSlots("name", name)
-        return context.tag
-
 class ResultsPageMixIn:
 
     def data_results(self, context, data):
@@ -369,8 +412,6 @@
         context.fillSlots('url', baseurl)
         return context.tag
     
-from nevow import athena, inevow
-from twisted.python import log
 
 class ResultsPage(athena.LivePage, ResultsPageMixIn):
     """default results page"""
@@ -409,16 +450,13 @@
             self.querier.pushDocuments(self.queryId, results, provider=None)
             self.results = self.querier.getQueryResults(self.queryId, offset=0)
             
+    # XXX (refactoring): provide a common base class for LivePages
+    # Maay / py2exe / win32 related trick : we provide our own javascript
+    # files, so we need to override the default LivePage mechanism
+    # to find them
     def childFactory(self, ctx, name):
         if name in self._javascript:
             return static.File(get_path_of(self._javascript[name]))
-
-# XXX: do we need to override the following 2 methods too ?
-##     def child_MochiKit(self, ctx):
-##         return static.File(get_path_of('MochiKit'))
-
-##     def child_MochiKitLogConsole(self, ctx):
-##         return static.File(get_path_of('MochiKit'))
         
     def onNewResults(self, provider, results):
         results = [Document(**params) for params in results]



From afayolle at berlios.de  Fri Nov 18 11:15:24 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Fri, 18 Nov 2005 11:15:24 +0100
Subject: [Maay-svncheckins] r557 - trunk
Message-ID: <200511181015.jAIAFO7b027934@sheep.berlios.de>

Author: afayolle
Date: 2005-11-18 11:15:22 +0100 (Fri, 18 Nov 2005)
New Revision: 557

Modified:
   trunk/ChangeLog
Log:
added some changes which will appear in 0.2.2

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2005-11-18 09:12:23 UTC (rev 556)
+++ trunk/ChangeLog	2005-11-18 10:15:22 UTC (rev 557)
@@ -1,6 +1,13 @@
+Maay-0.2.2 2005-11-21
+	* Use IP adress of presence server instead of domain name
+	* Threshold on document relevance and popularity to avoid negative
+	values
+	* Fixed ranking bug to display more recent documents first
+	* 
+
 Maay-0.2.1 2005-11-16
         * Fixed bug #5647 caused by bad use of os.getlogin() preventing P2P
-	   queries from being processed on Windows
+	  queries from being processed on Windows
         * Fixed off by one error in document abstract generation (#5648)
         * Fixed auto indexation of downloaded documents
         * Fixed some display inconsistencies in web interface



From dnf at berlios.de  Fri Nov 18 11:36:25 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Fri, 18 Nov 2005 11:36:25 +0100
Subject: [Maay-svncheckins] r558 - in trunk/maay: . configuration configuration/win32 win32
Message-ID: <200511181036.jAIAaPjZ031294@sheep.berlios.de>

Author: dnf
Date: 2005-11-18 11:36:16 +0100 (Fri, 18 Nov 2005)
New Revision: 558

Modified:
   trunk/maay/TODO.txt
   trunk/maay/configuration.py
   trunk/maay/configuration/indexer.ini
   trunk/maay/configuration/win32/indexer.ini
   trunk/maay/indexer.py
   trunk/maay/webapplication.py
   trunk/maay/win32/updateconfig.py
Log:
First attempt to rename configuration attributes on indexed directories 
in all files :
- public-index-dir => public-dir
- private-index-dir => private-dir
- public-skip-dir and private-skip-dir => skip-dir



Modified: trunk/maay/TODO.txt
===================================================================
--- trunk/maay/TODO.txt	2005-11-18 10:15:22 UTC (rev 557)
+++ trunk/maay/TODO.txt	2005-11-18 10:36:16 UTC (rev 558)
@@ -34,7 +34,7 @@
  - serveur de pr?sence ne doit ?tre utilis? qu'? l'amor?age. Chaque
    noeud maintient ensuite ? jour sa liste de voisins
  - D?sinstalleur windows
- - Par d?faut : private-index-dir : $HOME, public-index-dir : $HOME/Desktop/MaayPublic
+ - Par d?faut : private-dir : $HOME, public-dir : $HOME/Desktop/MaayPublic
  - Dans le cadre de la recherche P2P, on cherche partout (local et distribu?), mais sur
    la page de r?sultats, on doit voir appara?tre les informations suivantes :
 

Modified: trunk/maay/configuration/indexer.ini
===================================================================
--- trunk/maay/configuration/indexer.ini	2005-11-18 10:15:22 UTC (rev 557)
+++ trunk/maay/configuration/indexer.ini	2005-11-18 10:36:16 UTC (rev 558)
@@ -19,10 +19,9 @@
 #
 # You can use a comma separated list of values to specify several
 # directories in each configuration variable. 
-private-index-dir=c:\
-private-skip-dir=c:\windows
-public-index-dir=
-public-skip-dir=
+private-dir=c:\
+public-dir=
+skip-dir=c:\windows
 
 # print messages in the console
 verbose=yes

Modified: trunk/maay/configuration/win32/indexer.ini
===================================================================
--- trunk/maay/configuration/win32/indexer.ini	2005-11-18 10:15:22 UTC (rev 557)
+++ trunk/maay/configuration/win32/indexer.ini	2005-11-18 10:36:16 UTC (rev 558)
@@ -19,10 +19,9 @@
 #
 # You can use a comma separated list of values to specify several
 # directories in each configuration variable. 
-private-index-dir="C:\Documents and Settings\All Users\Desktop"
-private-skip-dir=
-public-index-dir=
-public-skip-dir=
+private-dir="C:\Documents and Settings\All Users\Desktop"
+public-dir=
+skip-dir=
 
 # print messages in the console
 verbose=yes

Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-18 10:15:22 UTC (rev 557)
+++ trunk/maay/configuration.py	2005-11-18 10:36:16 UTC (rev 558)
@@ -257,7 +257,7 @@
 
 ################ Indexer stuff
 
-def _download_index_dir():
+def _download_dir():
     if sys.platform == 'win32':
         theDir = r'C:\Documents and Settings\All Users\Desktop\Maay Documents\downloaded'
     else:
@@ -295,33 +295,25 @@
           'default' : "maay",
           }),
 
-        ('private-index-dir',
+        ('private-dir',
          {'type': 'csv',
           'metavar': '<csv>', 'short': 'i',
           'help': 'index this directory with the private indexer',
           'default' : []
           }),
-         
-        ('private-skip-dir',
+         ('public-dir',
          {'type': 'csv',
-          'metavar': '<csv>', 'short': 's',
-          'help': 'the private indexer will skip this directory',
-          'default' : []
-          }),
-        ('public-index-dir',
-         {'type': 'csv',
           'metavar': '<csv>', 'short': 'I',
           'help': 'index this directory with the public indexer',
           'default' : []
           }),
-        ('public-skip-dir',
+        ('skip-dir',
          {'type': 'csv',
-          'metavar': '<csv>', 'short': 'S',
-          'help': 'the public indexer will skip this directory',
+          'metavar': '<csv>', 'short': 's',
+          'help': 'the indexer will skip this directory',
           'default' : []
           }),
-        
-        ('verbose',
+       ('verbose',
          {'type': 'yn',
           'metavar': '<y or n>', 'short': 'v',
           'help': 'enable verbose mode',
@@ -333,11 +325,11 @@
           'metavar' : '<y or n>',
           'default' : False,
           }),
-        ('download-index-dir',
+        ('download-dir',
          {'type': 'string',
           'metavar': '<downloads>',
           'help': 'downloaded files will go there and be immediately indexed',
-          'default' : _download_index_dir()
+          'default' : _download_dir()
           })
         
         ]
@@ -347,6 +339,19 @@
     def __init__(self):
         Configuration.__init__(self, name="Indexer")
 
+    def save(self):
+        # FIXME: since there may be several configuration files, which
+        # one do we choose. By default, we take the one in the current
+        # directory
+        # FIXME: does not work, why ? It writes a None in the indexer.ini
+        return
+        try:
+            fd = file(self.config_file, 'wb')
+            fd.write(str(self.generate_config()))
+            fd.close()
+        except IOError, e:
+            print "Cannot open file '%s' to update configuration" % self.config_file
+
 ################ Image stuff 
 
 class NoThumbnailsDir(Exception):

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-18 10:15:22 UTC (rev 557)
+++ trunk/maay/indexer.py	2005-11-18 10:36:16 UTC (rev 558)
@@ -114,13 +114,13 @@
         
     def getFileIterator(self, isPrivate=True):
         if isPrivate:
-            indexed = self.indexerConfig.private_index_dir
-            skipped = self.indexerConfig.private_skip_dir
+            indexed = self.indexerConfig.private_dir
+            skipped = self.indexerConfig.skip_dir
             print "private indexation of", indexed, "omitting", skipped
         else:
-            indexed = self.indexerConfig.public_index_dir
-            indexed.append(self.indexerConfig.download_index_dir)
-            skipped = self.indexerConfig.public_skip_dir
+            indexed = self.indexerConfig.public_dir
+            indexed.append(self.indexerConfig.download_dir)
+            skipped = self.indexerConfig.skip_dir
             print "public indexation of", indexed, "omitting", skipped
         return FileIterator(indexed, skipped)
 

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-18 10:15:22 UTC (rev 557)
+++ trunk/maay/webapplication.py	2005-11-18 10:36:16 UTC (rev 558)
@@ -151,19 +151,19 @@
         return self.msg
 
     def data_privatefolders(self, context, data):
-        if not self.indexerConfig.private_index_dir:
+        if not self.indexerConfig.private_dir:
             return ["No private folder."]
-        return self.indexerConfig.private_index_dir
+        return self.indexerConfig.private_dir
 
     def data_publicfolders(self, context, data):
-        if not self.indexerConfig.public_index_dir:
+        if not self.indexerConfig.public_dir:
             return ["No public folder."]
-        return self.indexerConfig.public_index_dir
+        return self.indexerConfig.public_dir
 
     def data_skippedfolders(self, context, data):
-        if not self.indexerConfig.public_skip_dir:
-            return ["No skipped public directory."]
-        return self.indexerConfig.public_skip_dir
+        if not self.indexerConfig.skip_dir:
+            return ["No skipped folders."]
+        return self.indexerConfig.skip_dir
 
     def render_directory(self, context, name):
         print "directory = %s" % name
@@ -191,7 +191,7 @@
         MaayPage.__init__(self, maayId)
         self.querier = querier
         self.p2pquerier = p2pquerier
-        self.download_dir = indexer.indexerConfig.download_index_dir
+        self.download_dir = indexer.indexerConfig.download_dir
         
     def logout(self):
         print "Bye %s !" % (self.maayId,)
@@ -202,39 +202,42 @@
         return PeersList(self.maayId, self.querier)
 
     def child_indexation(self, context, _factory=IndexationPageFactory(IndexationPage)):
+        # TODO: check if the added folders are valid
+
         # Actions (add/remove) on private folders
         addPrivateFolder = context.arg('addPrivateFolder', 0)
         if addPrivateFolder:
-                indexer.indexerConfig.private_index_dir.append(addPrivateFolder)
+                indexer.indexerConfig.private_dir.append(addPrivateFolder)
+                indexer.indexerConfig.save()
  
         removePrivateFolder = context.arg('removePrivateFolder', 0)
         if removePrivateFolder:
             try:
-                indexer.indexerConfig.private_index_dir.remove(removePrivateFolder)
+                indexer.indexerConfig.private_dir.remove(removePrivateFolder)
             except ValueError:
                 print "Folder '%s' not in the private directory list"
 
         # Actions (add/remove) on public folders
         addPublicFolder = context.arg('addPublicFolder', 0)
         if addPublicFolder:
-                indexer.indexerConfig.public_index_dir.append(addPublicFolder)
+                indexer.indexerConfig.public_dir.append(addPublicFolder)
  
         removePublicFolder = context.arg('removePublicFolder', 0)
         if removePublicFolder:
             try:
-                indexer.indexerConfig.public_index_dir.remove(removePublicFolder)
+                indexer.indexerConfig.public_dir.remove(removePublicFolder)
             except ValueError:
                 print "Folder '%s' not in the private directory list"
 
         # Actions (add/remove) on skipped folders
         addSkippedFolder = context.arg('addSkippedFolder', 0)
         if addSkippedFolder:
-                indexer.indexerConfig.public_skip_dir.append(addSkippedFolder)
+                indexer.indexerConfig.skip_dir.append(addSkippedFolder)
  
         removeSkippedFolder = context.arg('removeSkippedFolder', 0)
         if removeSkippedFolder:
             try:
-                indexer.indexerConfig.public_skip_dir.remove(removeSkippedFolder)
+                indexer.indexerConfig.public_dir.remove(removeSkippedFolder)
             except ValueError:
                 print "Folder '%s' not in the private directory list"
 

Modified: trunk/maay/win32/updateconfig.py
===================================================================
--- trunk/maay/win32/updateconfig.py	2005-11-18 10:15:22 UTC (rev 557)
+++ trunk/maay/win32/updateconfig.py	2005-11-18 10:36:16 UTC (rev 558)
@@ -34,8 +34,8 @@
 password=maay
 
 # Which directories are to be indexed
-#  - private indexed directories are not available to  queries from other nodes
-#  - public indexed directories are available to these queries
+#  - private directories are not available to  queries from other nodes
+#  - public directories are available to these queries
 #  - skip dirs are not indexed
 #
 # If a document is available through both a public and a private directory, 
@@ -43,10 +43,9 @@
 #
 # You can use a comma separated list of values to specify several
 # directories in each configuration variable. 
-private-index-dir=%(private)s
-private-skip-dir=%(private_skip)s
-public-index-dir=%(public)s
-public-skip-dir=%(public_skip)s
+private-dir=%(private)s
+public-dir=%(public)s
+skip-dir=%(skip)s
 """
 
 node_config = """[NODE]
@@ -63,7 +62,6 @@
 def createConfigFile(myDesktop, myDocuments):
     f=open("indexer.ini", "w")
     values = {'private'     : '%s,%s' % (myDesktop, myDocuments),
-              'private_skip': '',
               'public'      : '%s\\Maay Documents' % myDesktop,
               'public_skip' : '',
               }



From aurelienc at berlios.de  Fri Nov 18 11:39:29 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Fri, 18 Nov 2005 11:39:29 +0100
Subject: [Maay-svncheckins] r559 - trunk/maay
Message-ID: <200511181039.jAIAdTev031874@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-18 11:39:28 +0100 (Fri, 18 Nov 2005)
New Revision: 559

Modified:
   trunk/maay/p2pquerier.py
   trunk/maay/rpc.py
   trunk/maay/webapplication.py
Log:
Should fix the relay to/from nodes having a non-standard port. Fix is incompatible with previous P2pQuery structures (please restart your nodes).


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-18 10:36:16 UTC (rev 558)
+++ trunk/maay/p2pquerier.py	2005-11-18 10:39:28 UTC (rev 559)
@@ -32,9 +32,13 @@
 from twisted.web.xmlrpc import Proxy
 from twisted.internet import reactor
 from maay.texttool import makeAbstract, removeSpace, untagText
-from configuration import NodeConfiguration
+from maay.configuration import NodeConfiguration
 from maay.query import Query
 
+nodeConfig=NodeConfiguration()
+nodeConfig.load()
+NODE_HOST = socket.gethostbyname(socket.gethostname())
+NODE_PORT = nodeConfig.rpcserver_port
 
 def hashIt(item, uname=''.join(platform.uname())):
     hasher = sha.sha()
@@ -70,9 +74,11 @@
 # XXX should P2pQuery derive from query.Query? (auc : no)
 class P2pQuery:
 
-    _version = 1
+    _version = 2
     
-    def __init__(self, sender, port, query, ttl=5, qid=None, host=None):
+#    def __init__(self, sender, originator_port, query, ttl=5,
+    def __init__(self, sender, query, ttl=5,
+                 qid=None, client_host=None, client_port=None):
         """
         :param sender: really a nodeId
         :type sender: str
@@ -82,19 +88,22 @@
         :type query: `maay.query.Query`
         :param qid: query identifier
         :type qid: str
-        :param host: IP adress of sender
-        :type host: str
         """
         if qid:
             self.qid = qid
         else:
             self.qid = hashIt(sender)
         self.sender = sender
-        self.port = port
+        #self.port = originator_port
         self.ttl = ttl
         self.query = query
         self.documents_ids = set()
-        self.host = host
+        # *** client_host: IP adress of immediate client (computed at reception)
+        # *** client_port: rpc port of immediate client (provided by client)
+        # default args are typically used from webapplication instantiation
+        # but NOT at rpc level, where we MUST use the transmited values
+        self.client_host = client_host or NODE_HOST
+        self.client_port = client_port or NODE_PORT
         
     def hop(self):
         self.ttl -= 1
@@ -112,27 +121,34 @@
         #       None can't be sent via XMLRPC.
         #       (Well, it can be in Twisted, but then I guess that
         #       we have to restrict to Twisted and Python world)
-        return {'qid':self.qid,
-                'sender':self.sender,
-                'port':self.port,
-                'ttl':self.ttl,
-                'words': self.query.words,
-                'mime_type': self.query.filetype or '',
-                'version' : P2pQuery._version
+        return {'qid':          self.qid,
+                'sender':       self.sender,
+                #'host': self.host,
+                #'port':self.port,
+                'client_host' : self.client_host,
+                'client_port' : self.client_port,
+                'ttl':          self.ttl,
+                'words':        self.query.words,
+                'mime_type':    self.query.filetype or '',
+                'version' :     P2pQuery._version
                 }
 
     def fromDict(dic):
         """dual of asKwargs"""
         if dic.has_key('version'):
             if dic['version'] > P2pQuery._version:
+                print "******* Query Version Mismatch ********"
+                print "(we don't understand queries version %s)" % dic['version']
                 raise QueryVersionMismatch(query_version=dic['version'],
                                            local_version=P2pQuery._version)
         _query = Query(' '.join(dic['words']), filetype=dic['mime_type'])
-        return P2pQuery(qid=dic['qid'],
-                        sender=dic['sender'],
-                        port=dic['port'],
-                        ttl=dic['ttl'],
-                        query=_query)
+        p2pquery = P2pQuery(qid=dic['qid'],
+                            sender=dic['sender'],
+                            client_host=dic['client_host'],
+                            client_port=dic['client_port'],
+                            ttl=dic['ttl'],
+                            query=_query)
+        return p2pquery
     fromDict = staticmethod(fromDict)
     
     def getWords(self):
@@ -148,40 +164,6 @@
         self.provider = provider
         self.documents = documents
 
-class P2pErrbacks:
-    """a small namespace to hold errbacks and contextual
-       information so as to display meaningful stuff
-    """
-
-    lastQueryTarget = None
-    lastAnswerTarget = None
-
-    def setQueryTarget(target):
-        P2pErrbacks.lastQueryTarget = target
-    setQueryTarget = staticmethod(setQueryTarget)
-        
-    def setAnswerTarget(target):
-        P2pErrbacks.lastAnswerTarget = target
-    setAnswerTarget = staticmethod(setAnswerTarget)
-
-    def sendQueryProblem(failure):
-        """Politely displays any problem (bug, unavailability) related
-        to an attempt to send a query.
-        """
-        print " ... problem sending the query (likely to %s) : %s" \
-              % (P2pErrbacks.lastQueryTarget, failure.getTraceback())
-    sendQueryProblem = staticmethod(sendQueryProblem)
-
-
-    def answerQueryProblem(failure):
-        """Politely displays any problem (bug, unavailability) related
-        to an attempt to answer a query.
-        """
-        print " ... problem answering the query (likely to %s) : %s" \
-              % (P2pErrbacks.lastAnswerTarget, failure.getTraceback())
-    answerQueryProblem = staticmethod(answerQueryProblem)
-
-
 class P2pQuerier:
     """The P2pQuerier class is responsible for managing P2P queries.
 
@@ -201,23 +183,16 @@
     _receivedQueries = {} # key : queryId, val : query
     _sentQueries = {}
 
-    _ourRPCPort = None
-    
     def __init__(self, nodeId, querier):
         self.nodeId = nodeId  
         self.querier = querier
         self._answerCallbacks = {}
         # now, read a config. provided value for EXPIRATION_TIME
         # and fire the garbage collector
-        config = NodeConfiguration()
-        config.load()
-        P2pQuerier._EXPIRATION_TIME = max(config.query_life_time,
+        P2pQuerier._EXPIRATION_TIME = max(nodeConfig.query_life_time,
                                           P2pQuerier._EXPIRATION_TIME)
         reactor.callLater(self._EXPIRATION_TIME, self._markQueries)
-        # remember once and for all our RPC port
-        P2pQuerier._ourRPCPort = config.rpcserver_port
 
-
     ######## Stuff to remove old queries from cache
         
     def _markQueries(self):
@@ -278,12 +253,14 @@
             d = proxy.callRemote('distributedQuery', query.asKwargs())
             d.addCallback(self.querier.registerNodeActivity)
             d.addErrback(P2pErrbacks.sendQueryProblem)
-            # FIXME : mecanism below might be bogus
+            # FIXME : mecanism below likely to be bogus
             P2pErrbacks.setQueryTarget(target)
             self._sentQueries[query.qid] = query
-            print " ... sent to %s %s %s" % (neighbor.node_id,
-                                             neighbor.ip,
-                                             neighbor.port)
+            print " ... query from %s:%s sent to %s %s %s" % (query.client_host,
+                                                              query.client_port,
+                                                              neighbor.node_id,
+                                                              neighbor.ip,
+                                                              neighbor.port)
 
     def receiveQuery(self, query):
         """
@@ -316,7 +293,7 @@
         # provider is a triple (login, IP, xmlrpc-port)
         provider = (getUserLogin(),
                     socket.gethostbyname(socket.gethostname()),
-                    P2pQuerier._ourRPCPort)
+                    NODE_PORT)
             
         self.relayAnswer(P2pAnswer(query.qid, provider, documents))
 
@@ -334,7 +311,7 @@
                 print " ... bug or dos : we had no query for this answer"
                 return
         print " ... relaying Answer to %s:%s ..." \
-              % (query.host, query.port)
+              % (query.client_host, query.client_port)
         
         toSend = []
         
@@ -353,8 +330,7 @@
         
         if query.sender != self.nodeId: 
             try:
-                host = query.host 
-                port = query.port
+                (host, port) = (query.client_host, query.client_port)
                 print " ... will send answer to %s:%s" % (host, port)
                 senderUrl = 'http://%s:%s' % (host, port)
                 proxy = Proxy(senderUrl)
@@ -362,7 +338,7 @@
                                      query.qid,
                                      self.nodeId,
                                      answer.provider,
-                                     toSend)
+                                     toSend) 
                 d.addCallback(self.querier.registerNodeActivity)
                 d.addErrback(P2pErrbacks.answerQueryProblem)
                 P2pErrbacks.setAnswerTarget(senderUrl)
@@ -374,7 +350,44 @@
     def _selectTargetNeighbors(self, query):
         """return a list of nodes to which the query will be sent.
         """
+        print "TYPE OF TTL", type(query.ttl)
         nbNodes = 2**(max(5, query.ttl))
         # TODO: use the neighbors' profiles to route requests
         return self.querier.getActiveNeighbors(self.nodeId, nbNodes)
         
+
+
+#FIXME: this should be shot (auc)
+
+class P2pErrbacks:
+    """a small namespace to hold errbacks and contextual
+       information so as to display meaningful stuff
+    """
+
+    lastQueryTarget = None
+    lastAnswerTarget = None
+
+    def setQueryTarget(target):
+        P2pErrbacks.lastQueryTarget = target
+    setQueryTarget = staticmethod(setQueryTarget)
+        
+    def setAnswerTarget(target):
+        P2pErrbacks.lastAnswerTarget = target
+    setAnswerTarget = staticmethod(setAnswerTarget)
+
+    def sendQueryProblem(failure):
+        """Politely displays any problem (bug, unavailability) related
+        to an attempt to send a query.
+        """
+        print " ... problem sending the query (likely to %s) : %s" \
+              % (P2pErrbacks.lastQueryTarget, failure.getTraceback())
+    sendQueryProblem = staticmethod(sendQueryProblem)
+
+
+    def answerQueryProblem(failure):
+        """Politely displays any problem (bug, unavailability) related
+        to an attempt to answer a query.
+        """
+        print " ... problem answering the query (likely to %s) : %s" \
+              % (P2pErrbacks.lastAnswerTarget, failure.getTraceback())
+    answerQueryProblem = staticmethod(answerQueryProblem)

Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-18 10:36:16 UTC (rev 558)
+++ trunk/maay/rpc.py	2005-11-18 10:39:28 UTC (rev 559)
@@ -169,13 +169,12 @@
     ###### Peer stuff
 
     def xmlrpc_distributedQuery(self, queryDict):
-        """On node has sent a query (P2pQuerier.sendQuery)
+        """On node has sent a p2p query (P2pQuerier.sendQuery)
         """
         print "MaayRPCServer distributedQuery : %s " % queryDict['words']
         query = P2pQuery.fromDict(queryDict)
-        query.host = self._lastClient.host
         querier = self._sessions[ANONYMOUS_AVATARID]
-        querier.registerNode(query.sender, query.host, query.port)
+        querier.registerNode(query.sender, query.client_host, query.client_port)
         # schedule the query for later processing and return immediately
         # this enables the sender to query several nodes in a row
         reactor.callLater(.01, getP2pQuerier().receiveQuery, query)

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-18 10:36:16 UTC (rev 558)
+++ trunk/maay/webapplication.py	2005-11-18 10:39:28 UTC (rev 559)
@@ -44,6 +44,7 @@
 from maay.dbentity import Document
 from maay import indexer 
 
+
 class INodeConfiguration(Interface):
     """provide an interface in order to be able to remember webappconfig"""
 
@@ -443,9 +444,8 @@
                 localDoc.text = makeAbstract(localDoc.text, self.query.words)
                 results.append(localDoc)
             webappConfig = INodeConfiguration(context)
-            p2pQuery = P2pQuery(webappConfig.get_node_id(),
-                                webappConfig.rpcserver_port,
-                                self.query)
+            p2pQuery = P2pQuery(sender=webappConfig.get_node_id(),
+                                query=self.query)
             self.queryId = p2pQuery.qid
             self.p2pQuery = p2pQuery
             # purge old results



From dnf at berlios.de  Fri Nov 18 11:42:23 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Fri, 18 Nov 2005 11:42:23 +0100
Subject: [Maay-svncheckins] r560 - trunk/maay/win32
Message-ID: <200511181042.jAIAgNdV032739@sheep.berlios.de>

Author: dnf
Date: 2005-11-18 11:42:21 +0100 (Fri, 18 Nov 2005)
New Revision: 560

Modified:
   trunk/maay/win32/updateconfig.py
Log:
Rename variable public-skip into skip


Modified: trunk/maay/win32/updateconfig.py
===================================================================
--- trunk/maay/win32/updateconfig.py	2005-11-18 10:39:28 UTC (rev 559)
+++ trunk/maay/win32/updateconfig.py	2005-11-18 10:42:21 UTC (rev 560)
@@ -63,7 +63,7 @@
     f=open("indexer.ini", "w")
     values = {'private'     : '%s,%s' % (myDesktop, myDocuments),
               'public'      : '%s\\Maay Documents' % myDesktop,
-              'public_skip' : '',
+              'skip' : '',
               }
     f.write(indexer_config % values)
     f.close()



From aurelienc at berlios.de  Fri Nov 18 11:50:26 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Fri, 18 Nov 2005 11:50:26 +0100
Subject: [Maay-svncheckins] r561 - in trunk/maay: . sql
Message-ID: <200511181050.jAIAoQsS001141@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-18 11:50:18 +0100 (Fri, 18 Nov 2005)
New Revision: 561

Modified:
   trunk/maay/dbentity.py
   trunk/maay/querier.py
   trunk/maay/sql/mysql.sql
Log:
Ensure nodeId <=> (ip, port) relationship at database level. Update your schema.


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-18 10:42:21 UTC (rev 560)
+++ trunk/maay/dbentity.py	2005-11-18 10:50:18 UTC (rev 561)
@@ -214,6 +214,8 @@
     key = ('db_document_id',)
     
     def readable_size(self):
+        if not self.size:
+            return 'XXX NO KNOWN SIZE'
         bytes = int(self.size)
         if bytes < 1000:
             return u'%s' % bytes
@@ -473,15 +475,31 @@
     tableName = 'nodes'
     attributes = ('node_id', 'ip', 'port', 'last_seen_time', 'counter',
                   'claim_count', 'affinity', 'bandwidth')
-    key = ('node_id',)
+    key = ('ip', 'port')
 
-    #TODO: ensure nodeID <=> (ip, port)
+    ## def _insertQuery(self):
+##         """generates an INSERT query according to object's state
+##            also update node_id on collisions on (ip, port)"""
+##         values = ['%%(%s)s' % attr for attr in self.attributes
+##                   if hasattr(self, attr)]
+##         query = "INSERT INTO %s (%s) VALUES (%s) " %\
+##                 (self.tableName,
+##                  ', '.join(self.boundAttributes()),
+##                  ', '.join(values))
+##         query += "ON DUPLICATE KEY UPDATE node_id='%s'" % getattr(self, 'node_id')
+##         # update facultative queries
+##         for attr in ('last_seen_time', 'bandwidth', 'counter', 'claim_count', 'affinity'):
+##             if hasattr(self, attr):
+##                 query += ", %s=%s" % (attr, getattr(self, attr))
+##         return query
 
+    # here, insert manages all the cases
+    #_updateQuery = _insertQuery
+
     def _selectRegisteredNodesQuery(cls):
         query = cls._selectQuery()
         query += " WHERE node_id != %s ORDER BY last_seen_time DESC LIMIT %s"
         return query
-    
     _selectRegisteredNodesQuery = classmethod(_selectRegisteredNodesQuery)
 
     def selectRegistered(cls, cursor, currentNodeId, maxResults):

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-18 10:42:21 UTC (rev 560)
+++ trunk/maay/querier.py	2005-11-18 10:50:18 UTC (rev 561)
@@ -277,7 +277,7 @@
             return
         lastSeenTime = lastSeenTime or int(time.time())
         cursor = self._cnx.cursor()
-        node = Node.selectOrInsertWhere(cursor, node_id=nodeId)[0]
+        node = Node.selectOrInsertWhere(cursor, ip=ip, port=port, node_id=nodeId)[0]
         node.ip = ip
         node.port = port
         node.bandwidth = bandwidth or 1

Modified: trunk/maay/sql/mysql.sql
===================================================================
--- trunk/maay/sql/mysql.sql	2005-11-18 10:42:21 UTC (rev 560)
+++ trunk/maay/sql/mysql.sql	2005-11-18 10:50:18 UTC (rev 561)
@@ -119,16 +119,16 @@
 -- 
 
 CREATE TABLE `nodes` (
-  `node_id` char(40) NOT NULL default '',
-  `ip` char(15) NOT NULL default '',
+  `node_id` char(40) NOT NULL default '' UNIQUE,
+  `ip` char(15) NOT NULL, -- default '', oh !
 -- FIXME: this should be unsigned smallint
-  `port` smallint(11) NOT NULL default '0',
-  `last_seen_time` int(11) default NULL,
+  `port` smallint(11) NOT NULL, -- default '0', why ?
+  `last_seen_time` int(11) default 0,
   `counter` int(11) NOT NULL default '0',
   `claim_count` float NOT NULL default '0',
   `affinity` double NOT NULL default '0',
   `bandwidth` int(11) NOT NULL default '0',
-  PRIMARY KEY  (`node_id`)
+  PRIMARY KEY  (`ip`, `port`)
 ) TYPE=MyISAM;
 
 -- --------------------------------------------------------



From dnf at berlios.de  Fri Nov 18 11:55:43 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Fri, 18 Nov 2005 11:55:43 +0100
Subject: [Maay-svncheckins] r562 - trunk/maay
Message-ID: <200511181055.jAIAth9P002269@sheep.berlios.de>

Author: dnf
Date: 2005-11-18 11:55:41 +0100 (Fri, 18 Nov 2005)
New Revision: 562

Modified:
   trunk/maay/webapplication.py
Log:
Fix some typo.



Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-18 10:50:18 UTC (rev 561)
+++ trunk/maay/webapplication.py	2005-11-18 10:55:41 UTC (rev 562)
@@ -141,11 +141,11 @@
     def newDocumentIndexed(self, filename):
         IndexationPage.counter += 1
         if (IndexationPage.counter % 10) == 0:
-            self.updateStatus(u'Indexation in progress - %s docouments indexed'
+            self.updateStatus(u'Indexation in progress - %s documents indexed'
                               % IndexationPage.counter)
 
     def indexationCompleted(self):
-        self.updateStatus(u'Indexation completed (%s doucments indexed)' %
+        self.updateStatus(u'Indexation completed (%s documents indexed)' %
                           (IndexationPage.counter,))
 
     def render_message(self, context, data):



From aurelienc at berlios.de  Fri Nov 18 14:32:25 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Fri, 18 Nov 2005 14:32:25 +0100
Subject: [Maay-svncheckins] r563 - trunk/maay
Message-ID: <200511181332.jAIDWO9K006511@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-18 14:32:22 +0100 (Fri, 18 Nov 2005)
New Revision: 563

Modified:
   trunk/maay/indexer.py
Log:
Should be more robust against random encoding problems


Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-18 10:55:41 UTC (rev 562)
+++ trunk/maay/indexer.py	2005-11-18 13:32:22 UTC (rev 563)
@@ -76,7 +76,36 @@
     else:
         state = Document.PUBLISHED_STATE
     return state
-    
+
+
+def safe_encode(string):
+    """because string.encode('iso-8859-1', 'replace') is not safe"""
+    if not isinstance(string, unicode):
+        uni = string.decode('iso-8859-1', 'replace')
+    else:
+        uni = string
+    res = uni.encode('iso-8859-1', 'replace')
+    return res
+        
+        # type(filepath) = str 
+        # filepath.encode('iso-8859-1', 'replace')
+        #   passe implicitement pas un objet unicode
+        #   Etape1: filepath.decode('', 'ignore') # <--- cette etape foire
+        #   Etape2: filepath.encode() 
+
+
+
+class FileIndexationFailure(Exception):
+
+    def __init__(self, thefile, cause):
+        self.thefile = thefile
+        self.cause = cause
+
+    def __str__(self):
+        return "Won't index %s because %s" % (self.thefile,
+                                              self.cause)
+
+ 
 # TODO: manage periodical runs
 # TODO: memorize state of indexed document to avoid db lookup at each run
 # TODO: do an initial db query to initialize the indexation state (?)
@@ -131,8 +160,7 @@
         for filename in fileset:
             if self.verbose:
                 print "Requesting unindexation of %s" % \
-                      filename.encode('iso-8859-1',
-                                      'replace')
+                      safe_encode(filename)
             self.serverProxy.removeFileInfo(self.cnxId, filename)
         if self.verbose:
             print "Requesting cleanup of unreferenced documents"
@@ -154,48 +182,49 @@
 
     def runIndexer(self, isPrivate=True):
         existingFiles = Set()
-        
         state = docState(isPrivate)
         for filename in self.getFileIterator(isPrivate):
             existingFiles.add(filename)
-            self.indexFile(filename, isPrivate)
+            try:
+                self.indexFile(filename, isPrivate)
+            except FileIndexationFailure, fif: # should be catch-all
+                print fif
+                continue
         return existingFiles
 
     def indexFile(self, filepath, isPrivate=True):
-        if not self.isIndexable(filepath):
-            if self.verbose:
-                print "Indexer indexFile : can't index %s" % \
-                      filepath.encode('iso-8859-1', 'replace')
-            return
-
-        state = docState(isPrivate)
-        fileSize = os.path.getsize(filepath)
-        lastModificationTime = os.path.getmtime(filepath)
-        lastIdxTime, lastIdxState = self.getLastIndexationTimeAndState(filepath)
-        if lastIdxState == state and lastIdxTime >= lastModificationTime:
-            if self.verbose:
-                print "%s didn't change since last indexation" % \
-                      filepath.encode('iso-8859-1', 'replace')
+        try:
+            if not self.isIndexable(filepath):
                 return
-        try:
-            title, text, _, _ = converter.extractWordsFromFile(filepath)
-        except converter.IndexationFailure, exc:
-            if self.verbose:
-                print exc
-            return
-        docId = makeDocumentId(filepath)
-        mime_type = mimetypes.guess_type(filepath)[0]
-        doc = FutureDocument(filename=unicode(filepath,
-                                              self.filesystemEncoding),
-                             title=title, text=text,
-                             fileSize=fileSize,
-                             lastModificationTime=lastModificationTime,
-                             content_hash=docId, mime_type=mime_type,
-                             state=state)
-        self.indexDocument(doc)
+            state = docState(isPrivate)
+            fileSize = os.path.getsize(filepath)
+            lastModificationTime = os.path.getmtime(filepath)
+            lastIdxTime, lastIdxState = self.getLastIndexationTimeAndState(filepath)
+            if lastIdxState == state and lastIdxTime >= lastModificationTime:
+                    raise FileIndexationFailure (safe_encode(filepath),
+                                                 "it didn't change since last indexation")
+            try:
+                title, text, _, _ = converter.extractWordsFromFile(filepath)
+            except converter.IndexationFailure, exc:
+                raise FileIndexationFailure(safe_encode(filepath),
+                                            "converter thus complained : %s" % exc)
+            docId = makeDocumentId(filepath)
+            mime_type = mimetypes.guess_type(filepath)[0]
+            doc = FutureDocument(filename=filepath,
+                                 title=title, text=text,
+                                 fileSize=fileSize,
+                                 lastModificationTime=lastModificationTime,
+                                 content_hash=docId, mime_type=mime_type,
+                                 state=state)
+            self.indexDocument(doc)
+        except FileIndexationFailure:
+            raise
+        except Exception, exc:
+            raise FileIndexationFailure(safe_encode(filepath),
+                                        "an exception %s was raised" % exc)                                        
        
     def getLastIndexationTimeAndState(self, filename):
-        filename = unicode(filename, self.filesystemEncoding)
+        filename = filename
         answer = self.serverProxy.lastIndexationTimeAndState(self.cnxId, filename)
         if answer is None:
             raise MaayAuthenticationError("Bad cnxId sent to the Node")
@@ -206,23 +235,23 @@
         futureDoc.file_state=FileInfo.CREATED_FILE_STATE
         if self.verbose:
             print "Requesting indexation of %s" % \
-                  futureDoc.filename.encode('iso-8859-1', 'replace'),
+                  safe_encode(futureDoc.filename),
         try:
             futureDoc.title = removeControlChar(futureDoc.title) 
             futureDoc.text = removeControlChar(futureDoc.text)
             if self.verbose:
-                print '('+futureDoc.title.encode('iso-8859-1', 'replace')+')'
+                print '('+safe_encode(futureDoc.title)+')'
             self.serverProxy.indexDocument(self.cnxId, futureDoc)
 
         except (Fault, ProtocolError), exc:
             if self.verbose:
                 print "An error occured on the Node while indexing %s" % \
-                      futureDoc.filename.encode('iso-8859-1', 'replace')
+                      safe_encode(futureDoc.filename)
                 print exc
                 print "See Node log for details"
             else:
                 print "Error indexing %s: %s" % \
-                      (futureDoc.filename.encode('iso-8859-1', 'replace'), exc)
+                      (safe_encode(futureDoc.filename), exc)
         for obs in self.observers:
             obs.newDocumentIndexed(futureDoc.filename)
 
@@ -252,7 +281,7 @@
                     print "looking in", dirpath
                     self._removeSkippedDirnames(dirpath, dirnames)
                     for filename in filenames:
-                        if os.access(os.path.join(dirpath, filename), os.R_OK): 
+                        if os.access(os.path.join(dirpath, filename), os.R_OK):
                             yield os.path.join(dirpath, filename)
                     
     def _removeSkippedDirnames(self, dirpath, dirnames):
@@ -265,10 +294,10 @@
 
 ## main() ##################################################
 
-def run(webpage):
+def run(observers=None):
     try:
         try:
-            indexer = Indexer(indexerConfig, observers=[webpage])
+            indexer = Indexer(indexerConfig, observers=observers)
         except MaayAuthenticationError, exc:
             print "AuthenticationError:", exc
             sys.exit(1)
@@ -302,7 +331,7 @@
         print "Indexer already running", indexer_thread
     else:
         print "launching indexer"
-        indexer_thread = Thread(target=run, args=(webpage,))
+        indexer_thread = Thread(target=run, args=([webpage],))
         indexer_thread.start()
 
 # index one file from webapp in a thread
@@ -326,6 +355,8 @@
         print "Cannot contact Node:", exc
         print "Check that the Node is running on %s:%s" % \
               (indexerConfig.host, indexerConfig.port)
+    except FileIndexationFailure, fif:
+        print fif
 
 if __name__ == '__main__':
     run()



From aurelienc at berlios.de  Fri Nov 18 14:37:16 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Fri, 18 Nov 2005 14:37:16 +0100
Subject: [Maay-svncheckins] r564 - trunk/maay/test
Message-ID: <200511181337.jAIDbG1v009451@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-18 14:37:13 +0100 (Fri, 18 Nov 2005)
New Revision: 564

Modified:
   trunk/maay/test/test_p2p.py
Log:
Update tests to reflect API changes


Modified: trunk/maay/test/test_p2p.py
===================================================================
--- trunk/maay/test/test_p2p.py	2005-11-18 13:32:22 UTC (rev 563)
+++ trunk/maay/test/test_p2p.py	2005-11-18 13:37:13 UTC (rev 564)
@@ -27,8 +27,9 @@
 
 class P2pQueryTC(unittest.TestCase):
     def setUp(self):
-        self.query = P2pQuery(sender='http://localhost:3423', # should be a hash (auc)
-                              port=3423,
+        self.query = P2pQuery(sender='http://localhost:3423', # a hash in real life
+                              client_port=3423,
+                              client_host='1.2.3.4',
                               query=Query.fromRawQuery("foo"),
                               qid=42)
 
@@ -52,25 +53,28 @@
         self.assertEquals(self.query.asKwargs(),
                           {'qid' : 42,
                            'sender' : 'http://localhost:3423',
-                           'port' : 3423,
+                           'client_port' : 3423,
+                           'client_host' : '1.2.3.4',
                            'ttl' : 5, # default value
                            'words' : [u'foo'],
-                           'version' : 1,
+                           'version' : 2,
                            'mime_type' : ''})
 
     def testComplexQueryAsKwargs(self):
         query = P2pQuery(sender='http://localhost:3423',
-                         port = 3423,
+                         client_port = 3423,
+                         client_host = '1.2.3.4',
                          ttl=2,
                          query=Query.fromRawQuery("foo bar filetype:pdf"),
                          qid=42)
         self.assertEquals(query.asKwargs(),
                           {'qid' : 42,
                            'sender' : 'http://localhost:3423',
-                           'port' : 3423,
+                           'client_port' : 3423,
+                           'client_host' : '1.2.3.4',
                            'ttl' : 2,
                            'words' : [u'foo', u'bar'],
-                           'version' : 1,
+                           'version' : 2,
                            'mime_type' : 'application/pdf'})
         
     
@@ -79,7 +83,8 @@
     def setUp(self):
         self.querier = P2pQuerier('0'*40, None) 
         self.query = P2pQuery(sender='http://localhost:3423',
-                              port=3423,
+                              client_port=3423,
+                              client_host='1.2.3.4',
                               ttl=2,
                               query=Query.fromRawQuery("foo"))
 



From aurelienc at berlios.de  Fri Nov 18 15:00:25 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Fri, 18 Nov 2005 15:00:25 +0100
Subject: [Maay-svncheckins] r565 - trunk/maay
Message-ID: <200511181400.jAIE0Pxh015967@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-18 15:00:25 +0100 (Fri, 18 Nov 2005)
New Revision: 565

Modified:
   trunk/maay/p2pquerier.py
Log:
Cleanup


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-18 13:37:13 UTC (rev 564)
+++ trunk/maay/p2pquerier.py	2005-11-18 14:00:25 UTC (rev 565)
@@ -76,7 +76,6 @@
 
     _version = 2
     
-#    def __init__(self, sender, originator_port, query, ttl=5,
     def __init__(self, sender, query, ttl=5,
                  qid=None, client_host=None, client_port=None):
         """
@@ -350,7 +349,6 @@
     def _selectTargetNeighbors(self, query):
         """return a list of nodes to which the query will be sent.
         """
-        print "TYPE OF TTL", type(query.ttl)
         nbNodes = 2**(max(5, query.ttl))
         # TODO: use the neighbors' profiles to route requests
         return self.querier.getActiveNeighbors(self.nodeId, nbNodes)



From adimasci at berlios.de  Fri Nov 18 15:27:19 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Fri, 18 Nov 2005 15:27:19 +0100
Subject: [Maay-svncheckins] r566 - in trunk/maay: . test
Message-ID: <200511181427.jAIERJ0B018025@sheep.berlios.de>

Author: adimasci
Date: 2005-11-18 15:27:18 +0100 (Fri, 18 Nov 2005)
New Revision: 566

Modified:
   trunk/maay/indexer.py
   trunk/maay/test/test_fileiteration.py
Log:
- fixed windows specific bug for paths management
- updated tests to make them pass on Windows

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-18 14:00:25 UTC (rev 565)
+++ trunk/maay/indexer.py	2005-11-18 14:27:18 UTC (rev 566)
@@ -272,6 +272,7 @@
         self.indexed = [os.path.abspath(os.path.expanduser(p)) for p in indexed]
         self.skipped = [os.path.abspath(os.path.expanduser(p)) for p in skipped]
         self.skipped = [normalizeCase(p) for p in self.skipped]
+        self.indexed = [normalizeCase(p) for p in self.indexed]
         
     def __iter__(self):
         for path in self.indexed:

Modified: trunk/maay/test/test_fileiteration.py
===================================================================
--- trunk/maay/test/test_fileiteration.py	2005-11-18 14:00:25 UTC (rev 565)
+++ trunk/maay/test/test_fileiteration.py	2005-11-18 14:27:18 UTC (rev 566)
@@ -21,11 +21,14 @@
 __revision__ = '$Id$'
 
 import unittest
+import sys
 import os
+import stat
 from os.path import join, abspath, dirname, exists
-from sets import Set
+from logilab.common.compat import set
+from logilab.common.testlib import TestCase
 
-from maay.indexer import FileIterator
+from maay.indexer import FileIterator, normalizeCase
 
 HERE = dirname(__file__)
 DATADIR = join(HERE, 'data')
@@ -36,13 +39,14 @@
     fp = file(filename, 'w')
     fp.close()
 
-class FileIterationTC(unittest.TestCase):
+class FileIterationTC(TestCase):
     def setUp(self):
         self.pathList = [
-            ('a/b/c', ['foo', 'bar']),
-            ('a/c/d', []), ('a/b/e', []),
-            ('b/c/d', ['baz', 'spam']),
-            ('b/c/e', ['foobar', 'bazbar']),
+            (join('a', 'b', 'c'), ['foo', 'bar']),
+            (join('a', 'c', 'd'), []),
+            (join('a', 'b', 'e'), []),
+            (join('b', 'c', 'd'), ['baz', 'spam']),
+            (join('b', 'c', 'e'), ['foobar', 'bazbar']),
             ]
         for dirpath, filenames in self.pathList:
             realpath = join(DATADIR, dirpath)
@@ -67,12 +71,28 @@
         f.close()
         
 
+    def assertPathEquals(self, path1, path2):
+        """compares normalized versions of <path1> and <path2>"""
+        self.assertEquals(normalizeCase(path1), normalizeCase(path2))
+
+    def assertPathsEqual(self, list1, list2):
+        """comapres list of paths"""
+        for path1, path2 in zip(list1, list2):
+            self.assertPathEquals(path1, path2)
         
+    def assertSetOfPathsEqual(self, list1, list2):
+        """comapres order-free list of paths"""
+        set1 = set([normalizeCase(path) for path in list1])
+        set2 = set([normalizeCase(path) for path in list2])
+        self.assertSetEqual(set1, set2)
+    
     def tearDown(self):
         for dirpath, filenames in self.pathList:
             realpath = join(DATADIR, dirpath)
             for filename in filenames:
-                os.remove(join(realpath, filename))
+                filepath = join(realpath, filename)
+                os.chmod(filepath, stat.S_IWRITE)
+                os.remove(filepath)
             os.removedirs(realpath)
         os.remove(join(DATADIR, '\xe2\x99\xaa\xe2\x99\xac'))
 
@@ -87,17 +107,19 @@
         self.assertEquals(list(it), [])
         it = FileIterator([join(DATADIR, 'a'), join(DATADIR, 'b'),
                            join(DATADIR, 'c')])
-        expected = Set([abspath(join(DATADIR, 'a', 'b', 'c', 'bar')),
-                        abspath(join(DATADIR, 'a', 'b', 'c', 'foo')),
-                        abspath(join(DATADIR, 'b', 'c', 'd', 'baz')),
-                        abspath(join(DATADIR, 'b', 'c', 'd', 'spam')),
-                        abspath(join(DATADIR, 'b', 'c', 'e', 'bazbar')),
-                        abspath(join(DATADIR, 'b', 'c', 'e', 'foobar')),
-                        ])
-        self.assertEquals(Set(it), expected)
+        expected = [abspath(join(DATADIR, 'a', 'b', 'c', 'bar')),
+                    abspath(join(DATADIR, 'a', 'b', 'c', 'foo')),
+                    abspath(join(DATADIR, 'b', 'c', 'd', 'baz')),
+                    abspath(join(DATADIR, 'b', 'c', 'd', 'spam')),
+                    abspath(join(DATADIR, 'b', 'c', 'e', 'bazbar')),
+                    abspath(join(DATADIR, 'b', 'c', 'e', 'foobar')),
+                    ]
+        self.assertSetOfPathsEqual(it, expected)
 
     def testEverythingSkipped(self):
-        everything = ['data/a', 'data/b', 'data/c']
+        everything = [join('data', 'a'),
+                      join('data', 'b'),
+                      join('data', 'c')]
         it = FileIterator(everything, everything)
         self.assertEquals(list(it), [])
 
@@ -107,15 +129,17 @@
                       join(DATADIR, 'c')]
         skipped = [join(DATADIR, 'a'), join(DATADIR, 'b', 'c', 'e')]
         it = FileIterator(everything, skipped)
-        expected = Set([abspath(join(DATADIR, 'b', 'c', 'd', 'baz')),
-                        abspath(join(DATADIR, 'b', 'c', 'd', 'spam')),
-                        ])
-        self.assertEquals(expected, Set(it))
+        expected = [abspath(join(DATADIR, 'b', 'c', 'd', 'baz')),
+                    abspath(join(DATADIR, 'b', 'c', 'd', 'spam')),
+                    ]
+        self.assertSetOfPathsEqual(it, expected)
 
     def testRelativePathConversion(self):
         """FileIterator should automatically convert relative paths"""
-        paths = [(['data/a'], ['data/b']),
-                 (['/data/a'], ['/data/b', 'data/c'])]
+        paths = [([join('data', 'a')], [join('data', 'b')]),
+                 ([join(os.sep, 'data', 'a')],
+                  [join(os.sep, 'data', 'b'),
+                   join(os.sep, 'data', 'c'),])]
         for indexed, skipped in paths:
             onRelatives = list(FileIterator(indexed, skipped))
             absIndexed = [abspath(path) for path in indexed]
@@ -125,17 +149,20 @@
 
     def testSkipNonAllowed(self):
         """tests that files that don't have 'read' permission are skipped"""
-        # these two files should be skipped
-        os.chmod(join(DATADIR, 'a/b/c/foo'), 0)
-        os.chmod(join(DATADIR, 'b/c/d/spam'), 0)
-        it = FileIterator([join(DATADIR, 'a'), join(DATADIR, 'b'),
-                           join(DATADIR, 'c')])
-        expected = Set([abspath(join(DATADIR, 'a', 'b', 'c', 'bar')),
+        if sys.platform == 'win32':
+            print "os.chmod() is very limited on windows platforms, I skip this test"
+        else:
+            # these two files should be skipped
+            os.chmod(join(DATADIR, 'a', 'b', 'c', 'foo'), 0)
+            os.chmod(join(DATADIR, 'b', 'c', 'd', 'spam'), 0)
+            it = FileIterator([join(DATADIR, 'a'), join(DATADIR, 'b'),
+                               join(DATADIR, 'c')])
+            expected = [abspath(join(DATADIR, 'a', 'b', 'c', 'bar')),
                         abspath(join(DATADIR, 'b', 'c', 'd', 'baz')),
                         abspath(join(DATADIR, 'b', 'c', 'e', 'bazbar')),
                         abspath(join(DATADIR, 'b', 'c', 'e', 'foobar')),
-                        ])
-        self.assertEquals(Set(it), expected)
+                        ]
+            self.assertSetOfPathsEqual(it, expected)
 
     def testDontChokeOnWeirdFilename(self):
         """we should iter without pain on everything in DATADIR, including



From adimasci at berlios.de  Fri Nov 18 15:28:14 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Fri, 18 Nov 2005 15:28:14 +0100
Subject: [Maay-svncheckins] r567 - trunk/maay/test
Message-ID: <200511181428.jAIESEHQ018174@sheep.berlios.de>

Author: adimasci
Date: 2005-11-18 15:28:13 +0100 (Fri, 18 Nov 2005)
New Revision: 567

Modified:
   trunk/maay/test/test_dbentity.py
Log:
fixed ResultsTC to match the new Result API / description

Modified: trunk/maay/test/test_dbentity.py
===================================================================
--- trunk/maay/test/test_dbentity.py	2005-11-18 14:27:18 UTC (rev 566)
+++ trunk/maay/test/test_dbentity.py	2005-11-18 14:28:13 UTC (rev 567)
@@ -79,25 +79,25 @@
 class ResultTC(unittest.TestCase):
 
     def testBuildFromLocalDocument(self):
-        document = Document(db_document_id='foo', mime_type='application/pdf')
+        document = Document(document_id='foo', mime_type='application/pdf')
         result = Result.fromDocument(document, 'qid')
-        self.assertEquals(result.db_document_id, 'foo')
+        self.assertEquals(result.document_id, 'foo')
         self.assertEquals(result.query_id, 'qid')
         self.assertEquals(result.host, 'localhost')
         self.assertEquals(result.mime_type, 'application/pdf')
-        self.assertEquals(result.boundAttributes(), ['db_document_id', 'query_id',
+        self.assertEquals(result.boundAttributes(), ['document_id', 'query_id',
                                                      'mime_type', 'host', 'port'])
         
     def testBuildFromDistantDocument(self):
-        document = Document(db_document_id='foo', mime_type='application/pdf')
+        document = Document(document_id='foo', mime_type='application/pdf')
         result = Result.fromDocument(document, 'qid', ('adim', 'IP', 'PORT'))
-        self.assertEquals(result.db_document_id, 'foo')
+        self.assertEquals(result.document_id, 'foo')
         self.assertEquals(result.mime_type, 'application/pdf')
         self.assertEquals(result.login, 'adim')
         self.assertEquals(result.host, 'IP')
         self.assertEquals(result.query_id, 'qid')
         self.assertEquals(result.port, 'PORT')
-        self.assertEquals(result.boundAttributes(), ['db_document_id', 'query_id', 'mime_type',
+        self.assertEquals(result.boundAttributes(), ['document_id', 'query_id', 'mime_type',
                                                      'host', 'port', 'login'])
 
 



From adimasci at berlios.de  Fri Nov 18 15:35:59 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Fri, 18 Nov 2005 15:35:59 +0100
Subject: [Maay-svncheckins] r568 - trunk/maay
Message-ID: <200511181435.jAIEZxrx018807@sheep.berlios.de>

Author: adimasci
Date: 2005-11-18 15:35:59 +0100 (Fri, 18 Nov 2005)
New Revision: 568

Modified:
   trunk/maay/dbentity.py
   trunk/maay/p2pquerier.py
   trunk/maay/querier.py
   trunk/maay/query.py
Log:
limit peer results to 50 / peer (be nice with the network)

Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-18 14:28:13 UTC (rev 567)
+++ trunk/maay/dbentity.py	2005-11-18 14:35:59 UTC (rev 568)
@@ -230,7 +230,10 @@
         return self.text[:200]
     abstract = property(get_abstract)
 
-    def _selectContainingQuery(cls, words, mimetype=None, offset=0, allowPrivate=False):
+    # XXX Please rewrite this method. The way we build the SQL
+    #     query is quite messy
+    def _selectContainingQuery(cls, words, mimetype=None, offset=0,
+                               limit=None, allowPrivate=False):
         # XXX mimetype handling is a HACK. It needs to be integrated
         #     nicely in order to handle any kind of restrictions easily
         #word = WORDS_RGX.finditer(normalizeText(' '.join(words)))
@@ -265,16 +268,21 @@
                  "HAVING count(DS.db_document_id) = %%s "
                  "ORDER BY D.publication_time DESC " % \
                  (', '.join(['%s'] * len(words)), restriction))
+        # XXX SQL: how to specify only the OFFSET ???????
+        if limit or offset:
+            query += " LIMIT %s OFFSET %s" % (limit or 50, offset)
         return query, words + restrictionParams + [len(words)]
 
     _selectContainingQuery = classmethod(_selectContainingQuery)
 
-    def selectContaining(cls, cursor, words, mimetype=None, offset=0, allowPrivate=False):
+    def selectContaining(cls, cursor, words, mimetype=None, offset=0,
+                         limit=None, allowPrivate=False):
         print "Document selectContaining %s" % words
         if not words:
             return []
         query, params = cls._selectContainingQuery(words, mimetype,
                                                    offset=offset,
+                                                   limit=limit,
                                                    allowPrivate=allowPrivate)
         if query:
             cursor.execute(query, params)

Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-18 14:28:13 UTC (rev 567)
+++ trunk/maay/p2pquerier.py	2005-11-18 14:35:59 UTC (rev 568)
@@ -71,7 +71,15 @@
         self.local_version = local_version
         self.query_version = query_version
 
-# XXX should P2pQuery derive from query.Query? (auc : no)
+# This variable is hardcoded for now and describes the maximum
+# number of results relayed by each peer.
+# This might cause the results to be very incomplete and it will
+# be improved in the future, but for now:
+#  - 50 results per node with a good ranking system is
+#    acceptable
+#  - it should lightweight the network
+LIMIT = 50
+
 class P2pQuery:
 
     _version = 2
@@ -96,6 +104,8 @@
         #self.port = originator_port
         self.ttl = ttl
         self.query = query
+        # explicitly set the 'limit' attribute for P2P queries
+        self.query.limit = LIMIT
         self.documents_ids = set()
         # *** client_host: IP adress of immediate client (computed at reception)
         # *** client_port: rpc port of immediate client (provided by client)
@@ -278,9 +288,7 @@
         query.hop()        
         if query.ttl > 0:
             self.sendQuery(query)
-
         documents = self.querier.findDocuments(query.query)
-
         if len(documents) == 0:
             print " ... no document matching the query, won't answer."
             return
@@ -313,7 +321,6 @@
               % (query.client_host, query.client_port)
         
         toSend = []
-        
         for document in answer.documents:
             if not isinstance(document, dict):
                 document = document.__dict__

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-18 14:28:13 UTC (rev 567)
+++ trunk/maay/querier.py	2005-11-18 14:35:59 UTC (rev 568)
@@ -156,7 +156,8 @@
         try:
             cursor = self._cnx.cursor()
             return Document.selectContaining(cursor, words, query.filetype,
-                                             query.offset, self.searchInPrivate)
+                                             query.offset, query.limit,
+                                             self.searchInPrivate)
         finally:
             traceback.print_exc()
             cursor.close()

Modified: trunk/maay/query.py
===================================================================
--- trunk/maay/query.py	2005-11-18 14:28:13 UTC (rev 567)
+++ trunk/maay/query.py	2005-11-18 14:35:59 UTC (rev 568)
@@ -53,6 +53,7 @@
         self.offset = offset
         self.filetype = filetype
         self.filename = filename
+        self.limit = None
 
     def fromRawQuery(rawQuery, offset=0):
         """:type rawQuery: str"""



From dnf at berlios.de  Fri Nov 18 15:47:39 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Fri, 18 Nov 2005 15:47:39 +0100
Subject: [Maay-svncheckins] r569 - in trunk/maay: . data
Message-ID: <200511181447.jAIEldOK019922@sheep.berlios.de>

Author: dnf
Date: 2005-11-18 15:47:38 +0100 (Fri, 18 Nov 2005)
New Revision: 569

Modified:
   trunk/maay/data/liveresults.html
   trunk/maay/data/maay.css
   trunk/maay/data/searchform.html
   trunk/maay/data/skeleton.html
   trunk/maay/dbentity.py
   trunk/maay/querier.py
   trunk/maay/webapplication.py
Log:
Some esthetic modifications.



Modified: trunk/maay/data/liveresults.html
===================================================================
--- trunk/maay/data/liveresults.html	2005-11-18 14:35:59 UTC (rev 568)
+++ trunk/maay/data/liveresults.html	2005-11-18 14:47:38 UTC (rev 569)
@@ -43,7 +43,7 @@
 
   </head>
   <body onload="startConnection()">
-    <div class="headlinks"><a href="/indexation" class="headlink">[Indexation&nbsp;Page]&nbsp;</a></div>
+    <div class="headlinks"><a href="/indexation" class="headlink">[Manage Folders]</a></div>
     <div class="reSearch">
       <form action="search" accept-charset="utf-8">
 	<table>

Modified: trunk/maay/data/maay.css
===================================================================
--- trunk/maay/data/maay.css	2005-11-18 14:35:59 UTC (rev 568)
+++ trunk/maay/data/maay.css	2005-11-18 14:47:38 UTC (rev 569)
@@ -32,6 +32,11 @@
 }
 
 /** search page *******/
+div.shortDocStat {
+  font-size: 60%;
+}
+
+
 input.searchButton {
   background: #FFF0FF;
   border: 1px outset #ff2222;

Modified: trunk/maay/data/searchform.html
===================================================================
--- trunk/maay/data/searchform.html	2005-11-18 14:35:59 UTC (rev 568)
+++ trunk/maay/data/searchform.html	2005-11-18 14:47:38 UTC (rev 569)
@@ -18,6 +18,10 @@
             <input type="text" name="words" value="" />
               <input type="submit" class="searchButton" value="search" />
           </form>
+          <font color="orange" size="+1">Search and share your documents.</font><br /><br />
+          <div class="shortDocStat" nevow:render="shortstat">
+            Searching <nevow:slot name="localDocumentCount" /> documents. Sharing <nevow:slot name="publicDocumentCount" /> documents.
+          </div>
         </td>
       </tr>
     </table>

Modified: trunk/maay/data/skeleton.html
===================================================================
--- trunk/maay/data/skeleton.html	2005-11-18 14:35:59 UTC (rev 568)
+++ trunk/maay/data/skeleton.html	2005-11-18 14:47:38 UTC (rev 569)
@@ -6,7 +6,7 @@
     <link rel="stylesheet" type="text/css" href="maaycss"/>
       <link rel="shortcut icon" href="images/maay.ico" />
   </head>
-      <div class="headlinks"><a href="/indexation" class="headlink">[Indexation&nbsp;Page]&nbsp;</a></div>
+      <div class="headlinks"><a href="/indexation" class="headlink">[Manage Folders]</a></div>
   <body>
     <nevow:invisible nevow:macro="body" />
     <nevow:invisble nevow:macro="footer" />

Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-18 14:35:59 UTC (rev 568)
+++ trunk/maay/dbentity.py	2005-11-18 14:47:38 UTC (rev 569)
@@ -189,7 +189,9 @@
     and only a few words are known
 
     * UNKNOWN_STATE (???): not documented in the thesis, has a strange
-      value (1<<9) since it gets stored in a char or a signed byte
+      value (1<<9) since it gets stored in a char or a signed byte.
+      In fact, this state was (plan to be) used in the prototype for
+      debugging purpose. So it is a useless state... 
     """
 
     # Caution : in the maay.orig branch, this parameter gets stored as
@@ -303,6 +305,19 @@
         return results[0]
     selectUrlAndTypeWhereDocid = classmethod(selectUrlAndTypeWhereDocid)
 
+    # for stat purpose
+    def getDocumentCount(cls, cursor):
+        query = "SELECT state, count(*) FROM documents GROUP BY state"
+        cursor.execute(query)
+        results = cursor.fetchall()
+
+        docCounts = {Document.PUBLISHED_STATE:0, Document.PRIVATE_STATE:0,
+            Document.CACHED_STATE:0, Document.KNOWN_STATE:0}
+
+        for result in results:
+            docCounts[int(result[0])] = result[1]
+        return docCounts
+    getDocumentCount = classmethod(getDocumentCount)
     
 class Result(Document):
     """Results are temporary relations created/destroyed on the fly

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-18 14:35:59 UTC (rev 568)
+++ trunk/maay/querier.py	2005-11-18 14:47:38 UTC (rev 569)
@@ -60,6 +60,9 @@
         """returns a list of indexed file names as strings
         """
 
+    def getDocumentCount(self):
+        """get document count"""
+
     def indexDocument(nodeId, futureDoc):
         """Inserts or update information in table documents,
         file_info, document_score and word"""
@@ -418,6 +421,13 @@
         print "removed %d rows related to unreferenced documents" % rows
         return rows
 
+    def getDocumentCount(self):
+        """get document count"""
+        cursor = self._cnx.cursor()
+        docCounts = Document.getDocumentCount(cursor)
+        cursor.close()
+        return docCounts
+
     def indexDocument(self, nodeId, futureDoc):
         """Inserts or update information in table documents,
         file_info, document_score and word"""

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-18 14:35:59 UTC (rev 568)
+++ trunk/maay/webapplication.py	2005-11-18 14:47:38 UTC (rev 569)
@@ -193,15 +193,18 @@
         self.querier = querier
         self.p2pquerier = p2pquerier
         self.download_dir = indexer.indexerConfig.download_dir
+
+    def render_shortstat(self, context, data):
+        docCounts = self.querier.getDocumentCount()
+        context.fillSlots('localDocumentCount', docCounts[Document.PRIVATE_STATE] + docCounts[Document.PUBLISHED_STATE]) 
+        context.fillSlots('publicDocumentCount', docCounts[Document.PUBLISHED_STATE]) 
+        return context.tag
         
     def logout(self):
         print "Bye %s !" % (self.maayId,)
         # XXX: logout message should be forwarded to presence server
         return None
 
-    def child_peers(self, context):
-        return PeersList(self.maayId, self.querier)
-
     def child_indexation(self, context, _factory=IndexationPageFactory(IndexationPage)):
         # TODO: check if the added folders are valid
 



From afayolle at berlios.de  Fri Nov 18 16:14:32 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Fri, 18 Nov 2005 16:14:32 +0100
Subject: [Maay-svncheckins] r570 - in trunk: . doc
Message-ID: <200511181514.jAIFEWHC022101@sheep.berlios.de>

Author: afayolle
Date: 2005-11-18 16:14:31 +0100 (Fri, 18 Nov 2005)
New Revision: 570

Added:
   trunk/DEVEL.txt
   trunk/INSTALL.txt
   trunk/doc/DEVEL.html
   trunk/doc/INSTALL.html
Modified:
   trunk/README.txt
   trunk/doc/README.html
Log:
updated some documentation

Added: trunk/DEVEL.txt
===================================================================
--- trunk/DEVEL.txt	2005-11-18 14:47:38 UTC (rev 569)
+++ trunk/DEVEL.txt	2005-11-18 15:14:31 UTC (rev 570)
@@ -0,0 +1,106 @@
+===========================
+Maay development guidelines
+===========================
+
+.. revision: $Id$
+
+Scope of this document
+======================
+
+This document is a collection of tips to help Maay contributors. It
+will be expanded as needs arise.
+
+
+Generating a Windows installer
+==============================
+
+Setting up the Windows machine
+------------------------------
+
+Download and install `Python 2.4`_ and update your PATH environment variable
+so that c:\python24 belongs to the path. Do it right away this will 
+save precious time and frustration.
+
+Install `Inno Setup`_, `py2exe`_, `pywin32`_ which are used to produce
+the installer. You will probably want to install a Subversion client
+such as `Tortoise SVN`_, as well as putty_ to benefit from the
+``pageant`` ssh agent and avoid typing your berlios password again and
+again. 
+
+Checkout the Maay sources from Berlios. 
+
+You need to install the dependencies of Maay too. Download and install
+the following python modules (take care when downloading a windows
+installer, it has to be built for Python 2.4): 
+
+ * `egenix-mx-base`_
+ * `mysql-python`_
+ * `twisted-2.0.1`_ 
+ * `nevow-0.6`_
+ * `PIL`_
+ * `logilab-common-0.12.1`_
+
+If there is no windows installer available for the package, it most
+certainly means that it is a pure Python library. Unpack the source
+archive in a temporary directory and use a command prompt window to
+run ``python setup.py bdist_wininst`` in that directory. This will
+generate a Windows installer in the ``dist`` subdirectory, which you
+can run to install the library.
+
+Download the `mysql-4.1-noinstall` prebuilt zip file, and unzip it in
+``trunk\thirdparty`` (where ``trunk`` is the Subversion checkout
+directory). Rename ``trunk\thirdparty\mysql-4.1`` to
+``trunk\thirdparty`mysql``.
+
+Download and unpack `antiword`_, `unrtf`_ and `pdftohtml` in
+``trunk\thirdparty``. I think this is all and correct. Fortunately,
+all of this only has to be done once. 
+
+.. _Python 2.4: http://www.python.org/2.4/
+.. _Inno Setup: http://www.jrsoftware.org/isdl.ph
+.. _py2exe: http://sourceforge.net/projects/py2exe/
+.. _pywin32: http://starship.python.net/crew/mhammond/win32/Downloads.html
+.. _Tortoise SVN: http://tortoisesvn.tigris.org/download.html
+.. _putty: http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html
+.. _egenix-mx-base: http://www.egenix.com/files/python/eGenix-mx-Extensions.html#Download-mxBASE
+.. _mysql-python: http://sourceforge.net/project/showfiles.php?group_id=22307&release_id=102893
+.. _twisted-2.0.1: http://twistedmatrix.com/projects/core/
+.. _nevow-0.6: http://divmod.org/projects/nevow
+.. _PIL: http://www.pythonware.com/products/pil/
+.. _logilab-common-0.12.1:  http://www.logilab.org/projects/common
+.. _mysql-4.1-noinstall: http://dev.mysql.com/get/Downloads/MySQL-4.1/mysql-4.1.15-win32.zip/from/pick#mirrors
+.. _antiword: http://www.informatik.uni-frankfurt.de/~markus/antiword/
+.. _unrtf: http://gnuwin32.sourceforge.net/packages/unrtf.htm
+.. _pdftohtml: http://sourceforge.net/projects/pdftohtml/
+
+Generating the installer
+------------------------
+
+ * In a shell window, navigate to the trunk directory. 
+
+ * Run ``python setup.py py2exe > py2exe.log``
+
+ * Examine ``py2exe.log`` for possible errors or missing modules
+
+ * Launch Inno setup by double clickink on ``maay.iss``
+
+ * Select the right option in the menu to generate the installer
+
+It is probably possible to right click on ``maay.iss`` and to compile
+directly from Windows Explorer. I prefer compiling from the Inno Setup
+GUI because it is possible to run the installer and uninstaller from
+the application and get a log displayed.
+
+What if it does not work?
+-------------------------
+
+The author admits that he may have got one of the preparation step
+wrong. Please send a mail on the ``maay-dev`` mailing list and we will
+try to help.
+
+Generating a source distribution
+================================
+
+Go the trunk directory and run ``python setup.py sdist``
+
+


Property changes on: trunk/DEVEL.txt
___________________________________________________________________
Name: svn:keyword
   + Id
Name: svn:keywords
   + "Id"
Name: svn:eol-style
   + native

Added: trunk/INSTALL.txt
===================================================================
--- trunk/INSTALL.txt	2005-11-18 14:47:38 UTC (rev 569)
+++ trunk/INSTALL.txt	2005-11-18 15:14:31 UTC (rev 570)
@@ -0,0 +1,93 @@
+========================
+Maay Installation Manual
+========================
+
+.. revision: $Id$
+
+
+Installing Maay on Windows
+==========================
+
+On the Windows platform, it is recommended to use the Windows
+installer available from http://developer.berlios.de/projects/maay/ 
+
+and run it. This should
+install and setup everything properly. 
+
+Installing Maay on Linux from a package
+=======================================
+
+Maay has not yet been packaged for any Linux distribution. Debian
+packages are being worked on. Contributions of RPMs for various
+RPM-based distributions are welcome. 
+
+Installing Maay from source
+===========================
+
+These instruction are intended for people using a unix-like
+OS. Windows users are strongly advised to use the Windows installer. 
+
+A few Python libraries are required to make the whole think work. Most
+of them should be available in your OS distribution too :
+
+ * logilab common libraries 0.12.1 or above (http://www.logilab.org/projects/common)
+ * mysql-python (http://sourceforge.net/projects/mysql-python)
+ * python-twisted 2.0 or above (http://twistedmatrix.com/projects/core/)
+ * python-twisted-web 0.5 or above (http://twistedmatrix.com/projects/web/)
+ * python-nevow 0.6 or above (http://divmod.org/projects/nevow) 
+ * python-imaging (http://www.pythonware.com/products/pil/)
+ * mxDatetime (http://www.egenix.com/files/python/mxDateTime.html)
+
+You will also need a few helper applications to perform the conversion
+of various binary formats to something that Maay can index. There is
+probably a prebuilt binary available for your OS distribution
+somewhere. You will need to download and install :
+
+ * pdftohtml (http://pdftohtml.sourceforge.net/)
+ * antiword (http://www.winfield.demon.nl/)
+ * unrtf (http://www.gnu.org/software/unrtf/unrtf.html)
+ * ghostscript (http://www.cs.wisc.edu/~ghost/)
+
+The indexation part uses a MySQL database, version 4.1
+(http://www.mysql.org/). You will need to install such a database or
+get in touch with your DBA. The following assumes a local mysql
+installation, with no root password. Maay has not been tested with
+MySQL 5.0, but it should work. Please report if you encounter problems
+with this version of MySQL.
+
+Once everything else is installed, you can point you web browser to
+http://developer.berlios.de/projects/maay/ and download the latest
+source tarball. Unpack it, go to the newly created directory and run::
+
+ # python setup.py install
+
+Create the MySQL database instance that will store the indexation
+data::
+
+ # mysql -u root mysql
+ mysql> \. maay/sql/mysql.sql
+
+You're done! Read the README document to learn how to use Maay. 
+
+Working on the bleeding edge
+============================
+
+You can download the latest Maay sources from the SVN
+repository. Use the following for the initial source checkout::
+
+ svn checkout svn://svn.berlios.de/maay/trunk
+
+You will also need to download and install all the dependencies
+mentionned in the previous section, and to configure a mysql database
+as explained. 
+
+When working with this directory structure, you don't have to install
+Maay using setup.py. Just add the trunk directory to the PYTHONPATH
+environment variable, and run the trunk/maay/bin/maay-node script to
+launch the server. The --help command line option will provide
+information about what configuration options are available. You can
+also copy the ini files in  trunk/maay/configuration/ files to ~/.maay/ and edit
+them to match your settings. 
+
+ Alexandre Fayolle <alexandre.fayolle at logilab.fr>, Fri, 18 Nov 2005 15:00:36 +0100
+


Property changes on: trunk/INSTALL.txt
___________________________________________________________________
Name: svn:keyword
   + Id
Name: svn:keywords
   + "Id"
Name: svn:eol-style
   + native

Modified: trunk/README.txt
===================================================================
--- trunk/README.txt	2005-11-18 14:47:38 UTC (rev 569)
+++ trunk/README.txt	2005-11-18 15:14:31 UTC (rev 570)
@@ -2,6 +2,7 @@
 Maay documentation
 ==================
 
+.. revision: $Id$
 
 Warning
 =======
@@ -36,75 +37,17 @@
  * a presence server, which can handle presence information from maay
    nodes, in order to seed the node database. 
 
-How do I install Maay from source?
-==================================
 
-These instruction are intended for people using a unix-like
-OS. Windows users are strongly advised to use the prebuilt package
-(see below).
-
-A few Python libraries are required to make the whole think work. Most
-of them should be available in your OS distribution too :
-
- * logilab common libraries 0.12.1 or above (http://www.logilab.org/projects/common)
- * mysql-python (http://sourceforge.net/projects/mysql-python)
- * python-twisted 2.0 or above ((http://twistedmatrix.com/projects/core/)
- * python-twisted-web 0.5 or above (http://twistedmatrix.com/projects/web/)
- * python-nevow 0.6 or above (http://divmod.org/projects/nevow) 
- * python-imaging (http://www.pythonware.com/products/pil/)
- * mxDatetime (http://www.egenix.com/files/python/mxDateTime.html)
-
-You will also need a few helper applications to perform the conversion
-of various binary formats to something that Maay can index. There is
-probably a prebuilt binary available for your OS distribution
-somewhere. You will need to download and install :
-
- * pdftohtml (http://pdftohtml.sourceforge.net/)
- * antiword (http://www.winfield.demon.nl/)
- * unrtf (http://www.gnu.org/software/unrtf/unrtf.html)
-
-The indexation part uses a MySQL database, version 4.1
-(http://www.mysql.org/). You will need to install such a database or
-get in touch with your DBA. The following assumes a local mysql
-installation, with no root password. Maay has not been tested with
-MySQL 5.0, but it should work. Please report if you encounter problems
-with this version of MySQL.
-
-Once everything else is installed, you can point you web browser to
-http://developer.berlios.de/projects/maay/ and download the latest
-source tarball. Unpack it, go to the newly created directory and run::
-
- # python setup.py install
-
-It is now necessary to create the MySQL database instance that will
-store the indexation data::
-
- # mysql -u root mysql
- mysql> \. sql/mysql.sql
-
-You're done! See a bit further down in this document for how to start
-using Maay. 
-
-How do I install Maay from a package?
-=====================================
-
-For now, only a Windows installer is available. Download it from
-http://developer.berlios.de/projects/maay/ and run it. This should
-install and setup everything properly. 
-
-A package for the Debian GNU/Linux distribution will soon be made
-available. 
-
 How do I start using Maay?
 ==========================
 
-First, edit the configuration files. On Windows, they are in 
+First, edit the configuration files. On Windows, they are in
 C:\Program Files\Maay\webapp.ini and C:\Program
 Files\Maay\indexer.ini. The Windows installer should have set the
-different configuration values
-On Unix systems, they are in /etc/maay, and you can copy them to 
-~/.maay/ if you want to have some personnalized settings. Pay attention 
-to the index-dir and skip-dir settings in indexer.ini.
+different configuration values.  On Unix systems, they are in
+/etc/maay, and you can copy them to ~/.maay/ if you want to have some
+personnalized settings. Pay attention to the index-dir and skip-dir
+settings in indexer.ini.
 
 Then, start the Maay service. On Windows, this is done automatically
 when your machine boots. On unix systems, use /usr/bin/maay-server
@@ -145,5 +88,6 @@
 won't give us any clue to help you. 
 
 
- Alexandre Fayolle <alexandre.fayolle at logilab.fr>, Tue, 15 Nov 2005 09:41:54 +0100
+ Alexandre Fayolle <alexandre.fayolle at logilab.fr>, Fri, 18 Nov 2005 15:00:58 +0100
 
+


Property changes on: trunk/README.txt
___________________________________________________________________
Name: svn:keyword
   + Id

Added: trunk/doc/DEVEL.html
===================================================================
--- trunk/doc/DEVEL.html	2005-11-18 14:47:38 UTC (rev 569)
+++ trunk/doc/DEVEL.html	2005-11-18 15:14:31 UTC (rev 570)
@@ -0,0 +1,88 @@
+<?xml version="1.0" encoding="utf-8" ?>
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
+<head>
+<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
+<meta name="generator" content="Docutils 0.3.9: http://docutils.sourceforge.net/" />
+<title>Maay development guidelines</title>
+<link rel="stylesheet" href="default.css" type="text/css" />
+</head>
+<body>
+<div class="document" id="maay-development-guidelines">
+<h1 class="title">Maay development guidelines</h1>
+<!-- revision: $Id$ -->
+<div class="section" id="scope-of-this-document">
+<h1><a name="scope-of-this-document">Scope of this document</a></h1>
+<p>This document is a collection of tips to help Maay contributors. It
+will be expanded as needs arise.</p>
+</div>
+<div class="section" id="generating-a-windows-installer">
+<h1><a name="generating-a-windows-installer">Generating a Windows installer</a></h1>
+<div class="section" id="setting-up-the-windows-machine">
+<h2><a name="setting-up-the-windows-machine">Setting up the Windows machine</a></h2>
+<p>Download and install <a class="reference" href="http://www.python.org/2.4/">Python 2.4</a> and update your PATH environment variable
+so that c:python24 belongs to the path. Do it right away this will 
+save precious time and frustration.</p>
+<p>Install <a class="reference" href="http://www.jrsoftware.org/isdl.ph">Inno Setup</a>, <a class="reference" href="http://sourceforge.net/projects/py2exe/">py2exe</a>, <a class="reference" href="http://starship.python.net/crew/mhammond/win32/Downloads.html">pywin32</a> which are used to produce
+the installer. You will probably want to install a Subversion client
+such as <a class="reference" href="http://tortoisesvn.tigris.org/download.html">Tortoise SVN</a>, as well as <a class="reference" href="http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html">putty</a> to benefit from the
+<tt class="docutils literal"><span class="pre">pageant</span></tt> ssh agent and avoid typing your berlios password again and
+again.</p>
+<p>Checkout the Maay sources from Berlios.</p>
+<p>You need to install the dependencies of Maay too. Download and install
+the following python modules (take care when downloading a windows
+installer, it has to be built for Python 2.4):</p>
+<blockquote>
+<ul class="simple">
+<li><a class="reference" href="http://www.egenix.com/files/python/eGenix-mx-Extensions.html#Download-mxBASE">egenix-mx-base</a></li>
+<li><a class="reference" href="http://sourceforge.net/project/showfiles.php?group_id=22307&amp;release_id=102893">mysql-python</a></li>
+<li><a class="reference" href="http://twistedmatrix.com/projects/core/">twisted-2.0.1</a></li>
+<li><a class="reference" href="http://divmod.org/projects/nevow">nevow-0.6</a></li>
+<li><a class="reference" href="http://www.pythonware.com/products/pil/">PIL</a></li>
+<li><a class="reference" href="http://www.logilab.org/projects/common">logilab-common-0.12.1</a></li>
+</ul>
+</blockquote>
+<p>If there is no windows installer available for the package, it most
+certainly means that it is a pure Python library. Unpack the source
+archive in a temporary directory and use a command prompt window to
+run <tt class="docutils literal"><span class="pre">python</span> <span class="pre">setup.py</span> <span class="pre">bdist_wininst</span></tt> in that directory. This will
+generate a Windows installer in the <tt class="docutils literal"><span class="pre">dist</span></tt> subdirectory, which you
+can run to install the library.</p>
+<p>Download the <cite>mysql-4.1-noinstall</cite> prebuilt zip file, and unzip it in
+<tt class="docutils literal"><span class="pre">trunk\thirdparty</span></tt> (where <tt class="docutils literal"><span class="pre">trunk</span></tt> is the Subversion checkout
+directory). Rename <tt class="docutils literal"><span class="pre">trunk\thirdparty\mysql-4.1</span></tt> to
+<tt class="docutils literal"><span class="pre">trunk\thirdparty`mysql</span></tt>.</p>
+<p>Download and unpack <a class="reference" href="http://www.informatik.uni-frankfurt.de/~markus/antiword/">antiword</a>, <a class="reference" href="http://gnuwin32.sourceforge.net/packages/unrtf.htm">unrtf</a> and <cite>pdftohtml</cite> in
+<tt class="docutils literal"><span class="pre">trunk\thirdparty</span></tt>. I think this is all and correct. Fortunately,
+all of this only has to be done once.</p>
+</div>
+<div class="section" id="generating-the-installer">
+<h2><a name="generating-the-installer">Generating the installer</a></h2>
+<blockquote>
+<ul class="simple">
+<li>In a shell window, navigate to the trunk directory.</li>
+<li>Run <tt class="docutils literal"><span class="pre">python</span> <span class="pre">setup.py</span> <span class="pre">py2exe</span> <span class="pre">&gt;</span> <span class="pre">py2exe.log</span></tt></li>
+<li>Examine <tt class="docutils literal"><span class="pre">py2exe.log</span></tt> for possible errors or missing modules</li>
+<li>Launch Inno setup by double clickink on <tt class="docutils literal"><span class="pre">maay.iss</span></tt></li>
+<li>Select the right option in the menu to generate the installer</li>
+</ul>
+</blockquote>
+<p>It is probably possible to right click on <tt class="docutils literal"><span class="pre">maay.iss</span></tt> and to compile
+directly from Windows Explorer. I prefer compiling from the Inno Setup
+GUI because it is possible to run the installer and uninstaller from
+the application and get a log displayed.</p>
+</div>
+<div class="section" id="what-if-it-does-not-work">
+<h2><a name="what-if-it-does-not-work">What if it does not work?</a></h2>
+<p>The author admits that he may have got one of the preparation step
+wrong. Please send a mail on the <tt class="docutils literal"><span class="pre">maay-dev</span></tt> mailing list and we will
+try to help.</p>
+</div>
+</div>
+<div class="section" id="generating-a-source-distribution">
+<h1><a name="generating-a-source-distribution">Generating a source distribution</a></h1>
+<p>Go the trunk directory and run <tt class="docutils literal"><span class="pre">python</span> <span class="pre">setup.py</span> <span class="pre">sdist</span></tt></p>
+</div>
+</div>
+</body>
+</html>

Added: trunk/doc/INSTALL.html
===================================================================
--- trunk/doc/INSTALL.html	2005-11-18 14:47:38 UTC (rev 569)
+++ trunk/doc/INSTALL.html	2005-11-18 15:14:31 UTC (rev 570)
@@ -0,0 +1,98 @@
+<?xml version="1.0" encoding="utf-8" ?>
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
+<head>
+<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
+<meta name="generator" content="Docutils 0.3.9: http://docutils.sourceforge.net/" />
+<title>Maay Installation Manual</title>
+<link rel="stylesheet" href="default.css" type="text/css" />
+</head>
+<body>
+<div class="document" id="maay-installation-manual">
+<h1 class="title">Maay Installation Manual</h1>
+<!-- revision: $Id$ -->
+<div class="section" id="installing-maay-on-windows">
+<h1><a name="installing-maay-on-windows">Installing Maay on Windows</a></h1>
+<p>On the Windows platform, it is recommended to use the Windows
+installer available from <a class="reference" href="http://developer.berlios.de/projects/maay/">http://developer.berlios.de/projects/maay/</a></p>
+<p>and run it. This should
+install and setup everything properly.</p>
+</div>
+<div class="section" id="installing-maay-on-linux-from-a-package">
+<h1><a name="installing-maay-on-linux-from-a-package">Installing Maay on Linux from a package</a></h1>
+<p>Maay has not yet been packaged for any Linux distribution. Debian
+packages are being worked on. Contributions of RPMs for various
+RPM-based distributions are welcome.</p>
+</div>
+<div class="section" id="installing-maay-from-source">
+<h1><a name="installing-maay-from-source">Installing Maay from source</a></h1>
+<p>These instruction are intended for people using a unix-like
+OS. Windows users are strongly advised to use the Windows installer.</p>
+<p>A few Python libraries are required to make the whole think work. Most
+of them should be available in your OS distribution too :</p>
+<blockquote>
+<ul class="simple">
+<li>logilab common libraries 0.12.1 or above (<a class="reference" href="http://www.logilab.org/projects/common">http://www.logilab.org/projects/common</a>)</li>
+<li>mysql-python (<a class="reference" href="http://sourceforge.net/projects/mysql-python">http://sourceforge.net/projects/mysql-python</a>)</li>
+<li>python-twisted 2.0 or above (<a class="reference" href="http://twistedmatrix.com/projects/core/">http://twistedmatrix.com/projects/core/</a>)</li>
+<li>python-twisted-web 0.5 or above (<a class="reference" href="http://twistedmatrix.com/projects/web/">http://twistedmatrix.com/projects/web/</a>)</li>
+<li>python-nevow 0.6 or above (<a class="reference" href="http://divmod.org/projects/nevow">http://divmod.org/projects/nevow</a>)</li>
+<li>python-imaging (<a class="reference" href="http://www.pythonware.com/products/pil/">http://www.pythonware.com/products/pil/</a>)</li>
+<li>mxDatetime (<a class="reference" href="http://www.egenix.com/files/python/mxDateTime.html">http://www.egenix.com/files/python/mxDateTime.html</a>)</li>
+</ul>
+</blockquote>
+<p>You will also need a few helper applications to perform the conversion
+of various binary formats to something that Maay can index. There is
+probably a prebuilt binary available for your OS distribution
+somewhere. You will need to download and install :</p>
+<blockquote>
+<ul class="simple">
+<li>pdftohtml (<a class="reference" href="http://pdftohtml.sourceforge.net/">http://pdftohtml.sourceforge.net/</a>)</li>
+<li>antiword (<a class="reference" href="http://www.winfield.demon.nl/">http://www.winfield.demon.nl/</a>)</li>
+<li>unrtf (<a class="reference" href="http://www.gnu.org/software/unrtf/unrtf.html">http://www.gnu.org/software/unrtf/unrtf.html</a>)</li>
+<li>ghostscript (<a class="reference" href="http://www.cs.wisc.edu/~ghost/">http://www.cs.wisc.edu/~ghost/</a>)</li>
+</ul>
+</blockquote>
+<p>The indexation part uses a MySQL database, version 4.1
+(<a class="reference" href="http://www.mysql.org/">http://www.mysql.org/</a>). You will need to install such a database or
+get in touch with your DBA. The following assumes a local mysql
+installation, with no root password. Maay has not been tested with
+MySQL 5.0, but it should work. Please report if you encounter problems
+with this version of MySQL.</p>
+<p>Once everything else is installed, you can point you web browser to
+<a class="reference" href="http://developer.berlios.de/projects/maay/">http://developer.berlios.de/projects/maay/</a> and download the latest
+source tarball. Unpack it, go to the newly created directory and run:</p>
+<pre class="literal-block">
+# python setup.py install
+</pre>
+<p>Create the MySQL database instance that will store the indexation
+data:</p>
+<pre class="literal-block">
+# mysql -u root mysql
+mysql&gt; \. maay/sql/mysql.sql
+</pre>
+<p>You're done! Read the README document to learn how to use Maay.</p>
+</div>
+<div class="section" id="working-on-the-bleeding-edge">
+<h1><a name="working-on-the-bleeding-edge">Working on the bleeding edge</a></h1>
+<p>You can download the latest Maay sources from the SVN
+repository. Use the following for the initial source checkout:</p>
+<pre class="literal-block">
+svn checkout svn://svn.berlios.de/maay/trunk
+</pre>
+<p>You will also need to download and install all the dependencies
+mentionned in the previous section, and to configure a mysql database
+as explained.</p>
+<p>When working with this directory structure, you don't have to install
+Maay using setup.py. Just add the trunk directory to the PYTHONPATH
+environment variable, and run the trunk/maay/bin/maay-node script to
+launch the server. The --help command line option will provide
+information about what configuration options are available. You can
+also copy the ini files in  trunk/maay/configuration/ files to ~/.maay/ and edit
+them to match your settings.</p>
+<blockquote>
+Alexandre Fayolle &lt;<a class="reference" href="mailto:alexandre.fayolle&#64;logilab.fr">alexandre.fayolle&#64;logilab.fr</a>&gt;, Fri, 18 Nov 2005 15:00:36 +0100</blockquote>
+</div>
+</div>
+</body>
+</html>

Modified: trunk/doc/README.html
===================================================================
--- trunk/doc/README.html	2005-11-18 14:47:38 UTC (rev 569)
+++ trunk/doc/README.html	2005-11-18 15:14:31 UTC (rev 570)
@@ -10,6 +10,7 @@
 <body>
 <div class="document" id="maay-documentation">
 <h1 class="title">Maay documentation</h1>
+<!-- revision: $Id$ -->
 <div class="section" id="warning">
 <h1><a name="warning">Warning</a></h1>
 <p>This is beta quality software. Before launching anything be sure to read 
@@ -41,73 +42,15 @@
 </ul>
 </blockquote>
 </div>
-<div class="section" id="how-do-i-install-maay-from-source">
-<h1><a name="how-do-i-install-maay-from-source">How do I install Maay from source?</a></h1>
-<p>These instruction are intended for people using a unix-like
-OS. Windows users are strongly advised to use the prebuilt package
-(see below).</p>
-<p>A few Python libraries are required to make the whole think work. Most
-of them should be available in your OS distribution too :</p>
-<blockquote>
-<ul class="simple">
-<li>logilab common libraries 0.12.1 or above (<a class="reference" href="http://www.logilab.org/projects/common">http://www.logilab.org/projects/common</a>)</li>
-<li>mysql-python (<a class="reference" href="http://sourceforge.net/projects/mysql-python">http://sourceforge.net/projects/mysql-python</a>)</li>
-<li>python-twisted 2.0 or above ((<a class="reference" href="http://twistedmatrix.com/projects/core/">http://twistedmatrix.com/projects/core/</a>)</li>
-<li>python-twisted-web 0.5 or above (<a class="reference" href="http://twistedmatrix.com/projects/web/">http://twistedmatrix.com/projects/web/</a>)</li>
-<li>python-nevow 0.6 or above (<a class="reference" href="http://divmod.org/projects/nevow">http://divmod.org/projects/nevow</a>)</li>
-<li>python-imaging (<a class="reference" href="http://www.pythonware.com/products/pil/">http://www.pythonware.com/products/pil/</a>)</li>
-<li>mxDatetime (<a class="reference" href="http://www.egenix.com/files/python/mxDateTime.html">http://www.egenix.com/files/python/mxDateTime.html</a>)</li>
-</ul>
-</blockquote>
-<p>You will also need a few helper applications to perform the conversion
-of various binary formats to something that Maay can index. There is
-probably a prebuilt binary available for your OS distribution
-somewhere. You will need to download and install :</p>
-<blockquote>
-<ul class="simple">
-<li>pdftohtml (<a class="reference" href="http://pdftohtml.sourceforge.net/">http://pdftohtml.sourceforge.net/</a>)</li>
-<li>antiword (<a class="reference" href="http://www.winfield.demon.nl/">http://www.winfield.demon.nl/</a>)</li>
-<li>unrtf (<a class="reference" href="http://www.gnu.org/software/unrtf/unrtf.html">http://www.gnu.org/software/unrtf/unrtf.html</a>)</li>
-</ul>
-</blockquote>
-<p>The indexation part uses a MySQL database, version 4.1
-(<a class="reference" href="http://www.mysql.org/">http://www.mysql.org/</a>). You will need to install such a database or
-get in touch with your DBA. The following assumes a local mysql
-installation, with no root password. Maay has not been tested with
-MySQL 5.0, but it should work. Please report if you encounter problems
-with this version of MySQL.</p>
-<p>Once everything else is installed, you can point you web browser to
-<a class="reference" href="http://developer.berlios.de/projects/maay/">http://developer.berlios.de/projects/maay/</a> and download the latest
-source tarball. Unpack it, go to the newly created directory and run:</p>
-<pre class="literal-block">
-# python setup.py install
-</pre>
-<p>It is now necessary to create the MySQL database instance that will
-store the indexation data:</p>
-<pre class="literal-block">
-# mysql -u root mysql
-mysql&gt; \. sql/mysql.sql
-</pre>
-<p>You're done! See a bit further down in this document for how to start
-using Maay.</p>
-</div>
-<div class="section" id="how-do-i-install-maay-from-a-package">
-<h1><a name="how-do-i-install-maay-from-a-package">How do I install Maay from a package?</a></h1>
-<p>For now, only a Windows installer is available. Download it from
-<a class="reference" href="http://developer.berlios.de/projects/maay/">http://developer.berlios.de/projects/maay/</a> and run it. This should
-install and setup everything properly.</p>
-<p>A package for the Debian GNU/Linux distribution will soon be made
-available.</p>
-</div>
 <div class="section" id="how-do-i-start-using-maay">
 <h1><a name="how-do-i-start-using-maay">How do I start using Maay?</a></h1>
-<p>First, edit the configuration files. On Windows, they are in 
+<p>First, edit the configuration files. On Windows, they are in
 C:Program FilesMaaywebapp.ini and C:Program
 FilesMaayindexer.ini. The Windows installer should have set the
-different configuration values
-On Unix systems, they are in /etc/maay, and you can copy them to 
-~/.maay/ if you want to have some personnalized settings. Pay attention 
-to the index-dir and skip-dir settings in indexer.ini.</p>
+different configuration values.  On Unix systems, they are in
+/etc/maay, and you can copy them to ~/.maay/ if you want to have some
+personnalized settings. Pay attention to the index-dir and skip-dir
+settings in indexer.ini.</p>
 <p>Then, start the Maay service. On Windows, this is done automatically
 when your machine boots. On unix systems, use /usr/bin/maay-server</p>
 <p>You can now visit <a class="reference" href="http://localhost:7777/">http://localhost:7777/</a> which will display the Maay
@@ -142,7 +85,7 @@
 <p>Be as precise as possible. Just saying &quot;the indexer does not work&quot;
 won't give us any clue to help you.</p>
 <blockquote>
-Alexandre Fayolle &lt;<a class="reference" href="mailto:alexandre.fayolle&#64;logilab.fr">alexandre.fayolle&#64;logilab.fr</a>&gt;, Tue, 15 Nov 2005 09:41:54 +0100</blockquote>
+Alexandre Fayolle &lt;<a class="reference" href="mailto:alexandre.fayolle&#64;logilab.fr">alexandre.fayolle&#64;logilab.fr</a>&gt;, Fri, 18 Nov 2005 15:00:58 +0100</blockquote>
 </div>
 </div>
 </body>



From adimasci at berlios.de  Fri Nov 18 16:15:58 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Fri, 18 Nov 2005 16:15:58 +0100
Subject: [Maay-svncheckins] r571 - trunk
Message-ID: <200511181515.jAIFFwdO022289@sheep.berlios.de>

Author: adimasci
Date: 2005-11-18 16:15:58 +0100 (Fri, 18 Nov 2005)
New Revision: 571

Modified:
   trunk/ChangeLog
   trunk/ReleaseNotes
Log:
updated release files

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2005-11-18 15:14:31 UTC (rev 570)
+++ trunk/ChangeLog	2005-11-18 15:15:58 UTC (rev 571)
@@ -1,9 +1,11 @@
 Maay-0.2.2 2005-11-21
 	* Use IP adress of presence server instead of domain name
 	* Threshold on document relevance and popularity to avoid negative
-	values
+	  values
 	* Fixed ranking bug to display more recent documents first
-	* 
+	* return a maximum of 50 results per peer
+	* improved Internet Explorer compatibility
+	
 
 Maay-0.2.1 2005-11-16
         * Fixed bug #5647 caused by bad use of os.getlogin() preventing P2P

Modified: trunk/ReleaseNotes
===================================================================
--- trunk/ReleaseNotes	2005-11-18 15:14:31 UTC (rev 570)
+++ trunk/ReleaseNotes	2005-11-18 15:15:58 UTC (rev 571)
@@ -1,9 +1,9 @@
-Release Notes for version 0.2.1
+Release Notes for version 0.2.2
 
 See README.txt for installation and quick start instructions. 
 
 This release is beta-level software, which contains several bug fixes
-and improvements over 0.2.0. 
+and improvements over 0.2.1. 
 
 There may be some problems with the web interface when accessed
 through Microsoft Internet Explorer. Please give some feedback on



From aurelienc at berlios.de  Fri Nov 18 16:21:14 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Fri, 18 Nov 2005 16:21:14 +0100
Subject: [Maay-svncheckins] r572 - trunk
Message-ID: <200511181521.jAIFLE77022734@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-18 16:21:14 +0100 (Fri, 18 Nov 2005)
New Revision: 572

Modified:
   trunk/ChangeLog
Log:
Note on incompatibility with prev. versions


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2005-11-18 15:15:58 UTC (rev 571)
+++ trunk/ChangeLog	2005-11-18 15:21:14 UTC (rev 572)
@@ -5,6 +5,9 @@
 	* Fixed ranking bug to display more recent documents first
 	* return a maximum of 50 results per peer
 	* improved Internet Explorer compatibility
+	* Fix a communication bug when non-standard ports are used, and thus ...
+	* Is incompatible with prior versions (won't answer to queries from old version)
+
 	
 
 Maay-0.2.1 2005-11-16



From dnf at berlios.de  Fri Nov 18 16:28:31 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Fri, 18 Nov 2005 16:28:31 +0100
Subject: [Maay-svncheckins] r573 - trunk/maay
Message-ID: <200511181528.jAIFSVKq023443@sheep.berlios.de>

Author: dnf
Date: 2005-11-18 16:28:31 +0100 (Fri, 18 Nov 2005)
New Revision: 573

Modified:
   trunk/maay/configuration.py
   trunk/maay/webapplication.py
Log:
In indexation page, public, private and skip diretories are saved.



Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-18 15:21:14 UTC (rev 572)
+++ trunk/maay/configuration.py	2005-11-18 15:28:31 UTC (rev 573)
@@ -343,11 +343,9 @@
         # FIXME: since there may be several configuration files, which
         # one do we choose. By default, we take the one in the current
         # directory
-        # FIXME: does not work, why ? It writes a None in the indexer.ini
-        return
         try:
             fd = file(self.config_file, 'wb')
-            fd.write(str(self.generate_config()))
+            self.generate_config(stream=fd)
             fd.close()
         except IOError, e:
             print "Cannot open file '%s' to update configuration" % self.config_file

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-18 15:21:14 UTC (rev 572)
+++ trunk/maay/webapplication.py	2005-11-18 15:28:31 UTC (rev 573)
@@ -218,6 +218,7 @@
         if removePrivateFolder:
             try:
                 indexer.indexerConfig.private_dir.remove(removePrivateFolder)
+                indexer.indexerConfig.save()
             except ValueError:
                 print "Folder '%s' not in the private directory list"
 
@@ -225,6 +226,7 @@
         addPublicFolder = context.arg('addPublicFolder', 0)
         if addPublicFolder:
                 indexer.indexerConfig.public_dir.append(addPublicFolder)
+                indexer.indexerConfig.save()
  
         removePublicFolder = context.arg('removePublicFolder', 0)
         if removePublicFolder:



From adimasci at berlios.de  Fri Nov 18 16:55:50 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Fri, 18 Nov 2005 16:55:50 +0100
Subject: [Maay-svncheckins] r574 - in trunk/maay: . data
Message-ID: <200511181555.jAIFtoRJ026436@sheep.berlios.de>

Author: adimasci
Date: 2005-11-18 16:55:50 +0100 (Fri, 18 Nov 2005)
New Revision: 574

Modified:
   trunk/maay/data/indexationpage.html
   trunk/maay/indexer.py
   trunk/maay/webapplication.py
Log:
added number of "untouched" documents on the indexation web page

Modified: trunk/maay/data/indexationpage.html
===================================================================
--- trunk/maay/data/indexationpage.html	2005-11-18 15:28:31 UTC (rev 573)
+++ trunk/maay/data/indexationpage.html	2005-11-18 15:55:50 UTC (rev 574)
@@ -8,6 +8,8 @@
     <nevow:invisible nevow:render="liveglue" />
 
     <script type='text/javascript' language='javascript'>
+
+abortNeeded = true;
 function live() {
   server.callRemote('live');
 }
@@ -16,6 +18,7 @@
   elt = document.getElementById('statusMessage');
   elt.innerHTML = msg;
 }
+
     </script>
   </head>
   <body onload="live();">

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-18 15:28:31 UTC (rev 573)
+++ trunk/maay/indexer.py	2005-11-18 15:55:50 UTC (rev 574)
@@ -53,11 +53,13 @@
     def newDocumentIndexed(filename):
         """called by indexer when a document was just indexed"""
 
+    def documentUntouched(filename):
+        """called when a document was left untouched"""
+
     def indexationCompleted():
         """called when indexation is over"""
 
 
-
 def makeDocumentId(filename):
     """return the SHA hash value from of the contents of the file"""
     stream = file(filename, 'rb')
@@ -201,8 +203,10 @@
             lastModificationTime = os.path.getmtime(filepath)
             lastIdxTime, lastIdxState = self.getLastIndexationTimeAndState(filepath)
             if lastIdxState == state and lastIdxTime >= lastModificationTime:
-                    raise FileIndexationFailure (safe_encode(filepath),
-                                                 "it didn't change since last indexation")
+                for obs in self.observers:
+                    obs.documentUntouched(filepath)
+                print "%s didn't change since last indexation" % (safe_encode(filepath),)
+                return
             try:
                 title, text, _, _ = converter.extractWordsFromFile(filepath)
             except converter.IndexationFailure, exc:

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-18 15:28:31 UTC (rev 573)
+++ trunk/maay/webapplication.py	2005-11-18 15:55:50 UTC (rev 574)
@@ -113,7 +113,8 @@
     implements(indexer.IIndexerObserver)
 
     # share counter among instances
-    counter = 0
+    indexedDocuments = 0
+    untouchedDocuments = 0
     
     def __init__(self):
         athena.LivePage.__init__(self)
@@ -139,15 +140,22 @@
         self.callRemote('updateStatus', message)
 
     def newDocumentIndexed(self, filename):
-        IndexationPage.counter += 1
-        if (IndexationPage.counter % 10) == 0:
-            self.updateStatus(u'Indexation in progress - %s documents indexed'
-                              % IndexationPage.counter)
+        IndexationPage.indexedDocuments += 1
+        if (IndexationPage.indexedDocuments % 10) == 0:
+            self.updateStatus(u'Indexation in progress - %s documents indexed (%s left untouched)'
+                              % (IndexationPage.indexedDocuments, IndexationPage.untouchedDocuments))
 
+    def documentUntouched(self, filename):
+        IndexationPage.untouchedDocuments += 1
+        if (IndexationPage.untouchedDocuments % 10) == 0:
+            self.updateStatus(u'Indexation in progress - %s documents indexed (%s left untouched)'
+                              % (IndexationPage.indexedDocuments, IndexationPage.untouchedDocuments))
+        
     def indexationCompleted(self):
-        self.updateStatus(u'Indexation completed (%s documents indexed)' %
-                          (IndexationPage.counter,))
+        self.updateStatus(u'Indexation completed (%s documents indexed - %s left untouched)' %
+                          (IndexationPage.indexedDocuments, IndexationPage.untouchedDocuments))
 
+
     def render_message(self, context, data):
         return self.msg
 
@@ -178,6 +186,10 @@
         for webpage in self.clients.itervalues():
             webpage.newDocumentIndexed(filename)
         
+    def documentUntouched(self, filename):
+        for webpage in self.clients.itervalues():
+            webpage.documentUntouched(filename)
+        
     def indexationCompleted(self):
         for webpage in self.clients.itervalues():
             webpage.indexationCompleted()



From dnf at berlios.de  Fri Nov 18 17:03:39 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Fri, 18 Nov 2005 17:03:39 +0100
Subject: [Maay-svncheckins] r575 - trunk/maay
Message-ID: <200511181603.jAIG3dXF027264@sheep.berlios.de>

Author: dnf
Date: 2005-11-18 17:03:37 +0100 (Fri, 18 Nov 2005)
New Revision: 575

Modified:
   trunk/maay/indexer.py
Log:
bug fix: each time the indexation start, the download_dir is appended to the public_dir



Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-18 15:55:50 UTC (rev 574)
+++ trunk/maay/indexer.py	2005-11-18 16:03:37 UTC (rev 575)
@@ -149,7 +149,7 @@
             skipped = self.indexerConfig.skip_dir
             print "private indexation of", indexed, "omitting", skipped
         else:
-            indexed = self.indexerConfig.public_dir
+            indexed = self.indexerConfig.public_dir[:]
             indexed.append(self.indexerConfig.download_dir)
             skipped = self.indexerConfig.skip_dir
             print "public indexation of", indexed, "omitting", skipped



From dnf at berlios.de  Fri Nov 18 17:08:29 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Fri, 18 Nov 2005 17:08:29 +0100
Subject: [Maay-svncheckins] r576 - trunk/maay
Message-ID: <200511181608.jAIG8Ttx028103@sheep.berlios.de>

Author: dnf
Date: 2005-11-18 17:08:28 +0100 (Fri, 18 Nov 2005)
New Revision: 576

Modified:
   trunk/maay/webapplication.py
Log:
fix some bugs in indexation page.



Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-18 16:03:37 UTC (rev 575)
+++ trunk/maay/webapplication.py	2005-11-18 16:08:28 UTC (rev 576)
@@ -244,6 +244,7 @@
         if removePublicFolder:
             try:
                 indexer.indexerConfig.public_dir.remove(removePublicFolder)
+                indexer.indexerConfig.save()
             except ValueError:
                 print "Folder '%s' not in the private directory list"
 
@@ -251,11 +252,13 @@
         addSkippedFolder = context.arg('addSkippedFolder', 0)
         if addSkippedFolder:
                 indexer.indexerConfig.skip_dir.append(addSkippedFolder)
+                indexer.indexerConfig.save()
  
         removeSkippedFolder = context.arg('removeSkippedFolder', 0)
         if removeSkippedFolder:
             try:
-                indexer.indexerConfig.public_dir.remove(removeSkippedFolder)
+                indexer.indexerConfig.skip_dir.remove(removeSkippedFolder)
+                indexer.indexerConfig.save()
             except ValueError:
                 print "Folder '%s' not in the private directory list"
 



From aurelienc at berlios.de  Fri Nov 18 17:35:35 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Fri, 18 Nov 2005 17:35:35 +0100
Subject: [Maay-svncheckins] r577 - trunk/maay
Message-ID: <200511181635.jAIGZZhb032135@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-18 17:35:32 +0100 (Fri, 18 Nov 2005)
New Revision: 577

Modified:
   trunk/maay/webapplication.py
Log:
Add 404 for case where local indexed file does not exist any more.


Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-18 16:08:28 UTC (rev 576)
+++ trunk/maay/webapplication.py	2005-11-18 16:35:32 UTC (rev 577)
@@ -289,7 +289,11 @@
         query = Query.fromRawQuery(unicode(context.arg('words'), 'utf-8'))
         docurl = self.querier.notifyDownload(docid, query.words)
         if docurl:
-            return static.File(docurl)
+            if osp.isfile(docurl):
+                return static.File(docurl)
+            else:
+                return Maay404("File %s does not exist any more. Please re-index." %
+                               docurl)
         else:
             return Maay404()
 



From dnf at berlios.de  Fri Nov 18 17:41:25 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Fri, 18 Nov 2005 17:41:25 +0100
Subject: [Maay-svncheckins] r578 - in trunk/maay: . data
Message-ID: <200511181641.jAIGfPUh032667@sheep.berlios.de>

Author: dnf
Date: 2005-11-18 17:41:25 +0100 (Fri, 18 Nov 2005)
New Revision: 578

Modified:
   trunk/maay/data/indexationpage.html
   trunk/maay/webapplication.py
Log:
Checking of added directory in indexation page (check if the directory exists).



Modified: trunk/maay/data/indexationpage.html
===================================================================
--- trunk/maay/data/indexationpage.html	2005-11-18 16:35:32 UTC (rev 577)
+++ trunk/maay/data/indexationpage.html	2005-11-18 16:41:25 UTC (rev 578)
@@ -57,6 +57,11 @@
     <input type="hidden" name="start" value="1" />
     <input type="submit" value="Index now" /> 
   </form>
-  <nevow:invisble nevow:macro="footer" />
+  <script language="javascript" nevow:render="alert">
+    msg = '<nevow:slot name="message" />'
+    if (msg)
+        alert(msg)
+  </script>
+  <nevow:invisible nevow:macro="footer" />
 </body>
 </html>

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-18 16:35:32 UTC (rev 577)
+++ trunk/maay/webapplication.py	2005-11-18 16:41:25 UTC (rev 578)
@@ -217,14 +217,29 @@
         # XXX: logout message should be forwarded to presence server
         return None
 
+    # FIXME: maybe not a good place to define this function ?
+    def __is_valid_directory(self, directory):
+        try:
+            mode = os.stat(directory)[stat.ST_MODE]
+            if not stat.S_ISDIR(mode):
+                return False
+        except:
+            return False
+        return True
+
     def child_indexation(self, context, _factory=IndexationPageFactory(IndexationPage)):
+        alertMsg = ""
         # TODO: check if the added folders are valid
 
         # Actions (add/remove) on private folders
+
         addPrivateFolder = context.arg('addPrivateFolder', 0)
         if addPrivateFolder:
+            if self.__is_valid_directory(addPrivateFolder):
                 indexer.indexerConfig.private_dir.append(addPrivateFolder)
                 indexer.indexerConfig.save()
+            else:
+                alertMsg = "\\'%s\\' is not a valid folder" % addPrivateFolder
  
         removePrivateFolder = context.arg('removePrivateFolder', 0)
         if removePrivateFolder:
@@ -237,8 +252,11 @@
         # Actions (add/remove) on public folders
         addPublicFolder = context.arg('addPublicFolder', 0)
         if addPublicFolder:
+            if self.__is_valid_directory(addPublicFolder):
                 indexer.indexerConfig.public_dir.append(addPublicFolder)
                 indexer.indexerConfig.save()
+            else:
+                alertMsg = "\\'%s\\' is not a valid folder" % addPublicFolder
  
         removePublicFolder = context.arg('removePublicFolder', 0)
         if removePublicFolder:
@@ -251,8 +269,11 @@
         # Actions (add/remove) on skipped folders
         addSkippedFolder = context.arg('addSkippedFolder', 0)
         if addSkippedFolder:
+            if self.__is_valid_directory(addSkippedFolder):
                 indexer.indexerConfig.skip_dir.append(addSkippedFolder)
                 indexer.indexerConfig.save()
+            else:
+                alertMsg = "\\'%s\\' is not a valid folder" % addSkippedFolder
  
         removeSkippedFolder = context.arg('removeSkippedFolder', 0)
         if removeSkippedFolder:
@@ -276,6 +297,7 @@
                 msg = "Indexer started"
                 indexer.start_as_thread(_factory)
         indexationPage.msg = msg
+        indexationPage.alertmessage = alertMsg
         return indexationPage
 
     def child_search(self, context):



From dnf at berlios.de  Fri Nov 18 17:50:30 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Fri, 18 Nov 2005 17:50:30 +0100
Subject: [Maay-svncheckins] r579 - in trunk/maay: . data
Message-ID: <200511181650.jAIGoUkO000652@sheep.berlios.de>

Author: dnf
Date: 2005-11-18 17:50:29 +0100 (Fri, 18 Nov 2005)
New Revision: 579

Modified:
   trunk/maay/data/maay.css
   trunk/maay/data/searchform.html
   trunk/maay/webapplication.py
Log:
Fix indexation page.
Fix some searchForm problems (Aurelian remarks)



Modified: trunk/maay/data/maay.css
===================================================================
--- trunk/maay/data/maay.css	2005-11-18 16:41:25 UTC (rev 578)
+++ trunk/maay/data/maay.css	2005-11-18 16:50:29 UTC (rev 579)
@@ -32,8 +32,13 @@
 }
 
 /** search page *******/
+div.homemessage {
+  font-size: 120%;
+  color: orange;
+}
+
 div.shortDocStat {
-  font-size: 60%;
+  font-size: 80%;
 }
 
 

Modified: trunk/maay/data/searchform.html
===================================================================
--- trunk/maay/data/searchform.html	2005-11-18 16:41:25 UTC (rev 578)
+++ trunk/maay/data/searchform.html	2005-11-18 16:50:29 UTC (rev 579)
@@ -8,22 +8,21 @@
 <!--       </nevow:attr> -->
 <!--       <nevow:slot name="actionlabel" /> -->
 <!--     </a> -->
-    <table class="searchHome">
-      <tr>
-        <td><img src="images/maay.png" /></td>
-      </tr>
-      <tr>
-        <td>
-          <form action="search" accept-charset="utf-8">
-            <input type="text" name="words" value="" />
-              <input type="submit" class="searchButton" value="search" />
-          </form>
-          <font color="orange" size="+1">Search and share your documents.</font><br /><br />
-          <div class="shortDocStat" nevow:render="shortstat">
-            Searching <nevow:slot name="localDocumentCount" /> documents. Sharing <nevow:slot name="publicDocumentCount" /> documents.
-          </div>
-        </td>
-      </tr>
-    </table>
+    <center>
+    <img src="images/maay.png" />
+    <form action="search" accept-charset="utf-8">
+      <table>
+        <tr>
+          <td><input type="text" name="words" value="" /></td>
+          <td><input type="submit" class="searchButton" value="search" /></td>
+        </tr>
+      </table>
+    </form>
+    <br />
+    <div class="homemessage">Search and share your documents.</div><br />
+    <div class="shortDocStat" nevow:render="shortstat">
+    Searching <nevow:slot name="localDocumentCount" /> documents. Sharing <nevow:slot name="publicDocumentCount" /> documents.
+    </div>
+    </center>
   </nevow:invisible>
   

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-18 16:41:25 UTC (rev 578)
+++ trunk/maay/webapplication.py	2005-11-18 16:50:29 UTC (rev 579)
@@ -159,6 +159,10 @@
     def render_message(self, context, data):
         return self.msg
 
+    def render_alert(self, context, data):
+        context.fillSlots("message", self.alertmessage)
+        return context.tag
+
     def data_privatefolders(self, context, data):
         if not self.indexerConfig.private_dir:
             return ["No private folder."]
@@ -206,6 +210,8 @@
         self.p2pquerier = p2pquerier
         self.download_dir = indexer.indexerConfig.download_dir
 
+    # TODO: since getDocumentCount might be quite costly to compute for the
+    # DBMS, cache the value and update it every 10 mn
     def render_shortstat(self, context, data):
         docCounts = self.querier.getDocumentCount()
         context.fillSlots('localDocumentCount', docCounts[Document.PRIVATE_STATE] + docCounts[Document.PUBLISHED_STATE]) 



From afayolle at berlios.de  Fri Nov 18 17:56:06 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Fri, 18 Nov 2005 17:56:06 +0100
Subject: [Maay-svncheckins] r580 - trunk/maay
Message-ID: <200511181656.jAIGu6o5001036@sheep.berlios.de>

Author: afayolle
Date: 2005-11-18 17:56:06 +0100 (Fri, 18 Nov 2005)
New Revision: 580

Modified:
   trunk/maay/querier.py
Log:
handle possible node id duplication, which can be legit.

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-18 16:50:29 UTC (rev 579)
+++ trunk/maay/querier.py	2005-11-18 16:56:06 UTC (rev 580)
@@ -33,11 +33,12 @@
 from zope.interface import Interface, implements
 
 from logilab.common.db import get_dbapi_compliant_module
-
 from maay.dbentity import Document, FileInfo, DBEntity, \
      DocumentProvider, DocumentScore, Word, Node, Result
 from maay.texttool import normalizeText, WORDS_RGX, MAX_STORED_SIZE
 
+IntegrityError = None
+
 class MaayAuthenticationError(Exception):
     """raised on db authentication failure"""
 
@@ -103,7 +104,9 @@
     def __init__(self, host='', database='', user='', password='',
                  connection=None):
         if connection is None:
+            global IntegrityError
             dbapiMod = get_dbapi_compliant_module('mysql')
+            IntegrityError = dbapiMod.IntegrityError
             try:
                 connection = dbapiMod.connect(host=host, database=database,
                                               user=user, password=password,
@@ -281,13 +284,23 @@
             return
         lastSeenTime = lastSeenTime or int(time.time())
         cursor = self._cnx.cursor()
-        node = Node.selectOrInsertWhere(cursor, ip=ip, port=port, node_id=nodeId)[0]
+        node = Node.selectOrInsertWhere(cursor, ip=ip, port=port)[0]
         node.ip = ip
+        node.node_id = nodeId
         node.port = port
         node.bandwidth = bandwidth or 1
         node.last_seen_time = lastSeenTime
-        node.commit(cursor, update=True)
-        cursor.close()
+        try:
+            node.commit(cursor, update=True)
+        except IntegrityError:
+            print "Is this a node Id hijack ?" 
+            self._cnx.rollback()
+            cursor.execute('DELETE FROM nodes WHERE node_id = %s', nodeId)
+            cursor.close()
+            self._cnx.commit()
+            self.registerNode(nodeId, ip, port, bandwidth, lastSeenTime)
+        else:
+            cursor.close()
 
     def registerNodeActivity(self, nodeId):
         cursor = self._cnx.cursor()



From aurelienc at berlios.de  Fri Nov 18 18:29:29 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Fri, 18 Nov 2005 18:29:29 +0100
Subject: [Maay-svncheckins] r581 - trunk/maay
Message-ID: <200511181729.jAIHTT87003730@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-18 18:29:29 +0100 (Fri, 18 Nov 2005)
New Revision: 581

Modified:
   trunk/maay/indexer.py
Log:
Add logging to indexer


Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-18 16:56:06 UTC (rev 580)
+++ trunk/maay/indexer.py	2005-11-18 17:29:29 UTC (rev 581)
@@ -45,9 +45,8 @@
 from maay.querier import MaayAuthenticationError
 from maay.texttool import removeControlChar
 from threading import Thread
+from twisted.python import log
 
-#log.startLogging(open('maay-indexer.log', 'w'))
-
 class IIndexerObserver(Interface):
 
     def newDocumentIndexed(filename):
@@ -174,6 +173,7 @@
 
     def start(self):
         # we index private dirs first because public overrides private
+        log.startLogging(open('maay-indexer.log', 'w'))
         existingFiles = self.runIndexer(isPrivate=True)
         existingFiles |= self.runIndexer(isPrivate=False)
         indexedFiles = Set(self.serverProxy.getIndexedFiles(self.cnxId))
@@ -355,6 +355,7 @@
             print "AuthenticationError:", exc
             return
         print 'going to index file %s', filepath
+        log.startLogging(open('maay-indexer.log', 'w'))
         indexer.indexFile(filepath, isPrivate=False)
     except socket.error, exc:
         print "Cannot contact Node:", exc



From dnf at berlios.de  Fri Nov 18 18:42:26 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Fri, 18 Nov 2005 18:42:26 +0100
Subject: [Maay-svncheckins] r582 - in trunk/maay: . data
Message-ID: <200511181742.jAIHgQbp019480@sheep.berlios.de>

Author: dnf
Date: 2005-11-18 18:42:24 +0100 (Fri, 18 Nov 2005)
New Revision: 582

Modified:
   trunk/maay/data/footer.html
   trunk/maay/data/indexationpage.html
   trunk/maay/data/liveresults.html
   trunk/maay/data/searchform.html
   trunk/maay/data/skeleton.html
   trunk/maay/webapplication.py
Log:
Some esthetic modifications.



Modified: trunk/maay/data/footer.html
===================================================================
--- trunk/maay/data/footer.html	2005-11-18 17:29:29 UTC (rev 581)
+++ trunk/maay/data/footer.html	2005-11-18 17:42:24 UTC (rev 582)
@@ -4,8 +4,7 @@
   <hr/>
   <table width="100%">
     <tr>
-      <td valign="top" width="100%"><a href="/" class="footlink">[Main&nbsp;page]</a></td>
-      <td valign="top"><a href="http://maay.netofpeers.net/" class="footlink">[Maay&nbsp;Home&nbsp;page]</a></td>
+      <td valign="top" width="100%"><a href="/" class="footlink">[Personal Starting Page]</a></td>
       <td align="right"><a href="http://www.francetelecom.com/en/group/rd/"><img src="/images/logoFT.png" /></a></td>
     </tr>
   </table>

Modified: trunk/maay/data/indexationpage.html
===================================================================
--- trunk/maay/data/indexationpage.html	2005-11-18 17:29:29 UTC (rev 581)
+++ trunk/maay/data/indexationpage.html	2005-11-18 17:42:24 UTC (rev 582)
@@ -39,7 +39,7 @@
    </div>
     <input type="text" name="addPrivateFolder" size="50" />
     <input type="submit" value="Add" />
-  <h2>Search and share these public folders</h2>
+  <h2>Search/Publish these public folders</h2>
     <div nevow:render="sequence" nevow:data="publicfolders">
       <div class="indexedFolderName" nevow:pattern="item" nevow:render="directory"><a><nevow:attr name="href">/indexation?removePublicFolder=<nevow:slot name="name" /></nevow:attr>X</a> - <nevow:slot name="name" /></div>
     </div>

Modified: trunk/maay/data/liveresults.html
===================================================================
--- trunk/maay/data/liveresults.html	2005-11-18 17:29:29 UTC (rev 581)
+++ trunk/maay/data/liveresults.html	2005-11-18 17:42:24 UTC (rev 582)
@@ -43,7 +43,12 @@
 
   </head>
   <body onload="startConnection()">
-    <div class="headlinks"><a href="/indexation" class="headlink">[Manage Folders]</a></div>
+  <table width="100%">
+    <tr>
+      <td valign="top" width="100%"><a href="http://maay.netofpeers.net/" class="footlink">[Maay&nbsp;Homepage]</a></td>
+      <td valign="top"><a href="/indexation" class="footlink">[Manage&nbsp;Folder]</a></td>
+    </tr>
+  </table>
     <div class="reSearch">
       <form action="search" accept-charset="utf-8">
 	<table>

Modified: trunk/maay/data/searchform.html
===================================================================
--- trunk/maay/data/searchform.html	2005-11-18 17:29:29 UTC (rev 581)
+++ trunk/maay/data/searchform.html	2005-11-18 17:42:24 UTC (rev 582)
@@ -9,7 +9,7 @@
 <!--       <nevow:slot name="actionlabel" /> -->
 <!--     </a> -->
     <center>
-    <img src="images/maay.png" />
+    <img src="images/maay.png" /><br /><br />
     <form action="search" accept-charset="utf-8">
       <table>
         <tr>
@@ -19,9 +19,10 @@
       </table>
     </form>
     <br />
-    <div class="homemessage">Search and share your documents.</div><br />
+    <div class="homemessage">Search your own computer.<br />
+    Publish your documents.</div><br />
     <div class="shortDocStat" nevow:render="shortstat">
-    Searching <nevow:slot name="localDocumentCount" /> documents. Sharing <nevow:slot name="publicDocumentCount" /> documents.
+    <nevow:slot name="localDocumentCount" /> local documents / <nevow:slot name="publicDocumentCount" /> published documents.
     </div>
     </center>
   </nevow:invisible>

Modified: trunk/maay/data/skeleton.html
===================================================================
--- trunk/maay/data/skeleton.html	2005-11-18 17:29:29 UTC (rev 581)
+++ trunk/maay/data/skeleton.html	2005-11-18 17:42:24 UTC (rev 582)
@@ -6,7 +6,12 @@
     <link rel="stylesheet" type="text/css" href="maaycss"/>
       <link rel="shortcut icon" href="images/maay.ico" />
   </head>
-      <div class="headlinks"><a href="/indexation" class="headlink">[Manage Folders]</a></div>
+  <table width="100%">
+    <tr>
+      <td valign="top" width="100%"><a href="http://maay.netofpeers.net/" class="footlink">[Maay&nbsp;Homepage]</a></td>
+      <td valign="top"><a href="/indexation" class="footlink">[Manage&nbsp;Folder]</a></td>
+    </tr>
+  </table>
   <body>
     <nevow:invisible nevow:macro="body" />
     <nevow:invisble nevow:macro="footer" />

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-18 17:29:29 UTC (rev 581)
+++ trunk/maay/webapplication.py	2005-11-18 17:42:24 UTC (rev 582)
@@ -25,6 +25,7 @@
 from itertools import cycle
 from tempfile import mkdtemp
 import os, os.path as osp
+import stat
 
 from zope.interface import Interface, implements
 from twisted.web import static
@@ -142,18 +143,18 @@
     def newDocumentIndexed(self, filename):
         IndexationPage.indexedDocuments += 1
         if (IndexationPage.indexedDocuments % 10) == 0:
-            self.updateStatus(u'Indexation in progress - %s documents indexed (%s left untouched)'
-                              % (IndexationPage.indexedDocuments, IndexationPage.untouchedDocuments))
+            self.updateStatus(u'Indexation in progress - %s new documents / %s total'
+                % (IndexationPage.indexedDocuments, IndexationPage.indexedDocuments + IndexationPage.untouchedDocuments))
 
     def documentUntouched(self, filename):
         IndexationPage.untouchedDocuments += 1
         if (IndexationPage.untouchedDocuments % 10) == 0:
-            self.updateStatus(u'Indexation in progress - %s documents indexed (%s left untouched)'
-                              % (IndexationPage.indexedDocuments, IndexationPage.untouchedDocuments))
+            self.updateStatus(u'Indexation in progress - %s new documents / %s total'
+                % (IndexationPage.indexedDocuments, IndexationPage.indexedDocuments + IndexationPage.untouchedDocuments))
         
     def indexationCompleted(self):
-        self.updateStatus(u'Indexation completed (%s documents indexed - %s left untouched)' %
-                          (IndexationPage.indexedDocuments, IndexationPage.untouchedDocuments))
+        self.updateStatus(u'Indexation finished - %s new documents / %s total'
+            % (IndexationPage.indexedDocuments, IndexationPage.indexedDocuments + IndexationPage.untouchedDocuments))
 
 
     def render_message(self, context, data):



From afayolle at berlios.de  Fri Nov 18 18:47:01 2005
From: afayolle at berlios.de (afayolle at BerliOS)
Date: Fri, 18 Nov 2005 18:47:01 +0100
Subject: [Maay-svncheckins] r583 - trunk/maay
Message-ID: <200511181747.jAIHl1Ua021320@sheep.berlios.de>

Author: afayolle
Date: 2005-11-18 18:46:58 +0100 (Fri, 18 Nov 2005)
New Revision: 583

Modified:
   trunk/maay/querier.py
Log:
quick fix

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-18 17:42:24 UTC (rev 582)
+++ trunk/maay/querier.py	2005-11-18 17:46:58 UTC (rev 583)
@@ -307,11 +307,11 @@
         nodes = Node.selectWhere(cursor, node_id=nodeId)
         if nodes:
             node = nodes[0]
+            node.last_seen_time = int(time.time())
+            node.commit(cursor, update=True)
         else:
             log.debug('No matching node found for id {%s}' % nodeId,
                       category='[warning]')
-        node.last_seen_time = int(time.time())
-        node.commit(cursor, update=True)
         cursor.close()
 
     def getRegisteredNeighbors(self, nodeId, nbNodes):



From dnf at berlios.de  Fri Nov 18 18:55:21 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Fri, 18 Nov 2005 18:55:21 +0100
Subject: [Maay-svncheckins] r584 - in trunk/maay: . data
Message-ID: <200511181755.jAIHtLRq027336@sheep.berlios.de>

Author: dnf
Date: 2005-11-18 18:55:19 +0100 (Fri, 18 Nov 2005)
New Revision: 584

Modified:
   trunk/maay/data/indexationpage.html
   trunk/maay/data/livefragment.html
   trunk/maay/webapplication.py
Log:
Some esthetic modifications.
Fix bug : 1 - 0 of 0 for 'toto'



Modified: trunk/maay/data/indexationpage.html
===================================================================
--- trunk/maay/data/indexationpage.html	2005-11-18 17:46:58 UTC (rev 583)
+++ trunk/maay/data/indexationpage.html	2005-11-18 17:55:19 UTC (rev 584)
@@ -27,7 +27,7 @@
 <table>
   <tr>
     <td><a href="/"><img border="0" src="images/smallmaay.png" /></a></td>
-    <td><h1>Folders</h1></td>
+    <td valign="bottom"><h1>Folders</h1></td>
   </tr>
 </table>
   <br />

Modified: trunk/maay/data/livefragment.html
===================================================================
--- trunk/maay/data/livefragment.html	2005-11-18 17:46:58 UTC (rev 583)
+++ trunk/maay/data/livefragment.html	2005-11-18 17:55:19 UTC (rev 584)
@@ -3,16 +3,19 @@
 
 <div id="resultsDiv" xmlns="http://www.w3.org/1999/xhtml" xmlns:nevow="http://nevow.com/ns/nevow/0.1">
   <div class="message" nevow:render="title">Results <b><nevow:slot name="start_result" /></b> - <b><nevow:slot name="end_result" /></b> of <b><nevow:slot name="count" /></b> for <b><nevow:slot name="words" /></b>.</div>
-  <nevow:invisible nevow:macro="prevnext" />
   <table>
     <tr>
-      <td><div class="localPublicResult"><a href="javascript: onlyLocalResults();"><span nevow:render="localcount" /> local</a></div></td>
+      <td><b>Filter :</b></td>
+      <td><div class="localPublicResult"><a href="javascript: onlyLocalResults();">local result</a> (<span nevow:render="localcount" />)</div></td>
       <td> - </td>
-      <td> <div class="distantResult"><a href="javascript: onlyDistantResults();"><span nevow:render="distantcount" /> distant</a></div></td>
+      <td> <div class="distantResult"><a href="javascript: onlyDistantResults();">remote result</a>(<span nevow:render="distantcount" />)</div></td>
       <td>-</td>
-      <td><a href="javascript: allResults();"><span nevow:render="totalcount" /> all</a></td>
+      <td><a href="javascript: allResults();">all results </a>(<span nevow:render="totalcount" />)</td>
     </tr>
   </table>
+  <center>
+  <nevow:invisible nevow:macro="prevnext" />
+  </center>
   <table class="results" nevow:render="sequence" nevow:data="results">
     <tr nevow:pattern="item" nevow:render="row">
       <td>
@@ -34,5 +37,7 @@
       </td>
     </tr>
   </table>
+  <center>
   <nevow:invisible nevow:macro="prevnext" />
+  </center>
 </div>

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-18 17:46:58 UTC (rev 583)
+++ trunk/maay/webapplication.py	2005-11-18 17:55:19 UTC (rev 584)
@@ -385,7 +385,7 @@
             resultsCount = localCount + distantCount
         offset = self.query.offset
         context.fillSlots('words', self.query.joinwords(' ')) #WORDS
-        context.fillSlots('start_result', offset + 1)
+        context.fillSlots('start_result', min(resultsCount, offset + 1))
         context.fillSlots('end_result', min(resultsCount, offset+15))
         context.fillSlots('count', resultsCount)
         return context.tag



From adimasci at berlios.de  Fri Nov 18 19:22:17 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Fri, 18 Nov 2005 19:22:17 +0100
Subject: [Maay-svncheckins] r585 - trunk
Message-ID: <200511181822.jAIIMHSI005209@sheep.berlios.de>

Author: adimasci
Date: 2005-11-18 19:22:15 +0100 (Fri, 18 Nov 2005)
New Revision: 585

Added:
   trunk/ReleaseNotes.txt
Removed:
   trunk/ReleaseNotes
Modified:
   trunk/maay.iss
Log:
updated windows installer

Deleted: trunk/ReleaseNotes
===================================================================
--- trunk/ReleaseNotes	2005-11-18 17:55:19 UTC (rev 584)
+++ trunk/ReleaseNotes	2005-11-18 18:22:15 UTC (rev 585)
@@ -1,18 +0,0 @@
-Release Notes for version 0.2.2
-
-See README.txt for installation and quick start instructions. 
-
-This release is beta-level software, which contains several bug fixes
-and improvements over 0.2.1. 
-
-There may be some problems with the web interface when accessed
-through Microsoft Internet Explorer. Please give some feedback on
-using Maay with this web browser.  Using Firefox or Mozilla should
-work fine.
-
-The windows installer will install and set up all the required
-dependencies (including mysql and twisted). It uses Inno Setup and
-Py2exe.
-
-
-

Copied: trunk/ReleaseNotes.txt (from rev 571, trunk/ReleaseNotes)

Modified: trunk/maay.iss
===================================================================
--- trunk/maay.iss	2005-11-18 17:55:19 UTC (rev 584)
+++ trunk/maay.iss	2005-11-18 18:22:15 UTC (rev 585)
@@ -6,17 +6,18 @@
 
 [Setup]
 AppName=Maay
-AppVerName=Maay-0.2.1
+AppVerName=Maay-0.2.2
 DefaultDirName={pf}\Maay
 DefaultGroupName=Maay
 UninstallDisplayIcon={app}\maay_node.exe
+Uninstallable=yes
 SolidCompression=yes
 LicenseFile=COPYING
 ; Require 50 MB for the database files. We can tune this later.
 ExtraDiskSpaceRequired=50000000
 ; Win9x is not supported
 MinVersion=0,4.0
-InfoBeforeFile=ReleaseNotes
+InfoBeforeFile=ReleaseNotes.txt
 InfoAfterFile=README.txt
 
 [Dirs]
@@ -40,19 +41,19 @@
 Source: "thirdparty\antiword\*"; DestDir: "\antiword" ; Flags: recursesubdirs
 Source: "thirdparty\pdftohtml-0.36\*"; DestDir: "{app}\pdftohtml" ; Flags: recursesubdirs
 Source: "maay\configuration\win32\*.ini"; DestDir: "{app}"
+Source: "maay\configuration\win32\Maay.url"; DestDir: "{app}"
+Source: "maay\configuration\win32\Maay.url"; DestDir: "{userdesktop}"
+Source: "maay\configuration\win32\Maay.url"; DestDir: "{userstartmenu}\Programs\Maay\"
 Source: "doc\README.html"; DestDir: "{app}\documentation"
 Source: "doc\default.css"; DestDir: "{app}\documentation"
 Source: "ChangeLog"; DestDir: "{app}"
-Source: "ReleaseNotes"; DestDir: "{app}"
+Source: "ReleaseNotes.txt"; DestDir: "{app}\"
 
 [Icons]
-Name: "{group}\Documentation.html"; Filename: "{app}\documentation\README.html"; Comment: "Required reading before launching Maay"
-Name: "{group}\ReleaseNotes.txt"; Filename: "{app}\ReleaseNotes"; Comment: "Required reading before launching Maay"
-Name: "{group}\Maay Node"; Filename: "{app}\maay_node.exe"; WorkingDir: "{app}"; Comment: "The Maay node component"
-Name: "{group}\Maay Indexer"; Filename: "{app}\maay_indexer.exe"; WorkingDir: "{app}"; Comment: "The Maay indexer component"
-Name: "{group}\node.ini"; Filename: "{app}\node.ini"; Comment: "Maay node configuration"
-Name: "{group}\indexer.ini"; Filename: "{app}\indexer.ini"; Comment: "Maay indexer configuration"
-Name: "{group}\image.ini"; Filename: "{app}\image.ini"; Comment: "Maay indexer configuration"
+Name: "{group}\Documentation"; Filename: "{app}\documentation\README.html"; Comment: "Required reading before launching Maay"
+Name: "{group}\Node Configuration"; Filename: "{app}\node.ini"; Comment: "Maay node configuration"
+Name: "{group}\Release Notes"; Filename: "{app}\ReleaseNotes.txt"; Comment: "Required reading before launching Maay"
+Name: "{group}\Uninstall"; Filename: "{app}\unins000.exe"; Comment: "Maay uninstaller"
 
 
 [Run]



From adimasci at berlios.de  Fri Nov 18 19:23:07 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Fri, 18 Nov 2005 19:23:07 +0100
Subject: [Maay-svncheckins] r586 - trunk/maay/data
Message-ID: <200511181823.jAIIN7MJ005814@sheep.berlios.de>

Author: adimasci
Date: 2005-11-18 19:23:06 +0100 (Fri, 18 Nov 2005)
New Revision: 586

Modified:
   trunk/maay/data/indexationpage.html
   trunk/maay/data/liveresults.html
Log:
title mismatch

Modified: trunk/maay/data/indexationpage.html
===================================================================
--- trunk/maay/data/indexationpage.html	2005-11-18 18:22:15 UTC (rev 585)
+++ trunk/maay/data/indexationpage.html	2005-11-18 18:23:06 UTC (rev 586)
@@ -2,7 +2,7 @@
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml" lang="en" xmlns:nevow="http://nevow.com/ns/nevow/0.1">
   <head>
-    <title>Live results</title>
+    <title>Indexation Page</title>
     <link rel="stylesheet" type="text/css" href="maaycss"/>
     <link rel="shortcut icon" href="images/maay.ico" />
     <nevow:invisible nevow:render="liveglue" />

Modified: trunk/maay/data/liveresults.html
===================================================================
--- trunk/maay/data/liveresults.html	2005-11-18 18:22:15 UTC (rev 585)
+++ trunk/maay/data/liveresults.html	2005-11-18 18:23:06 UTC (rev 586)
@@ -2,7 +2,7 @@
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml" lang="en" xmlns:nevow="http://nevow.com/ns/nevow/0.1">
   <head>
-    <title>Live results</title>
+    <title>Maay Results</title>
     <link rel="stylesheet" type="text/css" href="maaycss"/>
     <link rel="shortcut icon" href="images/maay.ico" />
     <nevow:invisible nevow:render="liveglue" />



From adimasci at berlios.de  Fri Nov 18 19:24:38 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Fri, 18 Nov 2005 19:24:38 +0100
Subject: [Maay-svncheckins] r587 - trunk/maay
Message-ID: <200511181824.jAIIOcaR006841@sheep.berlios.de>

Author: adimasci
Date: 2005-11-18 19:24:32 +0100 (Fri, 18 Nov 2005)
New Revision: 587

Modified:
   trunk/maay/indexer.py
   trunk/maay/node.py
   trunk/maay/webapplication.py
Log:
reset indexation counters at the end of indexation

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-18 18:23:06 UTC (rev 586)
+++ trunk/maay/indexer.py	2005-11-18 18:24:32 UTC (rev 587)
@@ -173,7 +173,7 @@
 
     def start(self):
         # we index private dirs first because public overrides private
-        log.startLogging(open('maay-indexer.log', 'w'))
+        # log.startLogging(open('maay-indexer.log', 'w'))
         existingFiles = self.runIndexer(isPrivate=True)
         existingFiles |= self.runIndexer(isPrivate=False)
         indexedFiles = Set(self.serverProxy.getIndexedFiles(self.cnxId))
@@ -355,7 +355,7 @@
             print "AuthenticationError:", exc
             return
         print 'going to index file %s', filepath
-        log.startLogging(open('maay-indexer.log', 'w'))
+        # log.startLogging(open('maay-indexer.log', 'w'))
         indexer.indexFile(filepath, isPrivate=False)
     except socket.error, exc:
         print "Cannot contact Node:", exc

Modified: trunk/maay/node.py
===================================================================
--- trunk/maay/node.py	2005-11-18 18:23:06 UTC (rev 586)
+++ trunk/maay/node.py	2005-11-18 18:24:32 UTC (rev 587)
@@ -87,7 +87,6 @@
         print "with a", type(querier), "querier."
         self._sessions[avatarId] = querier
 
-
     def requestAvatar(self, avatarId, mind, *interfaces):
         """Our realm provides 2 different kinds of avatars :
           - HTML resources (for web applications)

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-18 18:23:06 UTC (rev 586)
+++ trunk/maay/webapplication.py	2005-11-18 18:24:32 UTC (rev 587)
@@ -155,8 +155,10 @@
     def indexationCompleted(self):
         self.updateStatus(u'Indexation finished - %s new documents / %s total'
             % (IndexationPage.indexedDocuments, IndexationPage.indexedDocuments + IndexationPage.untouchedDocuments))
+        # reset counters for the next indexation
+        IndexationPage.untouchedDocuments = 0
+        IndexationPage.indexedDocuments = 0
 
-
     def render_message(self, context, data):
         return self.msg
 



From aurelienc at berlios.de  Mon Nov 21 10:40:59 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Mon, 21 Nov 2005 10:40:59 +0100
Subject: [Maay-svncheckins] r588 - in trunk/maay: . sql
Message-ID: <200511210940.jAL9exG7021296@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-21 10:40:56 +0100 (Mon, 21 Nov 2005)
New Revision: 588

Modified:
   trunk/maay/dbentity.py
   trunk/maay/querier.py
   trunk/maay/sql/mysql.sql
Log:
Give back the Node entity its old key (nodeId) -- (and think more about DHCP next time)


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-18 18:24:32 UTC (rev 587)
+++ trunk/maay/dbentity.py	2005-11-21 09:40:56 UTC (rev 588)
@@ -498,9 +498,9 @@
     tableName = 'nodes'
     attributes = ('node_id', 'ip', 'port', 'last_seen_time', 'counter',
                   'claim_count', 'affinity', 'bandwidth')
-    key = ('ip', 'port')
+    key = ('node_id',)
 
-    ## def _insertQuery(self):
+##     def _insertOrUpdateQuery(self):
 ##         """generates an INSERT query according to object's state
 ##            also update node_id on collisions on (ip, port)"""
 ##         values = ['%%(%s)s' % attr for attr in self.attributes
@@ -516,9 +516,6 @@
 ##                 query += ", %s=%s" % (attr, getattr(self, attr))
 ##         return query
 
-    # here, insert manages all the cases
-    #_updateQuery = _insertQuery
-
     def _selectRegisteredNodesQuery(cls):
         query = cls._selectQuery()
         query += " WHERE node_id != %s ORDER BY last_seen_time DESC LIMIT %s"

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-18 18:24:32 UTC (rev 587)
+++ trunk/maay/querier.py	2005-11-21 09:40:56 UTC (rev 588)
@@ -284,23 +284,14 @@
             return
         lastSeenTime = lastSeenTime or int(time.time())
         cursor = self._cnx.cursor()
-        node = Node.selectOrInsertWhere(cursor, ip=ip, port=port)[0]
+        node = Node.selectOrInsertWhere(cursor, node_id=nodeId)[0]
         node.ip = ip
         node.node_id = nodeId
         node.port = port
         node.bandwidth = bandwidth or 1
         node.last_seen_time = lastSeenTime
-        try:
-            node.commit(cursor, update=True)
-        except IntegrityError:
-            print "Is this a node Id hijack ?" 
-            self._cnx.rollback()
-            cursor.execute('DELETE FROM nodes WHERE node_id = %s', nodeId)
-            cursor.close()
-            self._cnx.commit()
-            self.registerNode(nodeId, ip, port, bandwidth, lastSeenTime)
-        else:
-            cursor.close()
+        node.commit(cursor, update=True)
+        cursor.close()
 
     def registerNodeActivity(self, nodeId):
         cursor = self._cnx.cursor()

Modified: trunk/maay/sql/mysql.sql
===================================================================
--- trunk/maay/sql/mysql.sql	2005-11-18 18:24:32 UTC (rev 587)
+++ trunk/maay/sql/mysql.sql	2005-11-21 09:40:56 UTC (rev 588)
@@ -120,17 +120,18 @@
 
 CREATE TABLE `nodes` (
   `node_id` char(40) NOT NULL default '' UNIQUE,
-  `ip` char(15) NOT NULL, -- default '', oh !
+  `ip` char(15) NOT NULL default '', -- to satisfy selectOrInsertWhere *
 -- FIXME: this should be unsigned smallint
-  `port` smallint(11) NOT NULL, -- default '0', why ?
+  `port` smallint(11) NOT NULL default 0, -- to satisfy selectOrInsertWhere *
   `last_seen_time` int(11) default 0,
   `counter` int(11) NOT NULL default '0',
   `claim_count` float NOT NULL default '0',
   `affinity` double NOT NULL default '0',
   `bandwidth` int(11) NOT NULL default '0',
-  PRIMARY KEY  (`ip`, `port`)
+  PRIMARY KEY  (`node_id`)
 ) TYPE=MyISAM;
 
+-- * but we should do something better
 -- --------------------------------------------------------
 
 -- 



From aurelienc at berlios.de  Mon Nov 21 10:46:14 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Mon, 21 Nov 2005 10:46:14 +0100
Subject: [Maay-svncheckins] r589 - trunk/maay
Message-ID: <200511210946.jAL9kEDA022025@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-21 10:46:12 +0100 (Mon, 21 Nov 2005)
New Revision: 589

Modified:
   trunk/maay/p2pquerier.py
Log:
Fix inline doc


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-21 09:40:56 UTC (rev 588)
+++ trunk/maay/p2pquerier.py	2005-11-21 09:46:12 UTC (rev 589)
@@ -107,10 +107,9 @@
         # explicitly set the 'limit' attribute for P2P queries
         self.query.limit = LIMIT
         self.documents_ids = set()
-        # *** client_host: IP adress of immediate client (computed at reception)
-        # *** client_port: rpc port of immediate client (provided by client)
-        # default args are typically used from webapplication instantiation
-        # but NOT at rpc level, where we MUST use the transmited values
+        # *** client_{host, port} belong to the immediate client
+        # *** default args are typically used from webapplication instantiation
+        # *** but NOT at rpc level, where we MUST use the transmited values
         self.client_host = client_host or NODE_HOST
         self.client_port = client_port or NODE_PORT
         
@@ -132,8 +131,6 @@
         #       we have to restrict to Twisted and Python world)
         return {'qid':          self.qid,
                 'sender':       self.sender,
-                #'host': self.host,
-                #'port':self.port,
                 'client_host' : self.client_host,
                 'client_port' : self.client_port,
                 'ttl':          self.ttl,



From aurelienc at berlios.de  Mon Nov 21 14:04:21 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Mon, 21 Nov 2005 14:04:21 +0100
Subject: [Maay-svncheckins] r590 - trunk/maay
Message-ID: <200511211304.jALD4LQT015557@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-21 14:04:19 +0100 (Mon, 21 Nov 2005)
New Revision: 590

Modified:
   trunk/maay/rpc.py
Log:
Note on possibly useless param


Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-21 09:46:12 UTC (rev 589)
+++ trunk/maay/rpc.py	2005-11-21 13:04:19 UTC (rev 590)
@@ -56,7 +56,8 @@
     def __init__(self, nodeId, portal):
         XMLRPC.__init__(self)
         print "MaayRPCServer init %s %s" % (nodeId, portal)
-        assert nodeId == portal.config.get_node_id ()
+        #FIXME : is the nodeId param still necessary ?
+        #assert nodeId == portal.config.get_node_id ()
         self._sessions = {}
         self.portal = portal
         self.nodeId = portal.config.get_node_id() 



From aurelienc at berlios.de  Mon Nov 21 14:05:09 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Mon, 21 Nov 2005 14:05:09 +0100
Subject: [Maay-svncheckins] r591 - trunk/maay
Message-ID: <200511211305.jALD59AY015931@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-21 14:05:05 +0100 (Mon, 21 Nov 2005)
New Revision: 591

Modified:
   trunk/maay/presenceclient.py
Log:
Deplace print statement


Modified: trunk/maay/presenceclient.py
===================================================================
--- trunk/maay/presenceclient.py	2005-11-21 13:04:19 UTC (rev 590)
+++ trunk/maay/presenceclient.py	2005-11-21 13:05:05 UTC (rev 591)
@@ -33,7 +33,7 @@
         self._lineCount = 0
         
     def notify(self, nodeId, ip, port, bandwidth) :
-        print "notify to presence server (node %s at %s:%s)" % (nodeId, ip, port)
+        print "PresenceClient notify to presence server (node %s at %s:%s)" % (nodeId, ip, port)
         self.transport.write('notify:%s:%s:%s:%s\r\n' % (nodeId, ip,
                                                      port, bandwidth))
         return self
@@ -88,7 +88,6 @@
 def notify(regIP, regPort, querier, nodeId, nodeIP, xmlrpcPort, bandwidth):
     """registers and transmits the node catalog to querier.registerNode
     """
-    print "PresenceClient notify %s %s" % (nodeIP, xmlrpcPort)
     if querier is not None:
         c = ClientCreator(reactor, PresenceClient, querier.registerNode)
         d = c.connectTCP(regIP, regPort)
@@ -99,11 +98,11 @@
     else:
         print "Login : no querier found => no presence / no P2P"
 
-def logout(reactor, regIp, regPort, nodeId):
-    print "PresenceClient@%s:%s node %s wants to log out." % (regIp, regPort, nodeId)
-    c = ClientCreator(reactor, PresenceClient, None)
-    d = c.connectTCP(regIp, regPort)
-    d.addCallback(PresenceClient.logout)
-    Errbacks.setTarget("%s:%s" % (regIP, regPort))
-    d.addErrback(Errbacks.reportBug)
+## def logout(reactor, regIp, regPort, nodeId):
+##     print "PresenceClient@%s:%s node %s wants to log out." % (regIp, regPort, nodeId)
+##     c = ClientCreator(reactor, PresenceClient, None)
+##     d = c.connectTCP(regIp, regPort)
+##     d.addCallback(PresenceClient.logout)
+##     Errbacks.setTarget("%s:%s" % (regIP, regPort))
+##     d.addErrback(Errbacks.reportBug)
 



From aurelienc at berlios.de  Mon Nov 21 14:06:51 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Mon, 21 Nov 2005 14:06:51 +0100
Subject: [Maay-svncheckins] r592 - trunk/maay
Message-ID: <200511211306.jALD6pZG016186@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-21 14:06:47 +0100 (Mon, 21 Nov 2005)
New Revision: 592

Modified:
   trunk/maay/p2pquerier.py
Log:
Fix the send/answer errbacks (correct targets should be set in all cases now)


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-21 13:05:05 UTC (rev 591)
+++ trunk/maay/p2pquerier.py	2005-11-21 13:06:47 UTC (rev 592)
@@ -258,9 +258,8 @@
             proxy = Proxy(target)
             d = proxy.callRemote('distributedQuery', query.asKwargs())
             d.addCallback(self.querier.registerNodeActivity)
-            d.addErrback(P2pErrbacks.sendQueryProblem)
-            # FIXME : mecanism below likely to be bogus
-            P2pErrbacks.setQueryTarget(target)
+            errback = sendQueryErrback(target)
+            d.addErrback(errback)
             self._sentQueries[query.qid] = query
             print " ... query from %s:%s sent to %s %s %s" % (query.client_host,
                                                               query.client_port,
@@ -343,8 +342,8 @@
                                      answer.provider,
                                      toSend) 
                 d.addCallback(self.querier.registerNodeActivity)
-                d.addErrback(P2pErrbacks.answerQueryProblem)
-                P2pErrbacks.setAnswerTarget(senderUrl)
+                errback = answerQueryErrback(senderUrl)
+                d.addErrback(errback)
             except ValueError:
                 print " ... unknown node %s" % query.sender
         else: 
@@ -359,37 +358,23 @@
         
 
 
-#FIXME: this should be shot (auc)
+##### Custommized errbacks for send/answer ops
 
-class P2pErrbacks:
-    """a small namespace to hold errbacks and contextual
-       information so as to display meaningful stuff
-    """
-
-    lastQueryTarget = None
-    lastAnswerTarget = None
-
-    def setQueryTarget(target):
-        P2pErrbacks.lastQueryTarget = target
-    setQueryTarget = staticmethod(setQueryTarget)
-        
-    def setAnswerTarget(target):
-        P2pErrbacks.lastAnswerTarget = target
-    setAnswerTarget = staticmethod(setAnswerTarget)
-
-    def sendQueryProblem(failure):
+def sendQueryErrback(target):
+    def QP(failure):
         """Politely displays any problem (bug, unavailability) related
         to an attempt to send a query.
         """
         print " ... problem sending the query (likely to %s) : %s" \
-              % (P2pErrbacks.lastQueryTarget, failure.getTraceback())
-    sendQueryProblem = staticmethod(sendQueryProblem)
+              % (target, failure.getTraceback())
+    return QP
 
-
-    def answerQueryProblem(failure):
+def answerQueryErrback(target):
+    def AP(failure):
         """Politely displays any problem (bug, unavailability) related
         to an attempt to answer a query.
         """
         print " ... problem answering the query (likely to %s) : %s" \
-              % (P2pErrbacks.lastAnswerTarget, failure.getTraceback())
-    answerQueryProblem = staticmethod(answerQueryProblem)
+              % (target, failure.getTraceback())
+    return AP
+



From aurelienc at berlios.de  Mon Nov 21 15:33:22 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Mon, 21 Nov 2005 15:33:22 +0100
Subject: [Maay-svncheckins] r593 - trunk/maay
Message-ID: <200511211433.jALEXMYq017181@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-21 15:33:21 +0100 (Mon, 21 Nov 2005)
New Revision: 593

Modified:
   trunk/maay/p2pquerier.py
Log:
Cleanup, check that we don't flood back our direct client


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-21 13:06:47 UTC (rev 592)
+++ trunk/maay/p2pquerier.py	2005-11-21 14:33:21 UTC (rev 593)
@@ -249,23 +249,22 @@
         """        
         print "P2pQuerier sendQuery %s : %s" % (query.qid, query)
         if self._sentQueries.has_key(query.qid):
-            print " ... my bad, we were going to send query %s to ourselves ..." \
-                  % query.qid
             return
-        #FIXME: avoid to send query to the originator
+        print " ... query from %s:%s" % (query.client_host,
+                                         query.client_port)
         for neighbor in self._selectTargetNeighbors(query):
+            if (neighbor.ip, neighbor.port) == \
+                   (query.client_host, query.client_port):
+                continue
             target = str(neighbor.getRpcUrl())
             proxy = Proxy(target)
             d = proxy.callRemote('distributedQuery', query.asKwargs())
             d.addCallback(self.querier.registerNodeActivity)
-            errback = sendQueryErrback(target)
-            d.addErrback(errback)
+            d.addErrback(sendQueryErrback(target))
             self._sentQueries[query.qid] = query
-            print " ... query from %s:%s sent to %s %s %s" % (query.client_host,
-                                                              query.client_port,
-                                                              neighbor.node_id,
-                                                              neighbor.ip,
-                                                              neighbor.port)
+            print "     ... sent to %s:%s %s" % (neighbor.ip,
+                                                 neighbor.port,
+                                                 neighbor.node_id)
 
     def receiveQuery(self, query):
         """
@@ -342,8 +341,7 @@
                                      answer.provider,
                                      toSend) 
                 d.addCallback(self.querier.registerNodeActivity)
-                errback = answerQueryErrback(senderUrl)
-                d.addErrback(errback)
+                d.addErrback(answerQueryErrback(senderUrl))
             except ValueError:
                 print " ... unknown node %s" % query.sender
         else: 
@@ -357,7 +355,6 @@
         return self.querier.getActiveNeighbors(self.nodeId, nbNodes)
         
 
-
 ##### Custommized errbacks for send/answer ops
 
 def sendQueryErrback(target):



From dnf at berlios.de  Mon Nov 21 15:59:45 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Mon, 21 Nov 2005 15:59:45 +0100
Subject: [Maay-svncheckins] r594 - trunk/maay/data
Message-ID: <200511211459.jALExjEx020929@sheep.berlios.de>

Author: dnf
Date: 2005-11-21 15:59:44 +0100 (Mon, 21 Nov 2005)
New Revision: 594

Modified:
   trunk/maay/data/liveresults.html
   trunk/maay/data/skeleton.html
Log:
Typo (manage Folders)



Modified: trunk/maay/data/liveresults.html
===================================================================
--- trunk/maay/data/liveresults.html	2005-11-21 14:33:21 UTC (rev 593)
+++ trunk/maay/data/liveresults.html	2005-11-21 14:59:44 UTC (rev 594)
@@ -46,7 +46,7 @@
   <table width="100%">
     <tr>
       <td valign="top" width="100%"><a href="http://maay.netofpeers.net/" class="footlink">[Maay&nbsp;Homepage]</a></td>
-      <td valign="top"><a href="/indexation" class="footlink">[Manage&nbsp;Folder]</a></td>
+      <td valign="top"><a href="/indexation" class="footlink">[Manage&nbsp;Folders]</a></td>
     </tr>
   </table>
     <div class="reSearch">

Modified: trunk/maay/data/skeleton.html
===================================================================
--- trunk/maay/data/skeleton.html	2005-11-21 14:33:21 UTC (rev 593)
+++ trunk/maay/data/skeleton.html	2005-11-21 14:59:44 UTC (rev 594)
@@ -9,7 +9,7 @@
   <table width="100%">
     <tr>
       <td valign="top" width="100%"><a href="http://maay.netofpeers.net/" class="footlink">[Maay&nbsp;Homepage]</a></td>
-      <td valign="top"><a href="/indexation" class="footlink">[Manage&nbsp;Folder]</a></td>
+      <td valign="top"><a href="/indexation" class="footlink">[Manage&nbsp;Folders]</a></td>
     </tr>
   </table>
   <body>



From aurelienc at berlios.de  Mon Nov 21 17:07:30 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Mon, 21 Nov 2005 17:07:30 +0100
Subject: [Maay-svncheckins] r595 - in trunk/maay: . sql
Message-ID: <200511211607.jALG7Ug7027360@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-21 17:07:30 +0100 (Mon, 21 Nov 2005)
New Revision: 595

Modified:
   trunk/maay/dbentity.py
   trunk/maay/sql/mysql.sql
Log:
- add last_seen_time attribute to Nodes entity and update selectActive accordingly
- preliminary support for three ranking criteria on Documents : 
 - publication_time
 - score_relevance
 - score_popularity


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-21 14:59:44 UTC (rev 594)
+++ trunk/maay/dbentity.py	2005-11-21 16:07:30 UTC (rev 595)
@@ -141,6 +141,29 @@
             setattr(self, attrname, value)
 
 
+class DocumentOrder:
+    """a small helper class to translate search criteria
+       from crystal-clear high-level stuff to SQL junk"""
+    
+    orders = {'publication_time' : 1,
+              'score_relevance'  : 2,
+              'score_popularity' : 3}
+
+    def __init__(self, order):
+        if order in DocumentOrder.orders:
+            self.order = DocumentOrder.orders[order]
+        else:
+            raise NotImplemented("Document ordering %s is unkown" %
+                                 order)
+
+    def __str__(self):
+        if self.order == 1:
+            return "ORDER BY D.publication_time DESC "
+        elif self.order == 2:
+            return "ORDER BY DS.relevance"
+        else:
+            return "ORDER BY DS.popularity"
+
 class Document(DBEntity):
     """Represent a Document in the database
     A Document is different from a file, because several files can store
@@ -235,7 +258,8 @@
     # XXX Please rewrite this method. The way we build the SQL
     #     query is quite messy
     def _selectContainingQuery(cls, words, mimetype=None, offset=0,
-                               limit=None, allowPrivate=False):
+                               limit=None, allowPrivate=False,
+                               order='publication_time'):
         # XXX mimetype handling is a HACK. It needs to be integrated
         #     nicely in order to handle any kind of restrictions easily
         #word = WORDS_RGX.finditer(normalizeText(' '.join(words)))
@@ -248,6 +272,8 @@
         if not allowPrivate:
             restriction += " AND D.state!=%s "
             restrictionParams.append(cls.PRIVATE_STATE)
+        # just translate the plain-text ordering to SQL stuff
+        sql_order = str(DocumentOrder(order))
         # Question: what is the HAVING clause supposed to do ?
         # Answer: we select all documents containing one of the words
         # that we are looking for, group them by their identifier, and
@@ -267,9 +293,8 @@
                  "AND DS.word IN (%s) "
                  " %s "
                  "GROUP BY DS.db_document_id "
-                 "HAVING count(DS.db_document_id) = %%s "
-                 "ORDER BY D.publication_time DESC " % \
-                 (', '.join(['%s'] * len(words)), restriction))
+                 "HAVING count(DS.db_document_id) = %%s ") + sql_order
+        query = query % (', '.join(['%s'] * len(words)), restriction)
         # XXX SQL: how to specify only the OFFSET ???????
         if limit or offset:
             query += " LIMIT %s OFFSET %s" % (limit or 50, offset)
@@ -496,8 +521,8 @@
      * int bandwidth: bandwidth of the node
     """
     tableName = 'nodes'
-    attributes = ('node_id', 'ip', 'port', 'last_seen_time', 'counter',
-                  'claim_count', 'affinity', 'bandwidth')
+    attributes = ('node_id', 'ip', 'port', 'last_seen_time', 'last_sleep_time',
+                  'counter', 'claim_count', 'affinity', 'bandwidth')
     key = ('node_id',)
 
 ##     def _insertOrUpdateQuery(self):
@@ -516,6 +541,7 @@
 ##                 query += ", %s=%s" % (attr, getattr(self, attr))
 ##         return query
 
+    ### select registered will probably be obsoleted very soon (auc, 11/21/05)
     def _selectRegisteredNodesQuery(cls):
         query = cls._selectQuery()
         query += " WHERE node_id != %s ORDER BY last_seen_time DESC LIMIT %s"
@@ -529,9 +555,19 @@
         return [cls(**dict(zip(cls.attributes, row))) for row in results]
     selectRegistered = classmethod(selectRegistered)
 
+    def _selectActiveNodesQuery(cls):
+        query = cls._selectQuery()
+        query += (" WHERE node_id != %s AND last_seen_time > last_sleep_time"
+                  " ORDER BY last_seen_time DESC LIMIT %s")
+        print query
+        return query
+    _selectActiveNodesQuery = classmethod(_selectActiveNodesQuery)
+
     def selectActive(cls, cursor, currentNodeId, maxResults):
-        #TODO: return really active nodes
-        return cls.selectRegistered(cursor, currentNodeId, maxResults)
+        query = cls._selectActiveNodesQuery()
+        cursor.execute(query, (currentNodeId, maxResults))
+        results = cursor.fetchall()
+        return [cls(**dict(zip(cls.attributes, row))) for row in results]
     selectActive = classmethod(selectActive)
 
     def getRpcUrl(self):
@@ -561,4 +597,3 @@
     key = ('node_id', 'word')
 
     
-

Modified: trunk/maay/sql/mysql.sql
===================================================================
--- trunk/maay/sql/mysql.sql	2005-11-21 14:59:44 UTC (rev 594)
+++ trunk/maay/sql/mysql.sql	2005-11-21 16:07:30 UTC (rev 595)
@@ -123,7 +123,8 @@
   `ip` char(15) NOT NULL default '', -- to satisfy selectOrInsertWhere *
 -- FIXME: this should be unsigned smallint
   `port` smallint(11) NOT NULL default 0, -- to satisfy selectOrInsertWhere *
-  `last_seen_time` int(11) default 0,
+  `last_seen_time` int(11) default 1,
+  `last_sleep_time` int(11) default 0,
   `counter` int(11) NOT NULL default '0',
   `claim_count` float NOT NULL default '0',
   `affinity` double NOT NULL default '0',



From aurelienc at berlios.de  Mon Nov 21 17:33:18 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Mon, 21 Nov 2005 17:33:18 +0100
Subject: [Maay-svncheckins] r596 - trunk/maay
Message-ID: <200511211633.jALGXIe9029381@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-21 17:33:17 +0100 (Mon, 21 Nov 2005)
New Revision: 596

Modified:
   trunk/maay/dbentity.py
   trunk/maay/p2pquerier.py
   trunk/maay/querier.py
Log:
-update status of sleeping nodes so as to not send to them
-misc cleanups


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-21 16:07:30 UTC (rev 595)
+++ trunk/maay/dbentity.py	2005-11-21 16:33:17 UTC (rev 596)
@@ -559,7 +559,6 @@
         query = cls._selectQuery()
         query += (" WHERE node_id != %s AND last_seen_time > last_sleep_time"
                   " ORDER BY last_seen_time DESC LIMIT %s")
-        print query
         return query
     _selectActiveNodesQuery = classmethod(_selectActiveNodesQuery)
 

Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-21 16:07:30 UTC (rev 595)
+++ trunk/maay/p2pquerier.py	2005-11-21 16:33:17 UTC (rev 596)
@@ -256,11 +256,10 @@
             if (neighbor.ip, neighbor.port) == \
                    (query.client_host, query.client_port):
                 continue
-            target = str(neighbor.getRpcUrl())
-            proxy = Proxy(target)
+            proxy = Proxy(str(neighbor.getRpcUrl()))
             d = proxy.callRemote('distributedQuery', query.asKwargs())
             d.addCallback(self.querier.registerNodeActivity)
-            d.addErrback(sendQueryErrback(target))
+            d.addErrback(sendQueryErrback(neighbor, self.querier))
             self._sentQueries[query.qid] = query
             print "     ... sent to %s:%s %s" % (neighbor.ip,
                                                  neighbor.port,
@@ -341,7 +340,7 @@
                                      answer.provider,
                                      toSend) 
                 d.addCallback(self.querier.registerNodeActivity)
-                d.addErrback(answerQueryErrback(senderUrl))
+                d.addErrback(answerQueryErrback(query))
             except ValueError:
                 print " ... unknown node %s" % query.sender
         else: 
@@ -357,21 +356,24 @@
 
 ##### Custommized errbacks for send/answer ops
 
-def sendQueryErrback(target):
+def sendQueryErrback(target, querier):
+    ':type target: Node'
     def QP(failure):
         """Politely displays any problem (bug, unavailability) related
         to an attempt to send a query.
         """
-        print " ... problem sending the query (likely to %s) : %s" \
-              % (target, failure.getTraceback())
+        print " ... problem sending the query to %s:%s, trace = %s" \
+              % (target.ip, target.port, failure.getTraceback())
+        querier.registerNodeInactivity(target.node_id)
     return QP
 
 def answerQueryErrback(target):
+    ':type target: P2pQuery'
     def AP(failure):
         """Politely displays any problem (bug, unavailability) related
         to an attempt to answer a query.
         """
-        print " ... problem answering the query (likely to %s) : %s" \
-              % (target, failure.getTraceback())
+        print " ... problem answering the query to %s:%s, trace = %s" \
+              % (target.client_host, target.client_port, failure.getTraceback())
     return AP
 

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-21 16:07:30 UTC (rev 595)
+++ trunk/maay/querier.py	2005-11-21 16:33:17 UTC (rev 596)
@@ -141,7 +141,7 @@
             self._cnx.commit()
         return results
 
-    def flushTemporaryTable(self):
+    def flushTemporaryTable(self): #FIXME : this is really the results table
         self._execute('DELETE FROM results')
         
     def close(self):
@@ -242,6 +242,8 @@
 
     def _updateDownloadStatistics(self, document, words):
         cursor = self._cnx.cursor()
+        # what's this max(0, doc.count) below ??? it should be set initially
+        # at zero anyway ...
         document.download_count = max(0, document.download_count) + 1
         document.commit(cursor, update=True)
         db_document_id = document.db_document_id
@@ -294,6 +296,7 @@
         cursor.close()
 
     def registerNodeActivity(self, nodeId):
+        """updates last_seen_time attribute"""
         cursor = self._cnx.cursor()
         nodes = Node.selectWhere(cursor, node_id=nodeId)
         if nodes:
@@ -305,6 +308,19 @@
                       category='[warning]')
         cursor.close()
 
+    def registerNodeInactivity(self, nodeId):
+        """updates last_sleep_time attribute"""
+        cursor = self._cnx.cursor()
+        nodes = Node.selectWhere(cursor, node_id=nodeId)
+        if nodes:
+            node = nodes[0]
+            node.last_sleep_time = int(time.time())
+            node.commit(cursor, update=True)
+        else:
+            log.debug('No matching node found for id {%s}' % nodeId,
+                      category='[warning]')
+        cursor.close()        
+
     def getRegisteredNeighbors(self, nodeId, nbNodes):
         cursor = self._cnx.cursor() 
         nodes = Node.selectRegistered(cursor, nodeId, nbNodes) 



From aurelienc at berlios.de  Mon Nov 21 17:59:46 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Mon, 21 Nov 2005 17:59:46 +0100
Subject: [Maay-svncheckins] r597 - trunk/maay
Message-ID: <200511211659.jALGxkGQ032677@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-21 17:59:41 +0100 (Mon, 21 Nov 2005)
New Revision: 597

Modified:
   trunk/maay/dbentity.py
   trunk/maay/querier.py
   trunk/maay/query.py
Log:
-inform query/querier of search criteria and order (with defaults)
-misc cleanups


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-21 16:33:17 UTC (rev 596)
+++ trunk/maay/dbentity.py	2005-11-21 16:59:41 UTC (rev 597)
@@ -149,20 +149,32 @@
               'score_relevance'  : 2,
               'score_popularity' : 3}
 
-    def __init__(self, order):
+    def __init__(self, order='publication_time', direction='down'):
+        """:param order: see class dict above
+           :param direction: 'up' or 'down'
+        """
         if order in DocumentOrder.orders:
             self.order = DocumentOrder.orders[order]
         else:
             raise NotImplemented("Document ordering %s is unkown" %
                                  order)
+        if direction in ('up', 'down'):
+            if direction == 'up':
+                self.direction = "ASC"
+            else:
+                self.direction = "DESC"
+        else:
+            raise NotImplemented("Document direction %s is unkown" %
+                                 direction)
 
     def __str__(self):
         if self.order == 1:
-            return "ORDER BY D.publication_time DESC "
+            res = "ORDER BY D.publication_time " 
         elif self.order == 2:
-            return "ORDER BY DS.relevance"
+            res = "ORDER BY DS.relevance " 
         else:
-            return "ORDER BY DS.popularity"
+            res = "ORDER BY DS.popularity"
+        return res + self.direction
 
 class Document(DBEntity):
     """Represent a Document in the database
@@ -259,7 +271,7 @@
     #     query is quite messy
     def _selectContainingQuery(cls, words, mimetype=None, offset=0,
                                limit=None, allowPrivate=False,
-                               order='publication_time'):
+                               order=None):
         # XXX mimetype handling is a HACK. It needs to be integrated
         #     nicely in order to handle any kind of restrictions easily
         #word = WORDS_RGX.finditer(normalizeText(' '.join(words)))
@@ -273,7 +285,7 @@
             restriction += " AND D.state!=%s "
             restrictionParams.append(cls.PRIVATE_STATE)
         # just translate the plain-text ordering to SQL stuff
-        sql_order = str(DocumentOrder(order))
+        sql_order = order or str(DocumentOrder('publication_time'))
         # Question: what is the HAVING clause supposed to do ?
         # Answer: we select all documents containing one of the words
         # that we are looking for, group them by their identifier, and
@@ -303,14 +315,17 @@
     _selectContainingQuery = classmethod(_selectContainingQuery)
 
     def selectContaining(cls, cursor, words, mimetype=None, offset=0,
-                         limit=None, allowPrivate=False):
+                         limit=None, allowPrivate=False, order='publication_time',
+                         direction='down'):
         print "Document selectContaining %s" % words
         if not words:
             return []
+        doc_order = str(DocumentOrder(order, direction))
         query, params = cls._selectContainingQuery(words, mimetype,
                                                    offset=offset,
                                                    limit=limit,
-                                                   allowPrivate=allowPrivate)
+                                                   allowPrivate=allowPrivate,
+                                                   order=doc_order)
         if query:
             cursor.execute(query, params)
             results = cursor.fetchall()
@@ -525,6 +540,7 @@
                   'counter', 'claim_count', 'affinity', 'bandwidth')
     key = ('node_id',)
 
+## Gibberish belox might be useful later, don't delete it right now, please (auc)
 ##     def _insertOrUpdateQuery(self):
 ##         """generates an INSERT query according to object's state
 ##            also update node_id on collisions on (ip, port)"""
@@ -541,20 +557,6 @@
 ##                 query += ", %s=%s" % (attr, getattr(self, attr))
 ##         return query
 
-    ### select registered will probably be obsoleted very soon (auc, 11/21/05)
-    def _selectRegisteredNodesQuery(cls):
-        query = cls._selectQuery()
-        query += " WHERE node_id != %s ORDER BY last_seen_time DESC LIMIT %s"
-        return query
-    _selectRegisteredNodesQuery = classmethod(_selectRegisteredNodesQuery)
-
-    def selectRegistered(cls, cursor, currentNodeId, maxResults):
-        query = cls._selectRegisteredNodesQuery()
-        cursor.execute(query, (currentNodeId, maxResults))
-        results = cursor.fetchall()
-        return [cls(**dict(zip(cls.attributes, row))) for row in results]
-    selectRegistered = classmethod(selectRegistered)
-
     def _selectActiveNodesQuery(cls):
         query = cls._selectQuery()
         query += (" WHERE node_id != %s AND last_seen_time > last_sleep_time"

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-21 16:33:17 UTC (rev 596)
+++ trunk/maay/querier.py	2005-11-21 16:59:41 UTC (rev 597)
@@ -163,7 +163,9 @@
             cursor = self._cnx.cursor()
             return Document.selectContaining(cursor, words, query.filetype,
                                              query.offset, query.limit,
-                                             self.searchInPrivate)
+                                             self.searchInPrivate,
+                                             order=query.order,
+                                             direction=query.direction)
         finally:
             traceback.print_exc()
             cursor.close()
@@ -321,12 +323,6 @@
                       category='[warning]')
         cursor.close()        
 
-    def getRegisteredNeighbors(self, nodeId, nbNodes):
-        cursor = self._cnx.cursor() 
-        nodes = Node.selectRegistered(cursor, nodeId, nbNodes) 
-        cursor.close()
-        return nodes
-
     def getActiveNeighbors(self, nodeId, nbNodes):
         cursor = self._cnx.cursor() 
         nodes = Node.selectActive(cursor, nodeId, nbNodes) 

Modified: trunk/maay/query.py
===================================================================
--- trunk/maay/query.py	2005-11-21 16:33:17 UTC (rev 596)
+++ trunk/maay/query.py	2005-11-21 16:59:41 UTC (rev 597)
@@ -48,12 +48,17 @@
 
 class Query(object):
     restrictions = ('filetype', 'filename', 'searchtype')
-    def __init__(self, words, offset=0, filetype=None, filename=None):
+    def __init__(self, words, offset=0, filetype=None, filename=None,
+                 order=None, direction=None):
         self.words = words # unicode string 
         self.offset = offset
         self.filetype = filetype
         self.filename = filename
         self.limit = None
+        #FIXME: ugly stuff below, related to result
+        #       presentation in the browser
+        self.order = order or 'publication_time'
+        self.direction = direction or 'down'
 
     def fromRawQuery(rawQuery, offset=0):
         """:type rawQuery: str"""



From dnf at berlios.de  Mon Nov 21 18:10:37 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Mon, 21 Nov 2005 18:10:37 +0100
Subject: [Maay-svncheckins] r598 - in trunk/maay: . data
Message-ID: <200511211710.jALHAbEb001160@sheep.berlios.de>

Author: dnf
Date: 2005-11-21 18:10:36 +0100 (Mon, 21 Nov 2005)
New Revision: 598

Modified:
   trunk/maay/data/indexationpage.html
   trunk/maay/data/maay.css
   trunk/maay/indexer.py
   trunk/maay/webapplication.py
Log:
Add documents statistics (public, private documents) in indexation page.

TODO: 
  - cache the privateDocumentCount, publicDocumentCount to not compute them each time the indexationpage is displayed or the searchForm is displayed.
  - fix the porky way to pass the querier ref to the IndexationPage.



Modified: trunk/maay/data/indexationpage.html
===================================================================
--- trunk/maay/data/indexationpage.html	2005-11-21 16:59:41 UTC (rev 597)
+++ trunk/maay/data/indexationpage.html	2005-11-21 17:10:36 UTC (rev 598)
@@ -19,6 +19,16 @@
   elt.innerHTML = msg;
 }
 
+function updatePrivateDocumentCount(count) {
+  elt = document.getElementById('privateDocumentCount');
+  elt.innerHTML = count;
+}
+
+function updatePublicDocumentCount(count) {
+  elt = document.getElementById('publicDocumentCount');
+  elt.innerHTML = count;
+}
+
     </script>
   </head>
   <body onload="live();">
@@ -34,21 +44,26 @@
   <div class="message"><b>Status: </b><span id="statusMessage"><span nevow:render="message" /></span></div>
   <br />
   <h2>Search these private folders</h2>
+   <div class="documentCount"><span id="privateDocumentCount"><span nevow:render="privateDocumentCount" /></span> private documents.</div>
    <div nevow:render="sequence" nevow:data="privatefolders">
       <div class="indexedFolderName" nevow:pattern="item" nevow:render="directory"><a><nevow:attr name="href">/indexation?removePrivateFolder=<nevow:slot name="name" /></nevow:attr>X</a> - <nevow:slot name="name" /></div>
    </div>
+   <br />
     <input type="text" name="addPrivateFolder" size="50" />
     <input type="submit" value="Add" />
   <h2>Search/Publish these public folders</h2>
+   <div class="documentCount"><span id="publicDocumentCount"><span nevow:render="publicDocumentCount" /></span> public documents.</div>
     <div nevow:render="sequence" nevow:data="publicfolders">
       <div class="indexedFolderName" nevow:pattern="item" nevow:render="directory"><a><nevow:attr name="href">/indexation?removePublicFolder=<nevow:slot name="name" /></nevow:attr>X</a> - <nevow:slot name="name" /></div>
     </div>
+    <br />
     <input type="text" name="addPublicFolder" size="50" />
     <input type="submit" value="Add" />
   <h2>Don't search these folders</h2>
     <div nevow:render="sequence" nevow:data="skippedfolders">
       <div class="skippedFolderName" nevow:pattern="item" nevow:render="directory"><a><nevow:attr name="href">/indexation?removeSkippedFolder=<nevow:slot name="name" /></nevow:attr>X</a> - <nevow:slot name="name" /></div>
     </div>
+    <br />
     <input type="text" name="addSkippedFolder" size="50" />
     <input type="submit" value="Add" />
  

Modified: trunk/maay/data/maay.css
===================================================================
--- trunk/maay/data/maay.css	2005-11-21 16:59:41 UTC (rev 597)
+++ trunk/maay/data/maay.css	2005-11-21 17:10:36 UTC (rev 598)
@@ -143,14 +143,18 @@
 
 
 /** indexation page *******/
+div.documentCount {
+  font-size: 80%;
+}
+
 div.indexedFolderName {
-  font-size: 60%;
+  font-size: 80%;
   color: #448844; 
   margin-left: 10px;
 }
 
 div.skippedFolderName {
-  font-size: 60%;
+  font-size: 80%;
   color: #884444; 
   margin-left: 10px;
 }

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-21 16:59:41 UTC (rev 597)
+++ trunk/maay/indexer.py	2005-11-21 17:10:36 UTC (rev 598)
@@ -257,7 +257,7 @@
                 print "Error indexing %s: %s" % \
                       (safe_encode(futureDoc.filename), exc)
         for obs in self.observers:
-            obs.newDocumentIndexed(futureDoc.filename)
+            obs.newDocumentIndexed(futureDoc.filename, futureDoc.state)
 
 ######### FileIterator
 

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-21 16:59:41 UTC (rev 597)
+++ trunk/maay/webapplication.py	2005-11-21 17:10:36 UTC (rev 598)
@@ -116,6 +116,11 @@
     # share counter among instances
     indexedDocuments = 0
     untouchedDocuments = 0
+
+    privateDocuments = 0
+    publicDocuments = 0
+
+    querier = None
     
     def __init__(self):
         athena.LivePage.__init__(self)
@@ -140,11 +145,30 @@
     def updateStatus(self, message):
         self.callRemote('updateStatus', message)
 
-    def newDocumentIndexed(self, filename):
+    def updateDocumentStats(self):
+        docCounts = IndexationPage.querier.getDocumentCount()
+        IndexationPage.privateDocuments = docCounts[Document.PRIVATE_STATE]
+        IndexationPage.publicDocuments = docCounts[Document.PUBLISHED_STATE]
+
+    def updatePrivateDocumentCount(self):
+        self.callRemote('updatePrivateDocumentCount', IndexationPage.privateDocuments)
+
+    def updatePublicDocumentCount(self):
+        self.callRemote('updatePublicDocumentCount', IndexationPage.publicDocuments)
+
+    def newDocumentIndexed(self, filename, state):
         IndexationPage.indexedDocuments += 1
+
+        if state == Document.PRIVATE_STATE:
+            IndexationPage.privateDocuments += 1
+        elif state == Document.PUBLIC_STATE:
+            IndexationPage.publicDocuments += 1
+
         if (IndexationPage.indexedDocuments % 10) == 0:
             self.updateStatus(u'Indexation in progress - %s new documents / %s total'
                 % (IndexationPage.indexedDocuments, IndexationPage.indexedDocuments + IndexationPage.untouchedDocuments))
+            self.updatePrivateDocumentCount()
+            self.updatePublicDocumentCount()
 
     def documentUntouched(self, filename):
         IndexationPage.untouchedDocuments += 1
@@ -159,9 +183,20 @@
         IndexationPage.untouchedDocuments = 0
         IndexationPage.indexedDocuments = 0
 
+        self.updateDocumentStats()
+        self.updatePrivateDocumentCount()
+        self.updatePublicDocumentCount()
+
+
     def render_message(self, context, data):
         return self.msg
 
+    def render_privateDocumentCount(self, context, data):
+        return IndexationPage.privateDocuments
+
+    def render_publicDocumentCount(self, context, data):
+        return IndexationPage.publicDocuments
+
     def render_alert(self, context, data):
         context.fillSlots("message", self.alertmessage)
         return context.tag
@@ -189,9 +224,9 @@
 class IndexationPageFactory(athena.LivePageFactory):
     implements(indexer.IIndexerObserver)
 
-    def newDocumentIndexed(self, filename):
+    def newDocumentIndexed(self, filename, state):
         for webpage in self.clients.itervalues():
-            webpage.newDocumentIndexed(filename)
+            webpage.newDocumentIndexed(filename, state)
         
     def documentUntouched(self, filename):
         for webpage in self.clients.itervalues():
@@ -200,7 +235,6 @@
     def indexationCompleted(self):
         for webpage in self.clients.itervalues():
             webpage.indexationCompleted()
-    
 
 class SearchForm(MaayPage):
     """default search form"""
@@ -294,6 +328,11 @@
 
         start = int(context.arg('start', 0))
         indexationPage = _factory.clientFactory(context)
+
+        # FIXME: porky way to pass the querier ref to the indexationPage
+        IndexationPage.querier = self.querier
+        indexationPage.updateDocumentStats()
+        
         if start == 0:
             if indexer.is_running():
                 msg = "Indexer running"



From adimasci at berlios.de  Tue Nov 22 16:19:24 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Tue, 22 Nov 2005 16:19:24 +0100
Subject: [Maay-svncheckins] r599 - trunk
Message-ID: <200511221519.jAMFJO0U013271@sheep.berlios.de>

Author: adimasci
Date: 2005-11-22 16:19:23 +0100 (Tue, 22 Nov 2005)
New Revision: 599

Modified:
   trunk/maay.iss
   trunk/maayservice.py
Log:
maay's service now automatically starts at boot time with
a dependancy on MySQL


Modified: trunk/maay.iss
===================================================================
--- trunk/maay.iss	2005-11-21 17:10:36 UTC (rev 598)
+++ trunk/maay.iss	2005-11-22 15:19:23 UTC (rev 599)
@@ -61,7 +61,7 @@
 Filename: "NET"; Parameters:"start MySQL"; StatusMsg: "Starting MySQL server"; WorkingDir:"{app}\mysql"; Flags:runhidden
 Filename: "{app}\createdb.exe"; StatusMsg: "Installing database"; WorkingDir:"{app}"; Flags:runhidden
 Filename: "{app}\updateconfig.exe"; Parameters:"""{userdesktop}"" ""{userdocs}"""; WorkingDir:"{app}"; StatusMsg: "Auto configuration";
-Filename: "{app}\maay.exe"; Parameters:"-install"; StatusMsg: "Registering Maay as a service"; WorkingDir:"{app}"; Flags:runhidden
+Filename: "{app}\maay.exe"; Parameters:"-install -auto"; StatusMsg: "Registering Maay as a service"; WorkingDir:"{app}"; Flags:runhidden
 Filename: "NET"; Parameters: "start Maay"; StatusMsg: "Starting Maay node"; Flags:runhidden
 ;Filename: "{app}\maay_node.exe"; StatusMsg: "Launching maay node"; WorkingDir:"{app}"; Flags:postinstall nowait
 

Modified: trunk/maayservice.py
===================================================================
--- trunk/maayservice.py	2005-11-21 17:10:36 UTC (rev 598)
+++ trunk/maayservice.py	2005-11-22 15:19:23 UTC (rev 599)
@@ -28,7 +28,7 @@
 class MyService(win32serviceutil.ServiceFramework):
     _svc_name_ = "Maay"
     _svc_display_name_ = "Maay"
-    _svc_deps_ = ["EventLog"]
+    _svc_deps_ = ["EventLog", "MySQL"]
     def __init__(self, args):
         win32serviceutil.ServiceFramework.__init__(self, args)
 



From dnf at berlios.de  Tue Nov 22 17:00:01 2005
From: dnf at berlios.de (dnf at berlios.de)
Date: Tue, 22 Nov 2005 17:00:01 +0100
Subject: [Maay-svncheckins] r600 - trunk
Message-ID: <200511221600.jAMG017A016551@sheep.berlios.de>

Author: dnf
Date: 2005-11-22 16:59:59 +0100 (Tue, 22 Nov 2005)
New Revision: 600

Modified:
   trunk/maay.iss
   trunk/maayservice.py
Log:
Update maayservice to display maay icon in border right corner. (early implementation)
rem: option --interactive in service argument is used to allow the service to interact with the desktop



Modified: trunk/maay.iss
===================================================================
--- trunk/maay.iss	2005-11-22 15:19:23 UTC (rev 599)
+++ trunk/maay.iss	2005-11-22 15:59:59 UTC (rev 600)
@@ -61,7 +61,7 @@
 Filename: "NET"; Parameters:"start MySQL"; StatusMsg: "Starting MySQL server"; WorkingDir:"{app}\mysql"; Flags:runhidden
 Filename: "{app}\createdb.exe"; StatusMsg: "Installing database"; WorkingDir:"{app}"; Flags:runhidden
 Filename: "{app}\updateconfig.exe"; Parameters:"""{userdesktop}"" ""{userdocs}"""; WorkingDir:"{app}"; StatusMsg: "Auto configuration";
-Filename: "{app}\maay.exe"; Parameters:"-install -auto"; StatusMsg: "Registering Maay as a service"; WorkingDir:"{app}"; Flags:runhidden
+Filename: "{app}\maay.exe"; Parameters:"-interactive -auto -install"; StatusMsg: "Registering Maay as a service"; WorkingDir:"{app}"; Flags:runhidden
 Filename: "NET"; Parameters: "start Maay"; StatusMsg: "Starting Maay node"; Flags:runhidden
 ;Filename: "{app}\maay_node.exe"; StatusMsg: "Launching maay node"; WorkingDir:"{app}"; Flags:postinstall nowait
 

Modified: trunk/maayservice.py
===================================================================
--- trunk/maayservice.py	2005-11-22 15:19:23 UTC (rev 599)
+++ trunk/maayservice.py	2005-11-22 15:59:59 UTC (rev 600)
@@ -23,8 +23,105 @@
 import win32event
 import win32evtlogutil
 
+import win32api
+import win32gui
+import win32con
+import sys, os
+import thread
+import webbrowser
+import maayservice
+
+
 from twisted.internet import reactor
 
+# display small icons on bottom right corner to notify user that maay is running
+# maybe need some refactoring
+
+class Win32MaayTaskbar:
+        SEARCH_MENU_ID = 1001
+        INDEXATION_MENU_ID = 1002
+        HOMEPAGE_MENU_ID = 1003
+        
+	def __init__(self):
+		pass
+
+	def __start__(self):
+		msg_TaskbarRestart = win32api.RegisterWindowMessage("TaskbarCreated");
+		message_map = {
+				msg_TaskbarRestart: self.OnRestart,
+				win32con.WM_DESTROY: self.OnDestroy,
+				win32con.WM_COMMAND: self.OnCommand,
+				win32con.WM_USER+20 : self.OnTaskbarNotify,
+		}
+		# Register the Window class.
+		wc = win32gui.WNDCLASS()
+		hinst = wc.hInstance = win32gui.GetModuleHandle(None)
+		wc.lpszClassName = "MaayTaskbar"
+		wc.style = win32con.CS_VREDRAW | win32con.CS_HREDRAW;
+		wc.hCursor = win32gui.LoadCursor( 0, win32con.IDC_ARROW )
+		wc.hbrBackground = win32con.COLOR_WINDOW
+		wc.lpfnWndProc = message_map # could also specify a wndproc.
+		classAtom = win32gui.RegisterClass(wc)
+		# Create the Window.
+		style = win32con.WS_OVERLAPPED | win32con.WS_SYSMENU
+		self.hwnd = win32gui.CreateWindow( classAtom, "Maay", style, \
+				0, 0, win32con.CW_USEDEFAULT, win32con.CW_USEDEFAULT, \
+				0, 0, hinst, None)
+		win32gui.UpdateWindow(self.hwnd)
+
+		# Try and find a custom icon
+		hinst =  win32gui.GetModuleHandle(None)
+#		iconPathName = os.path.abspath(os.path.join( os.path.split(sys.executable)[0], "maay_node.exe" ))
+
+		icon_flags = win32con.LR_LOADFROMFILE | win32con.LR_DEFAULTSIZE
+		self.hicon = win32gui.LoadImage(hinst, "data\\images\\maay.ico", win32con.IMAGE_ICON, 0, 0, icon_flags)
+
+		flags = win32gui.NIF_ICON | win32gui.NIF_MESSAGE | win32gui.NIF_TIP
+		nid = (self.hwnd, 0, flags, win32con.WM_USER+20, self.hicon, "Maay")
+		win32gui.Shell_NotifyIcon(win32gui.NIM_ADD, nid)
+
+		win32gui.PumpMessages()
+		
+
+	def start(self):
+		thread.start_new_thread(self.__start__, ())
+
+	def OnRestart(self, hwnd, msg, wparam, lparam):
+		self._DoCreateIcons()
+
+	def OnDestroy(self, hwnd, msg, wparam, lparam):
+		nid = (self.hwnd, 0)
+		Shell_NotifyIcon(NIM_DELETE, nid)
+		PostQuitMessage(0) # Terminate the app.
+
+
+	def OnTaskbarNotify(self, hwnd, msg, wparam, lparam):
+		if lparam == win32con.WM_RBUTTONUP:
+			menu = win32gui.CreatePopupMenu()
+			win32gui.AppendMenu( menu, win32con.MF_STRING, Win32MaayTaskbar.SEARCH_MENU_ID, "Search")
+			win32gui.AppendMenu( menu, win32con.MF_STRING, Win32MaayTaskbar.INDEXATION_MENU_ID, "Manage Folders")
+			win32gui.AppendMenu( menu, win32con.MF_SEPARATOR, 1002, "")
+			win32gui.AppendMenu( menu, win32con.MF_STRING, Win32MaayTaskbar.HOMEPAGE_MENU_ID, "Maay Homepage")
+		        win32gui.SetMenuDefaultItem(menu, Win32MaayTaskbar.SEARCH_MENU_ID, 0)
+			pos = win32gui.GetCursorPos()
+			# See http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/menus_0hdi.asp
+			win32gui.SetForegroundWindow(self.hwnd)
+			win32gui.TrackPopupMenu(menu, win32con.TPM_LEFTALIGN, pos[0], pos[1], 0, self.hwnd, None)
+			win32gui.PostMessage(self.hwnd, win32con.WM_NULL, 0, 0)
+		elif lparam==win32con.WM_LBUTTONDBLCLK:
+			webbrowser.open("http://127.0.0.1:7777/", autoraise=1)
+		return 1
+
+	def OnCommand(self, hwnd, msg, wparam, lparam):
+		id = win32api.LOWORD(wparam)
+		if id == Win32MaayTaskbar.SEARCH_MENU_ID:
+			webbrowser.open("http://127.0.0.1:7777/", autoraise=1)
+		elif id == Win32MaayTaskbar.INDEXATION_MENU_ID:
+			webbrowser.open("http://127.0.0.1:7777/indexation", autoraise=1)
+		elif id == Win32MaayTaskbar.HOMEPAGE_MENU_ID:
+			webbrowser.open("http://maay.netofpeers.net", autoraise=1)
+
+
 class MyService(win32serviceutil.ServiceFramework):
     _svc_name_ = "Maay"
     _svc_display_name_ = "Maay"
@@ -44,7 +141,8 @@
                                     0, # category
                                     servicemanager.EVENTLOG_INFORMATION_TYPE,
                                     (self._svc_name_, ''))
-
+	taskbar = Win32MaayTaskbar()
+	taskbar.start()
         run()
         # and write a 'stopped' event to the event log.
         win32evtlogutil.ReportEvent(self._svc_name_,



From adimasci at berlios.de  Tue Nov 22 17:32:55 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Tue, 22 Nov 2005 17:32:55 +0100
Subject: [Maay-svncheckins] r601 - in trunk/maay: . sql
Message-ID: <200511221632.jAMGWta8018901@sheep.berlios.de>

Author: adimasci
Date: 2005-11-22 17:32:54 +0100 (Tue, 22 Nov 2005)
New Revision: 601

Modified:
   trunk/maay/configuration.py
   trunk/maay/dbentity.py
   trunk/maay/p2pquerier.py
   trunk/maay/querier.py
   trunk/maay/sql/mysql.sql
   trunk/maay/webapplication.py
Log:
IMPORTANT NOTE : This is a big checkin with lot of manual merges
since Berlios was (and is still more or less) down. It might
break stuff. Please be lenient for the next 2 revisions.

This checkin :

 - fixes counters buglets on indexation page
 - adds code to download distant document from other peers
   when the main one could not fulfill the query. This
   could not be tested for a lot of reasons, so expect to have 
   the distant file download functionality broken for a few
   more revisions.



Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-22 15:59:59 UTC (rev 600)
+++ trunk/maay/configuration.py	2005-11-22 16:32:54 UTC (rev 601)
@@ -259,7 +259,7 @@
 
 def _download_dir():
     if sys.platform == 'win32':
-        theDir = r'C:\Documents and Settings\All Users\Desktop\Maay Documents\downloaded'
+        theDir = r'\Documents and Settings\All Users\Desktop\Maay Documents\downloaded'
     else:
         theDir = osp.expanduser('~/maay-downloads/')
     if not osp.exists(theDir):

Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-22 15:59:59 UTC (rev 600)
+++ trunk/maay/dbentity.py	2005-11-22 16:32:54 UTC (rev 601)
@@ -28,6 +28,7 @@
 
 from maay.texttool import normalizeText, WORD_MIN_LEN, WORD_MAX_LEN,\
      WORDS_RGX
+from maay.p2pquerier import NODE_ID
 
 class DBEntity:
     attributes = []
@@ -140,7 +141,6 @@
             assert attrname in self.attributes, 'Unknown attribute %s' % attrname
             setattr(self, attrname, value)
 
-
 class DocumentOrder:
     """a small helper class to translate search criteria
        from crystal-clear high-level stuff to SQL junk"""
@@ -176,6 +176,7 @@
             res = "ORDER BY DS.popularity"
         return res + self.direction
 
+
 class Document(DBEntity):
     """Represent a Document in the database
     A Document is different from a file, because several files can store
@@ -271,7 +272,7 @@
     #     query is quite messy
     def _selectContainingQuery(cls, words, mimetype=None, offset=0,
                                limit=None, allowPrivate=False,
-                               order=None):
+			       order=None):
         # XXX mimetype handling is a HACK. It needs to be integrated
         #     nicely in order to handle any kind of restrictions easily
         #word = WORDS_RGX.finditer(normalizeText(' '.join(words)))
@@ -284,8 +285,8 @@
         if not allowPrivate:
             restriction += " AND D.state!=%s "
             restrictionParams.append(cls.PRIVATE_STATE)
-        # just translate the plain-text ordering to SQL stuff
-        sql_order = order or str(DocumentOrder('publication_time'))
+	# just translate the plain-text ordering to SQL stuff
+	sql_order = order or str(DocumentOrder('publication_time'))
         # Question: what is the HAVING clause supposed to do ?
         # Answer: we select all documents containing one of the words
         # that we are looking for, group them by their identifier, and
@@ -306,7 +307,7 @@
                  " %s "
                  "GROUP BY DS.db_document_id "
                  "HAVING count(DS.db_document_id) = %%s ") + sql_order
-        query = query % (', '.join(['%s'] * len(words)), restriction)
+	query = query % (', '.join(['%s'] * len(words)), restriction)
         # XXX SQL: how to specify only the OFFSET ???????
         if limit or offset:
             query += " LIMIT %s OFFSET %s" % (limit or 50, offset)
@@ -316,16 +317,16 @@
 
     def selectContaining(cls, cursor, words, mimetype=None, offset=0,
                          limit=None, allowPrivate=False, order='publication_time',
-                         direction='down'):
+			 direction='down'):
         print "Document selectContaining %s" % words
         if not words:
             return []
-        doc_order = str(DocumentOrder(order, direction))
+	doc_order = str(DocumentOrder(order, direction))
         query, params = cls._selectContainingQuery(words, mimetype,
                                                    offset=offset,
                                                    limit=limit,
                                                    allowPrivate=allowPrivate,
-                                                   order=doc_order)
+						   order=doc_order)
         if query:
             cursor.execute(query, params)
             results = cursor.fetchall()
@@ -363,33 +364,35 @@
     """Results are temporary relations created/destroyed on the fly
        they contain documents matching both local and distributed requests
     """
-    attributes = ('document_id', 'query_id', 'mime_type',
+    attributes = ('document_id', 'query_id', 'node_id', 'mime_type',
                   'title', 'size', 'text', 'publication_time', 'url',
-                  'host', 'port', 'login', 'providers')
+                  'host', 'port', 'login', 'record_ts')
     key = ('document_id', 'query_id')
     tableName = 'results'
 
-    def _insertQuery(self):
-        """generates an INSERT query according to object's state
-           also update provider count on collisions on (queryId, document_id)"""
-        values = ['%%(%s)s' % attr for attr in self.attributes
-                  if hasattr(self, attr)]
-        query = "INSERT INTO %s (%s) VALUES (%s) " % (self.tableName,
-                                                      ', '.join(self.boundAttributes()),
-                                                      ', '.join(values))
-        query += "ON DUPLICATE KEY UPDATE providers=providers+1"
-        return query
 
+##     def _insertQuery(self):
+##         """generates an INSERT query according to object's state
+##            also update provider count on collisions on (queryId, document_id)"""
+##         values = ['%%(%s)s' % attr for attr in self.attributes
+##                   if hasattr(self, attr)]
+##         query = "INSERT INTO %s (%s) VALUES (%s) " % (self.tableName,
+##                                                       ', '.join(self.boundAttributes()),
+##                                                       ', '.join(values))
+##         query += "ON DUPLICATE KEY UPDATE providers=providers+1"
+##         return query
+
     def fromDocument(document, queryId, provider=None):
         stateDict = document.stateDict
         for key, value in stateDict.items():
             if key not in Result.attributes or not value:
                 del stateDict[key]
         if provider:
-            stateDict['login'], stateDict['host'], stateDict['port'] = provider
+            stateDict['login'], stateDict['node_id'], stateDict['host'], stateDict['port'] = provider
         else:
             stateDict['host'] = 'localhost'
             stateDict['port'] = 0
+            stateDict['node_id'] = NODE_ID # local node id
         stateDict['query_id'] = queryId
         return Result(**stateDict)
     fromDocument = staticmethod(fromDocument)
@@ -404,7 +407,9 @@
             where += " AND host != 'localhost' "
         elif onlyLocal:
             where += " AND host = 'localhost' "
-        query = 'SELECT %s FROM %s%s ORDER BY publication_time DESC LIMIT %s OFFSET %s' % (
+        query = 'SELECT %s FROM %s%s GROUP BY document_id ' \
+                'HAVING record_ts=MIN(record_ts) ' \
+                'ORDER BY publication_time DESC LIMIT %s OFFSET %s' % (
             ', '.join(cls.attributes),
             cls.tableName,
             where, limit, offset)
@@ -418,6 +423,7 @@
         return [cls(**dict(zip(cls.attributes, row))) for row in results]
     selectWhere = classmethod(selectWhere)
 
+
 class FileInfo(DBEntity):
     """
     Attributes:
@@ -537,7 +543,7 @@
     """
     tableName = 'nodes'
     attributes = ('node_id', 'ip', 'port', 'last_seen_time', 'last_sleep_time',
-                  'counter', 'claim_count', 'affinity', 'bandwidth')
+		  'counter', 'claim_count', 'affinity', 'bandwidth')
     key = ('node_id',)
 
 ## Gibberish belox might be useful later, don't delete it right now, please (auc)
@@ -558,14 +564,20 @@
 ##         return query
 
     def _selectActiveNodesQuery(cls):
-        query = cls._selectQuery()
+	query = cls._selectQuery()
         query += (" WHERE node_id != %s AND last_seen_time > last_sleep_time"
                   " ORDER BY last_seen_time DESC LIMIT %s")
-        return query
+         return query
     _selectActiveNodesQuery = classmethod(_selectActiveNodesQuery)
 
+    def _selectRegisteredNodesQuery(cls):
+        query = cls._selectQuery()
+        query += " WHERE node_id != %s ORDER BY last_seen_time DESC LIMIT %s"
+        return query
+    _selectRegisteredNodesQuery = classmethod(_selectRegisteredNodesQuery)
+
     def selectActive(cls, cursor, currentNodeId, maxResults):
-        query = cls._selectActiveNodesQuery()
+	query = cls._selectActiveNodesQuery()
         cursor.execute(query, (currentNodeId, maxResults))
         results = cursor.fetchall()
         return [cls(**dict(zip(cls.attributes, row))) for row in results]
@@ -598,3 +610,4 @@
     key = ('node_id', 'word')
 
     
+

Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-22 15:59:59 UTC (rev 600)
+++ trunk/maay/p2pquerier.py	2005-11-22 16:32:54 UTC (rev 601)
@@ -39,6 +39,7 @@
 nodeConfig.load()
 NODE_HOST = socket.gethostbyname(socket.gethostname())
 NODE_PORT = nodeConfig.rpcserver_port
+NODE_ID = nodeConfig.get_node_id()
 
 def hashIt(item, uname=''.join(platform.uname())):
     hasher = sha.sha()
@@ -164,7 +165,7 @@
 class P2pAnswer:
     def __init__(self, queryId, provider, documents):
         """
-        :type provider: 3-tuple (login, IP, xmlrpc-port)
+        :type provider: 4-tuple (login, nodeID, IP, xmlrpc-port)
         """
         self.queryId = queryId
         self.provider = provider
@@ -259,7 +260,7 @@
             proxy = Proxy(str(neighbor.getRpcUrl()))
             d = proxy.callRemote('distributedQuery', query.asKwargs())
             d.addCallback(self.querier.registerNodeActivity)
-            d.addErrback(sendQueryErrback(neighbor, self.querier))
+	    d.addErrback(sendQueryErrback(neighbor, self.querier))
             self._sentQueries[query.qid] = query
             print "     ... sent to %s:%s %s" % (neighbor.ip,
                                                  neighbor.port,
@@ -291,8 +292,9 @@
             abstract = makeAbstract(doc.text, query.getWords())
             doc.text = untagText(removeSpace(abstract))
 
-        # provider is a triple (login, IP, xmlrpc-port)
+        # provider is a 4-uple (login, node_id, IP, xmlrpc-port)
         provider = (getUserLogin(),
+                    NODE_ID,
                     socket.gethostbyname(socket.gethostname()),
                     NODE_PORT)
             
@@ -338,7 +340,7 @@
                                      query.qid,
                                      self.nodeId,
                                      answer.provider,
-                                     toSend) 
+                                     toSend)
                 d.addCallback(self.querier.registerNodeActivity)
                 d.addErrback(answerQueryErrback(query))
             except ValueError:
@@ -367,13 +369,10 @@
         querier.registerNodeInactivity(target.node_id)
     return QP
 
+
 def answerQueryErrback(target):
     ':type target: P2pQuery'
     def AP(failure):
-        """Politely displays any problem (bug, unavailability) related
-        to an attempt to answer a query.
-        """
         print " ... problem answering the query to %s:%s, trace = %s" \
               % (target.client_host, target.client_port, failure.getTraceback())
     return AP
-

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-22 15:59:59 UTC (rev 600)
+++ trunk/maay/querier.py	2005-11-22 16:32:54 UTC (rev 601)
@@ -163,9 +163,9 @@
             cursor = self._cnx.cursor()
             return Document.selectContaining(cursor, words, query.filetype,
                                              query.offset, query.limit,
-                                             self.searchInPrivate,
-                                             order=query.order,
-                                             direction=query.direction)
+					     self.searchInPrivate,
+					     order=query.order,
+					     direction=query.direction)
         finally:
             traceback.print_exc()
             cursor.close()
@@ -244,8 +244,8 @@
 
     def _updateDownloadStatistics(self, document, words):
         cursor = self._cnx.cursor()
-        # what's this max(0, doc.count) below ??? it should be set initially
-        # at zero anyway ...
+	# what's this max(0, doc.count) below ??? it should be set initially
+	# at zero anyway ...
         document.download_count = max(0, document.download_count) + 1
         document.commit(cursor, update=True)
         db_document_id = document.db_document_id
@@ -298,7 +298,7 @@
         cursor.close()
 
     def registerNodeActivity(self, nodeId):
-        """updates last_seen_time attribute"""
+	"""updates last_seen_time attribute"""
         cursor = self._cnx.cursor()
         nodes = Node.selectWhere(cursor, node_id=nodeId)
         if nodes:
@@ -353,6 +353,21 @@
                                      onlyLocal, onlyDistant, query_id=queryId)
         cursor.close()
         return results
+
+    def getProvidersFor(self, docId, queryId):
+        """returns a list of couples (ip, port) corresponding to
+        each node that can provide the document.
+        queryId is needed only to avoid small conflicts with previous
+        queries that returned the same documents
+        (we don't want 'old' providers to appear in the list)
+        """
+        cursor = self._cnx.cursor()
+        query = 'SELECT host, port FROM results WHERE query_id=%(queryId) ' \
+                'AND document_id=%(docId)'
+        cursor.execute(query, locals())
+        providers = cursor.fetchall()
+        cursor.close()
+        return providers
         
     def pushDocuments(self, queryId, documents, provider=None):
         """push <documents> into the temporary table built for

Modified: trunk/maay/sql/mysql.sql
===================================================================
--- trunk/maay/sql/mysql.sql	2005-11-22 15:59:59 UTC (rev 600)
+++ trunk/maay/sql/mysql.sql	2005-11-22 16:32:54 UTC (rev 601)
@@ -123,8 +123,8 @@
   `ip` char(15) NOT NULL default '', -- to satisfy selectOrInsertWhere *
 -- FIXME: this should be unsigned smallint
   `port` smallint(11) NOT NULL default 0, -- to satisfy selectOrInsertWhere *
-  `last_seen_time` int(11) default 1,
-  `last_sleep_time` int(11) default 0,
+  `last_seen_time` int(11) default 0,
+  `last_sleep_time` int(11) default 1,
   `counter` int(11) NOT NULL default '0',
   `claim_count` float NOT NULL default '0',
   `affinity` double NOT NULL default '0',
@@ -151,6 +151,7 @@
 --  `db_document_id` varchar(40) NOT NULL,
   `document_id` varchar(40) NOT NULL default '',
   `query_id` varchar(64) NOT NULL,
+  `node_id` char(40) NOT NULL default '',
   `mime_type` varchar(40) NOT NULL default '',
   `title` varchar(255) default NULL,
   `size` int(11) default NULL,
@@ -161,8 +162,7 @@
   `port` int(11), -- check this
   `login` varchar(255),
   `record_ts` TIMESTAMP(8), -- DEFAULT NOW() is not necessary because records are not updated
-  `providers` int(11) default 1, -- number of providers for the document
-  PRIMARY KEY (`document_id`, `query_id`)
+  PRIMARY KEY (`document_id`, `query_id`, `node_id`)
 --  PRIMARY KEY (`db_document_id`, `query_id`, `host`, `port`)
 --  KEY `document_id` (`document_id`),
 --  KEY `url` (`url`)

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-22 15:59:59 UTC (rev 600)
+++ trunk/maay/webapplication.py	2005-11-22 16:32:54 UTC (rev 601)
@@ -36,6 +36,7 @@
 from nevow import rend, tags, loaders, athena, inevow
 
 from logilab.common.textutils import normalize_text
+from logilab.common.compat import set
 
 from maay.querier import WEB_AVATARID
 from maay.configuration import get_path_of
@@ -111,17 +112,7 @@
 
 class IndexationPage(athena.LivePage):
     docFactory = loaders.xmlfile(get_path_of('indexationpage.html'))
-    implements(indexer.IIndexerObserver)
 
-    # share counter among instances
-    indexedDocuments = 0
-    untouchedDocuments = 0
-
-    privateDocuments = 0
-    publicDocuments = 0
-
-    querier = None
-    
     def __init__(self):
         athena.LivePage.__init__(self)
         self.indexerConfig = indexer.indexerConfig
@@ -145,58 +136,17 @@
     def updateStatus(self, message):
         self.callRemote('updateStatus', message)
 
-    def updateDocumentStats(self):
-        docCounts = IndexationPage.querier.getDocumentCount()
-        IndexationPage.privateDocuments = docCounts[Document.PRIVATE_STATE]
-        IndexationPage.publicDocuments = docCounts[Document.PUBLISHED_STATE]
+    def countersUpdated(self, old, new):
+        self.updateStatus(u'Indexation in progress - %s new documents / %s total' %
+                          (new, old + new))
 
-    def updatePrivateDocumentCount(self):
-        self.callRemote('updatePrivateDocumentCount', IndexationPage.privateDocuments)
-
-    def updatePublicDocumentCount(self):
-        self.callRemote('updatePublicDocumentCount', IndexationPage.publicDocuments)
-
-    def newDocumentIndexed(self, filename, state):
-        IndexationPage.indexedDocuments += 1
-
-        if state == Document.PRIVATE_STATE:
-            IndexationPage.privateDocuments += 1
-        elif state == Document.PUBLIC_STATE:
-            IndexationPage.publicDocuments += 1
-
-        if (IndexationPage.indexedDocuments % 10) == 0:
-            self.updateStatus(u'Indexation in progress - %s new documents / %s total'
-                % (IndexationPage.indexedDocuments, IndexationPage.indexedDocuments + IndexationPage.untouchedDocuments))
-            self.updatePrivateDocumentCount()
-            self.updatePublicDocumentCount()
-
-    def documentUntouched(self, filename):
-        IndexationPage.untouchedDocuments += 1
-        if (IndexationPage.untouchedDocuments % 10) == 0:
-            self.updateStatus(u'Indexation in progress - %s new documents / %s total'
-                % (IndexationPage.indexedDocuments, IndexationPage.indexedDocuments + IndexationPage.untouchedDocuments))
-        
     def indexationCompleted(self):
         self.updateStatus(u'Indexation finished - %s new documents / %s total'
             % (IndexationPage.indexedDocuments, IndexationPage.indexedDocuments + IndexationPage.untouchedDocuments))
-        # reset counters for the next indexation
-        IndexationPage.untouchedDocuments = 0
-        IndexationPage.indexedDocuments = 0
 
-        self.updateDocumentStats()
-        self.updatePrivateDocumentCount()
-        self.updatePublicDocumentCount()
-
-
     def render_message(self, context, data):
         return self.msg
 
-    def render_privateDocumentCount(self, context, data):
-        return IndexationPage.privateDocuments
-
-    def render_publicDocumentCount(self, context, data):
-        return IndexationPage.publicDocuments
-
     def render_alert(self, context, data):
         context.fillSlots("message", self.alertmessage)
         return context.tag
@@ -224,17 +174,33 @@
 class IndexationPageFactory(athena.LivePageFactory):
     implements(indexer.IIndexerObserver)
 
-    def newDocumentIndexed(self, filename, state):
-        for webpage in self.clients.itervalues():
-            webpage.newDocumentIndexed(filename, state)
+    def __init__(self, pageFactory):
+        athena.LivePageFactory.__init__(self, pageFactory)
+        self.untouchedDocuments = 0
+        self.indexedDocuments = 0
+
+    def newDocumentIndexed(self, filename):
+        self.indexedDocuments += 1
+        # refresh pages for each group of 10 indexed files
+        if (self.indexedDocuments % 10) == 0:
+            for webpage in self.clients.itervalues():
+                webpage.countersUpdated(self.untouchedDocuments,
+                                        self.indexedDocuments)
         
     def documentUntouched(self, filename):
-        for webpage in self.clients.itervalues():
-            webpage.documentUntouched(filename)
-        
+        self.untouchedDocuments += 1
+        if (self.untouchedDocuments % 10) == 0:
+            for webpage in self.clients.itervalues():
+                webpage.countersUpdated(self.untouchedDocuments,
+                                        self.indexedDocuments)
+    
     def indexationCompleted(self):
         for webpage in self.clients.itervalues():
             webpage.indexationCompleted()
+        # reset counters after indexation is finished
+        self.untouchedDocuments = 0
+        self.indexedDocuments = 0
+    
 
 class SearchForm(MaayPage):
     """default search form"""
@@ -333,7 +299,7 @@
         IndexationPage.querier = self.querier
         indexationPage.updateDocumentStats()
         
-        if start == 0:
+	if start == 0:
             if indexer.is_running():
                 msg = "Indexer running"
             else:
@@ -371,16 +337,18 @@
         """download distant file and put it in a public indexable directory"""
         host = context.arg('host')
         port = context.arg('port')
+        queryId = context.arg('qid')
         words = context.arg('words').split()
         filename = context.arg('filename')
         docid = context.arg('docid')
         if not host or not port or not docid:
             return Maay404()
-        print "SearchForm distantfile"
+        self.proivderSet = set()
         proxy = Proxy('http://%s:%s' % (host, port))
         d = proxy.callRemote('downloadFile', docid, words)
         d.addCallback(self.gotDataBack, filename)
-        d.addErrback(self.onDownloadFileError, filename)
+        d.addErrback(self.tryOtherProviders, filename, words, host,
+                     port, docid, queryId)
         return d
 
     def gotDataBack(self, rpcFriendlyData, filename):
@@ -395,7 +363,25 @@
     def onDownloadFileError(self, error, filename):
         msg = "Error while downloading file: %s" % (filename,)
         return Maay404(msg)
+
+    def tryOtherProviders(self, error, filename, words, host, port, docId, queryId):
+        """starts to explore the list of other providers"""
+        providers = self.querier.getProvidersFor(docId, queryId)
+        self.providerSet.remove((host, port))
+        return self.retryWithOtherProvider(words, docId, filename)
     
+    def retryWithOtherProvider(self, words, docId, filename):
+        if self.providerSet:
+            nextHost, nextPort = self.providerSet.pop()
+            proxy = Proxy('http://%s:%s' % (nextHost, nextPort))
+            d = proxy.callRemote('downloadFile', docId, words)
+            d.addCallback(self.gotDataBack, filename)
+            d.addErrback(self.retryWithOtherProvider, words, docId, filename)
+            return d
+        else:
+            return self.onDownloadFileError('no provider available', filename)
+    
+    
 class DistantFilePage(static.File):
     def __init__(self, filepath):
         static.File.__init__(self, filepath)
@@ -507,6 +493,7 @@
             baseurl += '&port=%s' % (document.port,)
         baseurl += '&filename=%s' % osp.basename(document.url)
         baseurl += '&words=%s' % '+'.join(self.query.words)
+        baseurl += '&qid=%s' % (self.queryId,)
         context.fillSlots('url', baseurl)
         return context.tag
     



From dnf at berlios.de  Tue Nov 22 17:39:47 2005
From: dnf at berlios.de (dnf at berlios.de)
Date: Tue, 22 Nov 2005 17:39:47 +0100
Subject: [Maay-svncheckins] r602 - in trunk: . maay/configuration/win32
Message-ID: <200511221639.jAMGdlR5019312@sheep.berlios.de>

Author: dnf
Date: 2005-11-22 17:39:42 +0100 (Tue, 22 Nov 2005)
New Revision: 602

Added:
   trunk/maay/configuration/win32/Maay.url
Modified:
   trunk/maayservice.py
Log:
- Update maayservice (remove tab indentation, use nodeConfiguration for the port)
- Add Maay.url to repository.



Added: trunk/maay/configuration/win32/Maay.url
===================================================================
--- trunk/maay/configuration/win32/Maay.url	2005-11-22 16:32:54 UTC (rev 601)
+++ trunk/maay/configuration/win32/Maay.url	2005-11-22 16:39:42 UTC (rev 602)
@@ -0,0 +1,3 @@
+[InternetShortcut]
+URL=http://localhost:7777/
+Modified=40D1F3B380EFC501EC

Modified: trunk/maayservice.py
===================================================================
--- trunk/maayservice.py	2005-11-22 16:32:54 UTC (rev 601)
+++ trunk/maayservice.py	2005-11-22 16:39:42 UTC (rev 602)
@@ -38,88 +38,88 @@
 # maybe need some refactoring
 
 class Win32MaayTaskbar:
-        SEARCH_MENU_ID = 1001
-        INDEXATION_MENU_ID = 1002
-        HOMEPAGE_MENU_ID = 1003
+    SEARCH_MENU_ID = 1001
+    INDEXATION_MENU_ID = 1002
+    HOMEPAGE_MENU_ID = 1003
         
-	def __init__(self):
-		pass
+    def __init__(self, node):
+        self.node = node
 
-	def __start__(self):
-		msg_TaskbarRestart = win32api.RegisterWindowMessage("TaskbarCreated");
-		message_map = {
-				msg_TaskbarRestart: self.OnRestart,
-				win32con.WM_DESTROY: self.OnDestroy,
-				win32con.WM_COMMAND: self.OnCommand,
-				win32con.WM_USER+20 : self.OnTaskbarNotify,
-		}
-		# Register the Window class.
-		wc = win32gui.WNDCLASS()
-		hinst = wc.hInstance = win32gui.GetModuleHandle(None)
-		wc.lpszClassName = "MaayTaskbar"
-		wc.style = win32con.CS_VREDRAW | win32con.CS_HREDRAW;
-		wc.hCursor = win32gui.LoadCursor( 0, win32con.IDC_ARROW )
-		wc.hbrBackground = win32con.COLOR_WINDOW
-		wc.lpfnWndProc = message_map # could also specify a wndproc.
-		classAtom = win32gui.RegisterClass(wc)
-		# Create the Window.
-		style = win32con.WS_OVERLAPPED | win32con.WS_SYSMENU
-		self.hwnd = win32gui.CreateWindow( classAtom, "Maay", style, \
-				0, 0, win32con.CW_USEDEFAULT, win32con.CW_USEDEFAULT, \
-				0, 0, hinst, None)
-		win32gui.UpdateWindow(self.hwnd)
+    def __start__(self):
+        msg_TaskbarRestart = win32api.RegisterWindowMessage("TaskbarCreated");
+        message_map = {
+                msg_TaskbarRestart: self.OnRestart,
+                win32con.WM_DESTROY: self.OnDestroy,
+                win32con.WM_COMMAND: self.OnCommand,
+                win32con.WM_USER+20 : self.OnTaskbarNotify,
+        }
+        # Register the Window class.
+        wc = win32gui.WNDCLASS()
+        hinst = wc.hInstance = win32gui.GetModuleHandle(None)
+        wc.lpszClassName = "MaayTaskbar"
+        wc.style = win32con.CS_VREDRAW | win32con.CS_HREDRAW;
+        wc.hCursor = win32gui.LoadCursor( 0, win32con.IDC_ARROW )
+        wc.hbrBackground = win32con.COLOR_WINDOW
+        wc.lpfnWndProc = message_map # could also specify a wndproc.
+        classAtom = win32gui.RegisterClass(wc)
+        # Create the Window.
+        style = win32con.WS_OVERLAPPED | win32con.WS_SYSMENU
+        self.hwnd = win32gui.CreateWindow( classAtom, "Maay", style, \
+                0, 0, win32con.CW_USEDEFAULT, win32con.CW_USEDEFAULT, \
+                0, 0, hinst, None)
+        win32gui.UpdateWindow(self.hwnd)
 
-		# Try and find a custom icon
-		hinst =  win32gui.GetModuleHandle(None)
-#		iconPathName = os.path.abspath(os.path.join( os.path.split(sys.executable)[0], "maay_node.exe" ))
+        # Try and find a custom icon
+        hinst =  win32gui.GetModuleHandle(None)
+#        iconPathName = os.path.abspath(os.path.join( os.path.split(sys.executable)[0], "maay_node.exe" ))
 
-		icon_flags = win32con.LR_LOADFROMFILE | win32con.LR_DEFAULTSIZE
-		self.hicon = win32gui.LoadImage(hinst, "data\\images\\maay.ico", win32con.IMAGE_ICON, 0, 0, icon_flags)
+        icon_flags = win32con.LR_LOADFROMFILE | win32con.LR_DEFAULTSIZE
+        self.hicon = win32gui.LoadImage(hinst, "data\\images\\maay.ico", win32con.IMAGE_ICON, 0, 0, icon_flags)
 
-		flags = win32gui.NIF_ICON | win32gui.NIF_MESSAGE | win32gui.NIF_TIP
-		nid = (self.hwnd, 0, flags, win32con.WM_USER+20, self.hicon, "Maay")
-		win32gui.Shell_NotifyIcon(win32gui.NIM_ADD, nid)
+        flags = win32gui.NIF_ICON | win32gui.NIF_MESSAGE | win32gui.NIF_TIP
+        nid = (self.hwnd, 0, flags, win32con.WM_USER+20, self.hicon, "Maay")
+        win32gui.Shell_NotifyIcon(win32gui.NIM_ADD, nid)
 
-		win32gui.PumpMessages()
-		
+        win32gui.PumpMessages()
+        
 
-	def start(self):
-		thread.start_new_thread(self.__start__, ())
+    def start(self):
+        thread.start_new_thread(self.__start__, ())
 
-	def OnRestart(self, hwnd, msg, wparam, lparam):
-		self._DoCreateIcons()
+    def OnRestart(self, hwnd, msg, wparam, lparam):
+        self._DoCreateIcons()
 
-	def OnDestroy(self, hwnd, msg, wparam, lparam):
-		nid = (self.hwnd, 0)
-		Shell_NotifyIcon(NIM_DELETE, nid)
-		PostQuitMessage(0) # Terminate the app.
+    def OnDestroy(self, hwnd, msg, wparam, lparam):
+        nid = (self.hwnd, 0)
+        Shell_NotifyIcon(NIM_DELETE, nid)
+        PostQuitMessage(0) # Terminate the app.
 
 
-	def OnTaskbarNotify(self, hwnd, msg, wparam, lparam):
-		if lparam == win32con.WM_RBUTTONUP:
-			menu = win32gui.CreatePopupMenu()
-			win32gui.AppendMenu( menu, win32con.MF_STRING, Win32MaayTaskbar.SEARCH_MENU_ID, "Search")
-			win32gui.AppendMenu( menu, win32con.MF_STRING, Win32MaayTaskbar.INDEXATION_MENU_ID, "Manage Folders")
-			win32gui.AppendMenu( menu, win32con.MF_SEPARATOR, 1002, "")
-			win32gui.AppendMenu( menu, win32con.MF_STRING, Win32MaayTaskbar.HOMEPAGE_MENU_ID, "Maay Homepage")
-		        win32gui.SetMenuDefaultItem(menu, Win32MaayTaskbar.SEARCH_MENU_ID, 0)
-			pos = win32gui.GetCursorPos()
-			# See http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/menus_0hdi.asp
-			win32gui.SetForegroundWindow(self.hwnd)
-			win32gui.TrackPopupMenu(menu, win32con.TPM_LEFTALIGN, pos[0], pos[1], 0, self.hwnd, None)
-			win32gui.PostMessage(self.hwnd, win32con.WM_NULL, 0, 0)
-		elif lparam==win32con.WM_LBUTTONDBLCLK:
-			webbrowser.open("http://127.0.0.1:7777/", autoraise=1)
-		return 1
+    def OnTaskbarNotify(self, hwnd, msg, wparam, lparam):
+        if lparam == win32con.WM_RBUTTONUP:
+            menu = win32gui.CreatePopupMenu()
+            win32gui.AppendMenu( menu, win32con.MF_STRING, Win32MaayTaskbar.SEARCH_MENU_ID, "Search")
+            win32gui.AppendMenu( menu, win32con.MF_STRING, Win32MaayTaskbar.INDEXATION_MENU_ID, "Manage Folders")
+            win32gui.AppendMenu( menu, win32con.MF_SEPARATOR, 1002, "")
+            win32gui.AppendMenu( menu, win32con.MF_STRING, Win32MaayTaskbar.HOMEPAGE_MENU_ID, "Maay Homepage")
+            win32gui.SetMenuDefaultItem(menu, Win32MaayTaskbar.SEARCH_MENU_ID, 0)
+            pos = win32gui.GetCursorPos()
+            # See http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/menus_0hdi.asp
+            win32gui.SetForegroundWindow(self.hwnd)
+            win32gui.TrackPopupMenu(menu, win32con.TPM_LEFTALIGN, pos[0], pos[1], 0, self.hwnd, None)
+            win32gui.PostMessage(self.hwnd, win32con.WM_NULL, 0, 0)
+        elif lparam==win32con.WM_LBUTTONDBLCLK:
+            webbrowser.open("http://127.0.0.1:%s/" % self.node.nodeConfig.webserver_port, autoraise=1)
+        return 1
 
-	def OnCommand(self, hwnd, msg, wparam, lparam):
-		id = win32api.LOWORD(wparam)
-		if id == Win32MaayTaskbar.SEARCH_MENU_ID:
-			webbrowser.open("http://127.0.0.1:7777/", autoraise=1)
-		elif id == Win32MaayTaskbar.INDEXATION_MENU_ID:
-			webbrowser.open("http://127.0.0.1:7777/indexation", autoraise=1)
-		elif id == Win32MaayTaskbar.HOMEPAGE_MENU_ID:
-			webbrowser.open("http://maay.netofpeers.net", autoraise=1)
+    def OnCommand(self, hwnd, msg, wparam, lparam):
+        id = win32api.LOWORD(wparam)
+        if id == Win32MaayTaskbar.SEARCH_MENU_ID:
+            webbrowser.open("http://127.0.0.1:%s/" % self.node.nodeConfig.webserver_port, autoraise=1)
+        elif id == Win32MaayTaskbar.INDEXATION_MENU_ID:
+            webbrowser.open("http://127.0.0.1:%s/indexation" % self.node.nodeConfig.webserver_port, autoraise=1)
+        elif id == Win32MaayTaskbar.HOMEPAGE_MENU_ID:
+            webbrowser.open("http://maay.netofpeers.net", autoraise=1)
 
 
 class MyService(win32serviceutil.ServiceFramework):
@@ -135,15 +135,15 @@
 
     def SvcDoRun(self):
         import servicemanager
-        from maay.node import run
+        import maay.node
         win32evtlogutil.ReportEvent(self._svc_name_,
                                     servicemanager.PYS_SERVICE_STARTED,
                                     0, # category
                                     servicemanager.EVENTLOG_INFORMATION_TYPE,
                                     (self._svc_name_, ''))
-	taskbar = Win32MaayTaskbar()
-	taskbar.start()
-        run()
+        taskbar = Win32MaayTaskbar(maay.node)
+        taskbar.start()
+        maay.node.run()
         # and write a 'stopped' event to the event log.
         win32evtlogutil.ReportEvent(self._svc_name_,
                                     servicemanager.PYS_SERVICE_STOPPED,



From dnf at berlios.de  Tue Nov 22 18:02:32 2005
From: dnf at berlios.de (dnf at berlios.de)
Date: Tue, 22 Nov 2005 18:02:32 +0100
Subject: [Maay-svncheckins] r603 - trunk/maay
Message-ID: <200511221702.jAMH2WZk020674@sheep.berlios.de>

Author: dnf
Date: 2005-11-22 18:02:29 +0100 (Tue, 22 Nov 2005)
New Revision: 603

Modified:
   trunk/maay/converter.py
Log:
Fix bug: os.system does not open MSDOS command (displayed on the screen).
anymore.

This is due to the --interactive option on the service installation
options which allows the service to display windows on the screen.
(it is used to display icon in the bottom right corner of the taskbar)



Modified: trunk/maay/converter.py
===================================================================
--- trunk/maay/converter.py	2005-11-22 16:39:42 UTC (rev 602)
+++ trunk/maay/converter.py	2005-11-22 17:02:29 UTC (rev 603)
@@ -49,6 +49,7 @@
 from tempfile import mkdtemp
 import gzip
 import bz2
+import sys
 
 from maay.texttool import TextParser, MaayHTMLParser as HTMLParser, ParsingError
 
@@ -67,7 +68,27 @@
     '.patch': 'text/plain'
     })
 
+def win32_launcher(commandline):
+    startupInfo = win32process.STARTUPINFO()
+    startupInfo.dwFlags = win32process.DETACHED_PROCESS | win32process.STARTF_USESHOWWINDOW
+    startupInfo.wShowWindow = win32con.SW_HIDE
+    hProcess, hThread, dwProcessId, dwThreadId = \
+              win32process.CreateProcess(None, commandline, None,
+                                         None, 0, 0, None, None,
+                                         startupInfo)
+    while (win32process.GetExitCodeProcess(hProcess) == win32con.STILL_ACTIVE):
+       win32api.Sleep(2)
+	# FIXME: try to get the errcode
+    return 0
 
+# Not use os.system for win32 system because it displays msdos command to launch
+# it
+if sys.platform == 'win32':
+		import win32api, win32con, win32process
+		launcher = win32_launcher
+else:
+		launcher = os.system
+
 class IndexationFailure(Exception):
     """raised when an indexation has failed"""
 
@@ -184,7 +205,7 @@
             cmd = self.COMMAND % command_args
 
             #print "Executing %r" % cmd
-            errcode = os.system(cmd)
+            errcode = launcher(cmd)
             if errcode: # NOK
                 raise IndexationFailure('Unable to index %r' % filepath)
 



From aurelienc at berlios.de  Tue Nov 22 18:03:08 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Tue, 22 Nov 2005 18:03:08 +0100
Subject: [Maay-svncheckins] r604 - in trunk/maay: . test
Message-ID: <200511221703.jAMH38RI020711@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-22 18:03:08 +0100 (Tue, 22 Nov 2005)
New Revision: 604

Modified:
   trunk/maay/presenceserver.py
   trunk/maay/test/test_presenceserver.py
Log:
Fix the test


Modified: trunk/maay/presenceserver.py
===================================================================
--- trunk/maay/presenceserver.py	2005-11-22 17:02:29 UTC (rev 603)
+++ trunk/maay/presenceserver.py	2005-11-22 17:03:08 UTC (rev 604)
@@ -39,9 +39,10 @@
     _autoExpirationDelayInSecs = 3600*24
 
     def __del__(self):
-        self._auto_logout_everybody()
+        PresenceServer._auto_logout_everybody()
 
-    def _auto_logout_everybody(self):
+    # TODO: probe the servers that are to be evicted before removing them
+    def _auto_logout_everybody():
         """evicts registered nodes after some time
         """
         now = datetime.utcnow()
@@ -54,6 +55,7 @@
                 del PresenceServer._registeredUsers[nodeId]
                 del PresenceServer._ruReverseMap[(ip, port)]
                 del PresenceServer._ruTimestamp[nodeId]
+    _auto_logout_everybody = staticmethod (_auto_logout_everybody)
         
     def lineReceived(self, line):
         """received lines should match the following format :

Modified: trunk/maay/test/test_presenceserver.py
===================================================================
--- trunk/maay/test/test_presenceserver.py	2005-11-22 17:02:29 UTC (rev 603)
+++ trunk/maay/test/test_presenceserver.py	2005-11-22 17:03:08 UTC (rev 604)
@@ -142,7 +142,7 @@
                           {('1.2.3.4', '567') : 'FOONODEB',})
        
     def testAutoLogout(self):
-        PresenceServer._autoExpirationDelayInSecs = 1
+        PresenceServer._autoExpirationDelayInSecs = .1
         self.srv.transport = MockTransport('1.2.3.4')
         mockLineReceiver = MockLineReceiver()
         self.srv.sendLine = mockLineReceiver.sendLine
@@ -156,7 +156,7 @@
                           ('FOONODEB','1.2.3.4','567','8'))
         import time
         time.sleep(2)
-        self.srv._auto_logout_everybody()
+        PresenceServer._auto_logout_everybody()
         self.assertEquals(self.srv._registeredUsers, {})
         self.assertEquals(self.srv._ruReverseMap, {})
         self.assertEquals(self.srv._ruTimestamp, {})



From dnf at berlios.de  Tue Nov 22 18:07:42 2005
From: dnf at berlios.de (dnf at berlios.de)
Date: Tue, 22 Nov 2005 18:07:42 +0100
Subject: [Maay-svncheckins] r605 - trunk/maay
Message-ID: <200511221707.jAMH7gSt020957@sheep.berlios.de>

Author: dnf
Date: 2005-11-22 18:07:41 +0100 (Tue, 22 Nov 2005)
New Revision: 605

Modified:
   trunk/maay/converter.py
Log:
fix indentation.



Modified: trunk/maay/converter.py
===================================================================
--- trunk/maay/converter.py	2005-11-22 17:03:08 UTC (rev 604)
+++ trunk/maay/converter.py	2005-11-22 17:07:41 UTC (rev 605)
@@ -77,17 +77,17 @@
                                          None, 0, 0, None, None,
                                          startupInfo)
     while (win32process.GetExitCodeProcess(hProcess) == win32con.STILL_ACTIVE):
-       win32api.Sleep(2)
-	# FIXME: try to get the errcode
+        win32api.Sleep(2)
+    # FIXME: try to get the errcode
     return 0
 
 # Not use os.system for win32 system because it displays msdos command to launch
 # it
 if sys.platform == 'win32':
-		import win32api, win32con, win32process
-		launcher = win32_launcher
+    import win32api, win32con, win32process
+    launcher = win32_launcher
 else:
-		launcher = os.system
+    launcher = os.system
 
 class IndexationFailure(Exception):
     """raised when an indexation has failed"""



From aurelienc at berlios.de  Tue Nov 22 18:18:47 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Tue, 22 Nov 2005 18:18:47 +0100
Subject: [Maay-svncheckins] r606 - trunk/maay
Message-ID: <200511221718.jAMHIl2L021446@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-22 18:18:47 +0100 (Tue, 22 Nov 2005)
New Revision: 606

Modified:
   trunk/maay/p2pquerier.py
Log:
-small refactoring
-bump p2pquery version number
-add slow background polling of nodes that are sleeping/inactive


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-22 17:07:41 UTC (rev 605)
+++ trunk/maay/p2pquerier.py	2005-11-22 17:18:47 UTC (rev 606)
@@ -26,6 +26,7 @@
 import time
 import os
 import socket
+from threading import Thread
 
 from logilab.common.compat import set
 
@@ -36,11 +37,14 @@
 from maay.query import Query
 
 nodeConfig=NodeConfiguration()
-nodeConfig.load()
+nodeConfig.load() #FIXME : load from file would be better
+
 NODE_HOST = socket.gethostbyname(socket.gethostname())
 NODE_PORT = nodeConfig.rpcserver_port
 NODE_ID = nodeConfig.get_node_id()
 
+QUERIER = None
+
 def hashIt(item, uname=''.join(platform.uname())):
     hasher = sha.sha()
     hasher.update(uname)
@@ -65,6 +69,9 @@
         # could not guess username, use host name
         return socket.gethostname()
 
+NODE_LOGIN = getUserLogin()
+
+
 class QueryVersionMismatch(Exception):
     """we beginning a versionning nightmare trip on queries
        maybe I'll be shot for this, but who knows"""
@@ -76,14 +83,14 @@
 # number of results relayed by each peer.
 # This might cause the results to be very incomplete and it will
 # be improved in the future, but for now:
-#  - 50 results per node with a good ranking system is
+#  - 50 results per node with a good ranking system (duh!) is
 #    acceptable
 #  - it should lightweight the network
 LIMIT = 50
 
 class P2pQuery:
 
-    _version = 2
+    _version = 3
     
     def __init__(self, sender, query, ttl=5,
                  qid=None, client_host=None, client_port=None):
@@ -142,12 +149,11 @@
 
     def fromDict(dic):
         """dual of asKwargs"""
-        if dic.has_key('version'):
-            if dic['version'] > P2pQuery._version:
-                print "******* Query Version Mismatch ********"
-                print "(we don't understand queries version %s)" % dic['version']
-                raise QueryVersionMismatch(query_version=dic['version'],
-                                           local_version=P2pQuery._version)
+        if not compatible(P2pQuery._version, dic['version']):
+            print "******* Query Version Mismatch ********"
+            print "(we don't understand queries version %s)" % dic['version']
+            raise QueryVersionMismatch(query_version=dic['version'],
+                                       local_version=P2pQuery._version)
         _query = Query(' '.join(dic['words']), filetype=dic['mime_type'])
         p2pquery = P2pQuery(qid=dic['qid'],
                             sender=dic['sender'],
@@ -162,6 +168,11 @@
         return self.query.words
 
 
+def compatible(localversion, distantversion):
+    if distantversion < 2:
+        return False
+    return True
+
 class P2pAnswer:
     def __init__(self, queryId, provider, documents):
         """
@@ -193,6 +204,8 @@
     def __init__(self, nodeId, querier):
         self.nodeId = nodeId  
         self.querier = querier
+        global QUERIER
+        QUERIER = querier # yes, a global
         self._answerCallbacks = {}
         # now, read a config. provided value for EXPIRATION_TIME
         # and fire the garbage collector
@@ -234,8 +247,8 @@
     ######### Callback ops (who to feed the results of a query)
 
     def addAnswerCallback(self, queryId, callback):
-        print "P2pQuerier : registering callback (%s, %s) for results" \
-              % (queryId, callback)
+        #print "P2pQuerier : registering callback (%s, %s) for results" \
+        #      % (queryId, callback)
         self._answerCallbacks.setdefault(queryId, []).append(callback)
 
     def _notifyAnswerCallbacks(self, queryId, provider, results):
@@ -259,7 +272,6 @@
                 continue
             proxy = Proxy(str(neighbor.getRpcUrl()))
             d = proxy.callRemote('distributedQuery', query.asKwargs())
-            d.addCallback(self.querier.registerNodeActivity)
 	    d.addErrback(sendQueryErrback(neighbor, self.querier))
             self._sentQueries[query.qid] = query
             print "     ... sent to %s:%s %s" % (neighbor.ip,
@@ -270,14 +282,13 @@
         """
         :type query: `maay.p2pquerier.P2pQuery`
         """
-        print "P2pQuerier receiveQuery : %s" % query
         if query.qid in self._receivedQueries or \
            query.qid in self._sentQueries:
-            print " ... we already know query %s, this ends the trip" % query.qid
             return
 
         if query.qid not in self._sentQueries:
-            print " ... %s is a new query, let's work ..." % query.qid
+            print "P2pQuerier receiveQuery : %s from %s:%s " \
+                  % (query.getWords(), query.client_host, query.client_port)
             self._receivedQueries[query.qid] = query 
 
         query.hop()        
@@ -293,9 +304,9 @@
             doc.text = untagText(removeSpace(abstract))
 
         # provider is a 4-uple (login, node_id, IP, xmlrpc-port)
-        provider = (getUserLogin(),
+        provider = (NODE_LOGIN,
                     NODE_ID,
-                    socket.gethostbyname(socket.gethostname()),
+                    NODE_HOST,
                     NODE_PORT)
             
         self.relayAnswer(P2pAnswer(query.qid, provider, documents))
@@ -304,7 +315,10 @@
         """record and forward answers to a query.
         If local is True, then the answers come from a local query,
         and thus must not be recorded in the database"""
-        print "P2pQuerier relayAnswer : %s document(s)" % len(answer.documents)
+        print "P2pQuerier relayAnswer : %s document(s) from %s:%s" \
+              % (len(answer.documents),
+                 answer.provider[1],
+                 answer.provider[2])
         query = self._receivedQueries.get(answer.queryId)
         if not query :
             query = self._sentQueries.get(answer.queryId)
@@ -313,9 +327,15 @@
             else:
                 print " ... bug or dos : we had no query for this answer"
                 return
-        print " ... relaying Answer to %s:%s ..." \
-              % (query.client_host, query.client_port)
-        
+
+            try:
+                self.querier.registerNode(answer.provider[1],
+                                          answer.provider[2],
+                                          answer.provider[3])
+            except:
+                print "  ... version mismatch with %s:%s" \
+                      % (answer.provider[1], answer.provider[2])
+                
         toSend = []
         for document in answer.documents:
             if not isinstance(document, dict):
@@ -330,21 +350,17 @@
                 query.addMatch(document)
                 toSend.append(document)
         
-        if query.sender != self.nodeId: 
-            try:
-                (host, port) = (query.client_host, query.client_port)
-                print " ... will send answer to %s:%s" % (host, port)
-                senderUrl = 'http://%s:%s' % (host, port)
-                proxy = Proxy(senderUrl)
-                d = proxy.callRemote('distributedQueryAnswer',
-                                     query.qid,
-                                     self.nodeId,
-                                     answer.provider,
-                                     toSend)
-                d.addCallback(self.querier.registerNodeActivity)
-                d.addErrback(answerQueryErrback(query))
-            except ValueError:
-                print " ... unknown node %s" % query.sender
+        if query.sender != self.nodeId:
+            (host, port) = (query.client_host, query.client_port)
+            print " ... relaying Answer to %s:%s ..." % (host, port)
+            senderUrl = 'http://%s:%s' % (host, port)
+            proxy = Proxy(senderUrl)
+            d = proxy.callRemote('distributedQueryAnswer',
+                                 query.qid,
+                                 self.nodeId,
+                                 answer.provider,
+                                 toSend) 
+            d.addErrback(answerQueryErrback(query))
         else: 
             self._notifyAnswerCallbacks(answer.queryId, answer.provider, toSend)
     
@@ -366,6 +382,7 @@
         """
         print " ... problem sending the query to %s:%s, trace = %s" \
               % (target.ip, target.port, failure.getTraceback())
+        registerSleeping(target)
         querier.registerNodeInactivity(target.node_id)
     return QP
 
@@ -376,3 +393,71 @@
         print " ... problem answering the query to %s:%s, trace = %s" \
               % (target.client_host, target.client_port, failure.getTraceback())
     return AP
+
+
+##### Background task that probes periodically sleeping nodes
+
+## The call chain :
+##
+## registerSleeping --(first to sleep ?)--> checkOldest --> backgroundProbe --> nodeSleeps
+##                                          ^                             |
+##                                          |                             |
+##                                          +------(sleeping nodes ?)-----+
+
+SLEEPING_NODES = {}
+CHECK_DELAY = 15 # time in secs before we probe the oldest sleeping node
+
+
+def registerSleeping(node):
+    # beware that not on all platforms we get sub-second values with time()
+    # in this case we risk collisions (checked on Linux & Win2003)
+    print "registerSleeping node %s scheduled for sleep check" % node.node_id
+    stamp = time.time()
+    sleeping = len(SLEEPING_NODES)
+    if sleeping == 0:
+        reactor.callLater(CHECK_DELAY, checkOldest)
+    SLEEPING_NODES [stamp] = node
+
+
+def checkOldest():
+    assert len(SLEEPING_NODES) > 0
+    stamps = SLEEPING_NODES.keys()
+    stamps.sort()
+    old_stamp = stamps[0]
+    old_node = SLEEPING_NODES[old_stamp]
+    del SLEEPING_NODES[old_stamp]
+    thread = Thread(target=backgroundProbe, args=(old_node, old_stamp))
+    thread.start()
+
+
+PROBE_COUNT = 0
+
+def backgroundProbe(node, stamp):
+    now = time.time()
+    global PROBE_COUNT
+    PROBE_COUNT += PROBE_COUNT
+    if nodeSleeps(node.ip, node.port):
+        # we reschedule it
+        if not PROBE_COUNT % 30:
+            print "backgroundProbe node at %s:%s was still sleeping" \
+                  % (node.ip, node.port)
+        now = time.time()
+        SLEEPING_NODES[now] = node
+    else:
+        print "backgroundProbe node at %s:%s has awaken" \
+              % (node.ip, node.port)
+        QUERIER.registerNodeActivity(node.node_id)
+    right_now = time.time()
+    if len(SLEEPING_NODES) > 0:
+        reactor.callLater(abs(CHECK_DELAY - right_now + now), checkOldest)
+
+socket.setdefaulttimeout(3)
+def nodeSleeps(node_ip, node_port):
+    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
+    try:
+        s.connect((node_ip, node_port))
+        s.close()
+    except socket.error, exc:
+        return True 
+    else:
+        return False



From aurelienc at berlios.de  Tue Nov 22 18:22:35 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Tue, 22 Nov 2005 18:22:35 +0100
Subject: [Maay-svncheckins] r607 - in trunk/maay: . data
Message-ID: <200511221722.jAMHMZCL021683@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-22 18:22:34 +0100 (Tue, 22 Nov 2005)
New Revision: 607

Modified:
   trunk/maay/data/livefragment.html
   trunk/maay/webapplication.py
Log:
Inform webapp of new document attributes (relevance, popularity)


Modified: trunk/maay/data/livefragment.html
===================================================================
--- trunk/maay/data/livefragment.html	2005-11-22 17:18:47 UTC (rev 606)
+++ trunk/maay/data/livefragment.html	2005-11-22 17:22:34 UTC (rev 607)
@@ -32,7 +32,8 @@
 	    </tr>
 	  </table>
 	  <div class="resultDesc"><nevow:slot name="abstract" /></div>
-	  <span class="resultUrl"><span nevow:render="peer" /><nevow:slot name="docurl" /> - <nevow:slot name="readable_size" /> - <nevow:slot name="publication_date" /></span>
+	  <span class="resultUrl"><span nevow:render="peer" />
+                <nevow:slot name="docurl" /> - <nevow:slot name="readable_size" /> - <nevow:slot name="publication_date" /><nevow:slot name="relevance" /> - <nevow:slot name="popularity" /></span>
 	</div>
       </td>
     </tr>

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-22 17:18:47 UTC (rev 606)
+++ trunk/maay/webapplication.py	2005-11-22 17:22:34 UTC (rev 607)
@@ -328,6 +328,7 @@
             if osp.isfile(docurl):
                 return static.File(docurl)
             else:
+                #TODO: automatically reindex
                 return Maay404("File %s does not exist any more. Please re-index." %
                                docurl)
         else:
@@ -495,6 +496,13 @@
         baseurl += '&words=%s' % '+'.join(self.query.words)
         baseurl += '&qid=%s' % (self.queryId,)
         context.fillSlots('url', baseurl)
+        try:
+            document.score_relevance
+        except:
+            document.score_relevance = 'no relevance is provided'
+            document.score_popularity = 'no popularity is provided'
+        context.fillSlots('relevance', document.score_relevance)
+        context.fillSlots('popularity', document.score_popularity)
         return context.tag
     
 
@@ -611,7 +619,7 @@
 class ResultsPageFactory(athena.LivePageFactory):
     def getLivePage(self, context):
         livepageId = inevow.IRequest(context).getHeader('Livepage-Id')
-        print "*** livepage id =", livepageId
+        #print "*** livepage id =", livepageId
         if livepageId is not None:
             return self.clients.get(livepageId)
         else:



From aurelienc at berlios.de  Tue Nov 22 18:30:47 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Tue, 22 Nov 2005 18:30:47 +0100
Subject: [Maay-svncheckins] r608 - trunk/maay
Message-ID: <200511221730.jAMHUlNv022743@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-22 18:30:47 +0100 (Tue, 22 Nov 2005)
New Revision: 608

Modified:
   trunk/maay/presenceclient.py
Log:
Don't give the client the outdated presenceserver lastseentime (peers received from the server should be considered alive)


Modified: trunk/maay/presenceclient.py
===================================================================
--- trunk/maay/presenceclient.py	2005-11-22 17:22:34 UTC (rev 607)
+++ trunk/maay/presenceclient.py	2005-11-22 17:30:47 UTC (rev 608)
@@ -62,8 +62,8 @@
             self.transport.loseConnection()
             return
         time, nodeId, nodeIP, nodePort, nodeBandwidth = data.split('\t')
-        lastSeenTime = parseTime(time)
-        self._callback(nodeId, nodeIP, nodePort, nodeBandwidth, lastSeenTime)
+        lastSeenTime = parseTime(time) # in fact we don't need to trust this
+        self._callback(nodeId, nodeIP, nodePort, nodeBandwidth)
         
 
 def parseTime(isodatetime):



From aurelienc at berlios.de  Tue Nov 22 18:33:57 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Tue, 22 Nov 2005 18:33:57 +0100
Subject: [Maay-svncheckins] r609 - in trunk/maay: . sql
Message-ID: <200511221733.jAMHXvNk023123@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-22 18:33:57 +0100 (Tue, 22 Nov 2005)
New Revision: 609

Modified:
   trunk/maay/dbentity.py
   trunk/maay/sql/mysql.sql
Log:
Update result entity to store relevance and popularity


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-22 17:30:47 UTC (rev 608)
+++ trunk/maay/dbentity.py	2005-11-22 17:33:57 UTC (rev 609)
@@ -127,8 +127,6 @@
         return '%s: %s' % (self.__class__.__name__,
                            ', '.join(['%s=%s' % (attr, getattr(self, attr))
                                       for attr in self.boundAttributes()]))
-##     def __repr__(self):
-##         return str(self)
 
 
 class FutureDocument:
@@ -141,9 +139,11 @@
             assert attrname in self.attributes, 'Unknown attribute %s' % attrname
             setattr(self, attrname, value)
 
+#TODO : shoot me !
 class DocumentOrder:
     """a small helper class to translate search criteria
        from crystal-clear high-level stuff to SQL junk"""
+    # This is really strongly coupled with Document._selectContaining
     
     orders = {'publication_time' : 1,
               'score_relevance'  : 2,
@@ -167,16 +167,28 @@
             raise NotImplemented("Document direction %s is unkown" %
                                  direction)
 
-    def __str__(self):
+    def sqlOrder(self):
         if self.order == 1:
             res = "ORDER BY D.publication_time " 
         elif self.order == 2:
             res = "ORDER BY DS.relevance " 
         else:
-            res = "ORDER BY DS.popularity"
+            res = "ORDER BY DS.popularity "
         return res + self.direction
 
+    def sqlCriterium(self):
+        return ("D.publication_time, "
+                "DS.relevance, "
+                "DS.popularity ")
+        # yes, code below is currently unreachable
+        if self.order == 1:
+            return "D.publication_time "
+        elif self.order == 1:
+            return "DS.relevance "
+        else:
+            return "DS.popularity "
 
+
 class Document(DBEntity):
     """Represent a Document in the database
     A Document is different from a file, because several files can store
@@ -270,9 +282,8 @@
 
     # XXX Please rewrite this method. The way we build the SQL
     #     query is quite messy
-    def _selectContainingQuery(cls, words, mimetype=None, offset=0,
-                               limit=None, allowPrivate=False,
-			       order=None):
+    def _selectContainingQuery(cls, words, order, mimetype=None, offset=0,
+                               limit=None, allowPrivate=False):
         # XXX mimetype handling is a HACK. It needs to be integrated
         #     nicely in order to handle any kind of restrictions easily
         #word = WORDS_RGX.finditer(normalizeText(' '.join(words)))
@@ -285,8 +296,6 @@
         if not allowPrivate:
             restriction += " AND D.state!=%s "
             restrictionParams.append(cls.PRIVATE_STATE)
-	# just translate the plain-text ordering to SQL stuff
-	sql_order = order or str(DocumentOrder('publication_time'))
         # Question: what is the HAVING clause supposed to do ?
         # Answer: we select all documents containing one of the words
         # that we are looking for, group them by their identifier, and
@@ -299,14 +308,15 @@
                         "D.size, "
                         "D.text, "
                         "D.url, "
-                        "D.mime_type, "
-                        "D.publication_time "
-                 "FROM documents D, document_scores DS "
-                 "WHERE DS.db_document_id=D.db_document_id "
-                 "AND DS.word IN (%s) "
-                 " %s "
-                 "GROUP BY DS.db_document_id "
-                 "HAVING count(DS.db_document_id) = %%s ") + sql_order
+                        "D.mime_type, ")
+        query += order.sqlCriterium()
+        query += ("FROM documents D, document_scores DS "
+                  "WHERE DS.db_document_id=D.db_document_id "
+                  "AND DS.word IN (%s) "
+                  " %s "
+                  "GROUP BY DS.db_document_id "
+                  "HAVING count(DS.db_document_id) = %%s ")
+        query += order.sqlOrder()
 	query = query % (', '.join(['%s'] * len(words)), restriction)
         # XXX SQL: how to specify only the OFFSET ???????
         if limit or offset:
@@ -321,12 +331,12 @@
         print "Document selectContaining %s" % words
         if not words:
             return []
-	doc_order = str(DocumentOrder(order, direction))
-        query, params = cls._selectContainingQuery(words, mimetype,
+        doc_order = DocumentOrder(order, direction)
+        query, params = cls._selectContainingQuery(words, doc_order,
+                                                   mimetype=mimetype,
                                                    offset=offset,
                                                    limit=limit,
-                                                   allowPrivate=allowPrivate,
-						   order=doc_order)
+                                                   allowPrivate=allowPrivate)
         if query:
             cursor.execute(query, params)
             results = cursor.fetchall()
@@ -365,7 +375,8 @@
        they contain documents matching both local and distributed requests
     """
     attributes = ('document_id', 'query_id', 'node_id', 'mime_type',
-                  'title', 'size', 'text', 'publication_time', 'url',
+                  'title', 'size', 'text', 'publication_time',
+                  'score_relevance', 'score_popularity', 'url',
                   'host', 'port', 'login', 'record_ts')
     key = ('document_id', 'query_id')
     tableName = 'results'
@@ -567,7 +578,7 @@
 	query = cls._selectQuery()
         query += (" WHERE node_id != %s AND last_seen_time > last_sleep_time"
                   " ORDER BY last_seen_time DESC LIMIT %s")
-         return query
+        return query
     _selectActiveNodesQuery = classmethod(_selectActiveNodesQuery)
 
     def _selectRegisteredNodesQuery(cls):

Modified: trunk/maay/sql/mysql.sql
===================================================================
--- trunk/maay/sql/mysql.sql	2005-11-22 17:30:47 UTC (rev 608)
+++ trunk/maay/sql/mysql.sql	2005-11-22 17:33:57 UTC (rev 609)
@@ -148,7 +148,6 @@
  
 
 CREATE TABLE `results` (
---  `db_document_id` varchar(40) NOT NULL,
   `document_id` varchar(40) NOT NULL default '',
   `query_id` varchar(64) NOT NULL,
   `node_id` char(40) NOT NULL default '',
@@ -157,6 +156,8 @@
   `size` int(11) default NULL,
   `text` text,
   `publication_time` int(14) default NULL,
+  `score_relevance` int(14) default NULL,
+  `score_popularity` int(14) default NULL,
   `url` varchar(255) NOT NULL default '',
   `host` varchar(15),
   `port` int(11), -- check this



From aurelienc at berlios.de  Tue Nov 22 18:34:38 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Tue, 22 Nov 2005 18:34:38 +0100
Subject: [Maay-svncheckins] r610 - trunk/maay
Message-ID: <200511221734.jAMHYc8s023242@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-22 18:34:37 +0100 (Tue, 22 Nov 2005)
New Revision: 610

Modified:
   trunk/maay/querier.py
Log:
Small cleanups


Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-22 17:33:57 UTC (rev 609)
+++ trunk/maay/querier.py	2005-11-22 17:34:37 UTC (rev 610)
@@ -278,22 +278,21 @@
         cursor.close()
         self._cnx.commit()
 
-
+        
     def registerNode(self, nodeId, ip, port, bandwidth=None, lastSeenTime=None):
+        # lastseentime param should probably never be used
         """this will be used as a callback in registrationclient/login"""
-        print "AnonymousQuerier registerNode (callback) %s %s:%s" % \
-            (nodeId, ip, port)
+        print " ... registerNode %s:%s (%s)" % (ip, port, nodeId)
         if ip == "127.0.0.1":
             print " ... 127.0.0.1 is not an acceptable IP, we don't register this"
             return
-        lastSeenTime = lastSeenTime or int(time.time())
         cursor = self._cnx.cursor()
         node = Node.selectOrInsertWhere(cursor, node_id=nodeId)[0]
         node.ip = ip
         node.node_id = nodeId
         node.port = port
         node.bandwidth = bandwidth or 1
-        node.last_seen_time = lastSeenTime
+        node.last_seen_time = lastSeenTime or int(time.time())
         node.commit(cursor, update=True)
         cursor.close()
 
@@ -303,9 +302,11 @@
         nodes = Node.selectWhere(cursor, node_id=nodeId)
         if nodes:
             node = nodes[0]
+            print " ... registerNodeActivity %s:%s (%s)" % (node.ip, node.port, nodeId)
             node.last_seen_time = int(time.time())
             node.commit(cursor, update=True)
         else:
+            #FIXME: that's not a warning but a BUG 
             log.debug('No matching node found for id {%s}' % nodeId,
                       category='[warning]')
         cursor.close()



From aurelienc at berlios.de  Tue Nov 22 18:35:25 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Tue, 22 Nov 2005 18:35:25 +0100
Subject: [Maay-svncheckins] r611 - trunk/maay
Message-ID: <200511221735.jAMHZPE8023311@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-22 18:35:25 +0100 (Tue, 22 Nov 2005)
New Revision: 611

Modified:
   trunk/maay/rpc.py
Log:
-deverbosify
-remove unwanted registerNode


Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-22 17:34:37 UTC (rev 610)
+++ trunk/maay/rpc.py	2005-11-22 17:35:25 UTC (rev 611)
@@ -172,18 +172,18 @@
     def xmlrpc_distributedQuery(self, queryDict):
         """On node has sent a p2p query (P2pQuerier.sendQuery)
         """
-        print "MaayRPCServer distributedQuery : %s " % queryDict['words']
+        #print "MaayRPCServer distributedQuery : %s " % queryDict['words']
         query = P2pQuery.fromDict(queryDict)
         querier = self._sessions[ANONYMOUS_AVATARID]
-        querier.registerNode(query.sender, query.client_host, query.client_port)
+        #querier.registerNode(query.sender, query.client_host, query.client_port)
         # schedule the query for later processing and return immediately
         # this enables the sender to query several nodes in a row
         reactor.callLater(.01, getP2pQuerier().receiveQuery, query)
         return self.nodeId
 
     def xmlrpc_distributedQueryAnswer(self, queryId, senderId, provider, documents):
-        print "MaayRPCServer distributedQueryAnswer : %s document(s) fom %s" % \
-              (len(documents), provider)
+        #print "MaayRPCServer distributedQueryAnswer : %s document(s) fom %s" % \
+        #      (len(documents), provider)
         answer = P2pAnswer(queryId, provider, documents)
         reactor.callLater(.01, getP2pQuerier().relayAnswer, answer)
         return self.nodeId



From adimasci at berlios.de  Wed Nov 23 09:52:13 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Wed, 23 Nov 2005 09:52:13 +0100
Subject: [Maay-svncheckins] r612 - trunk/maay
Message-ID: <200511230852.jAN8qDNJ010070@sheep.berlios.de>

Author: adimasci
Date: 2005-11-23 09:52:12 +0100 (Wed, 23 Nov 2005)
New Revision: 612

Modified:
   trunk/maay/indexer.py
Log:
update IndexerObserver interface to match new requirements

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-22 17:35:25 UTC (rev 611)
+++ trunk/maay/indexer.py	2005-11-23 08:52:12 UTC (rev 612)
@@ -49,7 +49,7 @@
 
 class IIndexerObserver(Interface):
 
-    def newDocumentIndexed(filename):
+    def newDocumentIndexed(filename, state):
         """called by indexer when a document was just indexed"""
 
     def documentUntouched(filename):



From adimasci at berlios.de  Wed Nov 23 09:57:50 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Wed, 23 Nov 2005 09:57:50 +0100
Subject: [Maay-svncheckins] r613 - in trunk/maay: . data
Message-ID: <200511230857.jAN8voMI010510@sheep.berlios.de>

Author: adimasci
Date: 2005-11-23 09:57:50 +0100 (Wed, 23 Nov 2005)
New Revision: 613

Modified:
   trunk/maay/data/indexationpage.html
   trunk/maay/webapplication.py
Log:
restored (more or less) the private / public documents counter auto update
in the indexation page

NOTE1: used context.remember() as a cleaner to store the querier reference
NOTE2: had to merge all remote calls in one unique call to get it work. I
       will have to fix that later



Modified: trunk/maay/data/indexationpage.html
===================================================================
--- trunk/maay/data/indexationpage.html	2005-11-23 08:52:12 UTC (rev 612)
+++ trunk/maay/data/indexationpage.html	2005-11-23 08:57:50 UTC (rev 613)
@@ -14,11 +14,6 @@
   server.callRemote('live');
 }
 
-function updateStatus(msg) {
-  elt = document.getElementById('statusMessage');
-  elt.innerHTML = msg;
-}
-
 function updatePrivateDocumentCount(count) {
   elt = document.getElementById('privateDocumentCount');
   elt.innerHTML = count;
@@ -29,6 +24,14 @@
   elt.innerHTML = count;
 }
 
+function updateStatus(msg, private, public) {
+  elt = document.getElementById('statusMessage');
+  elt.innerHTML = msg;
+  updatePrivateDocumentCount(private);
+  updatePublicDocumentCount(public);
+}
+
+
     </script>
   </head>
   <body onload="live();">

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-23 08:52:12 UTC (rev 612)
+++ trunk/maay/webapplication.py	2005-11-23 08:57:50 UTC (rev 613)
@@ -1,4 +1,3 @@
-#     Maay : a network of peers for document search
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
@@ -38,7 +37,7 @@
 from logilab.common.textutils import normalize_text
 from logilab.common.compat import set
 
-from maay.querier import WEB_AVATARID
+from maay.querier import IQuerier, WEB_AVATARID
 from maay.configuration import get_path_of
 from maay.texttool import makeAbstract, WORDS_RGX, normalizeText, boldifyText
 from maay.query import Query
@@ -133,17 +132,31 @@
         if name in self._javascript:
             return static.File(get_path_of(self._javascript[name]))
 
-    def updateStatus(self, message):
-        self.callRemote('updateStatus', message)
+    def updateStatus(self, message, private, public):
+        self.callRemote('updateStatus', message, private, public)
 
-    def countersUpdated(self, old, new):
+    def countersUpdated(self, old, new, private, public):
         self.updateStatus(u'Indexation in progress - %s new documents / %s total' %
-                          (new, old + new))
+                          (new, old + new), private, public)
 
-    def indexationCompleted(self):
+    def indexationCompleted(self, old, new, private, public):
         self.updateStatus(u'Indexation finished - %s new documents / %s total'
-            % (IndexationPage.indexedDocuments, IndexationPage.indexedDocuments + IndexationPage.untouchedDocuments))
+            % (new, old + new), private, public)
 
+    def updatePrivateDocumentCount(self, count):
+        self.callRemote('updatePrivateDocumentCount', count)
+
+    def updatePublicDocumentCount(self, count):
+        self.callRemote('updatePublicDocumentCount', count)
+
+    def render_privateDocumentCount(self, context, data):
+        querier = IQuerier(context)
+        return querier.getDocumentCount()[Document.PRIVATE_STATE]
+
+    def render_publicDocumentCount(self, context, data):
+        querier = IQuerier(context)
+        return querier.getDocumentCount()[Document.PUBLISHED_STATE]
+
     def render_message(self, context, data):
         return self.msg
 
@@ -178,14 +191,25 @@
         athena.LivePageFactory.__init__(self, pageFactory)
         self.untouchedDocuments = 0
         self.indexedDocuments = 0
-
-    def newDocumentIndexed(self, filename):
+        self.privateDocuments = 0
+        self.publicDocuments = 0
+    
+    def newDocumentIndexed(self, filename, state):
         self.indexedDocuments += 1
+        print "newDocument indexed", filename, state
+        if state == Document.PRIVATE_STATE:
+            self.privateDocuments += 1
+        else:
+            self.publicDocuments += 1
         # refresh pages for each group of 10 indexed files
         if (self.indexedDocuments % 10) == 0:
             for webpage in self.clients.itervalues():
                 webpage.countersUpdated(self.untouchedDocuments,
-                                        self.indexedDocuments)
+                                        self.indexedDocuments,
+                                        self.privateDocuments,
+                                        self.publicDocuments)
+                # webpage.updatePrivateDocumentCount(self.privateDocuments)
+                # webpage.updatePublicDocumentCount(self.publicDocuments)
         
     def documentUntouched(self, filename):
         self.untouchedDocuments += 1
@@ -196,7 +220,12 @@
     
     def indexationCompleted(self):
         for webpage in self.clients.itervalues():
-            webpage.indexationCompleted()
+            webpage.indexationCompleted(self.untouchedDocuments,
+                                        self.indexedDocuments,
+                                        self.privateDocuments,
+                                        self.publicDocuments)
+            # webpage.updatePrivateDocumentCount(self.privateDocuments)
+            # webpage.updatePublicDocumentCount(self.publicDocuments)
         # reset counters after indexation is finished
         self.untouchedDocuments = 0
         self.indexedDocuments = 0
@@ -238,6 +267,7 @@
 
     def child_indexation(self, context, _factory=IndexationPageFactory(IndexationPage)):
         alertMsg = ""
+        context.remember(self.querier, IQuerier)
         # TODO: check if the added folders are valid
 
         # Actions (add/remove) on private folders
@@ -295,10 +325,6 @@
         start = int(context.arg('start', 0))
         indexationPage = _factory.clientFactory(context)
 
-        # FIXME: porky way to pass the querier ref to the indexationPage
-        IndexationPage.querier = self.querier
-        indexationPage.updateDocumentStats()
-        
 	if start == 0:
             if indexer.is_running():
                 msg = "Indexer running"



From aurelienc at berlios.de  Wed Nov 23 10:59:57 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Wed, 23 Nov 2005 10:59:57 +0100
Subject: [Maay-svncheckins] r614 - trunk/maay
Message-ID: <200511230959.jAN9xvdu022534@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-23 10:59:57 +0100 (Wed, 23 Nov 2005)
New Revision: 614

Modified:
   trunk/maay/p2pquerier.py
Log:
Restore socket sane    timeout after probing


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-23 08:57:50 UTC (rev 613)
+++ trunk/maay/p2pquerier.py	2005-11-23 09:59:57 UTC (rev 614)
@@ -405,7 +405,7 @@
 ##                                          +------(sleeping nodes ?)-----+
 
 SLEEPING_NODES = {}
-CHECK_DELAY = 15 # time in secs before we probe the oldest sleeping node
+CHECK_DELAY = 20 # time in secs before we probe the oldest sleeping node
 
 
 def registerSleeping(node):
@@ -451,13 +451,18 @@
     if len(SLEEPING_NODES) > 0:
         reactor.callLater(abs(CHECK_DELAY - right_now + now), checkOldest)
 
-socket.setdefaulttimeout(3)
+
 def nodeSleeps(node_ip, node_port):
+    socket.setdefaulttimeout(5)
     s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
     try:
-        s.connect((node_ip, node_port))
-        s.close()
-    except socket.error, exc:
-        return True 
-    else:
-        return False
+        try:
+            s.connect((node_ip, node_port))
+            s.close()
+        except socket.error, exc:
+            return True 
+        else:
+            return False
+    finally:
+        socket.setdefaulttimeout(30)
+



From adimasci at berlios.de  Wed Nov 23 11:01:30 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Wed, 23 Nov 2005 11:01:30 +0100
Subject: [Maay-svncheckins] r615 - trunk/maay
Message-ID: <200511231001.jANA1UYr022853@sheep.berlios.de>

Author: adimasci
Date: 2005-11-23 11:01:30 +0100 (Wed, 23 Nov 2005)
New Revision: 615

Modified:
   trunk/maay/querier.py
   trunk/maay/webapplication.py
Log:
fixed in distant downloading


Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-23 09:59:57 UTC (rev 614)
+++ trunk/maay/querier.py	2005-11-23 10:01:30 UTC (rev 615)
@@ -363,8 +363,8 @@
         (we don't want 'old' providers to appear in the list)
         """
         cursor = self._cnx.cursor()
-        query = 'SELECT host, port FROM results WHERE query_id=%(queryId) ' \
-                'AND document_id=%(docId)'
+        query = 'SELECT host, port FROM results WHERE query_id=%(queryId)s ' \
+                'AND document_id=%(docId)s'
         cursor.execute(query, locals())
         providers = cursor.fetchall()
         cursor.close()

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-23 09:59:57 UTC (rev 614)
+++ trunk/maay/webapplication.py	2005-11-23 10:01:30 UTC (rev 615)
@@ -196,7 +196,6 @@
     
     def newDocumentIndexed(self, filename, state):
         self.indexedDocuments += 1
-        print "newDocument indexed", filename, state
         if state == Document.PRIVATE_STATE:
             self.privateDocuments += 1
         else:
@@ -370,8 +369,8 @@
         docid = context.arg('docid')
         if not host or not port or not docid:
             return Maay404()
-        self.proivderSet = set()
         proxy = Proxy('http://%s:%s' % (host, port))
+        print "[webapp] trying to donwload %r from %s:%s" % (filename, host, port)
         d = proxy.callRemote('downloadFile', docid, words)
         d.addCallback(self.gotDataBack, filename)
         d.addErrback(self.tryOtherProviders, filename, words, host,
@@ -394,12 +393,14 @@
     def tryOtherProviders(self, error, filename, words, host, port, docId, queryId):
         """starts to explore the list of other providers"""
         providers = self.querier.getProvidersFor(docId, queryId)
-        self.providerSet.remove((host, port))
-        return self.retryWithOtherProvider(words, docId, filename)
+        self.providerSet = set(providers)
+        self.providerSet.remove((host, int(port)))
+        return self.retryWithOtherProvider('...', words, docId, filename)
     
-    def retryWithOtherProvider(self, words, docId, filename):
+    def retryWithOtherProvider(self, error, words, docId, filename):
         if self.providerSet:
             nextHost, nextPort = self.providerSet.pop()
+            print "[webapp] trying to donwload %r from %s:%s" % (filename, nextHost, nextPort)
             proxy = Proxy('http://%s:%s' % (nextHost, nextPort))
             d = proxy.callRemote('downloadFile', docId, words)
             d.addCallback(self.gotDataBack, filename)



From aurelienc at berlios.de  Wed Nov 23 11:07:42 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Wed, 23 Nov 2005 11:07:42 +0100
Subject: [Maay-svncheckins] r616 - trunk/maay/data
Message-ID: <200511231007.jANA7gfp023528@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-23 11:07:42 +0100 (Wed, 23 Nov 2005)
New Revision: 616

Modified:
   trunk/maay/data/livefragment.html
Log:
Fix relevance/popularity slots layout


Modified: trunk/maay/data/livefragment.html
===================================================================
--- trunk/maay/data/livefragment.html	2005-11-23 10:01:30 UTC (rev 615)
+++ trunk/maay/data/livefragment.html	2005-11-23 10:07:42 UTC (rev 616)
@@ -33,7 +33,7 @@
 	  </table>
 	  <div class="resultDesc"><nevow:slot name="abstract" /></div>
 	  <span class="resultUrl"><span nevow:render="peer" />
-                <nevow:slot name="docurl" /> - <nevow:slot name="readable_size" /> - <nevow:slot name="publication_date" /><nevow:slot name="relevance" /> - <nevow:slot name="popularity" /></span>
+                <nevow:slot name="docurl" /> - <nevow:slot name="readable_size" /> - <nevow:slot name="publication_date" /> - (relevance : <nevow:slot name="relevance" />) - (popularity : <nevow:slot name="popularity" />)</span>
 	</div>
       </td>
     </tr>



From adimasci at berlios.de  Wed Nov 23 11:13:42 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Wed, 23 Nov 2005 11:13:42 +0100
Subject: [Maay-svncheckins] r617 - trunk/maay
Message-ID: <200511231013.jANADg1L024077@sheep.berlios.de>

Author: adimasci
Date: 2005-11-23 11:13:42 +0100 (Wed, 23 Nov 2005)
New Revision: 617

Modified:
   trunk/maay/dbentity.py
   trunk/maay/query.py
Log:
directly use 'asc' and 'desc' rather than 'down' or 'up'


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-23 10:07:42 UTC (rev 616)
+++ trunk/maay/dbentity.py	2005-11-23 10:13:42 UTC (rev 617)
@@ -149,23 +149,19 @@
               'score_relevance'  : 2,
               'score_popularity' : 3}
 
-    def __init__(self, order='publication_time', direction='down'):
+    def __init__(self, order='publication_time', direction='DESC'):
         """:param order: see class dict above
-           :param direction: 'up' or 'down'
+           :param direction: 'ASC' or 'DESC'
         """
         if order in DocumentOrder.orders:
             self.order = DocumentOrder.orders[order]
         else:
             raise NotImplemented("Document ordering %s is unkown" %
                                  order)
-        if direction in ('up', 'down'):
-            if direction == 'up':
-                self.direction = "ASC"
-            else:
-                self.direction = "DESC"
-        else:
-            raise NotImplemented("Document direction %s is unkown" %
-                                 direction)
+        direction = direction.upper()
+        assert direction in ('ASC', 'DESC'), "Document direction %s is unkown" \
+            % direction
+        self.direction = direction
 
     def sqlOrder(self):
         if self.order == 1:
@@ -327,7 +323,7 @@
 
     def selectContaining(cls, cursor, words, mimetype=None, offset=0,
                          limit=None, allowPrivate=False, order='publication_time',
-			 direction='down'):
+			 direction='DESC'):
         print "Document selectContaining %s" % words
         if not words:
             return []

Modified: trunk/maay/query.py
===================================================================
--- trunk/maay/query.py	2005-11-23 10:07:42 UTC (rev 616)
+++ trunk/maay/query.py	2005-11-23 10:13:42 UTC (rev 617)
@@ -58,7 +58,7 @@
         #FIXME: ugly stuff below, related to result
         #       presentation in the browser
         self.order = order or 'publication_time'
-        self.direction = direction or 'down'
+        self.direction = direction or 'DESC'
 
     def fromRawQuery(rawQuery, offset=0):
         """:type rawQuery: str"""



From aurelienc at berlios.de  Wed Nov 23 11:35:01 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Wed, 23 Nov 2005 11:35:01 +0100
Subject: [Maay-svncheckins] r618 - trunk/maay
Message-ID: <200511231035.jANAZ1uG026167@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-23 11:35:00 +0100 (Wed, 23 Nov 2005)
New Revision: 618

Modified:
   trunk/maay/dbentity.py
   trunk/maay/query.py
   trunk/maay/webapplication.py
Log:
Cleanup the order/direction in query (and elsewhere) stuff


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-23 10:13:42 UTC (rev 617)
+++ trunk/maay/dbentity.py	2005-11-23 10:35:00 UTC (rev 618)
@@ -139,52 +139,20 @@
             assert attrname in self.attributes, 'Unknown attribute %s' % attrname
             setattr(self, attrname, value)
 
-#TODO : shoot me !
-class DocumentOrder:
-    """a small helper class to translate search criteria
-       from crystal-clear high-level stuff to SQL junk"""
-    # This is really strongly coupled with Document._selectContaining
-    
-    orders = {'publication_time' : 1,
-              'score_relevance'  : 2,
-              'score_popularity' : 3}
+        
+def sqlCriterium(foo):
+    return ("D.publication_time, "
+            "DS.relevance, "
+            "DS.popularity ")
 
-    def __init__(self, order='publication_time', direction='DESC'):
-        """:param order: see class dict above
-           :param direction: 'ASC' or 'DESC'
-        """
-        if order in DocumentOrder.orders:
-            self.order = DocumentOrder.orders[order]
-        else:
-            raise NotImplemented("Document ordering %s is unkown" %
-                                 order)
-        direction = direction.upper()
-        assert direction in ('ASC', 'DESC'), "Document direction %s is unkown" \
-            % direction
-        self.direction = direction
+def sqlOrder(order, direction):
+    if order == 'publication_time':
+        prefix = 'ORDER BY D.'
+    else:
+        prefix = 'ORDER BY DS.'
+    return prefix + order + ' ' + direction
 
-    def sqlOrder(self):
-        if self.order == 1:
-            res = "ORDER BY D.publication_time " 
-        elif self.order == 2:
-            res = "ORDER BY DS.relevance " 
-        else:
-            res = "ORDER BY DS.popularity "
-        return res + self.direction
 
-    def sqlCriterium(self):
-        return ("D.publication_time, "
-                "DS.relevance, "
-                "DS.popularity ")
-        # yes, code below is currently unreachable
-        if self.order == 1:
-            return "D.publication_time "
-        elif self.order == 1:
-            return "DS.relevance "
-        else:
-            return "DS.popularity "
-
-
 class Document(DBEntity):
     """Represent a Document in the database
     A Document is different from a file, because several files can store
@@ -278,7 +246,7 @@
 
     # XXX Please rewrite this method. The way we build the SQL
     #     query is quite messy
-    def _selectContainingQuery(cls, words, order, mimetype=None, offset=0,
+    def _selectContainingQuery(cls, words, order, direction, mimetype=None, offset=0,
                                limit=None, allowPrivate=False):
         # XXX mimetype handling is a HACK. It needs to be integrated
         #     nicely in order to handle any kind of restrictions easily
@@ -305,14 +273,14 @@
                         "D.text, "
                         "D.url, "
                         "D.mime_type, ")
-        query += order.sqlCriterium()
+        query += sqlCriterium("foo") #to be fixed soon
         query += ("FROM documents D, document_scores DS "
                   "WHERE DS.db_document_id=D.db_document_id "
                   "AND DS.word IN (%s) "
                   " %s "
                   "GROUP BY DS.db_document_id "
                   "HAVING count(DS.db_document_id) = %%s ")
-        query += order.sqlOrder()
+        query += sqlOrder(order, direction)
 	query = query % (', '.join(['%s'] * len(words)), restriction)
         # XXX SQL: how to specify only the OFFSET ???????
         if limit or offset:
@@ -327,8 +295,7 @@
         print "Document selectContaining %s" % words
         if not words:
             return []
-        doc_order = DocumentOrder(order, direction)
-        query, params = cls._selectContainingQuery(words, doc_order,
+        query, params = cls._selectContainingQuery(words, order, direction,
                                                    mimetype=mimetype,
                                                    offset=offset,
                                                    limit=limit,
@@ -377,18 +344,6 @@
     key = ('document_id', 'query_id')
     tableName = 'results'
 
-
-##     def _insertQuery(self):
-##         """generates an INSERT query according to object's state
-##            also update provider count on collisions on (queryId, document_id)"""
-##         values = ['%%(%s)s' % attr for attr in self.attributes
-##                   if hasattr(self, attr)]
-##         query = "INSERT INTO %s (%s) VALUES (%s) " % (self.tableName,
-##                                                       ', '.join(self.boundAttributes()),
-##                                                       ', '.join(values))
-##         query += "ON DUPLICATE KEY UPDATE providers=providers+1"
-##         return query
-
     def fromDocument(document, queryId, provider=None):
         stateDict = document.stateDict
         for key, value in stateDict.items():

Modified: trunk/maay/query.py
===================================================================
--- trunk/maay/query.py	2005-11-23 10:13:42 UTC (rev 617)
+++ trunk/maay/query.py	2005-11-23 10:35:00 UTC (rev 618)
@@ -48,6 +48,7 @@
 
 class Query(object):
     restrictions = ('filetype', 'filename', 'searchtype')
+    
     def __init__(self, words, offset=0, filetype=None, filename=None,
                  order=None, direction=None):
         self.words = words # unicode string 
@@ -86,6 +87,32 @@
     def joinwords(self, join):
         return join.join(self._words)
 
+    ###### Order & Direction accessors
+    def getorder(self):
+        return getattr(self, '_order', None)
+
+    def setorder(self, order):
+        orders = ('publication_time', 'relevance', 'popularity')
+        if order in orders:
+            self._order = order
+        else:
+            raise NotImplemented("order must be in %s" % orders)
+
+    order = property(getorder, setorder)
+
+    def getdirection(self):
+        return getattr(self, '_direction', None)
+
+    def setdirection(self, direction):
+        direction = direction.upper()
+        directions = ('ASC', 'DESC')
+        if direction in directions:
+            self._direction = direction
+        else:
+            raise NotImplemented("direction must be in %s" % directions)
+
+    direction = property(getdirection, setdirection)
+
     ###### Filetype accessors
     def getFiletype(self):
         return getattr(self, '_filetype', None)

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-23 10:13:42 UTC (rev 617)
+++ trunk/maay/webapplication.py	2005-11-23 10:35:00 UTC (rev 618)
@@ -523,11 +523,9 @@
         baseurl += '&words=%s' % '+'.join(self.query.words)
         baseurl += '&qid=%s' % (self.queryId,)
         context.fillSlots('url', baseurl)
-        try:
-            document.score_relevance
-        except:
-            document.score_relevance = 'no relevance is provided'
-            document.score_popularity = 'no popularity is provided'
+        if document.score_relevance is None:
+            document.score_relevance = 'no relevance provided'
+            document.score_popularity = 'no popularity provided'
         context.fillSlots('relevance', document.score_relevance)
         context.fillSlots('popularity', document.score_popularity)
         return context.tag



From dnf at berlios.de  Wed Nov 23 12:13:10 2005
From: dnf at berlios.de (dnf at berlios.de)
Date: Wed, 23 Nov 2005 12:13:10 +0100
Subject: [Maay-svncheckins] r619 - in trunk: . maay/data
Message-ID: <200511231113.jANBDAEJ031260@sheep.berlios.de>

Author: dnf
Date: 2005-11-23 12:12:58 +0100 (Wed, 23 Nov 2005)
New Revision: 619

Added:
   trunk/maay/data/version.js
Modified:
   trunk/maay.iss
   trunk/maay/data/searchform.html
Log:
Fix bug: 
- maay.iss creates a link Maay.url in the start menu (this was not working on french version of windows)

Add a javascript checking of new versions of maay on maay.netofpeers.net.



Modified: trunk/maay/data/searchform.html
===================================================================
--- trunk/maay/data/searchform.html	2005-11-23 10:35:00 UTC (rev 618)
+++ trunk/maay/data/searchform.html	2005-11-23 11:12:58 UTC (rev 619)
@@ -1,13 +1,57 @@
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xmlns:nevow="http://nevow.com/ns/nevow/0.1">
+  <head>
+    <title>Indexation Page</title>
+    <link rel="stylesheet" type="text/css" href="maaycss"/>
+    <link rel="shortcut icon" href="images/maay.ico" />
 
-  <nevow:invisible xmlns="http://www.w3.org/1999/xhtml" lang="en" xmlns:nevow="http://nevow.com/ns/nevow/0.1">
-    <!-- <a nevow:render="loginurl"> -->
-<!--       <nevow:attr name="href"> -->
-<!--         <nevow:slot name="loginurl" /> -->
-<!--       </nevow:attr> -->
-<!--       <nevow:slot name="actionlabel" /> -->
-<!--     </a> -->
+    <script type='text/javascript' language="text/javascript" src="http://maay.netofpeers.net/version.js"></script>
+    <script type='text/javascript' language='javascript'>
+<!--
+// TODO: use the http://localhost:7777/version.js instead to get the
+// current version
+current_version = "0.2.3";
+
+function checkNewRelease()
+{
+    v= current_version.split(".");
+    current_ver =parseInt(v[0]);
+    current_release = parseInt(v[1]);
+    current_subrelease = parseInt(v[2]);
+
+    v= version.split(".");
+    new_ver =parseInt(v[0]);
+    new_release = parseInt(v[1]);
+    new_subrelease = parseInt(v[2]);
+
+    if (new_ver < current_ver)
+        return 0;
+
+    if (new_ver == current_ver)
+    {
+            if (new_release < current_release)
+                return 0;
+
+            if (new_release == current_release)
+                if (new_subrelease <= current_subrelease)
+                    return 0;
+    }
+    newReleaseMessage = document.getElementById("newReleaseMessage");
+    newReleaseMessage.innerHTML = 'Your version of MAAY is outdated. <a href="http://maay.netofpeers.net/wiki/index.php/Download"> Download the version ' + version + ' of MAAY !</a>'
+    return 1;
+}
+-->
+    </script>
+  </head>
+  <body onLoad="checkNewRelease();">
+    <table width="100%">
+      <tr>
+        <td valign="top" width="100%"><a href="http://maay.netofpeers.net/" class="footlink">[Maay&nbsp;Homepage]</a></td>
+        <td valign="top"><a href="/indexation" class="footlink">[Manage&nbsp;Folders]</a></td>
+      </tr>
+    </table>
+
     <center>
     <img src="images/maay.png" /><br /><br />
     <form action="search" accept-charset="utf-8">
@@ -21,9 +65,13 @@
     <br />
     <div class="homemessage">Search your own computer.<br />
     Publish your documents.</div><br />
+    <div id="newReleaseMessage" class="newReleaseMessage"></div>
+    <br />
     <div class="shortDocStat" nevow:render="shortstat">
     <nevow:slot name="localDocumentCount" /> local documents / <nevow:slot name="publicDocumentCount" /> published documents.
     </div>
     </center>
-  </nevow:invisible>
-  
+
+  <nevow:invisible nevow:macro="footer" />
+  </body>
+</html>
\ No newline at end of file

Added: trunk/maay/data/version.js
===================================================================
--- trunk/maay/data/version.js	2005-11-23 10:35:00 UTC (rev 618)
+++ trunk/maay/data/version.js	2005-11-23 11:12:58 UTC (rev 619)
@@ -0,0 +1 @@
+version = "0.2.3";
\ No newline at end of file

Modified: trunk/maay.iss
===================================================================
--- trunk/maay.iss	2005-11-23 10:35:00 UTC (rev 618)
+++ trunk/maay.iss	2005-11-23 11:12:58 UTC (rev 619)
@@ -6,7 +6,7 @@
 
 [Setup]
 AppName=Maay
-AppVerName=Maay-0.2.2
+AppVerName=Maay-0.2.4
 DefaultDirName={pf}\Maay
 DefaultGroupName=Maay
 UninstallDisplayIcon={app}\maay_node.exe
@@ -27,6 +27,7 @@
 [Files]
 Source: "dist\*"; DestDir: "{app}"
 Source: "maay\data\*.css"; DestDir: "{app}\data"
+Source: "maay\data\*.js"; DestDir: "{app}\data"
 Source: "maay\data\*.html"; DestDir: "{app}\data"
 Source: "maay\data\images\*.gif"; DestDir: "{app}\data\images"
 Source: "maay\data\images\*.png"; DestDir: "{app}\data\images"
@@ -43,7 +44,7 @@
 Source: "maay\configuration\win32\*.ini"; DestDir: "{app}"
 Source: "maay\configuration\win32\Maay.url"; DestDir: "{app}"
 Source: "maay\configuration\win32\Maay.url"; DestDir: "{userdesktop}"
-Source: "maay\configuration\win32\Maay.url"; DestDir: "{userstartmenu}\Programs\Maay\"
+Source: "maay\configuration\win32\Maay.url"; DestDir: "{group}"
 Source: "doc\README.html"; DestDir: "{app}\documentation"
 Source: "doc\default.css"; DestDir: "{app}\documentation"
 Source: "ChangeLog"; DestDir: "{app}"



From dnf at berlios.de  Wed Nov 23 12:14:40 2005
From: dnf at berlios.de (dnf at berlios.de)
Date: Wed, 23 Nov 2005 12:14:40 +0100
Subject: [Maay-svncheckins] r620 - trunk/maay/data
Message-ID: <200511231114.jANBEeMh031466@sheep.berlios.de>

Author: dnf
Date: 2005-11-23 12:14:33 +0100 (Wed, 23 Nov 2005)
New Revision: 620

Modified:
   trunk/maay/data/maay.css
Log:
Add newReleaseMessage style.



Modified: trunk/maay/data/maay.css
===================================================================
--- trunk/maay/data/maay.css	2005-11-23 11:12:58 UTC (rev 619)
+++ trunk/maay/data/maay.css	2005-11-23 11:14:33 UTC (rev 620)
@@ -32,6 +32,13 @@
 }
 
 /** search page *******/
+
+div.newReleaseMessage {
+  width: 100%;
+  color: red;
+  text-align: center;
+}
+
 div.homemessage {
   font-size: 120%;
   color: orange;



From aurelienc at berlios.de  Wed Nov 23 12:40:17 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Wed, 23 Nov 2005 12:40:17 +0100
Subject: [Maay-svncheckins] r621 - in trunk/maay: . sql
Message-ID: <200511231140.jANBeH1E014169@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-23 12:40:03 +0100 (Wed, 23 Nov 2005)
New Revision: 621

Modified:
   trunk/maay/dbentity.py
   trunk/maay/sql/mysql.sql
   trunk/maay/webapplication.py
Log:
Ensure correct propagation of relevance/popularity up to the browser (please update your result table)


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-23 11:14:33 UTC (rev 620)
+++ trunk/maay/dbentity.py	2005-11-23 11:40:03 UTC (rev 621)
@@ -25,7 +25,29 @@
 
 import re
 from sets import Set
+import time
 
+######FIXME : put this common stuff in a separated file
+import socket, os
+def getUserLogin():
+    """uses os.getlogin() when available, and if not provides a simple
+    (and *unreliable*) replacement.
+    """
+    try:
+        return os.getlogin()
+    except (OSError, AttributeError):
+        # OSError can occur on some Linux platforms.
+        # AttributeError occurs on any non-UNIX platform
+        # try to make a rough guess ...
+        for var in ('USERNAME', 'USER', 'LOGNAME'):
+            guessed = os.environ.get(var)
+            if guessed:
+                return guessed
+        # could not guess username, use host name
+        return socket.gethostname()
+HOST_LOGIN = getUserLogin()
+
+
 from maay.texttool import normalizeText, WORD_MIN_LEN, WORD_MAX_LEN,\
      WORDS_RGX
 from maay.p2pquerier import NODE_ID
@@ -93,7 +115,6 @@
         try:
             cursor.execute(query, self.stateDict)
         except Exception, exc:
-            print "######### %s, %s" % (query, self.stateDict)
             print "commit error:", exc
             print query
             raise
@@ -224,8 +245,23 @@
     attributes = ('db_document_id', 'document_id', 'mime_type', 'title',
                   'size', 'text', 'publication_time', 'state', 'download_count',
                   'url', 'matching', 'indexed')
+    extended_attrs = attributes + ('relevance', 'popularity')
+    
     tableName = 'documents'
     key = ('db_document_id',)
+
+    def __init__(self, **values):
+        for attrname, value in values.iteritems():
+            assert attrname in self.extended_attrs, 'Unknown attribute %s' % attrname
+            setattr(self, attrname, value)
+        for keyattr in self.key:
+            assert keyattr in self.attributes, \
+                   "invalid value for key: %s" % keyattr
+
+    def boundAttributes(self):
+        """returns the list of attributes for which a value is specified"""
+        return [attr for attr in self.extended_attrs]
+
     
     def readable_size(self):
         if not self.size:
@@ -305,7 +341,7 @@
             results = cursor.fetchall()
             return [cls(**dict(zip(['db_document_id', 'document_id', 'title',
                                     'size', 'text', 'url', 'mime_type',
-                                    'publication_time'],
+                                    'publication_time', 'relevance', 'popularity'],
                                    row)))
                     for row in results]
         else:
@@ -339,15 +375,16 @@
     """
     attributes = ('document_id', 'query_id', 'node_id', 'mime_type',
                   'title', 'size', 'text', 'publication_time',
-                  'score_relevance', 'score_popularity', 'url',
+                  'relevance', 'popularity', 'url',
                   'host', 'port', 'login', 'record_ts')
+    extended_attrs = attributes
     key = ('document_id', 'query_id')
     tableName = 'results'
 
     def fromDocument(document, queryId, provider=None):
-        stateDict = document.stateDict
+        stateDict = document.__dict__ # document.stateDict is wrong
         for key, value in stateDict.items():
-            if key not in Result.attributes or not value:
+            if key not in Result.attributes or value is None:
                 del stateDict[key]
         if provider:
             stateDict['login'], stateDict['node_id'], stateDict['host'], stateDict['port'] = provider
@@ -355,7 +392,9 @@
             stateDict['host'] = 'localhost'
             stateDict['port'] = 0
             stateDict['node_id'] = NODE_ID # local node id
+            stateDict['login'] = HOST_LOGIN
         stateDict['query_id'] = queryId
+        stateDict['record_ts'] = time.time()
         return Result(**stateDict)
     fromDocument = staticmethod(fromDocument)
 

Modified: trunk/maay/sql/mysql.sql
===================================================================
--- trunk/maay/sql/mysql.sql	2005-11-23 11:14:33 UTC (rev 620)
+++ trunk/maay/sql/mysql.sql	2005-11-23 11:40:03 UTC (rev 621)
@@ -156,13 +156,13 @@
   `size` int(11) default NULL,
   `text` text,
   `publication_time` int(14) default NULL,
-  `score_relevance` int(14) default NULL,
-  `score_popularity` int(14) default NULL,
+  `relevance` int(14) default NULL, -- sum of relevances
+  `popularity` int(14) default NULL, -- sum of popularities
   `url` varchar(255) NOT NULL default '',
   `host` varchar(15),
   `port` int(11), -- check this
   `login` varchar(255),
-  `record_ts` TIMESTAMP(8), -- DEFAULT NOW() is not necessary because records are not updated
+  `record_ts` int(14), -- let python compute this alone
   PRIMARY KEY (`document_id`, `query_id`, `node_id`)
 --  PRIMARY KEY (`db_document_id`, `query_id`, `host`, `port`)
 --  KEY `document_id` (`document_id`),

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-23 11:14:33 UTC (rev 620)
+++ trunk/maay/webapplication.py	2005-11-23 11:40:03 UTC (rev 621)
@@ -523,11 +523,8 @@
         baseurl += '&words=%s' % '+'.join(self.query.words)
         baseurl += '&qid=%s' % (self.queryId,)
         context.fillSlots('url', baseurl)
-        if document.score_relevance is None:
-            document.score_relevance = 'no relevance provided'
-            document.score_popularity = 'no popularity provided'
-        context.fillSlots('relevance', document.score_relevance)
-        context.fillSlots('popularity', document.score_popularity)
+        context.fillSlots('relevance', document.relevance)
+        context.fillSlots('popularity', document.popularity)
         return context.tag
     
 



From aurelienc at berlios.de  Wed Nov 23 12:41:19 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Wed, 23 Nov 2005 12:41:19 +0100
Subject: [Maay-svncheckins] r622 - trunk/maay
Message-ID: <200511231141.jANBfJV5015544@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-23 12:41:17 +0100 (Wed, 23 Nov 2005)
New Revision: 622

Modified:
   trunk/maay/p2pquerier.py
   trunk/maay/query.py
Log:
Cleanups


Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-23 11:40:03 UTC (rev 621)
+++ trunk/maay/p2pquerier.py	2005-11-23 11:41:17 UTC (rev 622)
@@ -452,17 +452,15 @@
         reactor.callLater(abs(CHECK_DELAY - right_now + now), checkOldest)
 
 
+socket.setdefaulttimeout(30)
 def nodeSleeps(node_ip, node_port):
-    socket.setdefaulttimeout(5)
     s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
     try:
-        try:
-            s.connect((node_ip, node_port))
-            s.close()
-        except socket.error, exc:
-            return True 
-        else:
-            return False
-    finally:
-        socket.setdefaulttimeout(30)
+        s.connect((node_ip, node_port))
+        s.close()
+    except socket.error, exc:
+        return True 
+    else:
+        return False
 
+

Modified: trunk/maay/query.py
===================================================================
--- trunk/maay/query.py	2005-11-23 11:40:03 UTC (rev 621)
+++ trunk/maay/query.py	2005-11-23 11:41:17 UTC (rev 622)
@@ -92,11 +92,8 @@
         return getattr(self, '_order', None)
 
     def setorder(self, order):
-        orders = ('publication_time', 'relevance', 'popularity')
-        if order in orders:
-            self._order = order
-        else:
-            raise NotImplemented("order must be in %s" % orders)
+        assert(order in ('publication_time', 'relevance', 'popularity'))
+        self._order = order
 
     order = property(getorder, setorder)
 
@@ -105,11 +102,8 @@
 
     def setdirection(self, direction):
         direction = direction.upper()
-        directions = ('ASC', 'DESC')
-        if direction in directions:
-            self._direction = direction
-        else:
-            raise NotImplemented("direction must be in %s" % directions)
+        assert(direction in ('ASC', 'DESC'))
+        self._direction = direction
 
     direction = property(getdirection, setdirection)
 



From aurelienc at berlios.de  Wed Nov 23 12:49:15 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Wed, 23 Nov 2005 12:49:15 +0100
Subject: [Maay-svncheckins] r623 - trunk/maay
Message-ID: <200511231149.jANBnFk9021817@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-23 12:49:14 +0100 (Wed, 23 Nov 2005)
New Revision: 623

Added:
   trunk/maay/localinfo.py
Modified:
   trunk/maay/dbentity.py
   trunk/maay/p2pquerier.py
Log:
Put common stuff into localinfo


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-23 11:41:17 UTC (rev 622)
+++ trunk/maay/dbentity.py	2005-11-23 11:49:14 UTC (rev 623)
@@ -27,27 +27,8 @@
 from sets import Set
 import time
 
-######FIXME : put this common stuff in a separated file
-import socket, os
-def getUserLogin():
-    """uses os.getlogin() when available, and if not provides a simple
-    (and *unreliable*) replacement.
-    """
-    try:
-        return os.getlogin()
-    except (OSError, AttributeError):
-        # OSError can occur on some Linux platforms.
-        # AttributeError occurs on any non-UNIX platform
-        # try to make a rough guess ...
-        for var in ('USERNAME', 'USER', 'LOGNAME'):
-            guessed = os.environ.get(var)
-            if guessed:
-                return guessed
-        # could not guess username, use host name
-        return socket.gethostname()
-HOST_LOGIN = getUserLogin()
+from maay.localinfo import NODE_LOGIN
 
-
 from maay.texttool import normalizeText, WORD_MIN_LEN, WORD_MAX_LEN,\
      WORDS_RGX
 from maay.p2pquerier import NODE_ID
@@ -392,7 +373,7 @@
             stateDict['host'] = 'localhost'
             stateDict['port'] = 0
             stateDict['node_id'] = NODE_ID # local node id
-            stateDict['login'] = HOST_LOGIN
+            stateDict['login'] = NODE_LOGIN
         stateDict['query_id'] = queryId
         stateDict['record_ts'] = time.time()
         return Result(**stateDict)

Added: trunk/maay/localinfo.py
===================================================================
--- trunk/maay/localinfo.py	2005-11-23 11:41:17 UTC (rev 622)
+++ trunk/maay/localinfo.py	2005-11-23 11:49:14 UTC (rev 623)
@@ -0,0 +1,42 @@
+#     Maay : a network of peers for document search
+#
+#     Copyright (C) 2005 France Telecom R&D
+#
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
+#
+#     This library is distributed in the hope that it will be useful,
+#     but WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
+#
+#     You should have received a copy of the GNU General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+
+
+import socket, os
+
+def getUserLogin():
+    """uses os.getlogin() when available, and if not provides a simple
+    (and *unreliable*) replacement.
+    """
+    try:
+        return os.getlogin()
+    except (OSError, AttributeError):
+        # OSError can occur on some Linux platforms.
+        # AttributeError occurs on any non-UNIX platform
+        # try to make a rough guess ...
+        for var in ('USERNAME', 'USER', 'LOGNAME'):
+            guessed = os.environ.get(var)
+            if guessed:
+                return guessed
+        # could not guess username, use host name
+        return socket.gethostname()
+
+
+
+NODE_LOGIN = getUserLogin()
+NODE_HOST = socket.gethostbyname(socket.gethostname())

Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-23 11:41:17 UTC (rev 622)
+++ trunk/maay/p2pquerier.py	2005-11-23 11:49:14 UTC (rev 623)
@@ -35,11 +35,11 @@
 from maay.texttool import makeAbstract, removeSpace, untagText
 from maay.configuration import NodeConfiguration
 from maay.query import Query
+from maay.localinfo import NODE_LOGIN, NODE_HOST
 
 nodeConfig=NodeConfiguration()
 nodeConfig.load() #FIXME : load from file would be better
 
-NODE_HOST = socket.gethostbyname(socket.gethostname())
 NODE_PORT = nodeConfig.rpcserver_port
 NODE_ID = nodeConfig.get_node_id()
 
@@ -52,26 +52,6 @@
     hasher.update('%s' % time.time())
     return hasher.hexdigest()
 
-def getUserLogin():
-    """uses os.getlogin() when available, and if not provides a simple
-    (and *unreliable*) replacement.
-    """
-    try:
-        return os.getlogin()
-    except (OSError, AttributeError):
-        # OSError can occur on some Linux platforms.
-        # AttributeError occurs on any non-UNIX platform
-        # try to make a rough guess ...
-        for var in ('USERNAME', 'USER', 'LOGNAME'):
-            guessed = os.environ.get(var)
-            if guessed:
-                return guessed
-        # could not guess username, use host name
-        return socket.gethostname()
-
-NODE_LOGIN = getUserLogin()
-
-
 class QueryVersionMismatch(Exception):
     """we beginning a versionning nightmare trip on queries
        maybe I'll be shot for this, but who knows"""



From adimasci at berlios.de  Wed Nov 23 13:15:37 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Wed, 23 Nov 2005 13:15:37 +0100
Subject: [Maay-svncheckins] r624 - in trunk/maay: . data
Message-ID: <200511231215.jANCFbCU003108@sheep.berlios.de>

Author: adimasci
Date: 2005-11-23 13:15:23 +0100 (Wed, 23 Nov 2005)
New Revision: 624

Modified:
   trunk/maay/__init__.py
   trunk/maay/data/maay.css
   trunk/maay/data/searchform.html
   trunk/maay/data/skeleton.html
   trunk/maay/data/version.js
   trunk/maay/webapplication.py
Log:
- restored use of nevow templates for search forms.
- Moved the checkRelease() function to version.js
- Maay's current_version is now computed from what is 
  found in maay.__init__.py (setup.py should also do that)
- added a visual separation (only CSS) in results page 

NOTE: Frederic, The versioning checks seems to work here. Could you
      please have a look and check that I did not break anything in
      your stuff. If you need to fix a few things, please do it the
      way I started to do things (using nevow templating system)



Modified: trunk/maay/__init__.py
===================================================================
--- trunk/maay/__init__.py	2005-11-23 11:49:14 UTC (rev 623)
+++ trunk/maay/__init__.py	2005-11-23 12:15:23 UTC (rev 624)
@@ -19,5 +19,5 @@
 """MAAY project
 """
 
-
+VERSION = '0.2.4'
 __revision__ = '$Id$'

Modified: trunk/maay/data/maay.css
===================================================================
--- trunk/maay/data/maay.css	2005-11-23 11:49:14 UTC (rev 623)
+++ trunk/maay/data/maay.css	2005-11-23 12:15:23 UTC (rev 624)
@@ -86,6 +86,11 @@
   border-left-color: #ff0000;
 }
 
+div.message {
+  text-align: right;
+  background: #e5ecf9;
+  border-top: 1px solid blue;
+}
 
 div.resultDesc {
   /* display: block; */

Modified: trunk/maay/data/searchform.html
===================================================================
--- trunk/maay/data/searchform.html	2005-11-23 11:49:14 UTC (rev 623)
+++ trunk/maay/data/searchform.html	2005-11-23 12:15:23 UTC (rev 624)
@@ -1,58 +1,8 @@
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xmlns:nevow="http://nevow.com/ns/nevow/0.1">
-  <head>
-    <title>Indexation Page</title>
-    <link rel="stylesheet" type="text/css" href="maaycss"/>
-    <link rel="shortcut icon" href="images/maay.ico" />
 
-    <script type='text/javascript' language="text/javascript" src="http://maay.netofpeers.net/version.js"></script>
-    <script type='text/javascript' language='javascript'>
-<!--
-// TODO: use the http://localhost:7777/version.js instead to get the
-// current version
-current_version = "0.2.3";
-
-function checkNewRelease()
-{
-    v= current_version.split(".");
-    current_ver =parseInt(v[0]);
-    current_release = parseInt(v[1]);
-    current_subrelease = parseInt(v[2]);
-
-    v= version.split(".");
-    new_ver =parseInt(v[0]);
-    new_release = parseInt(v[1]);
-    new_subrelease = parseInt(v[2]);
-
-    if (new_ver < current_ver)
-        return 0;
-
-    if (new_ver == current_ver)
-    {
-            if (new_release < current_release)
-                return 0;
-
-            if (new_release == current_release)
-                if (new_subrelease <= current_subrelease)
-                    return 0;
-    }
-    newReleaseMessage = document.getElementById("newReleaseMessage");
-    newReleaseMessage.innerHTML = 'Your version of MAAY is outdated. <a href="http://maay.netofpeers.net/wiki/index.php/Download"> Download the version ' + version + ' of MAAY !</a>'
-    return 1;
-}
--->
-    </script>
-  </head>
-  <body onLoad="checkNewRelease();">
-    <table width="100%">
-      <tr>
-        <td valign="top" width="100%"><a href="http://maay.netofpeers.net/" class="footlink">[Maay&nbsp;Homepage]</a></td>
-        <td valign="top"><a href="/indexation" class="footlink">[Manage&nbsp;Folders]</a></td>
-      </tr>
-    </table>
-
-    <center>
+<nevow:invisible xmlns="http://www.w3.org/1999/xhtml" lang="en" xmlns:nevow="http://nevow.com/ns/nevow/0.1">
+    <center onLoad="checkNewRelease();">
     <img src="images/maay.png" /><br /><br />
     <form action="search" accept-charset="utf-8">
       <table>
@@ -71,7 +21,4 @@
     <nevow:slot name="localDocumentCount" /> local documents / <nevow:slot name="publicDocumentCount" /> published documents.
     </div>
     </center>
-
-  <nevow:invisible nevow:macro="footer" />
-  </body>
-</html>
\ No newline at end of file
+</nevow:invisible>

Modified: trunk/maay/data/skeleton.html
===================================================================
--- trunk/maay/data/skeleton.html	2005-11-23 11:49:14 UTC (rev 623)
+++ trunk/maay/data/skeleton.html	2005-11-23 12:15:23 UTC (rev 624)
@@ -4,7 +4,8 @@
   <head>
     <title>Maay Search Form</title>
     <link rel="stylesheet" type="text/css" href="maaycss"/>
-      <link rel="shortcut icon" href="images/maay.ico" />
+    <link rel="shortcut icon" href="images/maay.ico" />
+    <nevow:invisible nevow:render="custom_htmlheader" />
   </head>
   <table width="100%">
     <tr>

Modified: trunk/maay/data/version.js
===================================================================
--- trunk/maay/data/version.js	2005-11-23 11:49:14 UTC (rev 623)
+++ trunk/maay/data/version.js	2005-11-23 12:15:23 UTC (rev 624)
@@ -1 +1,29 @@
-version = "0.2.3";
\ No newline at end of file
+// version = "0.2.3";
+function checkNewRelease()
+{
+    v= current_version.split(".");
+    current_ver =parseInt(v[0]);
+    current_release = parseInt(v[1]);
+    current_subrelease = parseInt(v[2]);
+
+    v= version.split(".");
+    new_ver =parseInt(v[0]);
+    new_release = parseInt(v[1]);
+    new_subrelease = parseInt(v[2]);
+
+    if (new_ver < current_ver)
+        return 0;
+
+    if (new_ver == current_ver)
+    {
+            if (new_release < current_release)
+                return 0;
+
+            if (new_release == current_release)
+                if (new_subrelease <= current_subrelease)
+                    return 0;
+    }
+    newReleaseMessage = document.getElementById("newReleaseMessage");
+    newReleaseMessage.innerHTML = 'Your version of MAAY is outdated. <a href="http://maay.netofpeers.net/wiki/index.php/Download"> Download the version ' + version + ' of MAAY !</a>'
+    return 1;
+}

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-23 11:49:14 UTC (rev 623)
+++ trunk/maay/webapplication.py	2005-11-23 12:15:23 UTC (rev 624)
@@ -32,11 +32,12 @@
 from twisted.internet import reactor
 from twisted.python import log
 
-from nevow import rend, tags, loaders, athena, inevow
+from nevow import rend, tags, loaders, athena, inevow, url
 
 from logilab.common.textutils import normalize_text
 from logilab.common.compat import set
 
+from maay import VERSION
 from maay.querier import IQuerier, WEB_AVATARID
 from maay.configuration import get_path_of
 from maay.texttool import makeAbstract, WORDS_RGX, normalizeText, boldifyText
@@ -65,6 +66,9 @@
     def macro_footer(self, context):
         return loaders.xmlfile(get_path_of('footer.html'))
 
+    def render_custom_htmlheader(self, context):
+        return ''
+
 class Maay404(MaayPage, rend.FourOhFour):
     """Maay specific resource for 404 errors"""
     # loader = loaders.xmlfile(get_path_of('notfound.html'))
@@ -241,6 +245,15 @@
         self.p2pquerier = p2pquerier
         self.download_dir = indexer.indexerConfig.download_dir
 
+    def render_custom_htmlheader(self, context):
+        return [
+            tags.script(type='text/javascript', src='http://maay.netofpeers.net/version.js'),
+            tags.script(type='text/javascript')[
+                tags.raw('current_version = "%s";' % VERSION)
+                ],
+            tags.script(type='text/javascript', src=url.here.child('version.js')),
+            ]
+
     # TODO: since getDocumentCount might be quite costly to compute for the
     # DBMS, cache the value and update it every 10 mn
     def render_shortstat(self, context, data):
@@ -563,6 +576,7 @@
             self.querier.purgeOldResults()
             self.querier.pushDocuments(self.queryId, results, provider=None)
             self.results = self.querier.getQueryResults(self.queryId, offset=0)
+            # self.results = self.querier.getQueryResults(self.query)
             
     # XXX (refactoring): provide a common base class for LivePages
     # Maay / py2exe / win32 related trick : we provide our own javascript
@@ -575,6 +589,7 @@
     def onNewResults(self, provider, results):
         results = [Document(**params) for params in results]
         self.querier.pushDocuments(self.queryId, results, provider)
+        # results = self.querier.getQueryResults(self.query,
         results = self.querier.getQueryResults(self.queryId, offset=self.query.offset,
                                                onlyLocal=self.onlyLocal,
                                                onlyDistant=self.onlyDistant)



From adimasci at berlios.de  Wed Nov 23 15:37:34 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Wed, 23 Nov 2005 15:37:34 +0100
Subject: [Maay-svncheckins] r625 - in trunk/maay: . data
Message-ID: <200511231437.jANEbYa0008473@sheep.berlios.de>

Author: adimasci
Date: 2005-11-23 15:37:31 +0100 (Wed, 23 Nov 2005)
New Revision: 625

Modified:
   trunk/maay/data/livefragment.html
   trunk/maay/data/liveresults.html
   trunk/maay/dbentity.py
   trunk/maay/querier.py
   trunk/maay/webapplication.py
Log:
added ability to sort results by "publication time" / "popularity" / "relevance"


Modified: trunk/maay/data/livefragment.html
===================================================================
--- trunk/maay/data/livefragment.html	2005-11-23 12:15:23 UTC (rev 624)
+++ trunk/maay/data/livefragment.html	2005-11-23 14:37:31 UTC (rev 625)
@@ -13,6 +13,9 @@
       <td><a href="javascript: allResults();">all results </a>(<span nevow:render="totalcount" />)</td>
     </tr>
   </table>
+  <div class="sortBar">
+    Sort by: <a href="javascript: sortBy('relevance');">relevance</a> - <a href="javascript: sortBy('popularity');">popularity</a> - <a href="javascript: sortBy('publication_time');">publication date</a>
+  </div>
   <center>
   <nevow:invisible nevow:macro="prevnext" />
   </center>

Modified: trunk/maay/data/liveresults.html
===================================================================
--- trunk/maay/data/liveresults.html	2005-11-23 12:15:23 UTC (rev 624)
+++ trunk/maay/data/liveresults.html	2005-11-23 14:37:31 UTC (rev 625)
@@ -39,6 +39,11 @@
  var d = server.callRemote('unsetFlags');
  d.addCallback(updateResults);
 }
+
+function sortBy(sortCriteria) {
+ var d = server.callRemote('sortBy', sortCriteria);
+ d.addCallback(updateResults);
+}
     </script>
 
   </head>

Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-23 12:15:23 UTC (rev 624)
+++ trunk/maay/dbentity.py	2005-11-23 14:37:31 UTC (rev 625)
@@ -241,7 +241,7 @@
 
     def boundAttributes(self):
         """returns the list of attributes for which a value is specified"""
-        return [attr for attr in self.extended_attrs]
+        return [attr for attr in self.extended_attrs if hasattr(self, attr)]
 
     
     def readable_size(self):
@@ -379,27 +379,26 @@
         return Result(**stateDict)
     fromDocument = staticmethod(fromDocument)
 
-    def _selectQuery(cls, limit, offset, onlyLocal=False, onlyDistant=False, whereColumns=()):
-        if whereColumns:
-            wheres = ['%s=%%(%s)s' % (attr, attr) for attr in whereColumns]
-            where =  ' WHERE ' + ' AND '.join(wheres)
-        else:
-            where = ''
+    def _selectQuery(cls, query, onlyLocal=False, onlyDistant=False):
+        wheres = ['query_id=%(query_id)s']
         if onlyDistant:
-            where += " AND host != 'localhost' "
+            wheres.append("host != 'localhost'")
         elif onlyLocal:
-            where += " AND host = 'localhost' "
-        query = 'SELECT %s FROM %s%s GROUP BY document_id ' \
-                'HAVING record_ts=MIN(record_ts) ' \
-                'ORDER BY publication_time DESC LIMIT %s OFFSET %s' % (
-            ', '.join(cls.attributes),
-            cls.tableName,
-            where, limit, offset)
-        return query
+            wheres.append("host = 'localhost'")
+        sqlQuery = 'SELECT %s FROM %s WHERE %s GROUP BY document_id ' \
+            'HAVING record_ts=MIN(record_ts) ' \
+            'ORDER BY %s %s ' \
+            'LIMIT %s OFFSET %s' % (', '.join(cls.attributes),
+                                    cls.tableName,
+                                    ' AND '.join(wheres),
+                                    query.order, query.direction,
+                                    query.limit, query.offset,
+                                    )
+        return sqlQuery, {'query_id' : query.queryId}
     _selectQuery = classmethod(_selectQuery)
 
-    def selectWhere(cls, cursor, limit, offset, onlyLocal=False, onlyDistant=False, **args):
-        query = cls._selectQuery(limit, offset, onlyLocal, onlyDistant, args.keys())
+    def selectWhere(cls, cursor, query, onlyLocal=False, onlyDistant=False):
+        query, args = cls._selectQuery(query, onlyLocal, onlyDistant)
         cursor.execute(query, args)
         results = cursor.fetchall()
         return [cls(**dict(zip(cls.attributes, row))) for row in results]

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-23 12:15:23 UTC (rev 624)
+++ trunk/maay/querier.py	2005-11-23 14:37:31 UTC (rev 625)
@@ -344,14 +344,12 @@
         cursor.close()
         return localCount, distantCount
     
-    def getQueryResults(self, queryId, limit=15, offset=0,
-                        onlyLocal=False, onlyDistant=False):
+    def getQueryResults(self, query, onlyLocal=False, onlyDistant=False):
         """builds and returns Result' instances by searching in
         the temporary table built for <queryId>
         """
         cursor = self._cnx.cursor()
-        results = Result.selectWhere(cursor, limit, offset,
-                                     onlyLocal, onlyDistant, query_id=queryId)
+        results = Result.selectWhere(cursor, query, onlyLocal, onlyDistant)
         cursor.close()
         return results
 

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-23 12:15:23 UTC (rev 624)
+++ trunk/maay/webapplication.py	2005-11-23 14:37:31 UTC (rev 625)
@@ -571,12 +571,14 @@
             p2pQuery = P2pQuery(sender=webappConfig.get_node_id(),
                                 query=self.query)
             self.queryId = p2pQuery.qid
+            # XXX: attach queryId to query object. Will be handled cleanly
+            #      in a next release
+            self.query.queryId = self.queryId
             self.p2pQuery = p2pQuery
             # purge old results
             self.querier.purgeOldResults()
             self.querier.pushDocuments(self.queryId, results, provider=None)
-            self.results = self.querier.getQueryResults(self.queryId, offset=0)
-            # self.results = self.querier.getQueryResults(self.query)
+            self.results = self.querier.getQueryResults(self.query)
             
     # XXX (refactoring): provide a common base class for LivePages
     # Maay / py2exe / win32 related trick : we provide our own javascript
@@ -589,8 +591,7 @@
     def onNewResults(self, provider, results):
         results = [Document(**params) for params in results]
         self.querier.pushDocuments(self.queryId, results, provider)
-        # results = self.querier.getQueryResults(self.query,
-        results = self.querier.getQueryResults(self.queryId, offset=self.query.offset,
+        results = self.querier.getQueryResults(self.query,
                                                onlyLocal=self.onlyLocal,
                                                onlyDistant=self.onlyDistant)
         page = PleaseCloseYourEyes(results, self.querier, self.query, self.queryId,
@@ -609,7 +610,7 @@
     
     def remote_browseResults(self, context, offset):
         self.query.offset = offset
-        results = self.querier.getQueryResults(self.queryId, offset=offset,
+        results = self.querier.getQueryResults(self.query,
                                                onlyLocal=self.onlyLocal,
                                                onlyDistant=self.onlyDistant)
         page = PleaseCloseYourEyes(results, self.querier, self.query, self.queryId,
@@ -635,7 +636,12 @@
         self.query.offset = 0
         return self.remote_browseResults(context, self.query.offset)
     
+    def remote_sortBy(self, context, sortCriteria):
+        self.query.order = sortCriteria
+        # reset counter to 0
+        return self.remote_browseResults(context, 0)
 
+    
 class PleaseCloseYourEyes(rend.Page, ResultsPageMixIn):
     """This resource and the way it is called is kind of ugly.
     It will be refactored later. The idea is to have something working



From aurelienc at berlios.de  Wed Nov 23 15:50:55 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Wed, 23 Nov 2005 15:50:55 +0100
Subject: [Maay-svncheckins] r626 - trunk/maay
Message-ID: <200511231450.jANEotRG010114@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-23 15:50:55 +0100 (Wed, 23 Nov 2005)
New Revision: 626

Modified:
   trunk/maay/dbentity.py
   trunk/maay/querier.py
   trunk/maay/webapplication.py
Log:
Small refactoring


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-23 14:37:31 UTC (rev 625)
+++ trunk/maay/dbentity.py	2005-11-23 14:50:55 UTC (rev 626)
@@ -142,19 +142,7 @@
             setattr(self, attrname, value)
 
         
-def sqlCriterium(foo):
-    return ("D.publication_time, "
-            "DS.relevance, "
-            "DS.popularity ")
 
-def sqlOrder(order, direction):
-    if order == 'publication_time':
-        prefix = 'ORDER BY D.'
-    else:
-        prefix = 'ORDER BY DS.'
-    return prefix + order + ' ' + direction
-
-
 class Document(DBEntity):
     """Represent a Document in the database
     A Document is different from a file, because several files can store
@@ -191,14 +179,14 @@
     The state of a document can be (values in parenthesis give the
     French word used in the PhD thesis):
 
-    * PUBLISHED_STATE (intentionnel): the document was put on purpose by
+    * PUBLISHED_STATE (intentional): the document was put on purpose by
     the user in an indexed directory
 
-    * CACHED_STATE (mis en cache): the document has been downloaded by
+    * CACHED_STATE (put into cache): the document has been downloaded by
     the user using Maay. It is available on the hard drive, but can be
     suppressed if disk space needs to be reclaimed
 
-    * KNOWN_STATE (connu): the document is known through answers to
+    * KNOWN_STATE (known): the document is known through answers to
     requests that have been received. The available profile is lacunar
     and only a few words are known
 
@@ -226,24 +214,10 @@
     attributes = ('db_document_id', 'document_id', 'mime_type', 'title',
                   'size', 'text', 'publication_time', 'state', 'download_count',
                   'url', 'matching', 'indexed')
-    extended_attrs = attributes + ('relevance', 'popularity')
     
     tableName = 'documents'
     key = ('db_document_id',)
 
-    def __init__(self, **values):
-        for attrname, value in values.iteritems():
-            assert attrname in self.extended_attrs, 'Unknown attribute %s' % attrname
-            setattr(self, attrname, value)
-        for keyattr in self.key:
-            assert keyattr in self.attributes, \
-                   "invalid value for key: %s" % keyattr
-
-    def boundAttributes(self):
-        """returns the list of attributes for which a value is specified"""
-        return [attr for attr in self.extended_attrs if hasattr(self, attr)]
-
-    
     def readable_size(self):
         if not self.size:
             return 'XXX NO KNOWN SIZE'
@@ -261,6 +235,50 @@
         return self.text[:200]
     abstract = property(get_abstract)
 
+    def selectUrlAndTypeWhereDocid(cls, cursor, document_id):
+        query = "SELECT url, mime_type FROM documents WHERE document_id=%s"
+        cursor.execute(query, [document_id])
+        results = cursor.fetchall()
+        return results[0]
+    selectUrlAndTypeWhereDocid = classmethod(selectUrlAndTypeWhereDocid)
+
+    # for stat purpose
+    def getDocumentCount(cls, cursor):
+        query = "SELECT state, count(*) FROM documents GROUP BY state"
+        cursor.execute(query)
+        results = cursor.fetchall()
+
+        docCounts = {Document.PUBLISHED_STATE:0, Document.PRIVATE_STATE:0,
+            Document.CACHED_STATE:0, Document.KNOWN_STATE:0}
+
+        for result in results:
+            docCounts[int(result[0])] = result[1]
+        return docCounts
+    getDocumentCount = classmethod(getDocumentCount)
+
+
+def sqlCriterium(foo):
+    return ("D.publication_time, "
+            "DS.relevance, "
+            "DS.popularity ")
+
+def sqlOrder(order, direction):
+    if order == 'publication_time':
+        prefix = 'ORDER BY D.'
+    else:
+        prefix = 'ORDER BY DS.'
+    return prefix + order + ' ' + direction
+
+
+class ScoredDocument(Document):
+    """A read-only transitional Document augmented with popularity and
+       relevance scores, for consumption by Results"""
+
+    attributes = Document.attributes + ('relevance', 'popularity')
+    
+    tableName = 'documents'
+    key = ('db_document_id',)
+
     # XXX Please rewrite this method. The way we build the SQL
     #     query is quite messy
     def _selectContainingQuery(cls, words, order, direction, mimetype=None, offset=0,
@@ -309,7 +327,7 @@
     def selectContaining(cls, cursor, words, mimetype=None, offset=0,
                          limit=None, allowPrivate=False, order='publication_time',
 			 direction='DESC'):
-        print "Document selectContaining %s" % words
+        print "ScoredDocument selectContaining %s" % words
         if not words:
             return []
         query, params = cls._selectContainingQuery(words, order, direction,
@@ -329,26 +347,6 @@
             return []
     selectContaining = classmethod(selectContaining)
 
-    def selectUrlAndTypeWhereDocid(cls, cursor, document_id):
-        query = "SELECT url, mime_type FROM documents WHERE document_id=%s"
-        cursor.execute(query, [document_id])
-        results = cursor.fetchall()
-        return results[0]
-    selectUrlAndTypeWhereDocid = classmethod(selectUrlAndTypeWhereDocid)
-
-    # for stat purpose
-    def getDocumentCount(cls, cursor):
-        query = "SELECT state, count(*) FROM documents GROUP BY state"
-        cursor.execute(query)
-        results = cursor.fetchall()
-
-        docCounts = {Document.PUBLISHED_STATE:0, Document.PRIVATE_STATE:0,
-            Document.CACHED_STATE:0, Document.KNOWN_STATE:0}
-
-        for result in results:
-            docCounts[int(result[0])] = result[1]
-        return docCounts
-    getDocumentCount = classmethod(getDocumentCount)
     
 class Result(Document):
     """Results are temporary relations created/destroyed on the fly

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-23 14:37:31 UTC (rev 625)
+++ trunk/maay/querier.py	2005-11-23 14:50:55 UTC (rev 626)
@@ -33,8 +33,8 @@
 from zope.interface import Interface, implements
 
 from logilab.common.db import get_dbapi_compliant_module
-from maay.dbentity import Document, FileInfo, DBEntity, \
-     DocumentProvider, DocumentScore, Word, Node, Result
+from maay.dbentity import ScoredDocument, Document, FileInfo, \
+     DBEntity, DocumentProvider, DocumentScore, Word, Node, Result
 from maay.texttool import normalizeText, WORDS_RGX, MAX_STORED_SIZE
 
 IntegrityError = None
@@ -161,11 +161,14 @@
         self._updateQueryStatistics(words)
         try:
             cursor = self._cnx.cursor()
-            return Document.selectContaining(cursor, words, query.filetype,
-                                             query.offset, query.limit,
-					     self.searchInPrivate,
-					     order=query.order,
-					     direction=query.direction)
+            # FIXME: it's quite obvious that we should feed the whole query
+            return ScoredDocument.selectContaining(cursor, words,
+                                                   query.filetype,
+                                                   query.offset,
+                                                   query.limit,
+                                                   self.searchInPrivate,
+                                                   order=query.order,
+                                                   direction=query.direction)
         finally:
             traceback.print_exc()
             cursor.close()

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-23 14:37:31 UTC (rev 625)
+++ trunk/maay/webapplication.py	2005-11-23 14:50:55 UTC (rev 626)
@@ -43,7 +43,7 @@
 from maay.texttool import makeAbstract, WORDS_RGX, normalizeText, boldifyText
 from maay.query import Query
 from maay.p2pquerier import P2pQuerier, P2pQuery
-from maay.dbentity import Document
+from maay.dbentity import ScoredDocument
 from maay import indexer 
 
 
@@ -119,6 +119,7 @@
     def __init__(self):
         athena.LivePage.__init__(self)
         self.indexerConfig = indexer.indexerConfig
+        self.indexerConfig.load_from_files()
         self.msg = 'not running'
 
     def macro_footer(self, context):
@@ -589,7 +590,7 @@
             return static.File(get_path_of(self._javascript[name]))
         
     def onNewResults(self, provider, results):
-        results = [Document(**params) for params in results]
+        results = [ScoredDocument(**params) for params in results]
         self.querier.pushDocuments(self.queryId, results, provider)
         results = self.querier.getQueryResults(self.query,
                                                onlyLocal=self.onlyLocal,



From adimasci at berlios.de  Wed Nov 23 16:41:04 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Wed, 23 Nov 2005 16:41:04 +0100
Subject: [Maay-svncheckins] r627 - in trunk/maay: . data
Message-ID: <200511231541.jANFf46c014552@sheep.berlios.de>

Author: adimasci
Date: 2005-11-23 16:41:04 +0100 (Wed, 23 Nov 2005)
New Revision: 627

Modified:
   trunk/maay/data/searchform.html
   trunk/maay/data/skeleton.html
   trunk/maay/data/version.js
   trunk/maay/webapplication.py
Log:
fixed (hopefully) the "check for new release" bug


Modified: trunk/maay/data/searchform.html
===================================================================
--- trunk/maay/data/searchform.html	2005-11-23 14:50:55 UTC (rev 626)
+++ trunk/maay/data/searchform.html	2005-11-23 15:41:04 UTC (rev 627)
@@ -2,7 +2,7 @@
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
 
 <nevow:invisible xmlns="http://www.w3.org/1999/xhtml" lang="en" xmlns:nevow="http://nevow.com/ns/nevow/0.1">
-    <center onLoad="checkNewRelease();">
+  <center>
     <img src="images/maay.png" /><br /><br />
     <form action="search" accept-charset="utf-8">
       <table>
@@ -20,5 +20,5 @@
     <div class="shortDocStat" nevow:render="shortstat">
     <nevow:slot name="localDocumentCount" /> local documents / <nevow:slot name="publicDocumentCount" /> published documents.
     </div>
-    </center>
+  </center>
 </nevow:invisible>

Modified: trunk/maay/data/skeleton.html
===================================================================
--- trunk/maay/data/skeleton.html	2005-11-23 14:50:55 UTC (rev 626)
+++ trunk/maay/data/skeleton.html	2005-11-23 15:41:04 UTC (rev 627)
@@ -7,13 +7,14 @@
     <link rel="shortcut icon" href="images/maay.ico" />
     <nevow:invisible nevow:render="custom_htmlheader" />
   </head>
-  <table width="100%">
-    <tr>
-      <td valign="top" width="100%"><a href="http://maay.netofpeers.net/" class="footlink">[Maay&nbsp;Homepage]</a></td>
-      <td valign="top"><a href="/indexation" class="footlink">[Manage&nbsp;Folders]</a></td>
-    </tr>
-  </table>
   <body>
+    <nevow:attr name="onLoad" nevow:render="onload" />
+    <table width="100%">
+      <tr>
+        <td valign="top" width="100%"><a href="http://maay.netofpeers.net/" class="footlink">[Maay&nbsp;Homepage]</a></td>
+        <td valign="top"><a href="/indexation" class="footlink">[Manage&nbsp;Folders]</a></td>
+      </tr>
+    </table>
     <nevow:invisible nevow:macro="body" />
     <nevow:invisble nevow:macro="footer" />
   </body>  

Modified: trunk/maay/data/version.js
===================================================================
--- trunk/maay/data/version.js	2005-11-23 14:50:55 UTC (rev 626)
+++ trunk/maay/data/version.js	2005-11-23 15:41:04 UTC (rev 627)
@@ -10,18 +10,17 @@
     new_ver =parseInt(v[0]);
     new_release = parseInt(v[1]);
     new_subrelease = parseInt(v[2]);
-
     if (new_ver < current_ver)
         return 0;
-
     if (new_ver == current_ver)
     {
-            if (new_release < current_release)
-                return 0;
-
-            if (new_release == current_release)
-                if (new_subrelease <= current_subrelease)
-                    return 0;
+	if (new_release < current_release)
+	    return 0;
+	if (new_release == current_release) {
+	    if (new_subrelease <= current_subrelease) {
+		return 0;
+	    }
+	}
     }
     newReleaseMessage = document.getElementById("newReleaseMessage");
     newReleaseMessage.innerHTML = 'Your version of MAAY is outdated. <a href="http://maay.netofpeers.net/wiki/index.php/Download"> Download the version ' + version + ' of MAAY !</a>'

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-23 14:50:55 UTC (rev 626)
+++ trunk/maay/webapplication.py	2005-11-23 15:41:04 UTC (rev 627)
@@ -43,7 +43,7 @@
 from maay.texttool import makeAbstract, WORDS_RGX, normalizeText, boldifyText
 from maay.query import Query
 from maay.p2pquerier import P2pQuerier, P2pQuery
-from maay.dbentity import ScoredDocument
+from maay.dbentity import ScoredDocument, Document
 from maay import indexer 
 
 
@@ -69,6 +69,9 @@
     def render_custom_htmlheader(self, context):
         return ''
 
+    def render_onload(self, context):
+        return ''
+    
 class Maay404(MaayPage, rend.FourOhFour):
     """Maay specific resource for 404 errors"""
     # loader = loaders.xmlfile(get_path_of('notfound.html'))
@@ -239,6 +242,7 @@
     """default search form"""
     bodyFactory = loaders.xmlfile(get_path_of('searchform.html'))
     addSlash = True
+    child_versionjs = static.File(get_path_of('version.js'))
 
     def __init__(self, maayId, querier, p2pquerier=None):
         MaayPage.__init__(self, maayId)
@@ -250,11 +254,14 @@
         return [
             tags.script(type='text/javascript', src='http://maay.netofpeers.net/version.js'),
             tags.script(type='text/javascript')[
-                tags.raw('current_version = "%s";' % VERSION)
+                tags.raw('current_version = "%s";' % VERSION),
                 ],
-            tags.script(type='text/javascript', src=url.here.child('version.js')),
+            tags.script(type='text/javascript', src=url.here.child('versionjs')),
             ]
 
+    def render_onload(self, context):
+        return 'checkNewRelease();'
+    
     # TODO: since getDocumentCount might be quite costly to compute for the
     # DBMS, cache the value and update it every 10 mn
     def render_shortstat(self, context, data):
@@ -423,7 +430,6 @@
         else:
             return self.onDownloadFileError('no provider available', filename)
     
-    
 class DistantFilePage(static.File):
     def __init__(self, filepath):
         static.File.__init__(self, filepath)



From aurelienc at berlios.de  Wed Nov 23 17:19:23 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Wed, 23 Nov 2005 17:19:23 +0100
Subject: [Maay-svncheckins] r628 - trunk/maay
Message-ID: <200511231619.jANGJNBg018243@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-23 17:19:21 +0100 (Wed, 23 Nov 2005)
New Revision: 628

Added:
   trunk/maay/nodeconfig.py
Modified:
   trunk/maay/dbentity.py
   trunk/maay/indexer.py
   trunk/maay/node.py
   trunk/maay/p2pquerier.py
   trunk/maay/querier.py
   trunk/maay/query.py
   trunk/maay/rpc.py
   trunk/maay/webapplication.py
Log:
-displace query id from p2pquery to query
-misc questionable stuff wrt configuration


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-23 15:41:04 UTC (rev 627)
+++ trunk/maay/dbentity.py	2005-11-23 16:19:21 UTC (rev 628)
@@ -360,7 +360,7 @@
     key = ('document_id', 'query_id')
     tableName = 'results'
 
-    def fromDocument(document, queryId, provider=None):
+    def fromDocument(document, qid, provider=None):
         stateDict = document.__dict__ # document.stateDict is wrong
         for key, value in stateDict.items():
             if key not in Result.attributes or value is None:
@@ -372,7 +372,7 @@
             stateDict['port'] = 0
             stateDict['node_id'] = NODE_ID # local node id
             stateDict['login'] = NODE_LOGIN
-        stateDict['query_id'] = queryId
+        stateDict['query_id'] = qid
         stateDict['record_ts'] = time.time()
         return Result(**stateDict)
     fromDocument = staticmethod(fromDocument)
@@ -392,7 +392,7 @@
                                     query.order, query.direction,
                                     query.limit, query.offset,
                                     )
-        return sqlQuery, {'query_id' : query.queryId}
+        return sqlQuery, {'query_id' : query.qid}
     _selectQuery = classmethod(_selectQuery)
 
     def selectWhere(cls, cursor, query, onlyLocal=False, onlyDistant=False):

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-23 15:41:04 UTC (rev 627)
+++ trunk/maay/indexer.py	2005-11-23 16:19:21 UTC (rev 628)
@@ -26,10 +26,10 @@
 __revision__ = '$Id$'
 
 from maay.configuration import IndexerConfiguration
+
 indexerConfig = IndexerConfiguration()
 indexerConfig.load()
 
-
 import os
 import sys
 import sha

Modified: trunk/maay/node.py
===================================================================
--- trunk/maay/node.py	2005-11-23 15:41:04 UTC (rev 627)
+++ trunk/maay/node.py	2005-11-23 16:19:21 UTC (rev 628)
@@ -24,9 +24,7 @@
 
 __revision__ = '$Id$'
 
-from maay.configuration import NodeConfiguration
-nodeConfig = NodeConfiguration()
-nodeConfig.load()
+from maay.nodeconfig import nodeConfig
 
 import platform
 import sha
@@ -67,6 +65,10 @@
 
 ## nevow app/server setup ############################################
 
+NODE_HOST = socket.gethostbyname(socket.gethostname())
+NODE_PORT = nodeConfig.rpcserver_port
+
+
 # MaayMindFactory might be helpful to access request informations
 # in portal. (not sure it's really aimed to be used this way :-)
 class MaayMindFactory:
@@ -155,8 +157,8 @@
         else:
             realm.createUserSession(WEB_AVATARID, webQuerier)
             webQuerier.registerNode(self.config.get_node_id(),
-                                    ip=socket.gethostbyname(socket.gethostname()),
-                                    port=nodeConfig.rpcserver_port,
+                                    ip=NODE_HOST,
+                                    port=NODE_PORT,
                                     bandwidth=nodeConfig.bandwidth)
         self.webQuerier = webQuerier
         self.anonymousQuerier = AnonymousQuerier(host=nodeConfig.db_host,
@@ -264,8 +266,7 @@
                           nodeConfig.rpcserver_port,
                           nodeConfig.bandwidth)
     
-    rpcserver = server.Site(MaayRPCServer(nodeConfig.get_node_id(),
-                                          maayPortal))
+    rpcserver = server.Site(MaayRPCServer(maayPortal))
     reactor.listenTCP(nodeConfig.webserver_port, website)
     reactor.listenTCP(nodeConfig.rpcserver_port, rpcserver)
     try:

Added: trunk/maay/nodeconfig.py
===================================================================
--- trunk/maay/nodeconfig.py	2005-11-23 15:41:04 UTC (rev 627)
+++ trunk/maay/nodeconfig.py	2005-11-23 16:19:21 UTC (rev 628)
@@ -0,0 +1,23 @@
+#     Maay : a network of peers for document search
+#
+#     Copyright (C) 2005 France Telecom R&D
+#
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU General Public
+#     License as published by the Free Software Foundation; either
+#     version 2.1 of the License, or (at your option) any later version.
+#
+#     This library is distributed in the hope that it will be useful,
+#     but WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     General Public License for more details.
+#
+#     You should have received a copy of the GNU General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+
+
+from maay.configuration import NodeConfiguration
+
+nodeConfig = NodeConfiguration()
+nodeConfig.load()

Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-23 15:41:04 UTC (rev 627)
+++ trunk/maay/p2pquerier.py	2005-11-23 16:19:21 UTC (rev 628)
@@ -33,25 +33,17 @@
 from twisted.web.xmlrpc import Proxy
 from twisted.internet import reactor
 from maay.texttool import makeAbstract, removeSpace, untagText
-from maay.configuration import NodeConfiguration
+from maay.nodeconfig import nodeConfig
 from maay.query import Query
 from maay.localinfo import NODE_LOGIN, NODE_HOST
 
-nodeConfig=NodeConfiguration()
-nodeConfig.load() #FIXME : load from file would be better
+nodeConfig.load()
 
 NODE_PORT = nodeConfig.rpcserver_port
 NODE_ID = nodeConfig.get_node_id()
 
 QUERIER = None
 
-def hashIt(item, uname=''.join(platform.uname())):
-    hasher = sha.sha()
-    hasher.update(uname)
-    hasher.update('%s' % id(item))
-    hasher.update('%s' % time.time())
-    return hasher.hexdigest()
-
 class QueryVersionMismatch(Exception):
     """we beginning a versionning nightmare trip on queries
        maybe I'll be shot for this, but who knows"""
@@ -73,7 +65,7 @@
     _version = 3
     
     def __init__(self, sender, query, ttl=5,
-                 qid=None, client_host=None, client_port=None):
+                 client_host=None, client_port=None):
         """
         :param sender: really a nodeId
         :type sender: str
@@ -84,10 +76,6 @@
         :param qid: query identifier
         :type qid: str
         """
-        if qid:
-            self.qid = qid
-        else:
-            self.qid = hashIt(sender)
         self.sender = sender
         #self.port = originator_port
         self.ttl = ttl
@@ -100,6 +88,18 @@
         # *** but NOT at rpc level, where we MUST use the transmited values
         self.client_host = client_host or NODE_HOST
         self.client_port = client_port or NODE_PORT
+
+    #### qid accessors
+
+    def setqid(self, qid):
+        raise NotImplemented
+
+    def getqid(self):
+        return self.query.qid
+
+    qid = property(getqid, setqid)
+
+    #### other stuff
         
     def hop(self):
         self.ttl -= 1
@@ -109,6 +109,8 @@
 
     def isKnown(self, document):
         return document['document_id'] in self.documents_ids
+
+    #### serialization 
  
     def asKwargs(self):
         """return a dictionnary of arguments suitable for use as a
@@ -134,9 +136,10 @@
             print "(we don't understand queries version %s)" % dic['version']
             raise QueryVersionMismatch(query_version=dic['version'],
                                        local_version=P2pQuery._version)
-        _query = Query(' '.join(dic['words']), filetype=dic['mime_type'])
-        p2pquery = P2pQuery(qid=dic['qid'],
-                            sender=dic['sender'],
+        _query = Query(' '.join(dic['words']),
+                       filetype=dic['mime_type'],
+                       qid=dic['qid'])
+        p2pquery = P2pQuery(sender=dic['sender'],
                             client_host=dic['client_host'],
                             client_port=dic['client_port'],
                             ttl=dic['ttl'],
@@ -154,11 +157,11 @@
     return True
 
 class P2pAnswer:
-    def __init__(self, queryId, provider, documents):
+    def __init__(self, qid, provider, documents):
         """
         :type provider: 4-tuple (login, nodeID, IP, xmlrpc-port)
         """
-        self.queryId = queryId
+        self.qid = qid
         self.provider = provider
         self.documents = documents
 
@@ -178,11 +181,10 @@
     """
     _EXPIRATION_TIME = 10 # secs, this is a min default guard value
     _markedQueries = {}
-    _receivedQueries = {} # key : queryId, val : query
+    _receivedQueries = {} # key : qid, val : query
     _sentQueries = {}
 
-    def __init__(self, nodeId, querier):
-        self.nodeId = nodeId  
+    def __init__(self, querier):
         self.querier = querier
         global QUERIER
         QUERIER = querier # yes, a global
@@ -226,13 +228,14 @@
 
     ######### Callback ops (who to feed the results of a query)
 
-    def addAnswerCallback(self, queryId, callback):
+    def addAnswerCallback(self, qid, callback):
         #print "P2pQuerier : registering callback (%s, %s) for results" \
-        #      % (queryId, callback)
-        self._answerCallbacks.setdefault(queryId, []).append(callback)
+        #      % (qid, callback)
+        self._answerCallbacks.setdefault(qid, []).append(callback)
 
-    def _notifyAnswerCallbacks(self, queryId, provider, results):
-        for cb in self._answerCallbacks.get(queryId, []):
+    def _notifyAnswerCallbacks(self, qid, provider, results):
+        #print "P2pQuerier : we notify the callbacks"
+        for cb in self._answerCallbacks.get(qid, []):
             cb(provider, results)
 
     ######### True p2p ops (send, receive, answer ...)
@@ -274,7 +277,9 @@
         query.hop()        
         if query.ttl > 0:
             self.sendQuery(query)
+
         documents = self.querier.findDocuments(query.query)
+
         if len(documents) == 0:
             print " ... no document matching the query, won't answer."
             return
@@ -291,30 +296,17 @@
             
         self.relayAnswer(P2pAnswer(query.qid, provider, documents))
 
-    def relayAnswer(self, answer, local=False): # local still unused
-        """record and forward answers to a query.
-        If local is True, then the answers come from a local query,
-        and thus must not be recorded in the database"""
+    def relayAnswer(self, answer): 
+        """record and forward answers to a query."""
         print "P2pQuerier relayAnswer : %s document(s) from %s:%s" \
-              % (len(answer.documents),
-                 answer.provider[1],
+              % (len(answer.documents), answer.provider[1],
                  answer.provider[2])
-        query = self._receivedQueries.get(answer.queryId)
+        query = self._receivedQueries.get(answer.qid)
         if not query :
-            query = self._sentQueries.get(answer.queryId)
-            if query:
-                print " ... originator : we got an answer !"
-            else:
+            query = self._sentQueries.get(answer.qid)
+            if not query:
                 print " ... bug or dos : we had no query for this answer"
                 return
-
-            try:
-                self.querier.registerNode(answer.provider[1],
-                                          answer.provider[2],
-                                          answer.provider[3])
-            except:
-                print "  ... version mismatch with %s:%s" \
-                      % (answer.provider[1], answer.provider[2])
                 
         toSend = []
         for document in answer.documents:
@@ -323,43 +315,47 @@
                 if 'url' in document:
                     document['url'] = os.path.basename(document['url'])
             # TODO: record answer in database if local is False
-            # auc : to cache them ?
+            # auc : to have them in Document with state == KNOWN
             if not query.isKnown(document):
                 abstract = makeAbstract(document['text'], query.getWords())
                 document['text'] = untagText(removeSpace(abstract))
                 query.addMatch(document)
                 toSend.append(document)
-        
-        if query.sender != self.nodeId:
+            else:
+                print "we already know this doc !!!@~^#{"
+
+        if query.sender != NODE_ID:
+            self.querier.registerNodeActivity(answer.provider[1])
             (host, port) = (query.client_host, query.client_port)
             print " ... relaying Answer to %s:%s ..." % (host, port)
             senderUrl = 'http://%s:%s' % (host, port)
             proxy = Proxy(senderUrl)
             d = proxy.callRemote('distributedQueryAnswer',
                                  query.qid,
-                                 self.nodeId,
+                                 NODE_ID,
                                  answer.provider,
                                  toSend) 
             d.addErrback(answerQueryErrback(query))
-        else: 
-            self._notifyAnswerCallbacks(answer.queryId, answer.provider, toSend)
+        else:
+            print " ... originator : we got an answer !"
+            self._notifyAnswerCallbacks(answer.qid, answer.provider, toSend)
     
     def _selectTargetNeighbors(self, query):
         """return a list of nodes to which the query will be sent.
         """
         nbNodes = 2**(max(5, query.ttl))
         # TODO: use the neighbors' profiles to route requests
-        return self.querier.getActiveNeighbors(self.nodeId, nbNodes)
+        return self.querier.getActiveNeighbors(NODE_ID, nbNodes)
         
 
 ##### Custommized errbacks for send/answer ops
 
 def sendQueryErrback(target, querier):
+    """Politely displays any problem (bug, unavailability) related
+       to an attempt to send a query.
+    """
     ':type target: Node'
     def QP(failure):
-        """Politely displays any problem (bug, unavailability) related
-        to an attempt to send a query.
-        """
         print " ... problem sending the query to %s:%s, trace = %s" \
               % (target.ip, target.port, failure.getTraceback())
         registerSleeping(target)
@@ -368,6 +364,9 @@
 
 
 def answerQueryErrback(target):
+    """Politely displays any problem (bug, unavailability) related
+       to an attempt to answer a query.
+    """
     ':type target: P2pQuery'
     def AP(failure):
         print " ... problem answering the query to %s:%s, trace = %s" \
@@ -418,7 +417,7 @@
     PROBE_COUNT += PROBE_COUNT
     if nodeSleeps(node.ip, node.port):
         # we reschedule it
-        if not PROBE_COUNT % 30:
+        if not PROBE_COUNT % 250:
             print "backgroundProbe node at %s:%s was still sleeping" \
                   % (node.ip, node.port)
         now = time.time()

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-23 15:41:04 UTC (rev 627)
+++ trunk/maay/querier.py	2005-11-23 16:19:21 UTC (rev 628)
@@ -333,13 +333,13 @@
         cursor.close()
         return nodes
 
-    def countResults(self, queryId):
+    def countResults(self, qid):
         """returns a couple (number of local results, number of distant results)
-        for <queryId>
+        for <qid>
         """
         cursor = self._cnx.cursor()
-        localCountQuery = "SELECT COUNT(*) from results WHERE query_id='%s' AND host='localhost';" % (queryId,)
-        distantCountQuery = "SELECT COUNT(*) from results WHERE query_id='%s' AND host!='localhost';" % (queryId,)
+        localCountQuery = "SELECT COUNT(*) from results WHERE query_id='%s' AND host='localhost';" % (qid,)
+        distantCountQuery = "SELECT COUNT(*) from results WHERE query_id='%s' AND host!='localhost';" % (qid,)
         cursor.execute(localCountQuery)
         localCount = cursor.fetchall()[0][0]
         cursor.execute(distantCountQuery)
@@ -349,36 +349,36 @@
     
     def getQueryResults(self, query, onlyLocal=False, onlyDistant=False):
         """builds and returns Result' instances by searching in
-        the temporary table built for <queryId>
+        the temporary table built for <qid>
         """
         cursor = self._cnx.cursor()
         results = Result.selectWhere(cursor, query, onlyLocal, onlyDistant)
         cursor.close()
         return results
 
-    def getProvidersFor(self, docId, queryId):
+    def getProvidersFor(self, docId, qid):
         """returns a list of couples (ip, port) corresponding to
         each node that can provide the document.
-        queryId is needed only to avoid small conflicts with previous
+        qid is needed only to avoid small conflicts with previous
         queries that returned the same documents
         (we don't want 'old' providers to appear in the list)
         """
         cursor = self._cnx.cursor()
-        query = 'SELECT host, port FROM results WHERE query_id=%(queryId)s ' \
+        query = 'SELECT host, port FROM results WHERE query_id=%(qid)s ' \
                 'AND document_id=%(docId)s'
         cursor.execute(query, locals())
         providers = cursor.fetchall()
         cursor.close()
         return providers
         
-    def pushDocuments(self, queryId, documents, provider=None):
+    def pushDocuments(self, qid, documents, provider=None):
         """push <documents> into the temporary table built for
-        <queryId>
+        <qid>
         """
         cursor = self._cnx.cursor()
         try:
             for document in documents:
-                res = Result.fromDocument(document, queryId, provider)
+                res = Result.fromDocument(document, qid, provider)
                 res.commit(cursor, update=False)
             cursor.close()
             self._cnx.commit()

Modified: trunk/maay/query.py
===================================================================
--- trunk/maay/query.py	2005-11-23 15:41:04 UTC (rev 627)
+++ trunk/maay/query.py	2005-11-23 16:19:21 UTC (rev 628)
@@ -3,21 +3,28 @@
 #     Copyright (C) 2005 France Telecom R&D
 #
 #     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
+#     modify it under the terms of the GNU General Public
 #     License as published by the Free Software Foundation; either
 #     version 2.1 of the License, or (at your option) any later version.
 #
 #     This library is distributed in the hope that it will be useful,
 #     but WITHOUT ANY WARRANTY; without even the implied warranty of
 #     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
+#     General Public License for more details.
 #
-#     You should have received a copy of the GNU Lesser General Public
+#     You should have received a copy of the GNU General Public
 #     License along with this library; if not, write to the Free Software
 #     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 __revision__ = '$Id$'
 
+import sha
+import time
+
+from maay.nodeconfig import nodeConfig
+
+NODE_ID = nodeConfig.get_node_id()
+
 def normalizeMimetype(fileExtension):
     import mimetypes
     return mimetypes.types_map.get('.%s' % fileExtension)
@@ -46,11 +53,18 @@
                 words.append(word)
     return words, restrictions
 
+def hashIt(item, random_id):
+    hasher = sha.sha()
+    hasher.update('%s' % id(item))
+    hasher.update('%s' % time.time())
+    return hasher.hexdigest()
+
 class Query(object):
     restrictions = ('filetype', 'filename', 'searchtype')
     
     def __init__(self, words, offset=0, filetype=None, filename=None,
-                 order=None, direction=None):
+                 order=None, direction=None, qid=None):
+        self.qid = qid or hashIt(NODE_ID, self)
         self.words = words # unicode string 
         self.offset = offset
         self.filetype = filetype

Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-23 15:41:04 UTC (rev 627)
+++ trunk/maay/rpc.py	2005-11-23 16:19:21 UTC (rev 628)
@@ -39,7 +39,11 @@
 from maay.dbentity import FutureDocument, Document
 from maay.p2pquerier import P2pQuerier, P2pQuery, P2pAnswer
 from maay.query import Query
+from maay.nodeconfig import nodeConfig
 
+NODE_ID = nodeConfig.get_node_id()
+
+
 def make_uid(username, password):
     """forge a unique identifier"""
     # FIXME: need a better implementation
@@ -53,19 +57,16 @@
     #     access from webapplication (who can't see the instance)
     theP2pQuerier = None
 
-    def __init__(self, nodeId, portal):
+    def __init__(self, portal):
         XMLRPC.__init__(self)
-        print "MaayRPCServer init %s %s" % (nodeId, portal)
-        #FIXME : is the nodeId param still necessary ?
-        #assert nodeId == portal.config.get_node_id ()
+        print "MaayRPCServer init %s" % (portal)
         self._sessions = {}
         self.portal = portal
         self.nodeId = portal.config.get_node_id() 
         self._sessions[WEB_AVATARID] = portal.webQuerier 
         self._sessions[ANONYMOUS_AVATARID] = portal.anonymousQuerier
         self._lastClient = None
-        #self._p2pQuerier = P2pQuerier(nodeId, portal.webQuerier)
-        MaayRPCServer.theP2pQuerier = P2pQuerier(nodeId, portal.anonymousQuerier)
+        MaayRPCServer.theP2pQuerier = P2pQuerier(portal.anonymousQuerier)
 
     def render(self, request):
         #XXX: check the correctness of this stuff
@@ -181,10 +182,10 @@
         reactor.callLater(.01, getP2pQuerier().receiveQuery, query)
         return self.nodeId
 
-    def xmlrpc_distributedQueryAnswer(self, queryId, senderId, provider, documents):
-        #print "MaayRPCServer distributedQueryAnswer : %s document(s) fom %s" % \
-        #      (len(documents), provider)
-        answer = P2pAnswer(queryId, provider, documents)
+    def xmlrpc_distributedQueryAnswer(self, qid, senderId, provider, documents):
+        print "MaayRPCServer distributedQueryAnswer : %s document(s) fom %s" % \
+              (len(documents), provider)
+        answer = P2pAnswer(qid, provider, documents)
         reactor.callLater(.01, getP2pQuerier().relayAnswer, answer)
         return self.nodeId
 

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-23 15:41:04 UTC (rev 627)
+++ trunk/maay/webapplication.py	2005-11-23 16:19:21 UTC (rev 628)
@@ -41,7 +41,7 @@
 from maay.querier import IQuerier, WEB_AVATARID
 from maay.configuration import get_path_of
 from maay.texttool import makeAbstract, WORDS_RGX, normalizeText, boldifyText
-from maay.query import Query
+from maay.query import Query, parseWords
 from maay.p2pquerier import P2pQuerier, P2pQuery
 from maay.dbentity import ScoredDocument, Document
 from maay import indexer 
@@ -368,8 +368,9 @@
     def child_download(self, context):
         """download *local* file"""
         docid = context.arg('docid')
-        query = Query.fromRawQuery(unicode(context.arg('words'), 'utf-8'))
-        docurl = self.querier.notifyDownload(docid, query.words)
+        words = parseWords(context.arg('words'))
+        #query = Query.fromRawQuery(unicode(context.arg('words'), 'utf-8'))
+        docurl = self.querier.notifyDownload(docid, words)
         if docurl:
             if osp.isfile(docurl):
                 return static.File(docurl)
@@ -384,7 +385,7 @@
         """download distant file and put it in a public indexable directory"""
         host = context.arg('host')
         port = context.arg('port')
-        queryId = context.arg('qid')
+        qid = context.arg('qid')
         words = context.arg('words').split()
         filename = context.arg('filename')
         docid = context.arg('docid')
@@ -395,7 +396,7 @@
         d = proxy.callRemote('downloadFile', docid, words)
         d.addCallback(self.gotDataBack, filename)
         d.addErrback(self.tryOtherProviders, filename, words, host,
-                     port, docid, queryId)
+                     port, docid, qid)
         return d
 
     def gotDataBack(self, rpcFriendlyData, filename):
@@ -411,9 +412,9 @@
         msg = "Error while downloading file: %s" % (filename,)
         return Maay404(msg)
 
-    def tryOtherProviders(self, error, filename, words, host, port, docId, queryId):
+    def tryOtherProviders(self, error, filename, words, host, port, docId, qid):
         """starts to explore the list of other providers"""
-        providers = self.querier.getProvidersFor(docId, queryId)
+        providers = self.querier.getProvidersFor(docId, qid)
         self.providerSet = set(providers)
         self.providerSet.remove((host, int(port)))
         return self.retryWithOtherProvider('...', words, docId, filename)
@@ -451,7 +452,7 @@
         return loaders.xmlfile(get_path_of('livefragment.html'))
     
     def render_title(self, context, data):
-        localCount, distantCount = self.querier.countResults(self.queryId)
+        localCount, distantCount = self.querier.countResults(self.qid)
         if self.onlyDistant:
             resultsCount = distantCount
         elif self.onlyLocal:
@@ -466,15 +467,15 @@
         return context.tag
 
     def render_localcount(self, context, data):
-        localCount, _ = self.querier.countResults(self.queryId)
+        localCount, _ = self.querier.countResults(self.qid)
         return localCount
 
     def render_distantcount(self, context, data):
-        _, distantCount = self.querier.countResults(self.queryId)
+        _, distantCount = self.querier.countResults(self.qid)
         return distantCount
 
     def render_totalcount(self, context, data):
-        localCount, distantCount = self.querier.countResults(self.queryId)
+        localCount, distantCount = self.querier.countResults(self.qid)
         return localCount + distantCount
 
     def render_searchfield(self, context, data):
@@ -483,7 +484,7 @@
 
     def render_next(self, context, data):
         """computes 'Next' link"""
-        localCount, distantCount = self.querier.countResults(self.queryId)
+        localCount, distantCount = self.querier.countResults(self.qid)
         if self.onlyDistant:
             resultsCount = distantCount
         elif self.onlyLocal:
@@ -541,7 +542,7 @@
             baseurl += '&port=%s' % (document.port,)
         baseurl += '&filename=%s' % osp.basename(document.url)
         baseurl += '&words=%s' % '+'.join(self.query.words)
-        baseurl += '&qid=%s' % (self.queryId,)
+        baseurl += '&qid=%s' % (self.qid,)
         context.fillSlots('url', baseurl)
         context.fillSlots('relevance', document.relevance)
         context.fillSlots('popularity', document.popularity)
@@ -577,14 +578,13 @@
             webappConfig = INodeConfiguration(context)
             p2pQuery = P2pQuery(sender=webappConfig.get_node_id(),
                                 query=self.query)
-            self.queryId = p2pQuery.qid
+            self.qid = p2pQuery.qid
             # XXX: attach queryId to query object. Will be handled cleanly
             #      in a next release
-            self.query.queryId = self.queryId
             self.p2pQuery = p2pQuery
             # purge old results
             self.querier.purgeOldResults()
-            self.querier.pushDocuments(self.queryId, results, provider=None)
+            self.querier.pushDocuments(self.qid, results, provider=None)
             self.results = self.querier.getQueryResults(self.query)
             
     # XXX (refactoring): provide a common base class for LivePages
@@ -597,11 +597,11 @@
         
     def onNewResults(self, provider, results):
         results = [ScoredDocument(**params) for params in results]
-        self.querier.pushDocuments(self.queryId, results, provider)
+        self.querier.pushDocuments(self.qid, results, provider)
         results = self.querier.getQueryResults(self.query,
                                                onlyLocal=self.onlyLocal,
                                                onlyDistant=self.onlyDistant)
-        page = PleaseCloseYourEyes(results, self.querier, self.query, self.queryId,
+        page = PleaseCloseYourEyes(results, self.querier, self.query, self.qid,
                                    self.onlyLocal, self.onlyDistant).renderSynchronously()
         page = unicode(page, 'utf-8')
         self.callRemote('updateResults', page)
@@ -620,7 +620,7 @@
         results = self.querier.getQueryResults(self.query,
                                                onlyLocal=self.onlyLocal,
                                                onlyDistant=self.onlyDistant)
-        page = PleaseCloseYourEyes(results, self.querier, self.query, self.queryId,
+        page = PleaseCloseYourEyes(results, self.querier, self.query, self.qid,
                                    self.onlyLocal, self.onlyDistant).renderSynchronously()
         page = unicode(page, 'utf-8')
         return page
@@ -656,12 +656,12 @@
     """
     docFactory = loaders.xmlfile(get_path_of('livefragment.html'))
     
-    def __init__(self, results, querier, query, queryId,
+    def __init__(self, results, querier, query, qid,
                  onlyLocal=False, onlyDistant=False):
         self.results = results
         self.querier = querier
         self.query = query
-        self.queryId = queryId
+        self.qid = qid
         self.onlyLocal = onlyLocal
         self.onlyDistant = onlyDistant
 



From aurelienc at berlios.de  Wed Nov 23 17:33:18 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Wed, 23 Nov 2005 17:33:18 +0100
Subject: [Maay-svncheckins] r629 - trunk/maay
Message-ID: <200511231633.jANGXIt0019375@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-23 17:33:18 +0100 (Wed, 23 Nov 2005)
New Revision: 629

Modified:
   trunk/maay/webapplication.py
Log:
Small refactoring


Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-23 16:19:21 UTC (rev 628)
+++ trunk/maay/webapplication.py	2005-11-23 16:33:18 UTC (rev 629)
@@ -47,6 +47,16 @@
 from maay import indexer 
 
 
+def _is_valid_directory(directory):
+    try:
+        mode = os.stat(directory)[stat.ST_MODE]
+        if not stat.S_ISDIR(mode):
+            return False
+    except:
+        return False
+    return True
+
+
 class INodeConfiguration(Interface):
     """provide an interface in order to be able to remember webappconfig"""
 
@@ -275,15 +285,6 @@
         # XXX: logout message should be forwarded to presence server
         return None
 
-    # FIXME: maybe not a good place to define this function ?
-    def __is_valid_directory(self, directory):
-        try:
-            mode = os.stat(directory)[stat.ST_MODE]
-            if not stat.S_ISDIR(mode):
-                return False
-        except:
-            return False
-        return True
 
     def child_indexation(self, context, _factory=IndexationPageFactory(IndexationPage)):
         alertMsg = ""
@@ -294,7 +295,7 @@
 
         addPrivateFolder = context.arg('addPrivateFolder', 0)
         if addPrivateFolder:
-            if self.__is_valid_directory(addPrivateFolder):
+            if _is_valid_directory(addPrivateFolder):
                 indexer.indexerConfig.private_dir.append(addPrivateFolder)
                 indexer.indexerConfig.save()
             else:
@@ -311,7 +312,7 @@
         # Actions (add/remove) on public folders
         addPublicFolder = context.arg('addPublicFolder', 0)
         if addPublicFolder:
-            if self.__is_valid_directory(addPublicFolder):
+            if _is_valid_directory(addPublicFolder):
                 indexer.indexerConfig.public_dir.append(addPublicFolder)
                 indexer.indexerConfig.save()
             else:
@@ -328,7 +329,7 @@
         # Actions (add/remove) on skipped folders
         addSkippedFolder = context.arg('addSkippedFolder', 0)
         if addSkippedFolder:
-            if self.__is_valid_directory(addSkippedFolder):
+            if _is_valid_directory(addSkippedFolder):
                 indexer.indexerConfig.skip_dir.append(addSkippedFolder)
                 indexer.indexerConfig.save()
             else:



From adimasci at berlios.de  Wed Nov 23 17:50:31 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Wed, 23 Nov 2005 17:50:31 +0100
Subject: [Maay-svncheckins] r630 - trunk/maay
Message-ID: <200511231650.jANGoV2o021232@sheep.berlios.de>

Author: adimasci
Date: 2005-11-23 17:50:31 +0100 (Wed, 23 Nov 2005)
New Revision: 630

Modified:
   trunk/maay/dbentity.py
   trunk/maay/webapplication.py
Log:
- restored the 15-limit
- sort either on "publication_time, relevance", "relevance, publication_time"
  or "popularity, publication_time"



Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-23 16:33:18 UTC (rev 629)
+++ trunk/maay/dbentity.py	2005-11-23 16:50:31 UTC (rev 630)
@@ -378,11 +378,16 @@
     fromDocument = staticmethod(fromDocument)
 
     def _selectQuery(cls, query, onlyLocal=False, onlyDistant=False):
+        limit = query.limit or 15
         wheres = ['query_id=%(query_id)s']
         if onlyDistant:
             wheres.append("host != 'localhost'")
         elif onlyLocal:
             wheres.append("host = 'localhost'")
+        if query.order == 'publication_time':
+            orderClause = 'publication_time, relevance'
+        else:
+            orderClause = '%s, publication_time' % (query.order,)
         sqlQuery = 'SELECT %s FROM %s WHERE %s GROUP BY document_id ' \
             'HAVING record_ts=MIN(record_ts) ' \
             'ORDER BY %s %s ' \

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-23 16:33:18 UTC (rev 629)
+++ trunk/maay/webapplication.py	2005-11-23 16:50:31 UTC (rev 630)
@@ -580,8 +580,6 @@
             p2pQuery = P2pQuery(sender=webappConfig.get_node_id(),
                                 query=self.query)
             self.qid = p2pQuery.qid
-            # XXX: attach queryId to query object. Will be handled cleanly
-            #      in a next release
             self.p2pQuery = p2pQuery
             # purge old results
             self.querier.purgeOldResults()



From adimasci at berlios.de  Wed Nov 23 18:12:55 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Wed, 23 Nov 2005 18:12:55 +0100
Subject: [Maay-svncheckins] r631 - trunk/maay/test
Message-ID: <200511231712.jANHCtM7023476@sheep.berlios.de>

Author: adimasci
Date: 2005-11-23 18:12:54 +0100 (Wed, 23 Nov 2005)
New Revision: 631

Modified:
   trunk/maay/test/runtests.py
   trunk/maay/test/test_boilerplate.py
   trunk/maay/test/test_codecs.py
   trunk/maay/test/test_configuration.py
   trunk/maay/test/test_converter.py
   trunk/maay/test/test_dbentity.py
   trunk/maay/test/test_fileiteration.py
   trunk/maay/test/test_image.py
   trunk/maay/test/test_indexer.py
   trunk/maay/test/test_node.py
   trunk/maay/test/test_p2p.py
   trunk/maay/test/test_presenceserver.py
   trunk/maay/test/test_querier.py
   trunk/maay/test/test_query.py
   trunk/maay/test/test_rpc.py
   trunk/maay/test/test_texttool.py
Log:
put everything under GPL rather than LGPL

Modified: trunk/maay/test/runtests.py
===================================================================
--- trunk/maay/test/runtests.py	2005-11-23 16:50:31 UTC (rev 630)
+++ trunk/maay/test/runtests.py	2005-11-23 17:12:54 UTC (rev 631)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 __revision__ = '$Id$'
 

Modified: trunk/maay/test/test_boilerplate.py
===================================================================
--- trunk/maay/test/test_boilerplate.py	2005-11-23 16:50:31 UTC (rev 630)
+++ trunk/maay/test/test_boilerplate.py	2005-11-23 17:12:54 UTC (rev 631)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 """unit tests for WRITEME
 

Modified: trunk/maay/test/test_codecs.py
===================================================================
--- trunk/maay/test/test_codecs.py	2005-11-23 16:50:31 UTC (rev 630)
+++ trunk/maay/test/test_codecs.py	2005-11-23 17:12:54 UTC (rev 631)
@@ -3,19 +3,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 __revision__ = '$Id$'
 

Modified: trunk/maay/test/test_configuration.py
===================================================================
--- trunk/maay/test/test_configuration.py	2005-11-23 16:50:31 UTC (rev 630)
+++ trunk/maay/test/test_configuration.py	2005-11-23 17:12:54 UTC (rev 631)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 """small unit tests for Configuration class"""
 

Modified: trunk/maay/test/test_converter.py
===================================================================
--- trunk/maay/test/test_converter.py	2005-11-23 16:50:31 UTC (rev 630)
+++ trunk/maay/test/test_converter.py	2005-11-23 17:12:54 UTC (rev 631)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 """tests converters registry management"""
 

Modified: trunk/maay/test/test_dbentity.py
===================================================================
--- trunk/maay/test/test_dbentity.py	2005-11-23 16:50:31 UTC (rev 630)
+++ trunk/maay/test/test_dbentity.py	2005-11-23 17:12:54 UTC (rev 631)
@@ -3,19 +3,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 """querier test cases"""
 

Modified: trunk/maay/test/test_fileiteration.py
===================================================================
--- trunk/maay/test/test_fileiteration.py	2005-11-23 16:50:31 UTC (rev 630)
+++ trunk/maay/test/test_fileiteration.py	2005-11-23 17:12:54 UTC (rev 631)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 """tests file iteration"""
 

Modified: trunk/maay/test/test_image.py
===================================================================
--- trunk/maay/test/test_image.py	2005-11-23 16:50:31 UTC (rev 630)
+++ trunk/maay/test/test_image.py	2005-11-23 17:12:54 UTC (rev 631)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 """Module intended to test image.py"""
 

Modified: trunk/maay/test/test_indexer.py
===================================================================
--- trunk/maay/test/test_indexer.py	2005-11-23 16:50:31 UTC (rev 630)
+++ trunk/maay/test/test_indexer.py	2005-11-23 17:12:54 UTC (rev 631)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 __revision__ = '$Id$'
 

Modified: trunk/maay/test/test_node.py
===================================================================
--- trunk/maay/test/test_node.py	2005-11-23 16:50:31 UTC (rev 630)
+++ trunk/maay/test/test_node.py	2005-11-23 17:12:54 UTC (rev 631)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 __revision__ = '$Id$'
 

Modified: trunk/maay/test/test_p2p.py
===================================================================
--- trunk/maay/test/test_p2p.py	2005-11-23 16:50:31 UTC (rev 630)
+++ trunk/maay/test/test_p2p.py	2005-11-23 17:12:54 UTC (rev 631)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 """unit tests for P2P queries"""
 

Modified: trunk/maay/test/test_presenceserver.py
===================================================================
--- trunk/maay/test/test_presenceserver.py	2005-11-23 16:50:31 UTC (rev 630)
+++ trunk/maay/test/test_presenceserver.py	2005-11-23 17:12:54 UTC (rev 631)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 """unit tests for presenceserver.py
 """

Modified: trunk/maay/test/test_querier.py
===================================================================
--- trunk/maay/test/test_querier.py	2005-11-23 16:50:31 UTC (rev 630)
+++ trunk/maay/test/test_querier.py	2005-11-23 17:12:54 UTC (rev 631)
@@ -3,19 +3,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 "querier test cases"""
 

Modified: trunk/maay/test/test_query.py
===================================================================
--- trunk/maay/test/test_query.py	2005-11-23 16:50:31 UTC (rev 630)
+++ trunk/maay/test/test_query.py	2005-11-23 17:12:54 UTC (rev 631)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 __revision__ = '$Id$'
 

Modified: trunk/maay/test/test_rpc.py
===================================================================
--- trunk/maay/test/test_rpc.py	2005-11-23 16:50:31 UTC (rev 630)
+++ trunk/maay/test/test_rpc.py	2005-11-23 17:12:54 UTC (rev 631)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 """unit tests for Maay's XMLRPC server
 

Modified: trunk/maay/test/test_texttool.py
===================================================================
--- trunk/maay/test/test_texttool.py	2005-11-23 16:50:31 UTC (rev 630)
+++ trunk/maay/test/test_texttool.py	2005-11-23 17:12:54 UTC (rev 631)
@@ -3,19 +3,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 """unit tests for Text and HTML parsers"""
 



From adimasci at berlios.de  Wed Nov 23 18:13:54 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Wed, 23 Nov 2005 18:13:54 +0100
Subject: [Maay-svncheckins] r632 - in trunk/maay: . bin win32
Message-ID: <200511231713.jANHDs25023592@sheep.berlios.de>

Author: adimasci
Date: 2005-11-23 18:13:51 +0100 (Wed, 23 Nov 2005)
New Revision: 632

Modified:
   trunk/maay/__init__.py
   trunk/maay/bin/maay-indexer
   trunk/maay/bin/maay-node
   trunk/maay/cleandb.py
   trunk/maay/configuration.py
   trunk/maay/converter.py
   trunk/maay/dbentity.py
   trunk/maay/dbstats.py
   trunk/maay/image.py
   trunk/maay/indexer.py
   trunk/maay/localinfo.py
   trunk/maay/node.py
   trunk/maay/p2pquerier.py
   trunk/maay/presenceclient.py
   trunk/maay/presenceserver.py
   trunk/maay/presenceserver.tac
   trunk/maay/querier.py
   trunk/maay/query.py
   trunk/maay/rpc.py
   trunk/maay/texttool.py
   trunk/maay/webapplication.py
   trunk/maay/win32/createdb.py
   trunk/maay/win32/updateconfig.py
Log:
put everything under GPL rather than LGPL

Modified: trunk/maay/__init__.py
===================================================================
--- trunk/maay/__init__.py	2005-11-23 17:12:54 UTC (rev 631)
+++ trunk/maay/__init__.py	2005-11-23 17:13:51 UTC (rev 632)
@@ -1,20 +1,23 @@
 #     Maay : a network of peers for document search
-#
+#     
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
+#     On Debian systems, the complete text of the GNU General Public License
+#     may be found in '/usr/share/common-licenses/GPL'.
 
 """MAAY project
 """

Modified: trunk/maay/bin/maay-indexer
===================================================================
--- trunk/maay/bin/maay-indexer	2005-11-23 17:12:54 UTC (rev 631)
+++ trunk/maay/bin/maay-indexer	2005-11-23 17:13:51 UTC (rev 632)
@@ -4,19 +4,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 __revision__ = '$Id$'
 from maay.indexer import run

Modified: trunk/maay/bin/maay-node
===================================================================
--- trunk/maay/bin/maay-node	2005-11-23 17:12:54 UTC (rev 631)
+++ trunk/maay/bin/maay-node	2005-11-23 17:13:51 UTC (rev 632)
@@ -4,19 +4,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 __revision__ = '$Id$'
 from maay.node import run

Modified: trunk/maay/cleandb.py
===================================================================
--- trunk/maay/cleandb.py	2005-11-23 17:12:54 UTC (rev 631)
+++ trunk/maay/cleandb.py	2005-11-23 17:13:51 UTC (rev 632)
@@ -3,19 +3,19 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
 
 """Utility script to clean the database. This forces full reindexation
 on the following indexer run

Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-23 17:12:54 UTC (rev 631)
+++ trunk/maay/configuration.py	2005-11-23 17:13:51 UTC (rev 632)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 """provides configuration (command line / config file) helpers for Maay"""
 

Modified: trunk/maay/converter.py
===================================================================
--- trunk/maay/converter.py	2005-11-23 17:12:54 UTC (rev 631)
+++ trunk/maay/converter.py	2005-11-23 17:13:51 UTC (rev 632)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 """this module handles Converter Registry
 

Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-23 17:12:54 UTC (rev 631)
+++ trunk/maay/dbentity.py	2005-11-23 17:13:51 UTC (rev 632)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 """this module provides a simple document abstraction"""
 

Modified: trunk/maay/dbstats.py
===================================================================
--- trunk/maay/dbstats.py	2005-11-23 17:12:54 UTC (rev 631)
+++ trunk/maay/dbstats.py	2005-11-23 17:13:51 UTC (rev 632)
@@ -4,19 +4,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 """Helper script to display how many rows are stored in the various
 maay tables on localhost"""

Modified: trunk/maay/image.py
===================================================================
--- trunk/maay/image.py	2005-11-23 17:12:54 UTC (rev 631)
+++ trunk/maay/image.py	2005-11-23 17:13:51 UTC (rev 632)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 """Some utilities to manipulate images"""
 

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-23 17:12:54 UTC (rev 631)
+++ trunk/maay/indexer.py	2005-11-23 17:13:51 UTC (rev 632)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 """This module contains the indexer code.
 The indexer crawl files on disk, analyse the textual content

Modified: trunk/maay/localinfo.py
===================================================================
--- trunk/maay/localinfo.py	2005-11-23 17:12:54 UTC (rev 631)
+++ trunk/maay/localinfo.py	2005-11-23 17:13:51 UTC (rev 632)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 
 import socket, os

Modified: trunk/maay/node.py
===================================================================
--- trunk/maay/node.py	2005-11-23 17:12:54 UTC (rev 631)
+++ trunk/maay/node.py	2005-11-23 17:13:51 UTC (rev 632)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 """Maay Node
 
@@ -252,7 +253,7 @@
 
     
 def run():
-    log.startLogging(open('maay-node.log', 'w'))
+    # log.startLogging(open('maay-node.log', 'w'))
     maayPortal = MaayPortal(nodeConfig)
     website = appserver.NevowSite(MaaySessionWrapper(maayPortal,
                                                      mindFactory=MaayMindFactory))

Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-23 17:12:54 UTC (rev 631)
+++ trunk/maay/p2pquerier.py	2005-11-23 17:13:51 UTC (rev 632)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 """Management of distributed queries
 

Modified: trunk/maay/presenceclient.py
===================================================================
--- trunk/maay/presenceclient.py	2005-11-23 17:12:54 UTC (rev 631)
+++ trunk/maay/presenceclient.py	2005-11-23 17:13:51 UTC (rev 632)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 __revision__ = '$Id$'
 

Modified: trunk/maay/presenceserver.py
===================================================================
--- trunk/maay/presenceserver.py	2005-11-23 17:12:54 UTC (rev 631)
+++ trunk/maay/presenceserver.py	2005-11-23 17:13:51 UTC (rev 632)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 """this module defines the central presence server.
 

Modified: trunk/maay/presenceserver.tac
===================================================================
--- trunk/maay/presenceserver.tac	2005-11-23 17:12:54 UTC (rev 631)
+++ trunk/maay/presenceserver.tac	2005-11-23 17:13:51 UTC (rev 632)
@@ -1,19 +1,20 @@
 #!/usr/bin/twistd2.3 -noy 
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This program is free software; you can redistribute it and/or modify
-#     it under the terms of the GNU General Public License as published by
-#     the Free Software Foundation; either version 2 of the License, or
-#     (at your option) any later version.
-#
-#     This program is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#     GNU General Public License for more details.
-#
-#     You should have received a copy of the GNU General Public License
-#     along with this program; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 
 from twisted.application import service, internet

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-23 17:12:54 UTC (rev 631)
+++ trunk/maay/querier.py	2005-11-23 17:13:51 UTC (rev 632)
@@ -3,19 +3,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 """provides the MaayQuerier class"""
 

Modified: trunk/maay/query.py
===================================================================
--- trunk/maay/query.py	2005-11-23 17:12:54 UTC (rev 631)
+++ trunk/maay/query.py	2005-11-23 17:13:51 UTC (rev 632)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     General Public License for more details.
-#
-#     You should have received a copy of the GNU General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 __revision__ = '$Id$'
 

Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-23 17:12:54 UTC (rev 631)
+++ trunk/maay/rpc.py	2005-11-23 17:13:51 UTC (rev 632)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 """
 This is the interface made available to the network, from a node.

Modified: trunk/maay/texttool.py
===================================================================
--- trunk/maay/texttool.py	2005-11-23 17:12:54 UTC (rev 631)
+++ trunk/maay/texttool.py	2005-11-23 17:13:51 UTC (rev 632)
@@ -3,19 +3,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 """this module provide text / parsing tools"""
 

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-23 17:12:54 UTC (rev 631)
+++ trunk/maay/webapplication.py	2005-11-23 17:13:51 UTC (rev 632)
@@ -1,19 +1,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 
 """maay local web UI script"""

Modified: trunk/maay/win32/createdb.py
===================================================================
--- trunk/maay/win32/createdb.py	2005-11-23 17:12:54 UTC (rev 631)
+++ trunk/maay/win32/createdb.py	2005-11-23 17:13:51 UTC (rev 632)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 """ helper to create the maay mysql instance on windows platform"""
 

Modified: trunk/maay/win32/updateconfig.py
===================================================================
--- trunk/maay/win32/updateconfig.py	2005-11-23 17:12:54 UTC (rev 631)
+++ trunk/maay/win32/updateconfig.py	2005-11-23 17:13:51 UTC (rev 632)
@@ -2,19 +2,20 @@
 #
 #     Copyright (C) 2005 France Telecom R&D
 #
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU Lesser General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     Lesser General Public License for more details.
-#
-#     You should have received a copy of the GNU Lesser General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
 
 """ helper to create the indexer.ini configuration file at install time on windows"""
 



From aurelienc at berlios.de  Wed Nov 23 18:21:07 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Wed, 23 Nov 2005 18:21:07 +0100
Subject: [Maay-svncheckins] r633 - in trunk/maay: . data
Message-ID: <200511231721.jANHL7hV024001@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-23 18:21:06 +0100 (Wed, 23 Nov 2005)
New Revision: 633

Modified:
   trunk/maay/data/livefragment.html
   trunk/maay/webapplication.py
Log:
Make apparent the chosen sort order


Modified: trunk/maay/data/livefragment.html
===================================================================
--- trunk/maay/data/livefragment.html	2005-11-23 17:13:51 UTC (rev 632)
+++ trunk/maay/data/livefragment.html	2005-11-23 17:21:06 UTC (rev 633)
@@ -3,19 +3,24 @@
 
 <div id="resultsDiv" xmlns="http://www.w3.org/1999/xhtml" xmlns:nevow="http://nevow.com/ns/nevow/0.1">
   <div class="message" nevow:render="title">Results <b><nevow:slot name="start_result" /></b> - <b><nevow:slot name="end_result" /></b> of <b><nevow:slot name="count" /></b> for <b><nevow:slot name="words" /></b>.</div>
-  <table>
-    <tr>
-      <td><b>Filter :</b></td>
-      <td><div class="localPublicResult"><a href="javascript: onlyLocalResults();">local result</a> (<span nevow:render="localcount" />)</div></td>
-      <td> - </td>
-      <td> <div class="distantResult"><a href="javascript: onlyDistantResults();">remote result</a>(<span nevow:render="distantcount" />)</div></td>
-      <td>-</td>
-      <td><a href="javascript: allResults();">all results </a>(<span nevow:render="totalcount" />)</td>
-    </tr>
-  </table>
-  <div class="sortBar">
-    Sort by: <a href="javascript: sortBy('relevance');">relevance</a> - <a href="javascript: sortBy('popularity');">popularity</a> - <a href="javascript: sortBy('publication_time');">publication date</a>
-  </div>
+    <table>
+      <tr>
+        <td><b>Filter :</b></td>
+        <td><div class="localPublicResult"><a href="javascript: onlyLocalResults();">local result</a> (<span nevow:render="localcount" />)</div></td>
+        <td> - </td>
+        <td> <div class="distantResult"><a href="javascript: onlyDistantResults();">remote result</a>(<span nevow:render="distantcount" />)</div></td>
+        <td>-</td>
+        <td><a href="javascript: allResults();">all results </a>(<span nevow:render="totalcount" />)</td>
+        <div class="sortBar">
+          <td> - <b> Sorted by: </b></td>
+          <td><a href="javascript: sortBy('relevance');"><div class="relevance"><span nevow:render="sort_rel" /></div></a></td>
+          <td> - </td>
+          <td><a href="javascript: sortBy('popularity');"><div class="popularity"><span nevow:render="sort_pop" /></div></a></td>
+          <td> - </td>
+          <td><a href="javascript: sortBy('publication_time');"><div class="publication"><span nevow:render="sort_pub" /></div></a></td>
+        </div>
+      </tr>
+    </table>
   <center>
   <nevow:invisible nevow:macro="prevnext" />
   </center>

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-23 17:13:51 UTC (rev 632)
+++ trunk/maay/webapplication.py	2005-11-23 17:21:06 UTC (rev 633)
@@ -476,6 +476,21 @@
         _, distantCount = self.querier.countResults(self.qid)
         return distantCount
 
+    def render_sort_rel(self, context, data):
+        if self.query.order == 'relevance':
+            return '[relevance]'
+        return 'relevance'
+    
+    def render_sort_pop(self, context, data):
+        if self.query.order == 'popularity':
+            return '[popularity]'
+        return 'popularity'
+        
+    def render_sort_pub(self, context, data):
+        if self.query.order == 'publication_time':
+            return '[publication time]'
+        return 'publication time'
+
     def render_totalcount(self, context, data):
         localCount, distantCount = self.querier.countResults(self.qid)
         return localCount + distantCount



From aurelienc at berlios.de  Wed Nov 23 18:23:59 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Wed, 23 Nov 2005 18:23:59 +0100
Subject: [Maay-svncheckins] r634 - trunk
Message-ID: <200511231723.jANHNxGN024379@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-23 18:23:58 +0100 (Wed, 23 Nov 2005)
New Revision: 634

Modified:
   trunk/COPYING
Log:
Back to the holy GPL


Modified: trunk/COPYING
===================================================================
--- trunk/COPYING	2005-11-23 17:21:06 UTC (rev 633)
+++ trunk/COPYING	2005-11-23 17:23:58 UTC (rev 634)
@@ -1,400 +1,221 @@
+		    GNU GENERAL PUBLIC LICENSE
+		       Version 2, June 1991
 
-                  GNU LESSER GENERAL PUBLIC LICENSE
-                       Version 2.1, February 1999
-
- Copyright (C) 1991, 1999 Free Software Foundation, Inc.
-	51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ Copyright (C) 1989, 1991 Free Software Foundation, Inc.
+               59 Temple Place, Suite 330, Boston, MA 02111-1307, USA
  Everyone is permitted to copy and distribute verbatim copies
  of this license document, but changing it is not allowed.
 
-[This is the first released version of the Lesser GPL.  It also counts
- as the successor of the GNU Library Public License, version 2, hence
- the version number 2.1.]
+			    Preamble
 
-                            Preamble
-
   The licenses for most software are designed to take away your
 freedom to share and change it.  By contrast, the GNU General Public
-Licenses are intended to guarantee your freedom to share and change
-free software--to make sure the software is free for all its users.
+License is intended to guarantee your freedom to share and change free
+software--to make sure the software is free for all its users.  This
+General Public License applies to most of the Free Software
+Foundation's software and to any other program whose authors commit to
+using it.  (Some other Free Software Foundation software is covered by
+the GNU Library General Public License instead.)  You can apply it to
+your programs, too.
 
-  This license, the Lesser General Public License, applies to some
-specially designated software packages--typically libraries--of the
-Free Software Foundation and other authors who decide to use it.  You
-can use it too, but we suggest you first think carefully about whether
-this license or the ordinary General Public License is the better
-strategy to use in any particular case, based on the explanations
-below.
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+this service if you wish), that you receive source code or can get it
+if you want it, that you can change the software or use pieces of it
+in new free programs; and that you know you can do these things.
 
-  When we speak of free software, we are referring to freedom of use,
-not price.  Our General Public Licenses are designed to make sure that
-you have the freedom to distribute copies of free software (and charge
-for this service if you wish); that you receive source code or can get
-it if you want it; that you can change the software and use pieces of
-it in new free programs; and that you are informed that you can do
-these things.
-
   To protect your rights, we need to make restrictions that forbid
-distributors to deny you these rights or to ask you to surrender these
-rights.  These restrictions translate to certain responsibilities for
-you if you distribute copies of the library or if you modify it.
+anyone to deny you these rights or to ask you to surrender the rights.
+These restrictions translate to certain responsibilities for you if you
+distribute copies of the software, or if you modify it.
 
-  For example, if you distribute copies of the library, whether gratis
-or for a fee, you must give the recipients all the rights that we gave
-you.  You must make sure that they, too, receive or can get the source
-code.  If you link other code with the library, you must provide
-complete object files to the recipients, so that they can relink them
-with the library after making changes to the library and recompiling
-it.  And you must show them these terms so they know their rights.
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must give the recipients all the rights that
+you have.  You must make sure that they, too, receive or can get the
+source code.  And you must show them these terms so they know their
+rights.
 
-  We protect your rights with a two-step method: (1) we copyright the
-library, and (2) we offer you this license, which gives you legal
-permission to copy, distribute and/or modify the library.
+  We protect your rights with two steps: (1) copyright the software, and
+(2) offer you this license which gives you legal permission to copy,
+distribute and/or modify the software.
 
-  To protect each distributor, we want to make it very clear that
-there is no warranty for the free library.  Also, if the library is
-modified by someone else and passed on, the recipients should know
-that what they have is not the original version, so that the original
-author's reputation will not be affected by problems that might be
-introduced by others.
-
-  Finally, software patents pose a constant threat to the existence of
-any free program.  We wish to make sure that a company cannot
-effectively restrict the users of a free program by obtaining a
-restrictive license from a patent holder.  Therefore, we insist that
-any patent license obtained for a version of the library must be
-consistent with the full freedom of use specified in this license.
+  Also, for each author's protection and ours, we want to make certain
+that everyone understands that there is no warranty for this free
+software.  If the software is modified by someone else and passed on, we
+want its recipients to know that what they have is not the original, so
+that any problems introduced by others will not reflect on the original
+authors' reputations.
 
-  Most GNU software, including some libraries, is covered by the
-ordinary GNU General Public License.  This license, the GNU Lesser
-General Public License, applies to certain designated libraries, and
-is quite different from the ordinary General Public License.  We use
-this license for certain libraries in order to permit linking those
-libraries into non-free programs.
+  Finally, any free program is threatened constantly by software
+patents.  We wish to avoid the danger that redistributors of a free
+program will individually obtain patent licenses, in effect making the
+program proprietary.  To prevent this, we have made it clear that any
+patent must be licensed for everyone's free use or not licensed at all.
 
-  When a program is linked with a library, whether statically or using
-a shared library, the combination of the two is legally speaking a
-combined work, a derivative of the original library.  The ordinary
-General Public License therefore permits such linking only if the
-entire combination fits its criteria of freedom.  The Lesser General
-Public License permits more lax criteria for linking other code with
-the library.
-
-  We call this license the "Lesser" General Public License because it
-does Less to protect the user's freedom than the ordinary General
-Public License.  It also provides other free software developers Less
-of an advantage over competing non-free programs.  These disadvantages
-are the reason we use the ordinary General Public License for many
-libraries.  However, the Lesser license provides advantages in certain
-special circumstances.
-
-  For example, on rare occasions, there may be a special need to
-encourage the widest possible use of a certain library, so that it
-becomes a de-facto standard.  To achieve this, non-free programs must
-be allowed to use the library.  A more frequent case is that a free
-library does the same job as widely used non-free libraries.  In this
-case, there is little to gain by limiting the free library to free
-software only, so we use the Lesser General Public License.
-
-  In other cases, permission to use a particular library in non-free
-programs enables a greater number of people to use a large body of
-free software.  For example, permission to use the GNU C Library in
-non-free programs enables many more people to use the whole GNU
-operating system, as well as its variant, the GNU/Linux operating
-system.
-
-  Although the Lesser General Public License is Less protective of the
-users' freedom, it does ensure that the user of a program that is
-linked with the Library has the freedom and the wherewithal to run
-that program using a modified version of the Library.
-
   The precise terms and conditions for copying, distribution and
-modification follow.  Pay close attention to the difference between a
-"work based on the library" and a "work that uses the library".  The
-former contains code derived from the library, whereas the latter must
-be combined with the library in order to run.
+modification follow.
 
-                  GNU LESSER GENERAL PUBLIC LICENSE
+		    GNU GENERAL PUBLIC LICENSE
    TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
 
-  0. This License Agreement applies to any software library or other
-program which contains a notice placed by the copyright holder or
-other authorized party saying it may be distributed under the terms of
-this Lesser General Public License (also called "this License").
-Each licensee is addressed as "you".
+  0. This License applies to any program or other work which contains
+a notice placed by the copyright holder saying it may be distributed
+under the terms of this General Public License.  The "Program", below,
+refers to any such program or work, and a "work based on the Program"
+means either the Program or any derivative work under copyright law:
+that is to say, a work containing the Program or a portion of it,
+either verbatim or with modifications and/or translated into another
+language.  (Hereinafter, translation is included without limitation in
+the term "modification".)  Each licensee is addressed as "you".
 
-  A "library" means a collection of software functions and/or data
-prepared so as to be conveniently linked with application programs
-(which use some of those functions and data) to form executables.
-
-  The "Library", below, refers to any such software library or work
-which has been distributed under these terms.  A "work based on the
-Library" means either the Library or any derivative work under
-copyright law: that is to say, a work containing the Library or a
-portion of it, either verbatim or with modifications and/or translated
-straightforwardly into another language.  (Hereinafter, translation is
-included without limitation in the term "modification".)
-
-  "Source code" for a work means the preferred form of the work for
-making modifications to it.  For a library, complete source code means
-all the source code for all modules it contains, plus any associated
-interface definition files, plus the scripts used to control
-compilation and installation of the library.
-
-  Activities other than copying, distribution and modification are not
+Activities other than copying, distribution and modification are not
 covered by this License; they are outside its scope.  The act of
-running a program using the Library is not restricted, and output from
-such a program is covered only if its contents constitute a work based
-on the Library (independent of the use of the Library in a tool for
-writing it).  Whether that is true depends on what the Library does
-and what the program that uses the Library does.
+running the Program is not restricted, and the output from the Program
+is covered only if its contents constitute a work based on the
+Program (independent of having been made by running the Program).
+Whether that is true depends on what the Program does.
 
-  1. You may copy and distribute verbatim copies of the Library's
-complete source code as you receive it, in any medium, provided that
-you conspicuously and appropriately publish on each copy an
-appropriate copyright notice and disclaimer of warranty; keep intact
-all the notices that refer to this License and to the absence of any
-warranty; and distribute a copy of this License along with the
-Library.
+  1. You may copy and distribute verbatim copies of the Program's
+source code as you receive it, in any medium, provided that you
+conspicuously and appropriately publish on each copy an appropriate
+copyright notice and disclaimer of warranty; keep intact all the
+notices that refer to this License and to the absence of any warranty;
+and give any other recipients of the Program a copy of this License
+along with the Program.
 
-  You may charge a fee for the physical act of transferring a copy,
-and you may at your option offer warranty protection in exchange for a
-fee.
-
-  2. You may modify your copy or copies of the Library or any portion
-of it, thus forming a work based on the Library, and copy and
+You may charge a fee for the physical act of transferring a copy, and
+you may at your option offer warranty protection in exchange for a fee.
+
+  2. You may modify your copy or copies of the Program or any portion
+of it, thus forming a work based on the Program, and copy and
 distribute such modifications or work under the terms of Section 1
 above, provided that you also meet all of these conditions:
 
-    a) The modified work must itself be a software library.
-
-    b) You must cause the files modified to carry prominent notices
+    a) You must cause the modified files to carry prominent notices
     stating that you changed the files and the date of any change.
 
-    c) You must cause the whole of the work to be licensed at no
-    charge to all third parties under the terms of this License.
+    b) You must cause any work that you distribute or publish, that in
+    whole or in part contains or is derived from the Program or any
+    part thereof, to be licensed as a whole at no charge to all third
+    parties under the terms of this License.
 
-    d) If a facility in the modified Library refers to a function or a
-    table of data to be supplied by an application program that uses
-    the facility, other than as an argument passed when the facility
-    is invoked, then you must make a good faith effort to ensure that,
-    in the event an application does not supply such function or
-    table, the facility still operates, and performs whatever part of
-    its purpose remains meaningful.
-
-    (For example, a function in a library to compute square roots has
-    a purpose that is entirely well-defined independent of the
-    application.  Therefore, Subsection 2d requires that any
-    application-supplied function or table used by this function must
-    be optional: if the application does not supply it, the square
-    root function must still compute square roots.)
-
+    c) If the modified program normally reads commands interactively
+    when run, you must cause it, when started running for such
+    interactive use in the most ordinary way, to print or display an
+    announcement including an appropriate copyright notice and a
+    notice that there is no warranty (or else, saying that you provide
+    a warranty) and that users may redistribute the program under
+    these conditions, and telling the user how to view a copy of this
+    License.  (Exception: if the Program itself is interactive but
+    does not normally print such an announcement, your work based on
+    the Program is not required to print an announcement.)
+
 These requirements apply to the modified work as a whole.  If
-identifiable sections of that work are not derived from the Library,
+identifiable sections of that work are not derived from the Program,
 and can be reasonably considered independent and separate works in
 themselves, then this License, and its terms, do not apply to those
 sections when you distribute them as separate works.  But when you
 distribute the same sections as part of a whole which is a work based
-on the Library, the distribution of the whole must be on the terms of
+on the Program, the distribution of the whole must be on the terms of
 this License, whose permissions for other licensees extend to the
-entire whole, and thus to each and every part regardless of who wrote
-it.
+entire whole, and thus to each and every part regardless of who wrote it.
 
 Thus, it is not the intent of this section to claim rights or contest
 your rights to work written entirely by you; rather, the intent is to
 exercise the right to control the distribution of derivative or
-collective works based on the Library.
+collective works based on the Program.
 
-In addition, mere aggregation of another work not based on the Library
-with the Library (or with a work based on the Library) on a volume of
+In addition, mere aggregation of another work not based on the Program
+with the Program (or with a work based on the Program) on a volume of
 a storage or distribution medium does not bring the other work under
 the scope of this License.
 
-  3. You may opt to apply the terms of the ordinary GNU General Public
-License instead of this License to a given copy of the Library.  To do
-this, you must alter all the notices that refer to this License, so
-that they refer to the ordinary GNU General Public License, version 2,
-instead of to this License.  (If a newer version than version 2 of the
-ordinary GNU General Public License has appeared, then you can specify
-that version instead if you wish.)  Do not make any other change in
-these notices.
-
-  Once this change is made in a given copy, it is irreversible for
-that copy, so the ordinary GNU General Public License applies to all
-subsequent copies and derivative works made from that copy.
+  3. You may copy and distribute the Program (or a work based on it,
+under Section 2) in object code or executable form under the terms of
+Sections 1 and 2 above provided that you also do one of the following:
 
-  This option is useful when you wish to copy part of the code of
-the Library into a program that is not a library.
+    a) Accompany it with the complete corresponding machine-readable
+    source code, which must be distributed under the terms of Sections
+    1 and 2 above on a medium customarily used for software interchange; or,
 
-  4. You may copy and distribute the Library (or a portion or
-derivative of it, under Section 2) in object code or executable form
-under the terms of Sections 1 and 2 above provided that you accompany
-it with the complete corresponding machine-readable source code, which
-must be distributed under the terms of Sections 1 and 2 above on a
-medium customarily used for software interchange.
+    b) Accompany it with a written offer, valid for at least three
+    years, to give any third party, for a charge no more than your
+    cost of physically performing source distribution, a complete
+    machine-readable copy of the corresponding source code, to be
+    distributed under the terms of Sections 1 and 2 above on a medium
+    customarily used for software interchange; or,
 
-  If distribution of object code is made by offering access to copy
-from a designated place, then offering equivalent access to copy the
-source code from the same place satisfies the requirement to
-distribute the source code, even though third parties are not
-compelled to copy the source along with the object code.
+    c) Accompany it with the information you received as to the offer
+    to distribute corresponding source code.  (This alternative is
+    allowed only for noncommercial distribution and only if you
+    received the program in object code or executable form with such
+    an offer, in accord with Subsection b above.)
 
-  5. A program that contains no derivative of any portion of the
-Library, but is designed to work with the Library by being compiled or
-linked with it, is called a "work that uses the Library".  Such a
-work, in isolation, is not a derivative work of the Library, and
-therefore falls outside the scope of this License.
+The source code for a work means the preferred form of the work for
+making modifications to it.  For an executable work, complete source
+code means all the source code for all modules it contains, plus any
+associated interface definition files, plus the scripts used to
+control compilation and installation of the executable.  However, as a
+special exception, the source code distributed need not include
+anything that is normally distributed (in either source or binary
+form) with the major components (compiler, kernel, and so on) of the
+operating system on which the executable runs, unless that component
+itself accompanies the executable.
 
-  However, linking a "work that uses the Library" with the Library
-creates an executable that is a derivative of the Library (because it
-contains portions of the Library), rather than a "work that uses the
-library".  The executable is therefore covered by this License.
-Section 6 states terms for distribution of such executables.
-
-  When a "work that uses the Library" uses material from a header file
-that is part of the Library, the object code for the work may be a
-derivative work of the Library even though the source code is not.
-Whether this is true is especially significant if the work can be
-linked without the Library, or if the work is itself a library.  The
-threshold for this to be true is not precisely defined by law.
-
-  If such an object file uses only numerical parameters, data
-structure layouts and accessors, and small macros and small inline
-functions (ten lines or less in length), then the use of the object
-file is unrestricted, regardless of whether it is legally a derivative
-work.  (Executables containing this object code plus portions of the
-Library will still fall under Section 6.)
-
-  Otherwise, if the work is a derivative of the Library, you may
-distribute the object code for the work under the terms of Section 6.
-Any executables containing that work also fall under Section 6,
-whether or not they are linked directly with the Library itself.
+If distribution of executable or object code is made by offering
+access to copy from a designated place, then offering equivalent
+access to copy the source code from the same place counts as
+distribution of the source code, even though third parties are not
+compelled to copy the source along with the object code.
 
-  6. As an exception to the Sections above, you may also combine or
-link a "work that uses the Library" with the Library to produce a
-work containing portions of the Library, and distribute that work
-under terms of your choice, provided that the terms permit
-modification of the work for the customer's own use and reverse
-engineering for debugging such modifications.
+  4. You may not copy, modify, sublicense, or distribute the Program
+except as expressly provided under this License.  Any attempt
+otherwise to copy, modify, sublicense or distribute the Program is
+void, and will automatically terminate your rights under this License.
+However, parties who have received copies, or rights, from you under
+this License will not have their licenses terminated so long as such
+parties remain in full compliance.
 
-  You must give prominent notice with each copy of the work that the
-Library is used in it and that the Library and its use are covered by
-this License.  You must supply a copy of this License.  If the work
-during execution displays copyright notices, you must include the
-copyright notice for the Library among them, as well as a reference
-directing the user to the copy of this License.  Also, you must do one
-of these things:
-
-    a) Accompany the work with the complete corresponding
-    machine-readable source code for the Library including whatever
-    changes were used in the work (which must be distributed under
-    Sections 1 and 2 above); and, if the work is an executable linked
-    with the Library, with the complete machine-readable "work that
-    uses the Library", as object code and/or source code, so that the
-    user can modify the Library and then relink to produce a modified
-    executable containing the modified Library.  (It is understood
-    that the user who changes the contents of definitions files in the
-    Library will not necessarily be able to recompile the application
-    to use the modified definitions.)
-
-    b) Use a suitable shared library mechanism for linking with the
-    Library.  A suitable mechanism is one that (1) uses at run time a
-    copy of the library already present on the user's computer system,
-    rather than copying library functions into the executable, and (2)
-    will operate properly with a modified version of the library, if
-    the user installs one, as long as the modified version is
-    interface-compatible with the version that the work was made with.
-
-    c) Accompany the work with a written offer, valid for at least
-    three years, to give the same user the materials specified in
-    Subsection 6a, above, for a charge no more than the cost of
-    performing this distribution.
-
-    d) If distribution of the work is made by offering access to copy
-    from a designated place, offer equivalent access to copy the above
-    specified materials from the same place.
-
-    e) Verify that the user has already received a copy of these
-    materials or that you have already sent this user a copy.
-
-  For an executable, the required form of the "work that uses the
-Library" must include any data and utility programs needed for
-reproducing the executable from it.  However, as a special exception,
-the materials to be distributed need not include anything that is
-normally distributed (in either source or binary form) with the major
-components (compiler, kernel, and so on) of the operating system on
-which the executable runs, unless that component itself accompanies
-the executable.
-
-  It may happen that this requirement contradicts the license
-restrictions of other proprietary libraries that do not normally
-accompany the operating system.  Such a contradiction means you cannot
-use both them and the Library together in an executable that you
-distribute.
-
-  7. You may place library facilities that are a work based on the
-Library side-by-side in a single library together with other library
-facilities not covered by this License, and distribute such a combined
-library, provided that the separate distribution of the work based on
-the Library and of the other library facilities is otherwise
-permitted, and provided that you do these two things:
-
-    a) Accompany the combined library with a copy of the same work
-    based on the Library, uncombined with any other library
-    facilities.  This must be distributed under the terms of the
-    Sections above.
-
-    b) Give prominent notice with the combined library of the fact
-    that part of it is a work based on the Library, and explaining
-    where to find the accompanying uncombined form of the same work.
-
-  8. You may not copy, modify, sublicense, link with, or distribute
-the Library except as expressly provided under this License.  Any
-attempt otherwise to copy, modify, sublicense, link with, or
-distribute the Library is void, and will automatically terminate your
-rights under this License.  However, parties who have received copies,
-or rights, from you under this License will not have their licenses
-terminated so long as such parties remain in full compliance.
-
-  9. You are not required to accept this License, since you have not
+  5. You are not required to accept this License, since you have not
 signed it.  However, nothing else grants you permission to modify or
-distribute the Library or its derivative works.  These actions are
+distribute the Program or its derivative works.  These actions are
 prohibited by law if you do not accept this License.  Therefore, by
-modifying or distributing the Library (or any work based on the
-Library), you indicate your acceptance of this License to do so, and
+modifying or distributing the Program (or any work based on the
+Program), you indicate your acceptance of this License to do so, and
 all its terms and conditions for copying, distributing or modifying
-the Library or works based on it.
+the Program or works based on it.
 
-  10. Each time you redistribute the Library (or any work based on the
-Library), the recipient automatically receives a license from the
-original licensor to copy, distribute, link with or modify the Library
-subject to these terms and conditions.  You may not impose any further
+  6. Each time you redistribute the Program (or any work based on the
+Program), the recipient automatically receives a license from the
+original licensor to copy, distribute or modify the Program subject to
+these terms and conditions.  You may not impose any further
 restrictions on the recipients' exercise of the rights granted herein.
-You are not responsible for enforcing compliance by third parties with
+You are not responsible for enforcing compliance by third parties to
 this License.
-
-  11. If, as a consequence of a court judgment or allegation of patent
+
+  7. If, as a consequence of a court judgment or allegation of patent
 infringement or for any other reason (not limited to patent issues),
 conditions are imposed on you (whether by court order, agreement or
 otherwise) that contradict the conditions of this License, they do not
 excuse you from the conditions of this License.  If you cannot
 distribute so as to satisfy simultaneously your obligations under this
 License and any other pertinent obligations, then as a consequence you
-may not distribute the Library at all.  For example, if a patent
-license would not permit royalty-free redistribution of the Library by
+may not distribute the Program at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Program by
 all those who receive copies directly or indirectly through you, then
 the only way you could satisfy both it and this License would be to
-refrain entirely from distribution of the Library.
+refrain entirely from distribution of the Program.
 
 If any portion of this section is held invalid or unenforceable under
 any particular circumstance, the balance of the section is intended to
-apply, and the section as a whole is intended to apply in other
+apply and the section as a whole is intended to apply in other
 circumstances.
 
 It is not the purpose of this section to induce you to infringe any
 patents or other property right claims or to contest validity of any
 such claims; this section has the sole purpose of protecting the
-integrity of the free software distribution system which is
+integrity of the free software distribution system, which is
 implemented by public license practices.  Many people have made
 generous contributions to the wide range of software distributed
 through that system in reliance on consistent application of that
@@ -404,107 +225,117 @@
 
 This section is intended to make thoroughly clear what is believed to
 be a consequence of the rest of this License.
-
-  12. If the distribution and/or use of the Library is restricted in
+
+  8. If the distribution and/or use of the Program is restricted in
 certain countries either by patents or by copyrighted interfaces, the
-original copyright holder who places the Library under this License
-may add an explicit geographical distribution limitation excluding those
-countries, so that distribution is permitted only in or among
+original copyright holder who places the Program under this License
+may add an explicit geographical distribution limitation excluding
+those countries, so that distribution is permitted only in or among
 countries not thus excluded.  In such case, this License incorporates
 the limitation as if written in the body of this License.
 
-  13. The Free Software Foundation may publish revised and/or new
-versions of the Lesser General Public License from time to time.
-Such new versions will be similar in spirit to the present version,
-but may differ in detail to address new problems or concerns.
+  9. The Free Software Foundation may publish revised and/or new versions
+of the General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
 
-Each version is given a distinguishing version number.  If the Library
-specifies a version number of this License which applies to it and
-"any later version", you have the option of following the terms and
-conditions either of that version or of any later version published by
-the Free Software Foundation.  If the Library does not specify a
-license version number, you may choose any version ever published by
-the Free Software Foundation.
-
-  14. If you wish to incorporate parts of the Library into other free
-programs whose distribution conditions are incompatible with these,
-write to the author to ask for permission.  For software which is
-copyrighted by the Free Software Foundation, write to the Free
-Software Foundation; we sometimes make exceptions for this.  Our
-decision will be guided by the two goals of preserving the free status
-of all derivatives of our free software and of promoting the sharing
-and reuse of software generally.
+Each version is given a distinguishing version number.  If the Program
+specifies a version number of this License which applies to it and "any
+later version", you have the option of following the terms and conditions
+either of that version or of any later version published by the Free
+Software Foundation.  If the Program does not specify a version number of
+this License, you may choose any version ever published by the Free Software
+Foundation.
 
-                            NO WARRANTY
+  10. If you wish to incorporate parts of the Program into other free
+programs whose distribution conditions are different, write to the author
+to ask for permission.  For software which is copyrighted by the Free
+Software Foundation, write to the Free Software Foundation; we sometimes
+make exceptions for this.  Our decision will be guided by the two goals
+of preserving the free status of all derivatives of our free software and
+of promoting the sharing and reuse of software generally.
 
-  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO
-WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.
-EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR
-OTHER PARTIES PROVIDE THE LIBRARY "AS IS" WITHOUT WARRANTY OF ANY
-KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE
-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
-PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE
-LIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME
-THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
+			    NO WARRANTY
 
-  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN
-WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY
-AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU
-FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR
-CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE
-LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING
-RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A
-FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF
-SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
-DAMAGES.
+  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
+FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
+OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
+PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
+OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
+TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
+PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
+REPAIR OR CORRECTION.
 
-                     END OF TERMS AND CONDITIONS
-
-           How to Apply These Terms to Your New Libraries
+  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
+REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
+INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
+OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
+TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
+YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
+PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
+POSSIBILITY OF SUCH DAMAGES.
 
-  If you develop a new library, and you want it to be of the greatest
-possible use to the public, we recommend making it free software that
-everyone can redistribute and change.  You can do so by permitting
-redistribution under these terms (or, alternatively, under the terms
-of the ordinary General Public License).
+		     END OF TERMS AND CONDITIONS
 
-  To apply these terms, attach the following notices to the library.
-It is safest to attach them to the start of each source file to most
-effectively convey the exclusion of warranty; and each file should
-have at least the "copyright" line and a pointer to where the full
-notice is found.
 
+	    How to Apply These Terms to Your New Programs
 
-    <one line to give the library's name and a brief idea of what it does.>
-    Copyright (C) <year>  <name of author>
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
 
-    This library is free software; you can redistribute it and/or
-    modify it under the terms of the GNU Lesser General Public
-    License as published by the Free Software Foundation; either
-    version 2.1 of the License, or (at your option) any later version.
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+convey the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
 
-    This library is distributed in the hope that it will be useful,
+    <one line to give the program's name and a brief idea of what it does.>
+    Copyright (C) 19yy  <name of author>
+
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-    Lesser General Public License for more details.
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
 
-    You should have received a copy of the GNU Lesser General Public
-    License along with this library; if not, write to the Free Software
-    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
+
 Also add information on how to contact you by electronic and paper mail.
 
-You should also get your employer (if you work as a programmer) or
-your school, if any, to sign a "copyright disclaimer" for the library,
-if necessary.  Here is a sample; alter the names:
+If the program is interactive, make it output a short notice like this
+when it starts in an interactive mode:
 
-  Yoyodyne, Inc., hereby disclaims all copyright interest in the
-  library `Frob' (a library for tweaking knobs) written by James
-  Random Hacker.
+    Gnomovision version 69, Copyright (C) 19yy name of author
+    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
 
-  <signature of Ty Coon>, 1 April 1990
-  Ty Coon, President of Vice
+The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, the commands you use may
+be called something other than `show w' and `show c'; they could even be
+mouse-clicks or menu items--whatever suits your program.
 
-That's all there is to it!
+You should also get your employer (if you work as a programmer) or your
+school, if any, to sign a "copyright disclaimer" for the program, if
+necessary.  Here is a sample; alter the names:
 
+  Yoyodyne, Inc., hereby disclaims all copyright interest in the program
+  `Gnomovision' (which makes passes at compilers) written by James Hacker.
 
+  <signature of Ty Coon>, 1 April 1989
+  Ty Coon, President of Vice
+
+This General Public License does not permit incorporating your program into
+proprietary programs.  If your program is a subroutine library, you may
+consider it more useful to permit linking proprietary applications with the
+library.  If this is what you want to do, use the GNU Library General
+Public License instead of this License.



From aurelienc at berlios.de  Wed Nov 23 18:42:32 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Wed, 23 Nov 2005 18:42:32 +0100
Subject: [Maay-svncheckins] r635 - trunk/maay
Message-ID: <200511231742.jANHgWju006162@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-23 18:42:29 +0100 (Wed, 23 Nov 2005)
New Revision: 635

Modified:
   trunk/maay/webapplication.py
Log:
Fix webapp crash caused by unicode passed to Proxy ()


Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-23 17:23:58 UTC (rev 634)
+++ trunk/maay/webapplication.py	2005-11-23 17:42:29 UTC (rev 635)
@@ -393,7 +393,7 @@
         docid = context.arg('docid')
         if not host or not port or not docid:
             return Maay404()
-        proxy = Proxy('http://%s:%s' % (host, port))
+        proxy = Proxy(str('http://%s:%s' % (host, port)))
         print "[webapp] trying to donwload %r from %s:%s" % (filename, host, port)
         d = proxy.callRemote('downloadFile', docid, words)
         d.addCallback(self.gotDataBack, filename)
@@ -425,7 +425,7 @@
         if self.providerSet:
             nextHost, nextPort = self.providerSet.pop()
             print "[webapp] trying to donwload %r from %s:%s" % (filename, nextHost, nextPort)
-            proxy = Proxy('http://%s:%s' % (nextHost, nextPort))
+            proxy = Proxy(str('http://%s:%s' % (nextHost, nextPort)))
             d = proxy.callRemote('downloadFile', docId, words)
             d.addCallback(self.gotDataBack, filename)
             d.addErrback(self.retryWithOtherProvider, words, docId, filename)



From dnf at berlios.de  Wed Nov 23 19:34:08 2005
From: dnf at berlios.de (dnf at berlios.de)
Date: Wed, 23 Nov 2005 19:34:08 +0100
Subject: [Maay-svncheckins] r636 - in trunk/maay: . win32
Message-ID: <200511231834.jANIY8lD031694@sheep.berlios.de>

Author: dnf
Date: 2005-11-23 19:33:57 +0100 (Wed, 23 Nov 2005)
New Revision: 636

Modified:
   trunk/maay/configuration.py
   trunk/maay/win32/updateconfig.py
Log:
- fix updateconfig bug : download-dir (and not download-index-dir),
download-dir move in indexer.ini (was in node.ini).
- call _download_dir only if no download_dir was defined.



Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-23 17:42:29 UTC (rev 635)
+++ trunk/maay/configuration.py	2005-11-23 18:33:57 UTC (rev 636)
@@ -330,7 +330,7 @@
          {'type': 'string',
           'metavar': '<downloads>',
           'help': 'downloaded files will go there and be immediately indexed',
-          'default' : _download_dir()
+          'default' : None
           })
         
         ]
@@ -339,7 +339,10 @@
 
     def __init__(self):
         Configuration.__init__(self, name="Indexer")
+        if not self.download_dir:
+            self.download_dir = _download_dir()
 
+
     def save(self):
         # FIXME: since there may be several configuration files, which
         # one do we choose. By default, we take the one in the current

Modified: trunk/maay/win32/updateconfig.py
===================================================================
--- trunk/maay/win32/updateconfig.py	2005-11-23 17:42:29 UTC (rev 635)
+++ trunk/maay/win32/updateconfig.py	2005-11-23 18:33:57 UTC (rev 636)
@@ -47,6 +47,7 @@
 private-dir=%(private)s
 public-dir=%(public)s
 skip-dir=%(skip)s
+download-dir=%(download)s
 """
 
 node_config = """[NODE]
@@ -56,7 +57,6 @@
 password=maay
 presence-host=%(presence)s
 presence-port=%(port)d
-download-index-dir=%(download)s
 """
 import socket
 
@@ -65,6 +65,7 @@
     values = {'private'     : '%s,%s' % (myDesktop, myDocuments),
               'public'      : '%s\\Maay Documents' % myDesktop,
               'skip' : '',
+              'download': '%s\\Maay Documents\\downloaded' % myDesktop
               }
     f.write(indexer_config % values)
     f.close()
@@ -72,8 +73,7 @@
     f = open("node.ini", "w")
     presence, port = probe_presence_config()
     values = {'presence': presence,
-              'port': port,
-              'download': '%s\\Maay Documents\\downloaded' % myDesktop,}
+              'port': port}
     f.write(node_config % values)
     f.close()
 



From adimasci at berlios.de  Wed Nov 23 19:49:43 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Wed, 23 Nov 2005 19:49:43 +0100
Subject: [Maay-svncheckins] r637 - in trunk/maay: . sql
Message-ID: <200511231849.jANInhg3008368@sheep.berlios.de>

Author: adimasci
Date: 2005-11-23 19:49:40 +0100 (Wed, 23 Nov 2005)
New Revision: 637

Modified:
   trunk/maay/dbentity.py
   trunk/maay/sql/mysql.sql
Log:
restored TIMESTAMP type in table results


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-23 18:33:57 UTC (rev 636)
+++ trunk/maay/dbentity.py	2005-11-23 18:49:40 UTC (rev 637)
@@ -374,12 +374,12 @@
             stateDict['node_id'] = NODE_ID # local node id
             stateDict['login'] = NODE_LOGIN
         stateDict['query_id'] = qid
-        stateDict['record_ts'] = time.time()
         return Result(**stateDict)
     fromDocument = staticmethod(fromDocument)
 
     def _selectQuery(cls, query, onlyLocal=False, onlyDistant=False):
-        limit = query.limit or 15
+        # XXX: HARCODED LIMIT
+        limit = 15
         wheres = ['query_id=%(query_id)s']
         if onlyDistant:
             wheres.append("host != 'localhost'")
@@ -395,8 +395,8 @@
             'LIMIT %s OFFSET %s' % (', '.join(cls.attributes),
                                     cls.tableName,
                                     ' AND '.join(wheres),
-                                    query.order, query.direction,
-                                    query.limit, query.offset,
+                                    orderClause, query.direction,
+                                    limit, query.offset,
                                     )
         return sqlQuery, {'query_id' : query.qid}
     _selectQuery = classmethod(_selectQuery)

Modified: trunk/maay/sql/mysql.sql
===================================================================
--- trunk/maay/sql/mysql.sql	2005-11-23 18:33:57 UTC (rev 636)
+++ trunk/maay/sql/mysql.sql	2005-11-23 18:49:40 UTC (rev 637)
@@ -162,7 +162,7 @@
   `host` varchar(15),
   `port` int(11), -- check this
   `login` varchar(255),
-  `record_ts` int(14), -- let python compute this alone
+  `record_ts` TIMESTAMP(8), -- DEFAULT NOW() is not necessary because records are not updated
   PRIMARY KEY (`document_id`, `query_id`, `node_id`)
 --  PRIMARY KEY (`db_document_id`, `query_id`, `host`, `port`)
 --  KEY `document_id` (`document_id`),



From adimasci at berlios.de  Wed Nov 23 19:53:52 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Wed, 23 Nov 2005 19:53:52 +0100
Subject: [Maay-svncheckins] r638 - trunk/maay
Message-ID: <200511231853.jANIrqW3010654@sheep.berlios.de>

Author: adimasci
Date: 2005-11-23 19:53:49 +0100 (Wed, 23 Nov 2005)
New Revision: 638

Modified:
   trunk/maay/node.py
   trunk/maay/webapplication.py
Log:
login does not help to determine if a result is local or not

Modified: trunk/maay/node.py
===================================================================
--- trunk/maay/node.py	2005-11-23 18:49:40 UTC (rev 637)
+++ trunk/maay/node.py	2005-11-23 18:53:49 UTC (rev 638)
@@ -253,7 +253,7 @@
 
     
 def run():
-    # log.startLogging(open('maay-node.log', 'w'))
+    log.startLogging(open('maay-node.log', 'w'))
     maayPortal = MaayPortal(nodeConfig)
     website = appserver.NevowSite(MaaySessionWrapper(maayPortal,
                                                      mindFactory=MaayMindFactory))

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-23 18:49:40 UTC (rev 637)
+++ trunk/maay/webapplication.py	2005-11-23 18:53:49 UTC (rev 638)
@@ -523,7 +523,7 @@
     
     def render_peer(self, context, data):
         """:type data: Result"""
-        if data.login is None:
+        if data.port == 0:
             return ''
         return '%s (%s) - ' % (data.login, data.host)
     



From adimasci at berlios.de  Wed Nov 23 21:31:05 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Wed, 23 Nov 2005 21:31:05 +0100
Subject: [Maay-svncheckins] r639 - trunk/maay
Message-ID: <200511232031.jANKV5eA000973@sheep.berlios.de>

Author: adimasci
Date: 2005-11-23 21:31:04 +0100 (Wed, 23 Nov 2005)
New Revision: 639

Modified:
   trunk/maay/dbentity.py
   trunk/maay/querier.py
Log:
fix the "Non-unique" docId bug


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-23 18:53:49 UTC (rev 638)
+++ trunk/maay/dbentity.py	2005-11-23 20:31:04 UTC (rev 639)
@@ -380,24 +380,23 @@
     def _selectQuery(cls, query, onlyLocal=False, onlyDistant=False):
         # XXX: HARCODED LIMIT
         limit = 15
-        wheres = ['query_id=%(query_id)s']
         if onlyDistant:
-            wheres.append("host != 'localhost'")
+            where = "WHERE T.host != 'localhost'"
         elif onlyLocal:
-            wheres.append("host = 'localhost'")
+            where = "WHERE T.host = 'localhost'"
+        else:
+            where = ''
         if query.order == 'publication_time':
             orderClause = 'publication_time, relevance'
         else:
             orderClause = '%s, publication_time' % (query.order,)
-        sqlQuery = 'SELECT %s FROM %s WHERE %s GROUP BY document_id ' \
-            'HAVING record_ts=MIN(record_ts) ' \
-            'ORDER BY %s %s ' \
-            'LIMIT %s OFFSET %s' % (', '.join(cls.attributes),
-                                    cls.tableName,
-                                    ' AND '.join(wheres),
-                                    orderClause, query.direction,
-                                    limit, query.offset,
-                                    )
+        aliasedAttrs = ['T.%s' % attr for attr in cls.attributes]
+        # If only Mysql4.1 supported VIEWS
+        subQuery = 'SELECT * FROM results WHERE query_id=%(query_id)s GROUP BY document_id HAVING record_ts=MIN(record_ts)'
+        sqlQuery = 'SELECT %s FROM (%s) AS T %s ORDER BY %s %s LIMIT %s OFFSET %s' % (
+            ', '.join(aliasedAttrs), subQuery, where,
+            orderClause, query.direction, limit, query.offset)
+        print "QUERY =", sqlQuery
         return sqlQuery, {'query_id' : query.qid}
     _selectQuery = classmethod(_selectQuery)
 

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-23 18:53:49 UTC (rev 638)
+++ trunk/maay/querier.py	2005-11-23 20:31:04 UTC (rev 639)
@@ -339,15 +339,16 @@
         for <qid>
         """
         cursor = self._cnx.cursor()
-        localCountQuery = "SELECT COUNT(*) from results WHERE query_id='%s' AND host='localhost';" % (qid,)
-        distantCountQuery = "SELECT COUNT(*) from results WHERE query_id='%s' AND host!='localhost';" % (qid,)
+        subQuery = "SELECT * FROM results WHERE query_id='%s' GROUP BY document_id HAVING record_ts=MIN(record_ts)" % qid
+        localCountQuery = "SELECT COUNT(*) FROM (%s) AS T WHERE T.host='localhost'" % subQuery
+        distantCountQuery = "SELECT COUNT(*) FROM (%s) AS T WHERE T.host != 'localhost'" % subQuery
         cursor.execute(localCountQuery)
         localCount = cursor.fetchall()[0][0]
         cursor.execute(distantCountQuery)
         distantCount = cursor.fetchall()[0][0]        
         cursor.close()
         return localCount, distantCount
-    
+
     def getQueryResults(self, query, onlyLocal=False, onlyDistant=False):
         """builds and returns Result' instances by searching in
         the temporary table built for <qid>



From adimasci at berlios.de  Thu Nov 24 08:49:30 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Thu, 24 Nov 2005 08:49:30 +0100
Subject: [Maay-svncheckins] r640 - trunk
Message-ID: <200511240749.jAO7nUjK010848@sheep.berlios.de>

Author: adimasci
Date: 2005-11-24 08:49:13 +0100 (Thu, 24 Nov 2005)
New Revision: 640

Modified:
   trunk/README.txt
   trunk/ReleaseNotes.txt
   trunk/setup.py
Log:
updated release and setup files

Modified: trunk/README.txt
===================================================================
--- trunk/README.txt	2005-11-23 20:31:04 UTC (rev 639)
+++ trunk/README.txt	2005-11-24 07:49:13 UTC (rev 640)
@@ -80,6 +80,7 @@
 following pieces of information:
 
  * operating system
+ * version and name of browser
  * version of maay
  * on unix: version of python
  * steps to reproduce the bug

Modified: trunk/ReleaseNotes.txt
===================================================================
--- trunk/ReleaseNotes.txt	2005-11-23 20:31:04 UTC (rev 639)
+++ trunk/ReleaseNotes.txt	2005-11-24 07:49:13 UTC (rev 640)
@@ -1,18 +1,19 @@
-Release Notes for version 0.2.2
+Release Notes for version 0.2.4
 
 See README.txt for installation and quick start instructions. 
 
 This release is beta-level software, which contains several bug fixes
-and improvements over 0.2.1. 
+and improvements over 0.2.2. The 0.2.3 version was not released
+officially, and only contains a few bugfixes concerning the 
+windows services management.
 
-There may be some problems with the web interface when accessed
-through Microsoft Internet Explorer. Please give some feedback on
-using Maay with this web browser.  Using Firefox or Mozilla should
-work fine.
+If you encounter any problem with the web interface (like 
+never ending requests, pages not updated), please notify us and
+describe the problem. In this case, don't forget to mention which
+browser (name and version) and which platform you're using.
 
 The windows installer will install and set up all the required
 dependencies (including mysql and twisted). It uses Inno Setup and
 Py2exe.
 
 
-

Modified: trunk/setup.py
===================================================================
--- trunk/setup.py	2005-11-23 20:31:04 UTC (rev 639)
+++ trunk/setup.py	2005-11-24 07:49:13 UTC (rev 640)
@@ -23,7 +23,7 @@
 import sys
 from glob import glob
 
-version = '0.2.1'
+version = '0.2.4' # This should be imported from the maay package
 author = "France Telecom R&D"
 author_email = "maay-dev at lists.berlios.de"
 copyright = "Copyright (c)2004-2005 France Telecom R&D"



From dnf at berlios.de  Thu Nov 24 10:06:04 2005
From: dnf at berlios.de (dnf at berlios.de)
Date: Thu, 24 Nov 2005 10:06:04 +0100
Subject: [Maay-svncheckins] r641 - trunk/maay
Message-ID: <200511240906.jAO964CV016921@sheep.berlios.de>

Author: dnf
Date: 2005-11-24 10:05:53 +0100 (Thu, 24 Nov 2005)
New Revision: 641

Modified:
   trunk/maay/configuration.py
Log:
Last fix (I hope ;-)) of the "default download-dir" problem.
Problem description : in windows version, the directory C:\Documents and Settings\All Users\Desktop\Maay Documents\Downlaoded
was created even if download-dir was set in indexer.ini.



Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-24 07:49:13 UTC (rev 640)
+++ trunk/maay/configuration.py	2005-11-24 09:05:53 UTC (rev 641)
@@ -258,13 +258,13 @@
 
 ################ Indexer stuff
 
-def _download_dir():
+def _default_download_dir():
     if sys.platform == 'win32':
+        # FIXME: if we can get the user desktop path, it would be better.
+        # (the path may depend of the language)
         theDir = r'\Documents and Settings\All Users\Desktop\Maay Documents\downloaded'
     else:
         theDir = osp.expanduser('~/maay-downloads/')
-    if not osp.exists(theDir):
-        os.makedirs(theDir)
     return theDir
 
     
@@ -330,7 +330,7 @@
          {'type': 'string',
           'metavar': '<downloads>',
           'help': 'downloaded files will go there and be immediately indexed',
-          'default' : None
+          'default' : _default_download_dir()
           })
         
         ]
@@ -342,6 +342,10 @@
         if not self.download_dir:
             self.download_dir = _download_dir()
 
+    def load(self):
+        Configuration.load(self)
+        if not osp.exists(self.download_dir):
+            os.makedirs(self.download_dir)
 
     def save(self):
         # FIXME: since there may be several configuration files, which



From adimasci at berlios.de  Thu Nov 24 10:46:55 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Thu, 24 Nov 2005 10:46:55 +0100
Subject: [Maay-svncheckins] r642 - trunk/maay
Message-ID: <200511240946.jAO9ktX7012615@sheep.berlios.de>

Author: adimasci
Date: 2005-11-24 10:46:53 +0100 (Thu, 24 Nov 2005)
New Revision: 642

Modified:
   trunk/maay/indexer.py
   trunk/maay/webapplication.py
Log:
run indexer **locally** when started from indexation page !

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-24 09:05:53 UTC (rev 641)
+++ trunk/maay/indexer.py	2005-11-24 09:46:53 UTC (rev 642)
@@ -34,11 +34,12 @@
 import os
 import sys
 import sha
-from sets import Set
 from xmlrpclib import ServerProxy, Fault, ProtocolError
 import mimetypes
 import socket
 
+from logilab.common.compat import set
+
 from zope.interface import Interface
 
 from maay import converter
@@ -107,42 +108,22 @@
         return "Won't index %s because %s" % (self.thefile,
                                               self.cause)
 
- 
-# TODO: manage periodical runs
-# TODO: memorize state of indexed document to avoid db lookup at each run
-# TODO: do an initial db query to initialize the indexation state (?)
-class Indexer:
-    """An Indexer instance periodically looks in the configured
-    directories for files to index If it detects changes in known
-    files, it sends a request to the Querier (via xmlrpc) to index the
-    file, giving the Querier information on the file. The querier may
-    decide to do nothing if it detects that the database is up-to-date.
-    """
-    
+
+
+class AbstractIndexer:
     def __init__(self, indexerConfig, observers=None):
         self.indexerConfig = indexerConfig
-        username = self.indexerConfig.user
-        password = self.indexerConfig.password
-        host = self.indexerConfig.host
-        port = self.indexerConfig.port
         self.filesystemEncoding = sys.getfilesystemencoding()
-        print "Indexer connecting to Node %s:%s" % (host, port)
-        self.serverProxy = ServerProxy('http://%s:%s' % (host, port),
-                                       allow_none=True,
-                                       encoding='utf-8')
-        self.cnxId, errmsg = self.serverProxy.authenticate(username, password)
         self.verbose = indexerConfig.verbose
         self.observers = observers or []
-        if not self.cnxId:
-            if self.verbose:
-                print "Got failure from Node:", errmsg
-            raise MaayAuthenticationError("Failed to connect as '%s'" % username)
         # we might be asked to purge everything and just exit
         if indexerConfig['purge']:
             self._purgeEverything()
             sys.exit(0)
             
-        
+    def _purgeEverything(self):
+        raise NotImplementedError('abstract method')
+
     def getFileIterator(self, isPrivate=True):
         if isPrivate:
             indexed = self.indexerConfig.private_dir
@@ -158,43 +139,20 @@
     def isIndexable(self, filename):
         return converter.isKnownType(filename)
 
-    def purgeFiles(self,fileset):
-        for filename in fileset:
-            if self.verbose:
-                print "Requesting unindexation of %s" % \
-                      safe_encode(filename)
-            self.serverProxy.removeFileInfo(self.cnxId, filename)
-        if self.verbose:
-            print "Requesting cleanup of unreferenced documents"
-        self.serverProxy.removeUnreferencedDocuments(self.cnxId)
-
-    def _purgeEverything(self):
-        indexedFiles = Set(self.serverProxy.getIndexedFiles(self.cnxId))
-        self.purgeFiles(indexedFiles)
-
+    def _getIndexedFiles(self):
+        raise NotImplementedError("abstract method")
+    
     def start(self):
         # we index private dirs first because public overrides private
         # log.startLogging(open('maay-indexer.log', 'w'))
         existingFiles = self.runIndexer(isPrivate=True)
         existingFiles |= self.runIndexer(isPrivate=False)
-        indexedFiles = Set(self.serverProxy.getIndexedFiles(self.cnxId))
+        indexedFiles = self._getIndexedFiles()
         oldFiles = indexedFiles - existingFiles
         self.purgeFiles(oldFiles)
         for obs in self.observers:
             obs.indexationCompleted()
 
-    def runIndexer(self, isPrivate=True):
-        existingFiles = Set()
-        state = docState(isPrivate)
-        for filename in self.getFileIterator(isPrivate):
-            existingFiles.add(filename)
-            try:
-                self.indexFile(filename, isPrivate)
-            except FileIndexationFailure, fif: # should be catch-all
-                print fif
-                continue
-        return existingFiles
-
     def indexFile(self, filepath, isPrivate=True):
         try:
             if not self.isIndexable(filepath):
@@ -227,9 +185,72 @@
         except Exception, exc:
             raise FileIndexationFailure(safe_encode(filepath),
                                         "an exception %s was raised" % exc)                                        
+    def runIndexer(self, isPrivate=True):
+        existingFiles = set()
+        state = docState(isPrivate)
+        for filename in self.getFileIterator(isPrivate):
+            existingFiles.add(filename)
+            try:
+                self.indexFile(filename, isPrivate)
+            except FileIndexationFailure, fif: # should be catch-all
+                print fif
+                continue
+        return existingFiles
+
+    def getLastIndexationTimeAndState(self, filename):
+        raise NotImplementedError('abstract method')
+
+    def indexDocument(self, futureDoc):
+        raise NotImplementedError('abstract method')
+
+
+# TODO: manage periodical runs
+# TODO: memorize state of indexed document to avoid db lookup at each run
+# TODO: do an initial db query to initialize the indexation state (?)
+class Indexer(AbstractIndexer):
+    """An Indexer instance periodically looks in the configured
+    directories for files to index If it detects changes in known
+    files, it sends a request to the Querier (via xmlrpc) to index the
+    file, giving the Querier information on the file. The querier may
+    decide to do nothing if it detects that the database is up-to-date.
+    """
+    
+    def __init__(self, indexerConfig, observers=None):
+        username = self.indexerConfig.user
+        password = self.indexerConfig.password
+        host = self.indexerConfig.host
+        port = self.indexerConfig.port
+        print "Indexer connecting to Node %s:%s" % (host, port)        
+        self.serverProxy = ServerProxy('http://%s:%s' % (host, port),
+                                       allow_none=True,
+                                       encoding='utf-8')
+        self.cnxId, errmsg = self.serverProxy.authenticate(username, password)
+        if not self.cnxId:
+            if self.verbose:
+                print "Got failure from Node:", errmsg
+            raise MaayAuthenticationError("Failed to connect as '%s'" % username)
+        # baseclass's __init__ must be called *after* local initialisation
+        # otherwise it could call _purgeEverything with an inconsistent state
+        AbstractIndexer.__init__(self, indexerConfig, observers)
+        
+    def purgeFiles(self,fileset):
+        for filename in fileset:
+            if self.verbose:
+                print "Requesting unindexation of %s" % \
+                      safe_encode(filename)
+            self.serverProxy.removeFileInfo(self.cnxId, filename)
+        if self.verbose:
+            print "Requesting cleanup of unreferenced documents"
+        self.serverProxy.removeUnreferencedDocuments(self.cnxId)
+
+    def _purgeEverything(self):
+        indexedFiles = set(self.serverProxy.getIndexedFiles(self.cnxId))
+        self.purgeFiles(indexedFiles)
+
+    def _getIndexedFiles(self):
+        return set(self.serverProxy.getIndexedFiles(self.cnxId))
        
     def getLastIndexationTimeAndState(self, filename):
-        filename = filename
         answer = self.serverProxy.lastIndexationTimeAndState(self.cnxId, filename)
         if answer is None:
             raise MaayAuthenticationError("Bad cnxId sent to the Node")
@@ -260,6 +281,66 @@
         for obs in self.observers:
             obs.newDocumentIndexed(futureDoc.filename, futureDoc.state)
 
+class LocalIndexer(AbstractIndexer):
+    """special indexer that is meant to run locally, using
+    a querier instance rather than connecting to a RPC server
+    """    
+    def __init__(self, indexerConfig, querier, nodeId, observers=None):
+        self.querier = querier
+        self.nodeId = nodeId
+        # baseclass's __init__ must be called *after* local initialisation
+        # otherwise it could call _purgeEverything with an inconsistent state
+        AbstractIndexer.__init__(self, indexerConfig, observers)
+        self.verbose = True
+    
+    def purgeFiles(self, fileset):
+        for filename in fileset:
+            if self.verbose:
+                print "[local] Requesting unindexation of %s" % \
+                      safe_encode(filename)
+            self.querier.removeFileInfo(filename)
+        if self.verbose:
+            print "[local] Requesting cleanup of unreferenced documents"
+        self.querier.removeUnreferencedDocuments()
+
+    def _purgeEverything(self):
+        indexedFiles = set(self.querier.getIndexedFiles())
+        self.purgeFiles(indexedFiles)
+
+    def _getIndexedFiles(self):
+        return set(self.querier.getIndexedFiles())
+       
+    def getLastIndexationTimeAndState(self, filename):
+        fileInfos = self.querier.getFileInformations(filename)
+        if len(fileInfos):
+            return fileInfos[0].file_time, fileInfos[0].state
+        else:
+            return 0, Document.UNKNOWN_STATE
+
+    def indexDocument(self, futureDoc):
+        futureDoc.file_state=FileInfo.CREATED_FILE_STATE
+        if self.verbose:
+            print "[local] Requesting indexation of %s" % \
+                  safe_encode(futureDoc.filename),
+        try:
+            futureDoc.title = removeControlChar(futureDoc.title) 
+            futureDoc.text = removeControlChar(futureDoc.text)
+            if self.verbose:
+                print '[local] ('+safe_encode(futureDoc.title)+')'
+            self.querier.indexDocument(self.nodeId, futureDoc)
+        except Exception, exc:
+            if self.verbose:
+                print "[local] An error occured on the Node while indexing %s" % \
+                      safe_encode(futureDoc.filename)
+                print exc
+                print "[local] See Node log for details"
+            else:
+                print "[local] Error indexing %s: %s" % \
+                      (safe_encode(futureDoc.filename), exc)
+        for obs in self.observers:
+            obs.newDocumentIndexed(futureDoc.filename, futureDoc.state)
+    
+
 ######### FileIterator
 
 if sys.platform == 'win32':
@@ -331,37 +412,31 @@
     print '** is_running()', indexer_thread
     return indexer_thread and indexer_thread.isAlive()
 
-def start_as_thread(webpage):
+def runLocally(querier, nodeId, observers=None):
+    indexer = LocalIndexer(indexerConfig, querier, nodeId, observers)
+    indexer.start()
+    
+def start_as_thread(maayQuerier, nodeId, webpage):
     global indexer_thread
     if is_running():
         print "Indexer already running", indexer_thread
     else:
         print "launching indexer"
-        indexer_thread = Thread(target=run, args=([webpage],))
+        indexer_thread = Thread(target=runLocally, args=(maayQuerier, nodeId, [webpage],))
         indexer_thread.start()
 
 # index one file from webapp in a thread
 
-def indexJustOneFile(filepath):
-    thread = Thread(target=_just_one, args=(filepath,))
+def indexJustOneFile(maayQuerier, nodeId, filepath):
+    thread = Thread(target=_just_one, args=(maayQuerier, nodeId, filepath))
     thread.start()
 
-def _just_one(filepath):
-    indexerConfig = IndexerConfiguration()
-    indexerConfig.load()
+def _just_one(querier, nodeId, filepath):
+    indexer = LocalIndexer(indexerConfig, querier, nodeId)
+    print 'going to index file %s', filepath
     try:
-        try:
-            indexer = Indexer(indexerConfig)
-        except MaayAuthenticationError, exc:
-            print "AuthenticationError:", exc
-            return
-        print 'going to index file %s', filepath
         # log.startLogging(open('maay-indexer.log', 'w'))
         indexer.indexFile(filepath, isPrivate=False)
-    except socket.error, exc:
-        print "Cannot contact Node:", exc
-        print "Check that the Node is running on %s:%s" % \
-              (indexerConfig.host, indexerConfig.port)
     except FileIndexationFailure, fif:
         print fif
 

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-24 09:05:53 UTC (rev 641)
+++ trunk/maay/webapplication.py	2005-11-24 09:46:53 UTC (rev 642)
@@ -234,7 +234,9 @@
         if (self.untouchedDocuments % 10) == 0:
             for webpage in self.clients.itervalues():
                 webpage.countersUpdated(self.untouchedDocuments,
-                                        self.indexedDocuments)
+                                        self.indexedDocuments,
+                                        self.privateDocuments,
+                                        self.publicDocuments)
     
     def indexationCompleted(self):
         for webpage in self.clients.itervalues():
@@ -357,7 +359,7 @@
                 msg = "Indexer already running"
             else:
                 msg = "Indexer started"
-                indexer.start_as_thread(_factory)
+                indexer.start_as_thread(self.querier, self.maayId, _factory)
         indexationPage.msg = msg
         indexationPage.alertmessage = alertMsg
         return indexationPage
@@ -408,7 +410,7 @@
         f=file(filepath,'wb')
         f.write(fileData)
         f.close()
-        return DistantFilePage(filepath)
+        return DistantFilePage(self.querier, self.maayId, filepath)
 
     def onDownloadFileError(self, error, filename):
         msg = "Error while downloading file: %s" % (filename,)
@@ -434,10 +436,10 @@
             return self.onDownloadFileError('no provider available', filename)
     
 class DistantFilePage(static.File):
-    def __init__(self, filepath):
+    def __init__(self, querier, nodeId, filepath):
         static.File.__init__(self, filepath)
         self.filepath = filepath
-        indexer.indexJustOneFile(self.filepath)
+        indexer.indexJustOneFile(querier, nodeId, self.filepath)
 
 class ResultsPageMixIn:
 



From adimasci at berlios.de  Thu Nov 24 11:10:49 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Thu, 24 Nov 2005 11:10:49 +0100
Subject: [Maay-svncheckins] r643 - trunk/maay
Message-ID: <200511241010.jAOAAnku016116@sheep.berlios.de>

Author: adimasci
Date: 2005-11-24 11:10:39 +0100 (Thu, 24 Nov 2005)
New Revision: 643

Modified:
   trunk/maay/indexer.py
Log:
fix commad line usage of indexer

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-24 09:46:53 UTC (rev 642)
+++ trunk/maay/indexer.py	2005-11-24 10:10:39 UTC (rev 643)
@@ -216,10 +216,10 @@
     """
     
     def __init__(self, indexerConfig, observers=None):
-        username = self.indexerConfig.user
-        password = self.indexerConfig.password
-        host = self.indexerConfig.host
-        port = self.indexerConfig.port
+        username = indexerConfig.user
+        password = indexerConfig.password
+        host = indexerConfig.host
+        port = indexerConfig.port
         print "Indexer connecting to Node %s:%s" % (host, port)        
         self.serverProxy = ServerProxy('http://%s:%s' % (host, port),
                                        allow_none=True,



From adimasci at berlios.de  Thu Nov 24 11:12:27 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Thu, 24 Nov 2005 11:12:27 +0100
Subject: [Maay-svncheckins] r644 - trunk
Message-ID: <200511241012.jAOACReq016595@sheep.berlios.de>

Author: adimasci
Date: 2005-11-24 11:12:25 +0100 (Thu, 24 Nov 2005)
New Revision: 644

Modified:
   trunk/README.txt
Log:
changed svn properties on README


Property changes on: trunk/README.txt
___________________________________________________________________
Name: svn:keywords
   - "Id"
   + Id



From aurelienc at berlios.de  Thu Nov 24 12:56:47 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Thu, 24 Nov 2005 12:56:47 +0100
Subject: [Maay-svncheckins] r645 - trunk/maay
Message-ID: <200511241156.jAOBulKh002548@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-24 12:56:42 +0100 (Thu, 24 Nov 2005)
New Revision: 645

Added:
   trunk/maay/indexerconfig.py
Modified:
   trunk/maay/configuration.py
   trunk/maay/converter.py
   trunk/maay/dbentity.py
   trunk/maay/image.py
   trunk/maay/indexer.py
   trunk/maay/node.py
   trunk/maay/nodeconfig.py
   trunk/maay/p2pquerier.py
   trunk/maay/querier.py
   trunk/maay/webapplication.py
Log:
Cleanup config stuff


Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-24 10:12:25 UTC (rev 644)
+++ trunk/maay/configuration.py	2005-11-24 11:56:42 UTC (rev 645)
@@ -92,22 +92,14 @@
 class Configuration(BaseConfiguration):
 
     config_file = None
-    options = [
-        ('config-name',
-         {'type' : "string", 'metavar' : "<config-name>", 'short' : "C",
-         'help' : "allow to specify a config directory name",
-          'default' : "maay",
-        }),
-        ]
 
-
     def __init__(self, name=None):
         BaseConfiguration.__init__(self, options=self.options,
                                    config_file=self.config_file,
                                    name=name)
         
     def load(self):
-        self.load_command_line_configuration()
+        print "loading %s configuration" % self.name
         self.load_from_files()
         # then override with command-line options
         self.load_command_line_configuration()
@@ -118,11 +110,11 @@
             self.load_file_configuration(path)
 
     def get_config_dirs(self):
-        if sys.platform == "win32": # XXX: fix Win32 with self.config_name attr
+        if sys.platform == "win32":
             return [os.path.normpath(os.path.join(_get_data_dir(), '..'))]
         else:
-            return _filter_files_with([osp.join('/etc/', self.config_name),
-                                       os.path.expanduser('~/.' + self.config_name),
+            return _filter_files_with([osp.join('/etc/maay'),
+                                       os.path.expanduser('~/.maay'),
                                        '.'],
                                       os.R_OK)
 
@@ -141,7 +133,7 @@
 ################ Web server, rpc server stuff
 
 class NodeConfiguration(Configuration):
-    options = Configuration.options + [
+    options =  [
         ('db-name',
          {'type' : "string", 'metavar' : "<dbname>", 'short' : "d",
           'help' : "name of the Maay database",
@@ -269,7 +261,7 @@
 
     
 class IndexerConfiguration(Configuration):
-    options = Configuration.options + [
+    options = [
         ('host',
          {'type' : "string", 'metavar' : "<host>", 'short' : "H",
           'help' : "where Maay node can be found",
@@ -314,6 +306,12 @@
           'help': 'the indexer will skip this directory',
           'default' : []
           }),
+        ('download-dir',
+         {'type': 'string',
+          'metavar': '<downloads>',
+          'help': 'downloaded files will go there and be immediately indexed',
+          'default' : _default_download_dir()
+          }),
        ('verbose',
          {'type': 'yn',
           'metavar': '<y or n>', 'short': 'v',
@@ -326,11 +324,10 @@
           'metavar' : '<y or n>',
           'default' : False,
           }),
-        ('download-dir',
-         {'type': 'string',
-          'metavar': '<downloads>',
-          'help': 'downloaded files will go there and be immediately indexed',
-          'default' : _default_download_dir()
+        ('thumbnails-dir',
+         {'type' : "string", 'metavar' : "--thumbnailsdir",
+          'help' : "Thumbnail files repository",
+          'default' : '.maay_thumbnails'
           })
         
         ]
@@ -339,13 +336,11 @@
 
     def __init__(self):
         Configuration.__init__(self, name="Indexer")
-        if not self.download_dir:
-            self.download_dir = _download_dir()
 
-    def load(self):
-        Configuration.load(self)
-        if not osp.exists(self.download_dir):
-            os.makedirs(self.download_dir)
+##     def load(self):
+##         Configuration.load(self)
+##         if not osp.exists(self.download_dir):
+##             os.makedirs(self.download_dir)
 
     def save(self):
         # FIXME: since there may be several configuration files, which
@@ -358,35 +353,7 @@
         except IOError, e:
             print "Cannot open file '%s' to update configuration" % self.config_file
 
-################ Image stuff 
 
-class NoThumbnailsDir(Exception):
-    """Represents impossibility to access or create RW the
-       maay thumbnails dir repository"""
-    pass
-
-class ImageConfiguration(BaseConfiguration):
-    options = Configuration.options + [
-        ('thumbnails-dir',
-         {'type' : "string", 'metavar' : "--thumbnailsdir",
-          'help' : "Thumbnail files repository",
-          'default' : '.maay_thumbnails'},)]
-    config_file = 'image.ini'
-
-    def __init__(self):
-        BaseConfiguration.__init__(self, options=self.options,
-                                   config_file=self.config_file,
-                                   name='Image')
-
-    def load_command_line_configuration(self):
-        """We won't load command line stuff because ImageConfiguration
-           is an auxiliary config thing which will purely and simply
-           choke on the cmd-line args it doesn't know about
-           Let's just pretend for now that thumbnail-dir can't be
-           specified on command line.
-        """
-        pass
-
     def get_thumbnails_dir(self):
         """Returns the complete path to Maay thumnails directory
            XXX: It will try to create the dir if absent"""
@@ -402,3 +369,10 @@
             return path
         else:
             raise NoThumbnailsDir("Access to %s is impossible." % path)
+
+class NoThumbnailsDir(Exception):
+    """Represents impossibility to access or create RW the
+       maay thumbnails dir repository"""
+    pass
+
+

Modified: trunk/maay/converter.py
===================================================================
--- trunk/maay/converter.py	2005-11-24 10:12:25 UTC (rev 644)
+++ trunk/maay/converter.py	2005-11-24 11:56:42 UTC (rev 645)
@@ -157,7 +157,7 @@
             return ExifParser()
 except ImportError:
     print "Python Imaging Library not installed for your version of Python.",
-    print "Thumbnail support will not work."
+    print "Thumbnail and EXIF support will not work."
     
 
 def uncompressFile(filepath, outputDir):

Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-24 10:12:25 UTC (rev 644)
+++ trunk/maay/dbentity.py	2005-11-24 11:56:42 UTC (rev 645)
@@ -32,8 +32,9 @@
 
 from maay.texttool import normalizeText, WORD_MIN_LEN, WORD_MAX_LEN,\
      WORDS_RGX
-from maay.p2pquerier import NODE_ID
 
+
+
 class DBEntity:
     attributes = []
     tableName = None
@@ -361,7 +362,7 @@
     key = ('document_id', 'query_id')
     tableName = 'results'
 
-    def fromDocument(document, qid, provider=None):
+    def fromDocument(document, qid, our_node_id, provider=None):
         stateDict = document.__dict__ # document.stateDict is wrong
         for key, value in stateDict.items():
             if key not in Result.attributes or value is None:
@@ -371,7 +372,7 @@
         else:
             stateDict['host'] = 'localhost'
             stateDict['port'] = 0
-            stateDict['node_id'] = NODE_ID # local node id
+            stateDict['node_id'] = our_node_id # local node id
             stateDict['login'] = NODE_LOGIN
         stateDict['query_id'] = qid
         return Result(**stateDict)

Modified: trunk/maay/image.py
===================================================================
--- trunk/maay/image.py	2005-11-24 10:12:25 UTC (rev 644)
+++ trunk/maay/image.py	2005-11-24 11:56:42 UTC (rev 645)
@@ -46,8 +46,8 @@
 
 
 ############## EXIF stuff
-from maay.configuration import ImageConfiguration as ImConfig
 from maay.texttool import AbstractParser
+from maay.indexerconfig import indexerConfig
 
 class ExifParser(AbstractParser):
     """A parser for Exif information found in image files"""
@@ -57,7 +57,7 @@
 
     def get_thumbnails_dir(self):
         if not self.thumbnails_dir:
-            self.thumbnails_dir = ImConfig().get_thumbnails_dir()
+            self.thumbnails_dir = indexerConfig.get_thumbnails_dir()
         return self.thumbnails_dir
 
     def parseFile(self, filepath, pristineFilename, encoding=None):

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-24 10:12:25 UTC (rev 644)
+++ trunk/maay/indexer.py	2005-11-24 11:56:42 UTC (rev 645)
@@ -26,11 +26,7 @@
 
 __revision__ = '$Id$'
 
-from maay.configuration import IndexerConfiguration
 
-indexerConfig = IndexerConfiguration()
-indexerConfig.load()
-
 import os
 import sys
 import sha
@@ -49,6 +45,9 @@
 from threading import Thread
 from twisted.python import log
 
+from maay.indexerconfig import indexerConfig
+
+
 class IIndexerObserver(Interface):
 
     def newDocumentIndexed(filename, state):
@@ -441,6 +440,5 @@
         print fif
 
 if __name__ == '__main__':
+    indexerConfig.load()
     run()
-
-

Added: trunk/maay/indexerconfig.py
===================================================================
--- trunk/maay/indexerconfig.py	2005-11-24 10:12:25 UTC (rev 644)
+++ trunk/maay/indexerconfig.py	2005-11-24 11:56:42 UTC (rev 645)
@@ -0,0 +1,25 @@
+#     Maay : a network of peers for document search
+#
+#     Copyright (C) 2005 France Telecom R&D
+#
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
+
+
+from maay.configuration import IndexerConfiguration
+
+indexerConfig = IndexerConfiguration()
+
+

Modified: trunk/maay/node.py
===================================================================
--- trunk/maay/node.py	2005-11-24 10:12:25 UTC (rev 644)
+++ trunk/maay/node.py	2005-11-24 11:56:42 UTC (rev 645)
@@ -62,14 +62,11 @@
 
 from maay import presenceclient
 from maay.webapplication import Maay404, INodeConfiguration, SearchForm
+from maay.localinfo import NODE_HOST
+from maay.nodeconfig import NODE_PORT, NODE_ID
 
-
 ## nevow app/server setup ############################################
 
-NODE_HOST = socket.gethostbyname(socket.gethostname())
-NODE_PORT = nodeConfig.rpcserver_port
-
-
 # MaayMindFactory might be helpful to access request informations
 # in portal. (not sure it's really aimed to be used this way :-)
 class MaayMindFactory:
@@ -157,7 +154,7 @@
             webQuerier = None
         else:
             realm.createUserSession(WEB_AVATARID, webQuerier)
-            webQuerier.registerNode(self.config.get_node_id(),
+            webQuerier.registerNode(NODE_ID,
                                     ip=NODE_HOST,
                                     port=NODE_PORT,
                                     bandwidth=nodeConfig.bandwidth)
@@ -262,7 +259,7 @@
     presenceclient.notify(nodeConfig.presence_host,
                           nodeConfig.presence_port,
                           maayPortal.webQuerier,
-                          nodeConfig.get_node_id(),
+                          NODE_ID,
                           socket.gethostbyname(socket.gethostname()),
                           nodeConfig.rpcserver_port,
                           nodeConfig.bandwidth)

Modified: trunk/maay/nodeconfig.py
===================================================================
--- trunk/maay/nodeconfig.py	2005-11-24 10:12:25 UTC (rev 644)
+++ trunk/maay/nodeconfig.py	2005-11-24 11:56:42 UTC (rev 645)
@@ -17,7 +17,14 @@
 #     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 
-from maay.configuration import NodeConfiguration
+from maay.configuration import NodeConfiguration, IndexerConfiguration
 
 nodeConfig = NodeConfiguration()
 nodeConfig.load()
+indexerConfig = IndexerConfiguration()
+indexerConfig.load_from_files()
+
+NODE_PORT = nodeConfig.rpcserver_port
+NODE_ID = nodeConfig.get_node_id()
+
+QUERY_LIFE_TIME = nodeConfig.query_life_time

Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-24 10:12:25 UTC (rev 644)
+++ trunk/maay/p2pquerier.py	2005-11-24 11:56:42 UTC (rev 645)
@@ -34,15 +34,11 @@
 from twisted.web.xmlrpc import Proxy
 from twisted.internet import reactor
 from maay.texttool import makeAbstract, removeSpace, untagText
-from maay.nodeconfig import nodeConfig
 from maay.query import Query
 from maay.localinfo import NODE_LOGIN, NODE_HOST
+from maay.nodeconfig import NODE_PORT, NODE_ID, QUERY_LIFE_TIME
 
-nodeConfig.load()
 
-NODE_PORT = nodeConfig.rpcserver_port
-NODE_ID = nodeConfig.get_node_id()
-
 QUERIER = None
 
 class QueryVersionMismatch(Exception):
@@ -192,7 +188,7 @@
         self._answerCallbacks = {}
         # now, read a config. provided value for EXPIRATION_TIME
         # and fire the garbage collector
-        P2pQuerier._EXPIRATION_TIME = max(nodeConfig.query_life_time,
+        P2pQuerier._EXPIRATION_TIME = max(QUERY_LIFE_TIME,
                                           P2pQuerier._EXPIRATION_TIME)
         reactor.callLater(self._EXPIRATION_TIME, self._markQueries)
 
@@ -300,8 +296,8 @@
     def relayAnswer(self, answer): 
         """record and forward answers to a query."""
         print "P2pQuerier relayAnswer : %s document(s) from %s:%s" \
-              % (len(answer.documents), answer.provider[1],
-                 answer.provider[2])
+              % (len(answer.documents), answer.provider[2],
+                 answer.provider[3])
         query = self._receivedQueries.get(answer.qid)
         if not query :
             query = self._sentQueries.get(answer.qid)
@@ -323,6 +319,8 @@
                 query.addMatch(document)
                 toSend.append(document)
             else:
+                #FIXME: shouldn't we add all documents regardless
+                #       of duplicates, so as to add a new provider entry ?
                 print "we already know this doc !!!@~^#{"
 
         if query.sender != NODE_ID:
@@ -432,7 +430,7 @@
         reactor.callLater(abs(CHECK_DELAY - right_now + now), checkOldest)
 
 
-socket.setdefaulttimeout(30)
+#socket.setdefaulttimeout(30)
 def nodeSleeps(node_ip, node_port):
     s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
     try:

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-24 10:12:25 UTC (rev 644)
+++ trunk/maay/querier.py	2005-11-24 11:56:42 UTC (rev 645)
@@ -34,6 +34,7 @@
 from zope.interface import Interface, implements
 
 from logilab.common.db import get_dbapi_compliant_module
+
 from maay.dbentity import ScoredDocument, Document, FileInfo, \
      DBEntity, DocumentProvider, DocumentScore, Word, Node, Result
 from maay.texttool import normalizeText, WORDS_RGX, MAX_STORED_SIZE
@@ -373,14 +374,14 @@
         cursor.close()
         return providers
         
-    def pushDocuments(self, qid, documents, provider=None):
+    def pushDocuments(self, qid, documents, our_node_id, provider=None):
         """push <documents> into the temporary table built for
         <qid>
         """
         cursor = self._cnx.cursor()
         try:
             for document in documents:
-                res = Result.fromDocument(document, qid, provider)
+                res = Result.fromDocument(document, qid, our_node_id, provider)
                 res.commit(cursor, update=False)
             cursor.close()
             self._cnx.commit()

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-24 10:12:25 UTC (rev 644)
+++ trunk/maay/webapplication.py	2005-11-24 11:56:42 UTC (rev 645)
@@ -41,13 +41,15 @@
 from maay import VERSION
 from maay.querier import IQuerier, WEB_AVATARID
 from maay.configuration import get_path_of
+from maay.nodeconfig import indexerConfig, NODE_ID
 from maay.texttool import makeAbstract, WORDS_RGX, normalizeText, boldifyText
 from maay.query import Query, parseWords
 from maay.p2pquerier import P2pQuerier, P2pQuery
 from maay.dbentity import ScoredDocument, Document
-from maay import indexer 
+import maay.indexer as indexer
 
 
+
 def _is_valid_directory(directory):
     try:
         mode = os.stat(directory)[stat.ST_MODE]
@@ -132,7 +134,7 @@
 
     def __init__(self):
         athena.LivePage.__init__(self)
-        self.indexerConfig = indexer.indexerConfig
+        self.indexerConfig = indexerConfig
         self.indexerConfig.load_from_files()
         self.msg = 'not running'
 
@@ -261,7 +263,7 @@
         MaayPage.__init__(self, maayId)
         self.querier = querier
         self.p2pquerier = p2pquerier
-        self.download_dir = indexer.indexerConfig.download_dir
+        self.download_dir = indexerConfig.download_dir
 
     def render_custom_htmlheader(self, context):
         return [
@@ -299,16 +301,16 @@
         addPrivateFolder = context.arg('addPrivateFolder', 0)
         if addPrivateFolder:
             if _is_valid_directory(addPrivateFolder):
-                indexer.indexerConfig.private_dir.append(addPrivateFolder)
-                indexer.indexerConfig.save()
+                indexerConfig.private_dir.append(addPrivateFolder)
+                indexerConfig.save()
             else:
                 alertMsg = "\\'%s\\' is not a valid folder" % addPrivateFolder
  
         removePrivateFolder = context.arg('removePrivateFolder', 0)
         if removePrivateFolder:
             try:
-                indexer.indexerConfig.private_dir.remove(removePrivateFolder)
-                indexer.indexerConfig.save()
+                indexerConfig.private_dir.remove(removePrivateFolder)
+                indexerConfig.save()
             except ValueError:
                 print "Folder '%s' not in the private directory list"
 
@@ -316,16 +318,16 @@
         addPublicFolder = context.arg('addPublicFolder', 0)
         if addPublicFolder:
             if _is_valid_directory(addPublicFolder):
-                indexer.indexerConfig.public_dir.append(addPublicFolder)
-                indexer.indexerConfig.save()
+                indexerConfig.public_dir.append(addPublicFolder)
+                indexerConfig.save()
             else:
                 alertMsg = "\\'%s\\' is not a valid folder" % addPublicFolder
  
         removePublicFolder = context.arg('removePublicFolder', 0)
         if removePublicFolder:
             try:
-                indexer.indexerConfig.public_dir.remove(removePublicFolder)
-                indexer.indexerConfig.save()
+                indexerConfig.public_dir.remove(removePublicFolder)
+                indexerConfig.save()
             except ValueError:
                 print "Folder '%s' not in the private directory list"
 
@@ -333,16 +335,16 @@
         addSkippedFolder = context.arg('addSkippedFolder', 0)
         if addSkippedFolder:
             if _is_valid_directory(addSkippedFolder):
-                indexer.indexerConfig.skip_dir.append(addSkippedFolder)
-                indexer.indexerConfig.save()
+                indexerConfig.skip_dir.append(addSkippedFolder)
+                indexerConfig.save()
             else:
                 alertMsg = "\\'%s\\' is not a valid folder" % addSkippedFolder
  
         removeSkippedFolder = context.arg('removeSkippedFolder', 0)
         if removeSkippedFolder:
             try:
-                indexer.indexerConfig.skip_dir.remove(removeSkippedFolder)
-                indexer.indexerConfig.save()
+                indexerConfig.skip_dir.remove(removeSkippedFolder)
+                indexerConfig.save()
             except ValueError:
                 print "Folder '%s' not in the private directory list"
 
@@ -481,17 +483,17 @@
     def render_sort_rel(self, context, data):
         if self.query.order == 'relevance':
             return '[relevance]'
-        return 'relevance'
+        return ' relevance '
     
     def render_sort_pop(self, context, data):
         if self.query.order == 'popularity':
             return '[popularity]'
-        return 'popularity'
+        return ' popularity '
         
     def render_sort_pub(self, context, data):
         if self.query.order == 'publication_time':
             return '[publication time]'
-        return 'publication time'
+        return ' publication time '
 
     def render_totalcount(self, context, data):
         localCount, distantCount = self.querier.countResults(self.qid)
@@ -601,7 +603,7 @@
             self.p2pQuery = p2pQuery
             # purge old results
             self.querier.purgeOldResults()
-            self.querier.pushDocuments(self.qid, results, provider=None)
+            self.querier.pushDocuments(self.qid, results, NODE_ID, provider=None)
             self.results = self.querier.getQueryResults(self.query)
             
     # XXX (refactoring): provide a common base class for LivePages



From adimasci at berlios.de  Thu Nov 24 14:00:00 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Thu, 24 Nov 2005 14:00:00 +0100
Subject: [Maay-svncheckins] r646 - trunk/maay/data
Message-ID: <200511241300.jAOD00A3017636@sheep.berlios.de>

Author: adimasci
Date: 2005-11-24 13:59:59 +0100 (Thu, 24 Nov 2005)
New Revision: 646

Modified:
   trunk/maay/data/indexationpage.html
Log:
javascript can be unhappy with variables named 'private' or 'public'

Modified: trunk/maay/data/indexationpage.html
===================================================================
--- trunk/maay/data/indexationpage.html	2005-11-24 11:56:42 UTC (rev 645)
+++ trunk/maay/data/indexationpage.html	2005-11-24 12:59:59 UTC (rev 646)
@@ -24,11 +24,11 @@
   elt.innerHTML = count;
 }
 
-function updateStatus(msg, private, public) {
+function updateStatus(msg, priv, pub) {
   elt = document.getElementById('statusMessage');
   elt.innerHTML = msg;
-  updatePrivateDocumentCount(private);
-  updatePublicDocumentCount(public);
+  updatePrivateDocumentCount(priv);
+  updatePublicDocumentCount(pub);
 }
 
 



From adimasci at berlios.de  Thu Nov 24 15:46:54 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Thu, 24 Nov 2005 15:46:54 +0100
Subject: [Maay-svncheckins] r647 - trunk/maay
Message-ID: <200511241446.jAOEksBe017121@sheep.berlios.de>

Author: adimasci
Date: 2005-11-24 15:46:53 +0100 (Thu, 24 Nov 2005)
New Revision: 647

Modified:
   trunk/maay/indexer.py
   trunk/maay/querier.py
   trunk/maay/webapplication.py
Log:
- create a whole new querier for local indexation, with its
  own connection to avoid concurrent access
- added a few try/finally around sql queries

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-24 12:59:59 UTC (rev 646)
+++ trunk/maay/indexer.py	2005-11-24 14:46:53 UTC (rev 647)
@@ -40,7 +40,7 @@
 
 from maay import converter
 from maay.dbentity import FutureDocument, Document, FileInfo
-from maay.querier import MaayAuthenticationError
+from maay.querier import MaayAuthenticationError, MaayQuerier
 from maay.texttool import removeControlChar
 from threading import Thread
 from twisted.python import log
@@ -102,7 +102,7 @@
     def __init__(self, thefile, cause):
         self.thefile = thefile
         self.cause = cause
-
+    
     def __str__(self):
         return "Won't index %s because %s" % (self.thefile,
                                               self.cause)
@@ -284,9 +284,8 @@
     """special indexer that is meant to run locally, using
     a querier instance rather than connecting to a RPC server
     """    
-    def __init__(self, indexerConfig, querier, nodeId, observers=None):
+    def __init__(self, indexerConfig, querier, observers=None):
         self.querier = querier
-        self.nodeId = nodeId
         # baseclass's __init__ must be called *after* local initialisation
         # otherwise it could call _purgeEverything with an inconsistent state
         AbstractIndexer.__init__(self, indexerConfig, observers)
@@ -326,12 +325,15 @@
             futureDoc.text = removeControlChar(futureDoc.text)
             if self.verbose:
                 print '[local] ('+safe_encode(futureDoc.title)+')'
-            self.querier.indexDocument(self.nodeId, futureDoc)
+            # first argument of indexDocument set to None means we're
+            # working locally
+            self.querier.indexDocument(None, futureDoc)
         except Exception, exc:
             if self.verbose:
                 print "[local] An error occured on the Node while indexing %s" % \
                       safe_encode(futureDoc.filename)
-                print exc
+                import traceback
+                traceback.print_exc()
                 print "[local] See Node log for details"
             else:
                 print "[local] Error indexing %s: %s" % \
@@ -345,7 +347,7 @@
 if sys.platform == 'win32':
     def normalizeCase(path):
         return path.lower()
-else:    
+else:
     def normalizeCase(path):
         return path
 
@@ -411,27 +413,31 @@
     print '** is_running()', indexer_thread
     return indexer_thread and indexer_thread.isAlive()
 
-def runLocally(querier, nodeId, observers=None):
-    indexer = LocalIndexer(indexerConfig, querier, nodeId, observers)
+def runLocally(localQuerier, observers=None):
+    indexer = LocalIndexer(indexerConfig, localQuerier, observers)
     indexer.start()
     
-def start_as_thread(maayQuerier, nodeId, webpage):
+def start_as_thread(nodeConfig, webpage):
+    localQuerier = MaayQuerier(nodeConfig.db_host, nodeConfig.db_name,
+                               nodeConfig.user, nodeConfig.password)
     global indexer_thread
     if is_running():
         print "Indexer already running", indexer_thread
     else:
         print "launching indexer"
-        indexer_thread = Thread(target=runLocally, args=(maayQuerier, nodeId, [webpage],))
+        indexer_thread = Thread(target=runLocally, args=(localQuerier, [webpage],))
         indexer_thread.start()
 
 # index one file from webapp in a thread
 
-def indexJustOneFile(maayQuerier, nodeId, filepath):
-    thread = Thread(target=_just_one, args=(maayQuerier, nodeId, filepath))
+def indexJustOneFile(nodeConfig, filepath):
+    localQuerier = MaayQuerier(nodeConfig.db_host, nodeConfig.db_name,
+                               nodeConfig.user, nodeConfig.password)
+    thread = Thread(target=_just_one, args=(localQuerier, filepath))
     thread.start()
 
-def _just_one(querier, nodeId, filepath):
-    indexer = LocalIndexer(indexerConfig, querier, nodeId)
+def _just_one(querier, filepath):
+    indexer = LocalIndexer(indexerConfig, querier)
     print 'going to index file %s', filepath
     try:
         # log.startLogging(open('maay-indexer.log', 'w'))

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-24 12:59:59 UTC (rev 646)
+++ trunk/maay/querier.py	2005-11-24 14:46:53 UTC (rev 647)
@@ -41,6 +41,7 @@
 
 IntegrityError = None
 
+
 class MaayAuthenticationError(Exception):
     """raised on db authentication failure"""
 
@@ -94,13 +95,11 @@
     def close():
         """closes the DB connection"""
 
-
 class AnonymousQuerier:
     """High-Level interface to Maay SQL database for anonymous
     (typically peers) users
     """
     implements(IQuerier)
-
     searchInPrivate = False
     
     def __init__(self, host='', database='', user='', password='',
@@ -340,14 +339,16 @@
         for <qid>
         """
         cursor = self._cnx.cursor()
-        subQuery = "SELECT * FROM results WHERE query_id='%s' GROUP BY document_id HAVING record_ts=MIN(record_ts)" % qid
-        localCountQuery = "SELECT COUNT(*) FROM (%s) AS T WHERE T.host='localhost'" % subQuery
-        distantCountQuery = "SELECT COUNT(*) FROM (%s) AS T WHERE T.host != 'localhost'" % subQuery
-        cursor.execute(localCountQuery)
-        localCount = cursor.fetchall()[0][0]
-        cursor.execute(distantCountQuery)
-        distantCount = cursor.fetchall()[0][0]        
-        cursor.close()
+        try:
+            subQuery = "SELECT * FROM results WHERE query_id='%s' GROUP BY document_id HAVING record_ts=MIN(record_ts)" % qid
+            localCountQuery = "SELECT COUNT(*) FROM (%s) AS T WHERE T.host='localhost'" % subQuery
+            distantCountQuery = "SELECT COUNT(*) FROM (%s) AS T WHERE T.host != 'localhost'" % subQuery
+            cursor.execute(localCountQuery)
+            localCount = cursor.fetchall()[0][0]
+            cursor.execute(distantCountQuery)
+            distantCount = cursor.fetchall()[0][0]
+        finally:
+            cursor.close()
         return localCount, distantCount
 
     def getQueryResults(self, query, onlyLocal=False, onlyDistant=False):
@@ -442,97 +443,111 @@
         `document_providers` table reference them, as well as the
         corresponding `document_scores` rows"""
         cursor = self._cnx.cursor()
-        query1 = """DELETE documents
-                    FROM documents LEFT JOIN files
-                             ON documents.db_document_id = files.db_document_id
-                    WHERE files.db_document_id IS NULL"""
-        rows = cursor.execute(query1)
-        query2 = """DELETE document_scores
-                    FROM document_scores LEFT JOIN  documents
-                       ON document_scores.db_document_id = documents.db_document_id
-                    WHERE documents.db_document_id IS NULL"""
-        rows += cursor.execute(query2)
-        cursor.close()
-        self._cnx.commit()
+        try:
+            query1 = """DELETE documents
+                        FROM documents LEFT JOIN files
+                                 ON documents.db_document_id = files.db_document_id
+                        WHERE files.db_document_id IS NULL"""
+            rows = cursor.execute(query1)
+            query2 = """DELETE document_scores
+                        FROM document_scores LEFT JOIN  documents
+                           ON document_scores.db_document_id = documents.db_document_id
+                        WHERE documents.db_document_id IS NULL"""
+            rows += cursor.execute(query2)
+            self._cnx.commit()
+        finally:
+            cursor.close()
+            self._cnx.rollback()
+            traceback.print_exc()
         print "removed %d rows related to unreferenced documents" % rows
         return rows
 
     def getDocumentCount(self):
         """get document count"""
-        cursor = self._cnx.cursor()
-        docCounts = Document.getDocumentCount(cursor)
-        cursor.close()
+        try:
+            cursor = self._cnx.cursor()
+            docCounts = Document.getDocumentCount(cursor)
+        finally:
+            cursor.close()
         return docCounts
 
     def indexDocument(self, nodeId, futureDoc):
         """Inserts or update information in table documents,
-        file_info, document_score and word"""
+        file_info, document_score and word
+        :type nodeId: node_id or None if working locally
+        """
         # XXX Decide if we can compute the content_hash and mime_type
         # ourselves or if the indexer should do it and
         # pass the values as an argument
         cursor = self._cnx.cursor()
-        # insert or update in table file_info
-        fileinfo = FileInfo.selectWhere(cursor, file_name=futureDoc.filename)
-        # insert title into text to be able to find documents according
-        # to their title (e.g: searching 'foo' should find 'foo.pdf')
-        futureDoc.text = '%s %s' % (futureDoc.title, futureDoc.text)
-        if fileinfo:
-            fileinfo = fileinfo[0]
-            fileinfo.file_time = futureDoc.lastModificationTime
-            fileinfo.state = futureDoc.state
-            fileinfo.file_state = futureDoc.file_state
-            doc = Document.selectWhere(cursor,
-                                       db_document_id=fileinfo.db_document_id)
-            if not doc or doc[0].document_id!=futureDoc.content_hash :
-                # no document was found or a document with another content
-                # in both case, we create a new Document in database
-                # (we don't want to modify the existing one, because it
-                # can be shared by several files)
-                doc = self._createDocument(cursor, futureDoc)
-                fileinfo.db_document_id = doc.db_document_id
+        try:
+            # insert or update in table file_info
+            fileinfo = FileInfo.selectWhere(cursor, file_name=futureDoc.filename)
+            # insert title into text to be able to find documents according
+            # to their title (e.g: searching 'foo' should find 'foo.pdf')
+            futureDoc.text = '%s %s' % (futureDoc.title, futureDoc.text)
+            if fileinfo:
+                fileinfo = fileinfo[0]
+                fileinfo.file_time = futureDoc.lastModificationTime
+                fileinfo.state = futureDoc.state
+                fileinfo.file_state = futureDoc.file_state
+                doc = Document.selectWhere(cursor,
+                                           db_document_id=fileinfo.db_document_id)
+                if not doc or doc[0].document_id!=futureDoc.content_hash :
+                    # no document was found or a document with another content
+                    # in both case, we create a new Document in database
+                    # (we don't want to modify the existing one, because it
+                    # can be shared by several files)
+                    doc = self._createDocument(cursor, futureDoc)
+                    fileinfo.db_document_id = doc.db_document_id
+                else:
+                    # document has not changed
+                    doc = doc[0]
+                    if doc.state != futureDoc.state:
+                        doc.state = futureDoc.state
+                        doc.commit(cursor, update=True)
+                fileinfo.commit(cursor, update=True)
             else:
-                # document has not changed
-                doc = doc[0]
-                if doc.state != futureDoc.state:
+                # file unknown
+                # try to find a Document with same hash value
+                doc = Document.selectWhere(cursor,
+                                           document_id=futureDoc.content_hash)
+                if doc:
+                    doc = doc[0]
                     doc.state = futureDoc.state
+                    doc.publication_time = max(doc.publication_time,
+                                               futureDoc.lastModificationTime)
                     doc.commit(cursor, update=True)
-                
-            fileinfo.commit(cursor, update=True)
-                
-        else:
-            # file unknown
-            # try to find a Document with same hash value
-            doc = Document.selectWhere(cursor,
-                                       document_id=futureDoc.content_hash)
-            if doc:
-                doc = doc[0]
-                doc.state = futureDoc.state
-                doc.publication_time = max(doc.publication_time,
-                                           futureDoc.lastModificationTime)
-                doc.commit(cursor, update=True)
-            else:
-                doc = self._createDocument(cursor, futureDoc)
-                doc = Document.selectWhere(cursor, document_id=futureDoc.content_hash)[0]
-
-            fileinfo = FileInfo(db_document_id=doc.db_document_id,
-                                file_name=futureDoc.filename,
-                                file_time=futureDoc.lastModificationTime,
-                                state=futureDoc.state,
-                                file_state=futureDoc.file_state)
-            fileinfo.commit(cursor, update=False)
-
-        self._updateScores(cursor, doc.db_document_id, futureDoc.text)
-        provider = DocumentProvider.selectOrInsertWhere(cursor,
-                                          db_document_id=doc.db_document_id,
-                                          node_id=nodeId)[0]
-        provider.last_providing_time = int(time.time())
-        provider.commit(cursor, update=True)
-        node = Node.selectWhere(cursor, node_id=nodeId)[0]
-        node.last_seen_time = int(time.time())
-        node.commit(cursor, update=True)
-        cursor.close()
-        self._cnx.commit()
-        
+                else:
+                    doc = self._createDocument(cursor, futureDoc)
+                    doc = Document.selectWhere(cursor, document_id=futureDoc.content_hash)[0]
+                fileinfo = FileInfo(db_document_id=doc.db_document_id,
+                                    file_name=futureDoc.filename,
+                                    file_time=futureDoc.lastModificationTime,
+                                    state=futureDoc.state,
+                                    file_state=futureDoc.file_state)
+                fileinfo.commit(cursor, update=False)
+            self._updateScores(cursor, doc.db_document_id, futureDoc.text)
+            # update last seen time only if not working locally
+            if nodeId is not None:
+                provider = DocumentProvider.selectOrInsertWhere(cursor,
+                                                                db_document_id=doc.db_document_id,
+                                                                node_id=nodeId)[0]
+                provider.last_providing_time = int(time.time())
+                provider.commit(cursor, update=True)
+                nodes = Node.selectWhere(cursor, node_id=nodeId)
+                if not nodes:
+                    self._cnx.rollback()
+                    cursor.close()
+                    raise ValueError('provider %s is not registered in our database !')
+                node = nodes[0]
+                node.last_seen_time = int(time.time())
+                node.commit(cursor, update=True)
+            cursor.close()
+            self._cnx.commit()
+        except:
+            self._cnx.rollback()
+            raise
     def _createDocument(self, cursor, futureDoc):
 
         doc = Document(document_id=futureDoc.content_hash,

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-24 12:59:59 UTC (rev 646)
+++ trunk/maay/webapplication.py	2005-11-24 14:46:53 UTC (rev 647)
@@ -361,7 +361,8 @@
                 msg = "Indexer already running"
             else:
                 msg = "Indexer started"
-                indexer.start_as_thread(self.querier, self.maayId, _factory)
+                nodeConfig = INodeConfiguration(context)
+                indexer.start_as_thread(nodeConfig, _factory)
         indexationPage.msg = msg
         indexationPage.alertmessage = alertMsg
         return indexationPage
@@ -397,51 +398,52 @@
         docid = context.arg('docid')
         if not host or not port or not docid:
             return Maay404()
+        nodeConfig = INodeConfiguration(context)
         proxy = Proxy(str('http://%s:%s' % (host, port)))
         print "[webapp] trying to donwload %r from %s:%s" % (filename, host, port)
         d = proxy.callRemote('downloadFile', docid, words)
-        d.addCallback(self.gotDataBack, filename)
-        d.addErrback(self.tryOtherProviders, filename, words, host,
+        d.addCallback(self.gotDataBack, nodeConfig, filename)
+        d.addErrback(self.tryOtherProviders, nodeConfig, filename, words, host,
                      port, docid, qid)
         return d
 
-    def gotDataBack(self, rpcFriendlyData, filename):
+    def gotDataBack(self, rpcFriendlyData, nodeConfig, filename):
         fileData = rpcFriendlyData.data
         print " ... downloaded !"
         filepath = osp.join(self.download_dir, filename)
-        f=file(filepath,'wb')
+        f = file(filepath,'wb')
         f.write(fileData)
         f.close()
-        return DistantFilePage(self.querier, self.maayId, filepath)
+        return DistantFilePage(nodeConfig, filepath)
 
     def onDownloadFileError(self, error, filename):
         msg = "Error while downloading file: %s" % (filename,)
         return Maay404(msg)
 
-    def tryOtherProviders(self, error, filename, words, host, port, docId, qid):
+    def tryOtherProviders(self, error, nodeConfig, filename, words, host, port, docId, qid):
         """starts to explore the list of other providers"""
         providers = self.querier.getProvidersFor(docId, qid)
         self.providerSet = set(providers)
         self.providerSet.remove((host, int(port)))
-        return self.retryWithOtherProvider('...', words, docId, filename)
+        return self.retryWithOtherProvider('...', nodeConfig, words, docId, filename)
     
-    def retryWithOtherProvider(self, error, words, docId, filename):
+    def retryWithOtherProvider(self, error, nodeConfig, words, docId, filename):
         if self.providerSet:
             nextHost, nextPort = self.providerSet.pop()
             print "[webapp] trying to donwload %r from %s:%s" % (filename, nextHost, nextPort)
             proxy = Proxy(str('http://%s:%s' % (nextHost, nextPort)))
             d = proxy.callRemote('downloadFile', docId, words)
             d.addCallback(self.gotDataBack, filename)
-            d.addErrback(self.retryWithOtherProvider, words, docId, filename)
+            d.addErrback(self.retryWithOtherProvider, nodeConfig, words, docId, filename)
             return d
         else:
             return self.onDownloadFileError('no provider available', filename)
     
 class DistantFilePage(static.File):
-    def __init__(self, querier, nodeId, filepath):
+    def __init__(self, nodeConfig, filepath):
         static.File.__init__(self, filepath)
         self.filepath = filepath
-        indexer.indexJustOneFile(querier, nodeId, self.filepath)
+        indexer.indexJustOneFile(nodeConfig, self.filepath)
 
 class ResultsPageMixIn:
 



From aurelienc at berlios.de  Thu Nov 24 16:23:06 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Thu, 24 Nov 2005 16:23:06 +0100
Subject: [Maay-svncheckins] r648 - trunk/maay
Message-ID: <200511241523.jAOFN6ll021574@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-24 16:23:06 +0100 (Thu, 24 Nov 2005)
New Revision: 648

Modified:
   trunk/maay/dbentity.py
Log:
Fix sort order


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-24 14:46:53 UTC (rev 647)
+++ trunk/maay/dbentity.py	2005-11-24 15:23:06 UTC (rev 648)
@@ -259,11 +259,6 @@
     getDocumentCount = classmethod(getDocumentCount)
 
 
-def sqlCriterium(foo):
-    return ("D.publication_time, "
-            "DS.relevance, "
-            "DS.popularity ")
-
 def sqlOrder(order, direction):
     if order == 'publication_time':
         prefix = 'ORDER BY D.'
@@ -309,8 +304,10 @@
                         "D.size, "
                         "D.text, "
                         "D.url, "
-                        "D.mime_type, ")
-        query += sqlCriterium("foo") #to be fixed soon
+                        "D.mime_type, "
+                        "D.publication_time, "
+                        "DS.relevance, "
+                        "DS.popularity ")
         query += ("FROM documents D, document_scores DS "
                   "WHERE DS.db_document_id=D.db_document_id "
                   "AND DS.word IN (%s) "
@@ -388,15 +385,15 @@
         else:
             where = ''
         if query.order == 'publication_time':
-            orderClause = 'publication_time, relevance'
+            orderClause = 'publication_time %s, relevance %s' % (query.direction, query.direction)
         else:
-            orderClause = '%s, publication_time' % (query.order,)
+            orderClause = '%s %s, publication_time %s' % (query.order, query.direction, query.direction)
         aliasedAttrs = ['T.%s' % attr for attr in cls.attributes]
         # If only Mysql4.1 supported VIEWS
         subQuery = 'SELECT * FROM results WHERE query_id=%(query_id)s GROUP BY document_id HAVING record_ts=MIN(record_ts)'
-        sqlQuery = 'SELECT %s FROM (%s) AS T %s ORDER BY %s %s LIMIT %s OFFSET %s' % (
+        sqlQuery = 'SELECT %s FROM (%s) AS T %s ORDER BY %s LIMIT %s OFFSET %s' % (
             ', '.join(aliasedAttrs), subQuery, where,
-            orderClause, query.direction, limit, query.offset)
+            orderClause, limit, query.offset)
         print "QUERY =", sqlQuery
         return sqlQuery, {'query_id' : query.qid}
     _selectQuery = classmethod(_selectQuery)



From aurelienc at berlios.de  Thu Nov 24 16:25:13 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Thu, 24 Nov 2005 16:25:13 +0100
Subject: [Maay-svncheckins] r649 - in trunk/maay: . data
Message-ID: <200511241525.jAOFPDoC021827@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-24 16:25:12 +0100 (Thu, 24 Nov 2005)
New Revision: 649

Modified:
   trunk/maay/data/livefragment.html
   trunk/maay/data/liveresults.html
   trunk/maay/webapplication.py
Log:
Highlight the current sort criterium


Modified: trunk/maay/data/livefragment.html
===================================================================
--- trunk/maay/data/livefragment.html	2005-11-24 15:23:06 UTC (rev 648)
+++ trunk/maay/data/livefragment.html	2005-11-24 15:25:12 UTC (rev 649)
@@ -11,14 +11,12 @@
         <td> <div class="distantResult"><a href="javascript: onlyDistantResults();">remote result</a>(<span nevow:render="distantcount" />)</div></td>
         <td>-</td>
         <td><a href="javascript: allResults();">all results </a>(<span nevow:render="totalcount" />)</td>
-        <div class="sortBar">
-          <td> - <b> Sorted by: </b></td>
-          <td><a href="javascript: sortBy('relevance');"><div class="relevance"><span nevow:render="sort_rel" /></div></a></td>
-          <td> - </td>
-          <td><a href="javascript: sortBy('popularity');"><div class="popularity"><span nevow:render="sort_pop" /></div></a></td>
-          <td> - </td>
-          <td><a href="javascript: sortBy('publication_time');"><div class="publication"><span nevow:render="sort_pub" /></div></a></td>
-        </div>
+        <td> - <b> Sorted by: </b></td>
+        <td><div nevow:render="relevanceDiv"/></td>
+        <td> - </td>
+        <td><div nevow:render="popularityDiv"/></td>
+        <td> - </td>
+        <td><div nevow:render="publicationDiv"/></td>
       </tr>
     </table>
   <center>

Modified: trunk/maay/data/liveresults.html
===================================================================
--- trunk/maay/data/liveresults.html	2005-11-24 15:23:06 UTC (rev 648)
+++ trunk/maay/data/liveresults.html	2005-11-24 15:25:12 UTC (rev 649)
@@ -8,10 +8,16 @@
     <nevow:invisible nevow:render="liveglue" />
 
     <script type='text/javascript' language='javascript'>
+
+var selectedCriterium = 'publication_time';
+
 function updateResults(source) {
  div = document.getElementById('resultsDiv');
  div.innerHTML = source;
  abortNeeded = true;
+
+// new_elt = document.getElementById(selectedCriterium);
+// new_elt.setAttribute('class', 'selectedCriterium');
 }
 
 function startConnection() {
@@ -43,6 +49,7 @@
 function sortBy(sortCriteria) {
  var d = server.callRemote('sortBy', sortCriteria);
  d.addCallback(updateResults);
+ selectedCriterium = sortCriteria;
 }
     </script>
 

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-24 15:23:06 UTC (rev 648)
+++ trunk/maay/webapplication.py	2005-11-24 15:25:12 UTC (rev 649)
@@ -482,21 +482,6 @@
         _, distantCount = self.querier.countResults(self.qid)
         return distantCount
 
-    def render_sort_rel(self, context, data):
-        if self.query.order == 'relevance':
-            return '[relevance]'
-        return ' relevance '
-    
-    def render_sort_pop(self, context, data):
-        if self.query.order == 'popularity':
-            return '[popularity]'
-        return ' popularity '
-        
-    def render_sort_pub(self, context, data):
-        if self.query.order == 'publication_time':
-            return '[publication time]'
-        return ' publication time '
-
     def render_totalcount(self, context, data):
         localCount, distantCount = self.querier.countResults(self.qid)
         return localCount + distantCount
@@ -532,7 +517,34 @@
         if data.port == 0:
             return ''
         return '%s (%s) - ' % (data.login, data.host)
-    
+
+    def render_relevanceDiv(self, context, data):
+        if self.query.order == 'relevance':
+            return tags.xml('<div class="selectedCriterium">'
+                            'relevance</div>')
+        else:
+            return tags.xml("""<div class="unselectedCriterium"><a href="javascript: sortBy('relevance');">"""
+                            'relevance</div>')
+
+    def render_popularityDiv(self, context, data):
+        if self.query.order == 'popularity':
+            return tags.xml('<div class="selectedCriterium">'
+                            'popularity</div>')
+        else:
+            return tags.xml("""<div class="unselectedCriterium"><a href="javascript: sortBy('popularity');">"""
+                            'popularity</div>')
+
+    def render_publicationDiv(self, context, data):
+        if self.query.order == 'publication_time':
+            return tags.xml('<div class="selectedCriterium">'
+                            'publication time</div>')
+        else:
+            return tags.xml("""<div class="unselectedCriterium"><a href="javascript: sortBy('publication_time');">"""
+                            'publication time</div>')
+
+#    def render_
+
+
     def render_row(self, context, data):
         document = data
         words = self.query.words #WORDS (was .split())
@@ -618,7 +630,7 @@
         
     def onNewResults(self, provider, results):
         results = [ScoredDocument(**params) for params in results]
-        self.querier.pushDocuments(self.qid, results, provider)
+        self.querier.pushDocuments(self.qid, results, NODE_ID, provider)
         results = self.querier.getQueryResults(self.query,
                                                onlyLocal=self.onlyLocal,
                                                onlyDistant=self.onlyDistant)



From aurelienc at berlios.de  Thu Nov 24 16:25:44 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Thu, 24 Nov 2005 16:25:44 +0100
Subject: [Maay-svncheckins] r650 - trunk/maay/data
Message-ID: <200511241525.jAOFPiaj021858@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-24 16:25:43 +0100 (Thu, 24 Nov 2005)
New Revision: 650

Modified:
   trunk/maay/data/maay.css
Log:
Oooops, forgot the css stuff


Modified: trunk/maay/data/maay.css
===================================================================
--- trunk/maay/data/maay.css	2005-11-24 15:25:12 UTC (rev 649)
+++ trunk/maay/data/maay.css	2005-11-24 15:25:43 UTC (rev 650)
@@ -76,8 +76,6 @@
   border-left-color: #00ff00;
 }
 
-
-
 div.distantResult {
   margin-top: 5px;
   margin-bottom: 5px;
@@ -86,6 +84,38 @@
   border-left-color: #ff0000;
 }
 
+div.selectedLocalResult { 
+  color: blue;
+  background-color: yellow;
+  margin-top: 5px;
+  margin-bottom: 5px;
+  border-left-style: solid;
+  border-left-width: 4px;
+  border-left-color: #00ff00;
+ }
+
+div.selectedDistantResult { 
+  color: blue;
+  background-color: yellow;
+  margin-top: 5px;
+  margin-bottom: 5px;
+  border-left-style: solid;
+  border-left-width: 4px;
+  border-left-color: #ff0000;
+ }
+
+div.selectedCriterium { 
+  color: blue;
+  background-color: yellow;
+ }
+
+div.unselectedCriterium { 
+  color: black; 
+  background-color: white;
+  text-decoration: underline;
+ }
+
+
 div.message {
   text-align: right;
   background: #e5ecf9;



From aurelienc at berlios.de  Thu Nov 24 17:18:20 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Thu, 24 Nov 2005 17:18:20 +0100
Subject: [Maay-svncheckins] r652 - in trunk/maay: . data
Message-ID: <200511241618.jAOGIK4t027433@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-24 17:18:19 +0100 (Thu, 24 Nov 2005)
New Revision: 652

Modified:
   trunk/maay/data/livefragment.html
   trunk/maay/data/maay.css
   trunk/maay/webapplication.py
Log:
Added auto hilighting to the left buttons


Modified: trunk/maay/data/livefragment.html
===================================================================
--- trunk/maay/data/livefragment.html	2005-11-24 16:16:49 UTC (rev 651)
+++ trunk/maay/data/livefragment.html	2005-11-24 16:18:19 UTC (rev 652)
@@ -6,11 +6,11 @@
     <table>
       <tr>
         <td><b>Filter :</b></td>
-        <td><div class="localPublicResult"><a href="javascript: onlyLocalResults();">local result</a> (<span nevow:render="localcount" />)</div></td>
+        <td><div nevow:render="localResultsDiv"/>(<span nevow:render="localcount" />)</td>
         <td> - </td>
-        <td> <div class="distantResult"><a href="javascript: onlyDistantResults();">remote result</a>(<span nevow:render="distantcount" />)</div></td>
+        <td><div nevow:render="distantResultsDiv" />(<span nevow:render="distantcount" />)</td>
         <td>-</td>
-        <td><a href="javascript: allResults();">all results </a>(<span nevow:render="totalcount" />)</td>
+        <td><div nevow:render="allResultsDiv" />(<span nevow:render="totalcount" />)</td>
         <td> - <b> Sorted by: </b></td>
         <td><div nevow:render="relevanceDiv"/></td>
         <td> - </td>

Modified: trunk/maay/data/maay.css
===================================================================
--- trunk/maay/data/maay.css	2005-11-24 16:16:49 UTC (rev 651)
+++ trunk/maay/data/maay.css	2005-11-24 16:18:19 UTC (rev 652)
@@ -60,50 +60,45 @@
   text-align: center;
 }
 
-div.localPublicResult {
+.localPublicResults, .distantResults, .selectedLocalResults, .selectedDistantResults {
   margin-top: 5px;
   margin-bottom: 5px;
+  margin-right: 3px;
   border-left-style: solid;
-  border-left-width: 4px;
-  border-left-color: #00ff00;
+  border-left-width: 3px;
+  padding-left: 3px;
 }
 
-div.localPrivateResult {
-  margin-top: 5px;
-  margin-bottom: 5px;
-  border-left-style: solid;
-  border-left-width: 4px;
+.localPublicResults {
   border-left-color: #00ff00;
 }
 
-div.distantResult {
-  margin-top: 5px;
-  margin-bottom: 5px;
-  border-left-style: solid;
-  border-left-width: 4px;
+.distantResults {
   border-left-color: #ff0000;
 }
 
-div.selectedLocalResult { 
-  color: blue;
+.selectedLocalResults { 
   background-color: yellow;
-  margin-top: 5px;
-  margin-bottom: 5px;
-  border-left-style: solid;
-  border-left-width: 4px;
   border-left-color: #00ff00;
  }
 
-div.selectedDistantResult { 
+.selectedDistantResults { 
   color: blue;
   background-color: yellow;
+  border-left-color: #ff0000;
+ }
+
+.allResults, .selectedAllResults { 
   margin-top: 5px;
   margin-bottom: 5px;
-  border-left-style: solid;
-  border-left-width: 4px;
-  border-left-color: #ff0000;
+  margin-right: 3px;
  }
 
+.selectedAllResults {  
+  color: blue;
+  background-color: yellow;
+ }
+
 div.selectedCriterium { 
   color: blue;
   background-color: yellow;

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-24 16:16:49 UTC (rev 651)
+++ trunk/maay/webapplication.py	2005-11-24 16:18:19 UTC (rev 652)
@@ -542,9 +542,29 @@
             return tags.xml("""<div class="unselectedCriterium"><a href="javascript: sortBy('publication_time');">"""
                             'publication time</div>')
 
-#    def render_
+    def render_localResultsDiv(self, context, data):
+        if self.onlyLocal:
+            return tags.xml('<span class="selectedLocalResults">local results</span>')
+        else:
+            return tags.xml('<span class="localPublicResults">'
+                            '<a href="javascript: onlyLocalResults();">local results</a></span>')
 
+    def render_distantResultsDiv(self, context, data):
+        if self.onlyDistant:
+            return tags.xml('<span class="selectedDistantResults">distant results</span>')
+        else:
+            return tags.xml('<span class="distantResults">'
+                            '<a href="javascript: onlyDistantResults();">distant results</a></span>')
 
+    def render_allResultsDiv(self, context, data):
+        if not (self.onlyLocal or self.onlyDistant):
+            return tags.xml('<span class="selectedAllResults">all results</span>')
+        else:
+            return tags.xml('<span class="allResults">'
+                            '<a href="javascript: allResults();">all results</a></span>')
+           
+
+
     def render_row(self, context, data):
         document = data
         words = self.query.words #WORDS (was .split())
@@ -569,10 +589,10 @@
         if document.host == 'localhost':
             baseurl = '/download?docid=%s' % (document.document_id,)
             # TODO: make a difference between private and public results
-            context.fillSlots('resultClass', "localPublicResult")
+            context.fillSlots('resultClass', "localPublicResults")
         else:
             baseurl = '/distantfile?docid=%s' % (document.document_id,)
-            context.fillSlots('resultClass', "distantResult")
+            context.fillSlots('resultClass', "distantResults")
             baseurl += '&host=%s' % (document.host,)
             baseurl += '&port=%s' % (document.port,)
         baseurl += '&filename=%s' % osp.basename(document.url)



From aurelienc at berlios.de  Thu Nov 24 17:16:52 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Thu, 24 Nov 2005 17:16:52 +0100
Subject: [Maay-svncheckins] r651 - trunk/maay
Message-ID: <200511241616.jAOGGqDZ027264@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-24 17:16:49 +0100 (Thu, 24 Nov 2005)
New Revision: 651

Modified:
   trunk/maay/dbentity.py
Log:
Removed print


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-24 15:25:43 UTC (rev 650)
+++ trunk/maay/dbentity.py	2005-11-24 16:16:49 UTC (rev 651)
@@ -394,7 +394,6 @@
         sqlQuery = 'SELECT %s FROM (%s) AS T %s ORDER BY %s LIMIT %s OFFSET %s' % (
             ', '.join(aliasedAttrs), subQuery, where,
             orderClause, limit, query.offset)
-        print "QUERY =", sqlQuery
         return sqlQuery, {'query_id' : query.qid}
     _selectQuery = classmethod(_selectQuery)
 



From aurelienc at berlios.de  Thu Nov 24 19:09:41 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Thu, 24 Nov 2005 19:09:41 +0100
Subject: [Maay-svncheckins] r653 - trunk/maay
Message-ID: <200511241809.jAOI9ftJ029257@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-24 19:09:28 +0100 (Thu, 24 Nov 2005)
New Revision: 653

Removed:
   trunk/maay/indexerconfig.py
   trunk/maay/nodeconfig.py
Modified:
   trunk/maay/configuration.py
   trunk/maay/image.py
   trunk/maay/indexer.py
   trunk/maay/node.py
   trunk/maay/p2pquerier.py
   trunk/maay/query.py
   trunk/maay/rpc.py
   trunk/maay/webapplication.py
Log:
Another round of the infamous configuration saga


Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-24 16:18:19 UTC (rev 652)
+++ trunk/maay/configuration.py	2005-11-24 18:09:28 UTC (rev 653)
@@ -376,3 +376,7 @@
     pass
 
 
+
+INDEXER_CONFIG = IndexerConfiguration()
+NODE_CONFIG = NodeConfiguration()
+

Modified: trunk/maay/image.py
===================================================================
--- trunk/maay/image.py	2005-11-24 16:18:19 UTC (rev 652)
+++ trunk/maay/image.py	2005-11-24 18:09:28 UTC (rev 653)
@@ -47,7 +47,7 @@
 
 ############## EXIF stuff
 from maay.texttool import AbstractParser
-from maay.indexerconfig import indexerConfig
+from maay.configuration import INDEXER_CONFIG
 
 class ExifParser(AbstractParser):
     """A parser for Exif information found in image files"""
@@ -57,7 +57,7 @@
 
     def get_thumbnails_dir(self):
         if not self.thumbnails_dir:
-            self.thumbnails_dir = indexerConfig.get_thumbnails_dir()
+            self.thumbnails_dir = INDEXER_CONFIG.get_thumbnails_dir()
         return self.thumbnails_dir
 
     def parseFile(self, filepath, pristineFilename, encoding=None):

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-24 16:18:19 UTC (rev 652)
+++ trunk/maay/indexer.py	2005-11-24 18:09:28 UTC (rev 653)
@@ -33,6 +33,8 @@
 from xmlrpclib import ServerProxy, Fault, ProtocolError
 import mimetypes
 import socket
+from threading import Thread
+from twisted.python import log
 
 from logilab.common.compat import set
 
@@ -42,12 +44,9 @@
 from maay.dbentity import FutureDocument, Document, FileInfo
 from maay.querier import MaayAuthenticationError, MaayQuerier
 from maay.texttool import removeControlChar
-from threading import Thread
-from twisted.python import log
+from maay.configuration import INDEXER_CONFIG
 
-from maay.indexerconfig import indexerConfig
 
-
 class IIndexerObserver(Interface):
 
     def newDocumentIndexed(filename, state):
@@ -385,7 +384,7 @@
 def run(observers=None):
     try:
         try:
-            indexer = Indexer(indexerConfig, observers=observers)
+            indexer = Indexer(INDEXER_CONFIG, observers=observers)
         except MaayAuthenticationError, exc:
             print "AuthenticationError:", exc
             sys.exit(1)
@@ -393,7 +392,7 @@
     except socket.error, exc:
         print "Cannot contact Node:", exc
         print "Check that the Node is running on %s:%s" % \
-              (indexerConfig.host, indexerConfig.port)
+              (INDEXER_CONFIG.host, INDEXER_CONFIG.port)
         sys.exit(1)
 
 
@@ -414,7 +413,7 @@
     return indexer_thread and indexer_thread.isAlive()
 
 def runLocally(localQuerier, observers=None):
-    indexer = LocalIndexer(indexerConfig, localQuerier, observers)
+    indexer = LocalIndexer(INDEXER_CONFIG, localQuerier, observers)
     indexer.start()
     
 def start_as_thread(nodeConfig, webpage):
@@ -437,7 +436,7 @@
     thread.start()
 
 def _just_one(querier, filepath):
-    indexer = LocalIndexer(indexerConfig, querier)
+    indexer = LocalIndexer(INDEXER_CONFIG, querier)
     print 'going to index file %s', filepath
     try:
         # log.startLogging(open('maay-indexer.log', 'w'))
@@ -446,5 +445,5 @@
         print fif
 
 if __name__ == '__main__':
-    indexerConfig.load()
+    INDEXER_CONFIG.load()
     run()

Deleted: trunk/maay/indexerconfig.py
===================================================================
--- trunk/maay/indexerconfig.py	2005-11-24 16:18:19 UTC (rev 652)
+++ trunk/maay/indexerconfig.py	2005-11-24 18:09:28 UTC (rev 653)
@@ -1,25 +0,0 @@
-#     Maay : a network of peers for document search
-#
-#     Copyright (C) 2005 France Telecom R&D
-#
-#     This program is free software; you can redistribute it and/or modify it
-#     under the terms of the GNU General Public License as published by the
-#     Free Software Foundation; either version 2 of the License, or (at your
-#     option) any later version.
-#     
-#     This program is distributed in the hope that it will be useful, but
-#     WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
-#     Public License for more details.
-#     
-#     You should have received a copy of the GNU General Public License along
-#     with this program; if not, write to the Free Software Foundation, Inc.,
-#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
-#     
-
-
-from maay.configuration import IndexerConfiguration
-
-indexerConfig = IndexerConfiguration()
-
-

Modified: trunk/maay/node.py
===================================================================
--- trunk/maay/node.py	2005-11-24 16:18:19 UTC (rev 652)
+++ trunk/maay/node.py	2005-11-24 18:09:28 UTC (rev 653)
@@ -25,8 +25,6 @@
 
 __revision__ = '$Id$'
 
-from maay.nodeconfig import nodeConfig
-
 import platform
 import sha
 import time
@@ -63,10 +61,15 @@
 from maay import presenceclient
 from maay.webapplication import Maay404, INodeConfiguration, SearchForm
 from maay.localinfo import NODE_HOST
-from maay.nodeconfig import NODE_PORT, NODE_ID
+from maay.configuration import NODE_CONFIG, INDEXER_CONFIG
 
+
 ## nevow app/server setup ############################################
 
+NODE_ID = None
+NODE_PORT = None
+NODE_HOST = None
+
 # MaayMindFactory might be helpful to access request informations
 # in portal. (not sure it's really aimed to be used this way :-)
 class MaayMindFactory:
@@ -251,22 +254,29 @@
     
 def run():
     log.startLogging(open('maay-node.log', 'w'))
-    maayPortal = MaayPortal(nodeConfig)
+    NODE_CONFIG.load()
+    global NODE_ID, NODE_PORT, NODE_HOST
+    NODE_ID = NODE_CONFIG.get_node_id()
+    NODE_PORT = NODE_CONFIG.rpcserver_port
+    NODE_HOST = socket.gethostbyname(socket.gethostname())
+    INDEXER_CONFIG.load_from_files()
+    
+    maayPortal = MaayPortal(NODE_CONFIG)
     website = appserver.NevowSite(MaaySessionWrapper(maayPortal,
                                                      mindFactory=MaayMindFactory))
     website.remember(Maay404(), inevow.ICanHandleNotFound)
-    website.remember(nodeConfig, INodeConfiguration)
-    presenceclient.notify(nodeConfig.presence_host,
-                          nodeConfig.presence_port,
+    website.remember(NODE_CONFIG, INodeConfiguration)
+    presenceclient.notify(NODE_CONFIG.presence_host,
+                          NODE_CONFIG.presence_port,
                           maayPortal.webQuerier,
                           NODE_ID,
-                          socket.gethostbyname(socket.gethostname()),
-                          nodeConfig.rpcserver_port,
-                          nodeConfig.bandwidth)
+                          NODE_HOST,
+                          NODE_PORT,
+                          NODE_CONFIG.bandwidth)
     
     rpcserver = server.Site(MaayRPCServer(maayPortal))
-    reactor.listenTCP(nodeConfig.webserver_port, website)
-    reactor.listenTCP(nodeConfig.rpcserver_port, rpcserver)
+    reactor.listenTCP(NODE_CONFIG.webserver_port, website)
+    reactor.listenTCP(NODE_CONFIG.rpcserver_port, rpcserver)
     try:
         try:
             print "-------------Starting Node mainloop-------------"

Deleted: trunk/maay/nodeconfig.py
===================================================================
--- trunk/maay/nodeconfig.py	2005-11-24 16:18:19 UTC (rev 652)
+++ trunk/maay/nodeconfig.py	2005-11-24 18:09:28 UTC (rev 653)
@@ -1,30 +0,0 @@
-#     Maay : a network of peers for document search
-#
-#     Copyright (C) 2005 France Telecom R&D
-#
-#     This library is free software; you can redistribute it and/or
-#     modify it under the terms of the GNU General Public
-#     License as published by the Free Software Foundation; either
-#     version 2.1 of the License, or (at your option) any later version.
-#
-#     This library is distributed in the hope that it will be useful,
-#     but WITHOUT ANY WARRANTY; without even the implied warranty of
-#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-#     General Public License for more details.
-#
-#     You should have received a copy of the GNU General Public
-#     License along with this library; if not, write to the Free Software
-#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-
-
-from maay.configuration import NodeConfiguration, IndexerConfiguration
-
-nodeConfig = NodeConfiguration()
-nodeConfig.load()
-indexerConfig = IndexerConfiguration()
-indexerConfig.load_from_files()
-
-NODE_PORT = nodeConfig.rpcserver_port
-NODE_ID = nodeConfig.get_node_id()
-
-QUERY_LIFE_TIME = nodeConfig.query_life_time

Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-24 16:18:19 UTC (rev 652)
+++ trunk/maay/p2pquerier.py	2005-11-24 18:09:28 UTC (rev 653)
@@ -36,9 +36,8 @@
 from maay.texttool import makeAbstract, removeSpace, untagText
 from maay.query import Query
 from maay.localinfo import NODE_LOGIN, NODE_HOST
-from maay.nodeconfig import NODE_PORT, NODE_ID, QUERY_LIFE_TIME
+from maay.configuration import NODE_CONFIG
 
-
 QUERIER = None
 
 class QueryVersionMismatch(Exception):
@@ -84,7 +83,7 @@
         # *** default args are typically used from webapplication instantiation
         # *** but NOT at rpc level, where we MUST use the transmited values
         self.client_host = client_host or NODE_HOST
-        self.client_port = client_port or NODE_PORT
+        self.client_port = client_port or NODE_CONFIG.rpcserver_port
 
     #### qid accessors
 
@@ -188,7 +187,7 @@
         self._answerCallbacks = {}
         # now, read a config. provided value for EXPIRATION_TIME
         # and fire the garbage collector
-        P2pQuerier._EXPIRATION_TIME = max(QUERY_LIFE_TIME,
+        P2pQuerier._EXPIRATION_TIME = max(NODE_CONFIG.query_life_time,
                                           P2pQuerier._EXPIRATION_TIME)
         reactor.callLater(self._EXPIRATION_TIME, self._markQueries)
 
@@ -287,9 +286,9 @@
 
         # provider is a 4-uple (login, node_id, IP, xmlrpc-port)
         provider = (NODE_LOGIN,
-                    NODE_ID,
+                    NODE_CONFIG.get_node_id(),
                     NODE_HOST,
-                    NODE_PORT)
+                    NODE_CONFIG.rpcserver_port)
             
         self.relayAnswer(P2pAnswer(query.qid, provider, documents))
 
@@ -323,7 +322,7 @@
                 #       of duplicates, so as to add a new provider entry ?
                 print "we already know this doc !!!@~^#{"
 
-        if query.sender != NODE_ID:
+        if query.sender != NODE_CONFIG.get_node_id():
             self.querier.registerNodeActivity(answer.provider[1])
             (host, port) = (query.client_host, query.client_port)
             print " ... relaying Answer to %s:%s ..." % (host, port)
@@ -331,7 +330,7 @@
             proxy = Proxy(senderUrl)
             d = proxy.callRemote('distributedQueryAnswer',
                                  query.qid,
-                                 NODE_ID,
+                                 NODE_CONFIG.get_node_id(),
                                  answer.provider,
                                  toSend) 
             d.addErrback(answerQueryErrback(query))
@@ -344,7 +343,7 @@
         """
         nbNodes = 2**(max(5, query.ttl))
         # TODO: use the neighbors' profiles to route requests
-        return self.querier.getActiveNeighbors(NODE_ID, nbNodes)
+        return self.querier.getActiveNeighbors(NODE_CONFIG.get_node_id(), nbNodes)
         
 
 ##### Custommized errbacks for send/answer ops

Modified: trunk/maay/query.py
===================================================================
--- trunk/maay/query.py	2005-11-24 16:18:19 UTC (rev 652)
+++ trunk/maay/query.py	2005-11-24 18:09:28 UTC (rev 653)
@@ -22,10 +22,8 @@
 import sha
 import time
 
-from maay.nodeconfig import nodeConfig
+from maay.configuration import NODE_CONFIG
 
-NODE_ID = nodeConfig.get_node_id()
-
 def normalizeMimetype(fileExtension):
     import mimetypes
     return mimetypes.types_map.get('.%s' % fileExtension)
@@ -65,7 +63,7 @@
     
     def __init__(self, words, offset=0, filetype=None, filename=None,
                  order=None, direction=None, qid=None):
-        self.qid = qid or hashIt(NODE_ID, self)
+        self.qid = qid or hashIt(NODE_CONFIG.get_node_id(), self)
         self.words = words # unicode string 
         self.offset = offset
         self.filetype = filetype

Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-24 16:18:19 UTC (rev 652)
+++ trunk/maay/rpc.py	2005-11-24 18:09:28 UTC (rev 653)
@@ -40,11 +40,7 @@
 from maay.dbentity import FutureDocument, Document
 from maay.p2pquerier import P2pQuerier, P2pQuery, P2pAnswer
 from maay.query import Query
-from maay.nodeconfig import nodeConfig
 
-NODE_ID = nodeConfig.get_node_id()
-
-
 def make_uid(username, password):
     """forge a unique identifier"""
     # FIXME: need a better implementation

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-24 16:18:19 UTC (rev 652)
+++ trunk/maay/webapplication.py	2005-11-24 18:09:28 UTC (rev 653)
@@ -40,16 +40,13 @@
 
 from maay import VERSION
 from maay.querier import IQuerier, WEB_AVATARID
-from maay.configuration import get_path_of
-from maay.nodeconfig import indexerConfig, NODE_ID
+from maay.configuration import get_path_of, INDEXER_CONFIG, NODE_CONFIG
 from maay.texttool import makeAbstract, WORDS_RGX, normalizeText, boldifyText
 from maay.query import Query, parseWords
 from maay.p2pquerier import P2pQuerier, P2pQuery
 from maay.dbentity import ScoredDocument, Document
 import maay.indexer as indexer
 
-
-
 def _is_valid_directory(directory):
     try:
         mode = os.stat(directory)[stat.ST_MODE]
@@ -134,8 +131,7 @@
 
     def __init__(self):
         athena.LivePage.__init__(self)
-        self.indexerConfig = indexerConfig
-        self.indexerConfig.load_from_files()
+        self.indexerConfig = INDEXER_CONFIG
         self.msg = 'not running'
 
     def macro_footer(self, context):
@@ -263,7 +259,7 @@
         MaayPage.__init__(self, maayId)
         self.querier = querier
         self.p2pquerier = p2pquerier
-        self.download_dir = indexerConfig.download_dir
+        self.download_dir = INDEXER_CONFIG.download_dir
 
     def render_custom_htmlheader(self, context):
         return [
@@ -294,23 +290,22 @@
     def child_indexation(self, context, _factory=IndexationPageFactory(IndexationPage)):
         alertMsg = ""
         context.remember(self.querier, IQuerier)
+        INDEXER_CONFIG.load_from_files()
         # TODO: check if the added folders are valid
-
         # Actions (add/remove) on private folders
-
         addPrivateFolder = context.arg('addPrivateFolder', 0)
         if addPrivateFolder:
             if _is_valid_directory(addPrivateFolder):
-                indexerConfig.private_dir.append(addPrivateFolder)
-                indexerConfig.save()
+                INDEXER_CONFIG.private_dir.append(addPrivateFolder)
+                INDEXER_CONFIG.save()
             else:
                 alertMsg = "\\'%s\\' is not a valid folder" % addPrivateFolder
  
         removePrivateFolder = context.arg('removePrivateFolder', 0)
         if removePrivateFolder:
             try:
-                indexerConfig.private_dir.remove(removePrivateFolder)
-                indexerConfig.save()
+                INDEXER_CONFIG.private_dir.remove(removePrivateFolder)
+                INDEXER_CONFIG.save()
             except ValueError:
                 print "Folder '%s' not in the private directory list"
 
@@ -318,16 +313,16 @@
         addPublicFolder = context.arg('addPublicFolder', 0)
         if addPublicFolder:
             if _is_valid_directory(addPublicFolder):
-                indexerConfig.public_dir.append(addPublicFolder)
-                indexerConfig.save()
+                INDEXER_CONFIG.public_dir.append(addPublicFolder)
+                INDEXER_CONFIG.save()
             else:
                 alertMsg = "\\'%s\\' is not a valid folder" % addPublicFolder
  
         removePublicFolder = context.arg('removePublicFolder', 0)
         if removePublicFolder:
             try:
-                indexerConfig.public_dir.remove(removePublicFolder)
-                indexerConfig.save()
+                INDEXER_CONFIG.public_dir.remove(removePublicFolder)
+                INDEXER_CONFIG.save()
             except ValueError:
                 print "Folder '%s' not in the private directory list"
 
@@ -335,16 +330,16 @@
         addSkippedFolder = context.arg('addSkippedFolder', 0)
         if addSkippedFolder:
             if _is_valid_directory(addSkippedFolder):
-                indexerConfig.skip_dir.append(addSkippedFolder)
-                indexerConfig.save()
+                INDEXER_CONFIG.skip_dir.append(addSkippedFolder)
+                INDEXER_CONFIG.save()
             else:
                 alertMsg = "\\'%s\\' is not a valid folder" % addSkippedFolder
  
         removeSkippedFolder = context.arg('removeSkippedFolder', 0)
         if removeSkippedFolder:
             try:
-                indexerConfig.skip_dir.remove(removeSkippedFolder)
-                indexerConfig.save()
+                INDEXER_CONFIG.skip_dir.remove(removeSkippedFolder)
+                INDEXER_CONFIG.save()
             except ValueError:
                 print "Folder '%s' not in the private directory list"
 
@@ -637,7 +632,7 @@
             self.p2pQuery = p2pQuery
             # purge old results
             self.querier.purgeOldResults()
-            self.querier.pushDocuments(self.qid, results, NODE_ID, provider=None)
+            self.querier.pushDocuments(self.qid, results, NODE_CONFIG.get_node_id(), provider=None)
             self.results = self.querier.getQueryResults(self.query)
             
     # XXX (refactoring): provide a common base class for LivePages
@@ -650,7 +645,7 @@
         
     def onNewResults(self, provider, results):
         results = [ScoredDocument(**params) for params in results]
-        self.querier.pushDocuments(self.qid, results, NODE_ID, provider)
+        self.querier.pushDocuments(self.qid, results, NODE_CONFIG.get_node_id(), provider)
         results = self.querier.getQueryResults(self.query,
                                                onlyLocal=self.onlyLocal,
                                                onlyDistant=self.onlyDistant)



From adimasci at berlios.de  Fri Nov 25 09:52:41 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Fri, 25 Nov 2005 09:52:41 +0100
Subject: [Maay-svncheckins] r654 - trunk/maay
Message-ID: <200511250852.jAP8qfWB014302@sheep.berlios.de>

Author: adimasci
Date: 2005-11-25 09:52:34 +0100 (Fri, 25 Nov 2005)
New Revision: 654

Modified:
   trunk/maay/webapplication.py
Log:
This fixes "bad sql query" bug when downloading local files

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-24 18:09:28 UTC (rev 653)
+++ trunk/maay/webapplication.py	2005-11-25 08:52:34 UTC (rev 654)
@@ -370,7 +370,7 @@
     def child_download(self, context):
         """download *local* file"""
         docid = context.arg('docid')
-        words = parseWords(context.arg('words'))
+        words, _ = parseWords(context.arg('words'))
         #query = Query.fromRawQuery(unicode(context.arg('words'), 'utf-8'))
         docurl = self.querier.notifyDownload(docid, words)
         if docurl:



From adimasci at berlios.de  Fri Nov 25 09:54:38 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Fri, 25 Nov 2005 09:54:38 +0100
Subject: [Maay-svncheckins] r655 - trunk/maay
Message-ID: <200511250854.jAP8scF4015080@sheep.berlios.de>

Author: adimasci
Date: 2005-11-25 09:54:18 +0100 (Fri, 25 Nov 2005)
New Revision: 655

Modified:
   trunk/maay/indexer.py
   trunk/maay/querier.py
Log:
- skip public dirs in private indexation round
- improved way 'newIndexedDocuments' notifcations are done

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-25 08:52:34 UTC (rev 654)
+++ trunk/maay/indexer.py	2005-11-25 08:54:18 UTC (rev 655)
@@ -125,7 +125,8 @@
     def getFileIterator(self, isPrivate=True):
         if isPrivate:
             indexed = self.indexerConfig.private_dir
-            skipped = self.indexerConfig.skip_dir
+            # Skip public dirs in private indexation
+            skipped = self.indexerConfig.skip_dir + self.indexerConfig.public_dir 
             print "private indexation of", indexed, "omitting", skipped
         else:
             indexed = self.indexerConfig.public_dir[:]
@@ -182,7 +183,7 @@
             raise
         except Exception, exc:
             raise FileIndexationFailure(safe_encode(filepath),
-                                        "an exception %s was raised" % exc)                                        
+                                        "an exception %s was raised" % exc)
     def runIndexer(self, isPrivate=True):
         existingFiles = set()
         state = docState(isPrivate)
@@ -266,7 +267,6 @@
             if self.verbose:
                 print '('+safe_encode(futureDoc.title)+')'
             self.serverProxy.indexDocument(self.cnxId, futureDoc)
-
         except (Fault, ProtocolError), exc:
             if self.verbose:
                 print "An error occured on the Node while indexing %s" % \
@@ -276,8 +276,9 @@
             else:
                 print "Error indexing %s: %s" % \
                       (safe_encode(futureDoc.filename), exc)
-        for obs in self.observers:
-            obs.newDocumentIndexed(futureDoc.filename, futureDoc.state)
+        else:
+            for obs in self.observers:
+                obs.newDocumentIndexed(futureDoc.filename, futureDoc.state)
 
 class LocalIndexer(AbstractIndexer):
     """special indexer that is meant to run locally, using
@@ -337,10 +338,11 @@
             else:
                 print "[local] Error indexing %s: %s" % \
                       (safe_encode(futureDoc.filename), exc)
-        for obs in self.observers:
-            obs.newDocumentIndexed(futureDoc.filename, futureDoc.state)
-    
+        else:
+            for obs in self.observers:
+                obs.newDocumentIndexed(futureDoc.filename, futureDoc.state)
 
+
 ######### FileIterator
 
 if sys.platform == 'win32':

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-25 08:52:34 UTC (rev 654)
+++ trunk/maay/querier.py	2005-11-25 08:54:18 UTC (rev 655)
@@ -248,8 +248,8 @@
 
     def _updateDownloadStatistics(self, document, words):
         cursor = self._cnx.cursor()
-	# what's this max(0, doc.count) below ??? it should be set initially
-	# at zero anyway ...
+        # what's this max(0, doc.count) below ??? it should be set initially
+        # at zero anyway ...
         document.download_count = max(0, document.download_count) + 1
         document.commit(cursor, update=True)
         db_document_id = document.db_document_id
@@ -301,7 +301,7 @@
         cursor.close()
 
     def registerNodeActivity(self, nodeId):
-	"""updates last_seen_time attribute"""
+        """updates last_seen_time attribute"""
         cursor = self._cnx.cursor()
         nodes = Node.selectWhere(cursor, node_id=nodeId)
         if nodes:



From aurelienc at berlios.de  Fri Nov 25 09:54:40 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Fri, 25 Nov 2005 09:54:40 +0100
Subject: [Maay-svncheckins] r656 - trunk/maay
Message-ID: <200511250854.jAP8seQJ015154@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-25 09:54:35 +0100 (Fri, 25 Nov 2005)
New Revision: 656

Modified:
   trunk/maay/webapplication.py
Log:
Cleanup


Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-25 08:54:18 UTC (rev 655)
+++ trunk/maay/webapplication.py	2005-11-25 08:54:35 UTC (rev 656)
@@ -371,7 +371,6 @@
         """download *local* file"""
         docid = context.arg('docid')
         words, _ = parseWords(context.arg('words'))
-        #query = Query.fromRawQuery(unicode(context.arg('words'), 'utf-8'))
         docurl = self.querier.notifyDownload(docid, words)
         if docurl:
             if osp.isfile(docurl):



From adimasci at berlios.de  Fri Nov 25 10:49:46 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Fri, 25 Nov 2005 10:49:46 +0100
Subject: [Maay-svncheckins] r657 - in trunk/maay: . test
Message-ID: <200511250949.jAP9nkVQ020559@sheep.berlios.de>

Author: adimasci
Date: 2005-11-25 10:49:41 +0100 (Fri, 25 Nov 2005)
New Revision: 657

Modified:
   trunk/maay/indexer.py
   trunk/maay/test/test_indexer.py
Log:
make sure that same documents output the same document_id
on any platform

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-25 08:54:35 UTC (rev 656)
+++ trunk/maay/indexer.py	2005-11-25 09:49:41 UTC (rev 657)
@@ -61,7 +61,7 @@
 
 def makeDocumentId(filename):
     """return the SHA hash value from of the contents of the file"""
-    stream = file(filename, 'rb')
+    stream = file(filename, 'rbU')
     hasher = sha.sha()
     data = stream.read(4096)
     while data:        

Modified: trunk/maay/test/test_indexer.py
===================================================================
--- trunk/maay/test/test_indexer.py	2005-11-25 08:54:35 UTC (rev 656)
+++ trunk/maay/test/test_indexer.py	2005-11-25 09:49:41 UTC (rev 657)
@@ -28,15 +28,46 @@
 
 class GlobalFunctionTC(unittest.TestCase):
 
+    def setUp(self):
+        self.filesCreated = []
+
+    def tearDown(self):
+        for filename in self.filesCreated:
+            os.remove(filename)
+
+    def _mkstemp(self):
+        handle, filename = mkstemp()
+        self.filesCreated.append(filename)
+        return handle, filename
+
     def testMakeDocumentId(self):
-        handle, filename = mkstemp()
+        handle, filename = self._mkstemp()
         f = os.fdopen(handle, 'wb')
         data = '0'*128 + '\n' * 1000
         f.write(data)
         f.close()
         self.assertEquals(makeDocumentId(filename), sha.sha(data).hexdigest())
-        os.remove(filename)
 
+    def testDocIdWithDifferentNewLines(self):
+        lines = ['hello', 'world,', 'This', 'is', 'Maay', 'speaking']
+        handle1, filename1 = self._mkstemp()
+        handle2, filename2 = self._mkstemp()
+        handle3, filename3 = self._mkstemp()
+        f1 = os.fdopen(handle1, 'wb')
+        f1.write('\n'.join(lines))
+        f1.close()
+        f2 = os.fdopen(handle2, 'wb')
+        f2.write('\r\n'.join(lines))
+        f2.close()
+        f3 = os.fdopen(handle3, 'wb')
+        f3.write('\r'.join(lines))
+        f3.close()
+        unixStyleDocId = makeDocumentId(filename1)
+        windowsStyleDocId = makeDocumentId(filename2)
+        classicMacStyleDocId = makeDocumentId(filename3)
+        self.assertEquals(unixStyleDocId, windowsStyleDocId)
+        self.assertEquals(classicMacStyleDocId, windowsStyleDocId)
+        
 #     def testMimetypeUpdate(self):
 #         #XXX: This may need to go away since we provide converters for python
 #         # and the type_map update in indexer is not sufficient to catch python files



From dnf at berlios.de  Fri Nov 25 10:50:45 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Fri, 25 Nov 2005 10:50:45 +0100
Subject: [Maay-svncheckins] r658 - in trunk/maay: . sql
Message-ID: <200511250950.jAP9ojqT020701@sheep.berlios.de>

Author: dnf
Date: 2005-11-25 10:50:42 +0100 (Fri, 25 Nov 2005)
New Revision: 658

Modified:
   trunk/maay/querier.py
   trunk/maay/sql/mysql.sql
Log:
Fix bug: relevance sum and popularity sum are float (NOT INT).



Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-25 09:49:41 UTC (rev 657)
+++ trunk/maay/querier.py	2005-11-25 09:50:42 UTC (rev 658)
@@ -267,14 +267,14 @@
             winfo.commit(cursor, update=True)
 
         for word,score in scores.iteritems():
-            score.download_count = max(0, score.download_count) + 1 / len(words)
+            score.download_count = max(0, score.download_count) + 1.0 / len(words)
             winfo_downloads = wordInfo[word].download_count
             
-            score.popularity = score.download_count / winfo_downloads
+            score.popularity = float(score.download_count) / winfo_downloads
             score.popularity -= hoeffding_deviation(winfo_downloads)
             score.popularity = max(1e-6, score.popularity)
             
-            score.relevance = score.download_count / document.download_count
+            score.relevance = float(score.download_count) / document.download_count
             score.relevance -= hoeffding_deviation(document.download_count)
             score.relevance = max(1e-6, score.relevance)
             

Modified: trunk/maay/sql/mysql.sql
===================================================================
--- trunk/maay/sql/mysql.sql	2005-11-25 09:49:41 UTC (rev 657)
+++ trunk/maay/sql/mysql.sql	2005-11-25 09:50:42 UTC (rev 658)
@@ -156,8 +156,8 @@
   `size` int(11) default NULL,
   `text` text,
   `publication_time` int(14) default NULL,
-  `relevance` int(14) default NULL, -- sum of relevances
-  `popularity` int(14) default NULL, -- sum of popularities
+  `relevance` float NOT NULL default '0', -- sum of relevances
+  `popularity` float NOT NULL default '0', -- sum of relevances
   `url` varchar(255) NOT NULL default '',
   `host` varchar(15),
   `port` int(11), -- check this



From dnf at berlios.de  Fri Nov 25 11:01:23 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Fri, 25 Nov 2005 11:01:23 +0100
Subject: [Maay-svncheckins] r659 - trunk/maay
Message-ID: <200511251001.jAPA1Nan022162@sheep.berlios.de>

Author: dnf
Date: 2005-11-25 11:01:21 +0100 (Fri, 25 Nov 2005)
New Revision: 659

Modified:
   trunk/maay/dbentity.py
Log:
fix bug: compute sum of relevance (or popularity) for the ranking.



Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-25 09:50:42 UTC (rev 658)
+++ trunk/maay/dbentity.py	2005-11-25 10:01:21 UTC (rev 659)
@@ -306,8 +306,8 @@
                         "D.url, "
                         "D.mime_type, "
                         "D.publication_time, "
-                        "DS.relevance, "
-                        "DS.popularity ")
+                        "sum(DS.relevance), "
+                        "sum(DS.popularity)")
         query += ("FROM documents D, document_scores DS "
                   "WHERE DS.db_document_id=D.db_document_id "
                   "AND DS.word IN (%s) "



From dnf at berlios.de  Fri Nov 25 11:47:57 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Fri, 25 Nov 2005 11:47:57 +0100
Subject: [Maay-svncheckins] r660 - in trunk/maay: . data
Message-ID: <200511251047.jAPAlv7w029690@sheep.berlios.de>

Author: dnf
Date: 2005-11-25 11:47:51 +0100 (Fri, 25 Nov 2005)
New Revision: 660

Modified:
   trunk/maay/data/livefragment.html
   trunk/maay/data/liveresults.html
   trunk/maay/data/maay.css
   trunk/maay/data/searchform.html
   trunk/maay/data/skeleton.html
   trunk/maay/webapplication.py
Log:
Some esthetic modifications.



Modified: trunk/maay/data/livefragment.html
===================================================================
--- trunk/maay/data/livefragment.html	2005-11-25 10:01:21 UTC (rev 659)
+++ trunk/maay/data/livefragment.html	2005-11-25 10:47:51 UTC (rev 660)
@@ -3,26 +3,29 @@
 
 <div id="resultsDiv" xmlns="http://www.w3.org/1999/xhtml" xmlns:nevow="http://nevow.com/ns/nevow/0.1">
   <div class="message" nevow:render="title">Results <b><nevow:slot name="start_result" /></b> - <b><nevow:slot name="end_result" /></b> of <b><nevow:slot name="count" /></b> for <b><nevow:slot name="words" /></b>.</div>
-    <table>
+    <table class="resultOption" align="right">
       <tr>
-        <td><b>Filter :</b></td>
-        <td><div nevow:render="localResultsDiv"/>(<span nevow:render="localcount" />)</td>
-        <td> - </td>
-        <td><div nevow:render="distantResultsDiv" />(<span nevow:render="distantcount" />)</td>
-        <td>-</td>
-        <td><div nevow:render="allResultsDiv" />(<span nevow:render="totalcount" />)</td>
-        <td> - <b> Sorted by: </b></td>
-        <td><div nevow:render="relevanceDiv"/></td>
-        <td> - </td>
-        <td><div nevow:render="popularityDiv"/></td>
-        <td> - </td>
-        <td><div nevow:render="publicationDiv"/></td>
+        <td>
+          <b>Filter :</b>
+          <div nevow:render="localResultsDiv"/>(<span nevow:render="localcount" />) - 
+          <div nevow:render="distantResultsDiv" />(<span nevow:render="distantcount" />) -
+          <div nevow:render="allResultsDiv" />(<span nevow:render="totalcount" />)
+        </td>
       </tr>
+      <tr>
+        <td>
+          <b>Sorted by: </b>
+          <div nevow:render="relevanceDiv" /> -
+          <div nevow:render="popularityDiv" /> -
+          <div nevow:render="publicationDiv" />
+        </td>
+      </tr>
     </table>
+    <br />
   <center>
   <nevow:invisible nevow:macro="prevnext" />
   </center>
-  <table class="results" nevow:render="sequence" nevow:data="results">
+  <table class="results" nevow:render="sequence" nevow:data="results" width="100%">
     <tr nevow:pattern="item" nevow:render="row">
       <td>
 	<div>

Modified: trunk/maay/data/liveresults.html
===================================================================
--- trunk/maay/data/liveresults.html	2005-11-25 10:01:21 UTC (rev 659)
+++ trunk/maay/data/liveresults.html	2005-11-25 10:47:51 UTC (rev 660)
@@ -57,8 +57,7 @@
   <body onload="startConnection()">
   <table width="100%">
     <tr>
-      <td valign="top" width="100%"><a href="http://maay.netofpeers.net/" class="footlink">[Maay&nbsp;Homepage]</a></td>
-      <td valign="top"><a href="/indexation" class="footlink">[Manage&nbsp;Folders]</a></td>
+      <td valign="top" align="right"><a href="http://maay.netofpeers.net/" class="footlink">[Maay&nbsp;Homepage]</a></td>
     </tr>
   </table>
     <div class="reSearch">
@@ -68,6 +67,7 @@
 	    <td><a href="/"><img border="0" src="images/smallmaay.png" /></a></td>
 	    <td><input type="text" name="words" nevow:render="searchfield"><nevow:attr name="value" ><nevow:slot name="words" /></nevow:attr></input></td>
 	    <td><input type="submit" class="searchButton" value="search" /></td>
+        <td><a href="/indexation" class="footlink">Manage&nbsp;Folders</a></td>
 	  </tr>
 	</table>
       </form>

Modified: trunk/maay/data/maay.css
===================================================================
--- trunk/maay/data/maay.css	2005-11-25 10:01:21 UTC (rev 659)
+++ trunk/maay/data/maay.css	2005-11-25 10:47:51 UTC (rev 660)
@@ -39,6 +39,10 @@
   text-align: center;
 }
 
+table.resultOption {
+  font-size: 80%;
+}
+
 div.homemessage {
   font-size: 120%;
   color: orange;
@@ -77,44 +81,48 @@
   border-left-color: #ff0000;
 }
 
+.allResults, .selectedAllResults { 
+  margin-top: 5px;
+  margin-bottom: 5px;
+  margin-right: 3px;
+ }
+
 .selectedLocalResults { 
-  background-color: yellow;
+  background-color: white;
+  font-weight: bold;
+  text-color: black;
   border-left-color: #00ff00;
  }
 
 .selectedDistantResults { 
-  color: blue;
-  background-color: yellow;
+  font-weight: bold;
+  background-color: white;
+  text-color: black;
   border-left-color: #ff0000;
  }
 
-.allResults, .selectedAllResults { 
-  margin-top: 5px;
-  margin-bottom: 5px;
-  margin-right: 3px;
- }
-
 .selectedAllResults {  
-  color: blue;
-  background-color: yellow;
+  font-weight: bold;
+  text-color: black;
+  background-color: white;
  }
 
-div.selectedCriterium { 
-  color: blue;
-  background-color: yellow;
+.selectedCriterium { 
+  color: black;
+  font-weight: bold;
+  background-color: white;
  }
 
-div.unselectedCriterium { 
+.unselectedCriterium { 
   color: black; 
   background-color: white;
   text-decoration: underline;
  }
 
-
 div.message {
   text-align: right;
-  background: #e5ecf9;
-  border-top: 1px solid blue;
+  background: #ffd4b2;
+  border-top: 1px solid #fb9a4c;
 }
 
 div.resultDesc {

Modified: trunk/maay/data/searchform.html
===================================================================
--- trunk/maay/data/searchform.html	2005-11-25 10:01:21 UTC (rev 659)
+++ trunk/maay/data/searchform.html	2005-11-25 10:47:51 UTC (rev 660)
@@ -7,8 +7,10 @@
     <form action="search" accept-charset="utf-8">
       <table>
         <tr>
+          <td width="50%"></td>
           <td><input type="text" name="words" value="" /></td>
           <td><input type="submit" class="searchButton" value="search" /></td>
+          <td width="50%"><a href="/indexation" class="footlink">Manage&nbsp;Folders</a></td>
         </tr>
       </table>
     </form>

Modified: trunk/maay/data/skeleton.html
===================================================================
--- trunk/maay/data/skeleton.html	2005-11-25 10:01:21 UTC (rev 659)
+++ trunk/maay/data/skeleton.html	2005-11-25 10:47:51 UTC (rev 660)
@@ -11,8 +11,7 @@
     <nevow:attr name="onLoad" nevow:render="onload" />
     <table width="100%">
       <tr>
-        <td valign="top" width="100%"><a href="http://maay.netofpeers.net/" class="footlink">[Maay&nbsp;Homepage]</a></td>
-        <td valign="top"><a href="/indexation" class="footlink">[Manage&nbsp;Folders]</a></td>
+        <td valign="top" align="right"><a href="http://maay.netofpeers.net/" class="footlink">[Maay&nbsp;Homepage]</a></td>
       </tr>
     </table>
     <nevow:invisible nevow:macro="body" />

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-25 10:01:21 UTC (rev 659)
+++ trunk/maay/webapplication.py	2005-11-25 10:47:51 UTC (rev 660)
@@ -514,27 +514,27 @@
 
     def render_relevanceDiv(self, context, data):
         if self.query.order == 'relevance':
-            return tags.xml('<div class="selectedCriterium">'
-                            'relevance</div>')
+            return tags.xml('<span class="selectedCriterium">'
+                            'relevance</span>')
         else:
-            return tags.xml("""<div class="unselectedCriterium"><a href="javascript: sortBy('relevance');">"""
-                            'relevance</div>')
+            return tags.xml("""<span class="unselectedCriterium"><a href="javascript: sortBy('relevance');">"""
+                            'relevance</a></span>')
 
     def render_popularityDiv(self, context, data):
         if self.query.order == 'popularity':
-            return tags.xml('<div class="selectedCriterium">'
-                            'popularity</div>')
+            return tags.xml('<span class="selectedCriterium">'
+                            'popularity</span>')
         else:
-            return tags.xml("""<div class="unselectedCriterium"><a href="javascript: sortBy('popularity');">"""
-                            'popularity</div>')
+            return tags.xml("""<span class="unselectedCriterium"><a href="javascript: sortBy('popularity');">"""
+                            'popularity</a></span>')
 
     def render_publicationDiv(self, context, data):
         if self.query.order == 'publication_time':
-            return tags.xml('<div class="selectedCriterium">'
-                            'publication time</div>')
+            return tags.xml('<span class="selectedCriterium">'
+                            'publication time</span>')
         else:
-            return tags.xml("""<div class="unselectedCriterium"><a href="javascript: sortBy('publication_time');">"""
-                            'publication time</div>')
+            return tags.xml("""<span class="unselectedCriterium"><a href="javascript: sortBy('publication_time');">"""
+                            'publication time</a></span>')
 
     def render_localResultsDiv(self, context, data):
         if self.onlyLocal:



From aurelienc at berlios.de  Fri Nov 25 13:43:22 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Fri, 25 Nov 2005 13:43:22 +0100
Subject: [Maay-svncheckins] r661 - trunk
Message-ID: <200511251243.jAPChMgj003932@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-25 13:43:12 +0100 (Fri, 25 Nov 2005)
New Revision: 661

Modified:
   trunk/README.txt
Log:
Webapp.ini -> node.ini


Modified: trunk/README.txt
===================================================================
--- trunk/README.txt	2005-11-25 10:47:51 UTC (rev 660)
+++ trunk/README.txt	2005-11-25 12:43:12 UTC (rev 661)
@@ -42,7 +42,7 @@
 ==========================
 
 First, edit the configuration files. On Windows, they are in
-C:\Program Files\Maay\webapp.ini and C:\Program
+C:\Program Files\Maay\node.ini and C:\Program
 Files\Maay\indexer.ini. The Windows installer should have set the
 different configuration values.  On Unix systems, they are in
 /etc/maay, and you can copy them to ~/.maay/ if you want to have some



From adimasci at berlios.de  Fri Nov 25 14:19:08 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Fri, 25 Nov 2005 14:19:08 +0100
Subject: [Maay-svncheckins] r662 - in trunk/maay: . data
Message-ID: <200511251319.jAPDJ8Ye020299@sheep.berlios.de>

Author: adimasci
Date: 2005-11-25 14:18:39 +0100 (Fri, 25 Nov 2005)
New Revision: 662

Modified:
   trunk/maay/data/livefragment.html
   trunk/maay/webapplication.py
Log:
- "current_version"'s variable is still computed by Python
  but it's now put in a completely seperate page "locaversion.js"
- added a small tooltip to tell how many nodes provided 
  any distant document (to be tested a bit more)

Modified: trunk/maay/data/livefragment.html
===================================================================
--- trunk/maay/data/livefragment.html	2005-11-25 12:43:12 UTC (rev 661)
+++ trunk/maay/data/livefragment.html	2005-11-25 13:18:39 UTC (rev 662)
@@ -35,6 +35,7 @@
 	    <td>
 	      <a>
 		<nevow:attr name="href"><nevow:slot name="url" /></nevow:attr>
+		<nevow:attr name="title"><nevow:slot name="providersCount" /></nevow:attr>
 		<nevow:slot name="doctitle">DOC TITLE</nevow:slot>
 	      </a>
 	    </td>
@@ -42,7 +43,7 @@
 	  </table>
 	  <div class="resultDesc"><nevow:slot name="abstract" /></div>
 	  <span class="resultUrl"><span nevow:render="peer" />
-                <nevow:slot name="docurl" /> - <nevow:slot name="readable_size" /> - <nevow:slot name="publication_date" /> - (relevance : <nevow:slot name="relevance" />) - (popularity : <nevow:slot name="popularity" />)</span>
+         <nevow:slot name="docurl" /> - <nevow:slot name="readable_size" /> - <nevow:slot name="publication_date" /> - (relevance : <nevow:slot name="relevance" />) - (popularity : <nevow:slot name="popularity" />)</span>
 	</div>
       </td>
     </tr>

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-25 12:43:12 UTC (rev 661)
+++ trunk/maay/webapplication.py	2005-11-25 13:18:39 UTC (rev 662)
@@ -248,31 +248,30 @@
         self.untouchedDocuments = 0
         self.indexedDocuments = 0
     
-
 class SearchForm(MaayPage):
     """default search form"""
     bodyFactory = loaders.xmlfile(get_path_of('searchform.html'))
     addSlash = True
     child_versionjs = static.File(get_path_of('version.js'))
-
+    
     def __init__(self, maayId, querier, p2pquerier=None):
         MaayPage.__init__(self, maayId)
         self.querier = querier
         self.p2pquerier = p2pquerier
         self.download_dir = INDEXER_CONFIG.download_dir
+        # We really want that information to be accessible trhough any client
+        setattr(self, 'child_localversion.js', 'current_version = "%s";' % VERSION)
 
     def render_custom_htmlheader(self, context):
         return [
             tags.script(type='text/javascript', src='http://maay.netofpeers.net/version.js'),
-            tags.script(type='text/javascript')[
-                tags.raw('current_version = "%s";' % VERSION),
-                ],
+            tags.script(type='text/javascript', src=url.here.child('localversion.js')),
             tags.script(type='text/javascript', src=url.here.child('versionjs')),
             ]
 
     def render_onload(self, context):
         return 'checkNewRelease();'
-    
+
     # TODO: since getDocumentCount might be quite costly to compute for the
     # DBMS, cache the value and update it every 10 mn
     def render_shortstat(self, context, data):
@@ -432,7 +431,8 @@
             return d
         else:
             return self.onDownloadFileError('no provider available', filename)
-    
+
+
 class DistantFilePage(static.File):
     def __init__(self, nodeConfig, filepath):
         static.File.__init__(self, filepath)
@@ -584,11 +584,15 @@
             baseurl = '/download?docid=%s' % (document.document_id,)
             # TODO: make a difference between private and public results
             context.fillSlots('resultClass', "localPublicResults")
+            context.fillSlots('providersCount', '')
         else:
             baseurl = '/distantfile?docid=%s' % (document.document_id,)
             context.fillSlots('resultClass', "distantResults")
             baseurl += '&host=%s' % (document.host,)
             baseurl += '&port=%s' % (document.port,)
+            context.fillSlots('providersCount', 'Provided by %s node(s)' %
+                              (len(self.querier.getProvidersFor(document.document_id,
+                                                                self.qid))))
         baseurl += '&filename=%s' % osp.basename(document.url)
         baseurl += '&words=%s' % '+'.join(self.query.words)
         baseurl += '&qid=%s' % (self.qid,)



From adimasci at berlios.de  Fri Nov 25 15:05:31 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Fri, 25 Nov 2005 15:05:31 +0100
Subject: [Maay-svncheckins] r663 - trunk/maay
Message-ID: <200511251405.jAPE5Vgh012212@sheep.berlios.de>

Author: adimasci
Date: 2005-11-25 15:05:27 +0100 (Fri, 25 Nov 2005)
New Revision: 663

Modified:
   trunk/maay/webapplication.py
Log:
Peers page lives again !

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-25 13:18:39 UTC (rev 662)
+++ trunk/maay/webapplication.py	2005-11-25 14:05:27 UTC (rev 663)
@@ -285,6 +285,8 @@
         # XXX: logout message should be forwarded to presence server
         return None
 
+    def child_peers(self, context):
+        return PeersList(self.maayId, self.querier)
 
     def child_indexation(self, context, _factory=IndexationPageFactory(IndexationPage)):
         alertMsg = ""



From dnf at berlios.de  Fri Nov 25 16:17:44 2005
From: dnf at berlios.de (dnf at berlios.de)
Date: Fri, 25 Nov 2005 16:17:44 +0100
Subject: [Maay-svncheckins] r664 - trunk/maay/win32
Message-ID: <200511251517.jAPFHieY026832@sheep.berlios.de>

Author: dnf
Date: 2005-11-25 16:17:41 +0100 (Fri, 25 Nov 2005)
New Revision: 664

Added:
   trunk/maay/win32/removeservices.py
Log:
Add the porky code to stop and remove services before reinstalling Maay.


Added: trunk/maay/win32/removeservices.py
===================================================================
--- trunk/maay/win32/removeservices.py	2005-11-25 14:05:27 UTC (rev 663)
+++ trunk/maay/win32/removeservices.py	2005-11-25 15:17:41 UTC (rev 664)
@@ -0,0 +1,60 @@
+#     Maay : a network of peers for document search
+#
+#     Copyright (C) 2005 France Telecom R&D
+#
+#     This program is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by the
+#     Free Software Foundation; either version 2 of the License, or (at your
+#     option) any later version.
+#     
+#     This program is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#     Public License for more details.
+#     
+#     You should have received a copy of the GNU General Public License along
+#     with this program; if not, write to the Free Software Foundation, Inc.,
+#     59 Temple Place - Suite 330, Boston, MA 02111-1307 USA.
+#     
+
+""" stop and remove mysql and maay services on windows platform"""
+
+__revision__ = '$Id: removeservices.py 632 2005-11-23 17:13:51Z dnf $'
+
+import win32serviceutil
+import win32service
+import time
+
+def removeService(service_name):
+       # dirty remove of service
+       try:
+           status = win32serviceutil.QueryServiceStatus(service_name)[0]
+           print "Service '%s' is installed !" % service_name
+
+	   print "status = %s" % status
+
+           if status & win32service.SERVICE_START:
+               try:
+                   print "Stop service '%s'" % service_name
+                   win32serviceutil.StopService(service_name)
+               except:
+                   pass
+           try:
+               print "Remove service '%s'" % service_name
+               win32serviceutil.RemoveService(service_name)
+           except Exception, e:
+               pass
+
+           print "Waiting service to be removed..."
+           while not status & win32service.SERVICE_STOP :
+	       print status
+               try:
+                   status = win32serviceutil.QueryServiceStatus(service_name)[0]
+               except:
+                   break
+               time.sleep(1)
+       except:
+           print "Service '%s' not installed !" % service_name
+
+removeService("Maay")
+removeService("MySQL")



From dnf at berlios.de  Fri Nov 25 16:33:22 2005
From: dnf at berlios.de (dnf at berlios.de)
Date: Fri, 25 Nov 2005 16:33:22 +0100
Subject: [Maay-svncheckins] r665 - trunk
Message-ID: <200511251533.jAPFXMNu028800@sheep.berlios.de>

Author: dnf
Date: 2005-11-25 16:33:19 +0100 (Fri, 25 Nov 2005)
New Revision: 665

Modified:
   trunk/setup.py
Log:
Add removeServices in setup.py.



Modified: trunk/setup.py
===================================================================
--- trunk/setup.py	2005-11-25 15:17:41 UTC (rev 664)
+++ trunk/setup.py	2005-11-25 15:33:19 UTC (rev 665)
@@ -57,6 +57,10 @@
 			    script = 'maay/win32/updateconfig.py',
 			    dest_base = "updateconfig")
 
+removeServices = Target(description = "Services (maay + mysql) uninstaller",
+			    script = 'maay/win32/removeservices.py',
+			    dest_base = "removeservices")
+
 maay_service = Target(description = "The Maay service",
                       modules = ["maayservice"],
                       dest_base = "Maay")
@@ -68,7 +72,7 @@
             
         
 	setup(console = [maay_node, maay_indexer,
-                         createdb, updateConfig],
+                         createdb, updateConfig, removeServices],
               service = [maay_service],
 		name = name,
 		version = version,



From aurelienc at berlios.de  Fri Nov 25 17:48:47 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Fri, 25 Nov 2005 17:48:47 +0100
Subject: [Maay-svncheckins] r666 - trunk/maay
Message-ID: <200511251648.jAPGmluV003266@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-25 17:48:46 +0100 (Fri, 25 Nov 2005)
New Revision: 666

Modified:
   trunk/maay/converter.py
Log:
Fix indexation of (zipped) ps and pdf files


Modified: trunk/maay/converter.py
===================================================================
--- trunk/maay/converter.py	2005-11-25 15:33:19 UTC (rev 665)
+++ trunk/maay/converter.py	2005-11-25 16:48:46 UTC (rev 666)
@@ -51,6 +51,7 @@
 import gzip
 import bz2
 import sys
+import shutil
 
 from maay.texttool import TextParser, MaayHTMLParser as HTMLParser, ParsingError
 
@@ -164,20 +165,21 @@
     """returns a filepath for the same, uncompressed, file
        located in the provided output dir
     """
+    uncompressedFile = osp.join(outputDir, osp.basename(filepath))
     if filepath.endswith('.gz'):
         opener = gzip.open
     elif filepath.endswith('.bz2'):
         opener = bz2.BZ2File
     else:
-        opener = file
+        #XXX: we should just return filepath (and not remove it later)
+        shutil.copy(filepath, outputDir)
+        return uncompressedFile
     compressed = opener(filepath, 'rb')
-    uncompressedFile = osp.join(outputDir, osp.basename(filepath+"-in"))
     uncompressed = file(uncompressedFile, 'wb')
     uncompressed.write(compressed.read())
     compressed.close()
     uncompressed.close()
     return uncompressedFile
-    
 
 class CommandBasedConverter(BaseConverter):
     COMMAND = None
@@ -193,9 +195,8 @@
         """
 
         outputDir = mkdtemp()
-        outputFile = osp.join(outputDir, osp.basename(filepath))
+        outputFile = osp.join(outputDir, osp.basename(filepath+'.'+self.OUTPUT_TYPE))
         inputFile = ''
-
         try:
             try:
                 inputFile = uncompressFile (filepath, outputDir)



From aurelienc at berlios.de  Fri Nov 25 17:52:00 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Fri, 25 Nov 2005 17:52:00 +0100
Subject: [Maay-svncheckins] r667 - in trunk/maay: . test
Message-ID: <200511251652.jAPGq0oO003683@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-25 17:51:59 +0100 (Fri, 25 Nov 2005)
New Revision: 667

Modified:
   trunk/maay/dbentity.py
   trunk/maay/p2pquerier.py
   trunk/maay/querier.py
   trunk/maay/rpc.py
   trunk/maay/test/test_dbentity.py
   trunk/maay/webapplication.py
Log:
Fix download from alternative providers (and tooltip count of nodes)


Modified: trunk/maay/dbentity.py
===================================================================
--- trunk/maay/dbentity.py	2005-11-25 16:48:46 UTC (rev 666)
+++ trunk/maay/dbentity.py	2005-11-25 16:51:59 UTC (rev 667)
@@ -356,21 +356,15 @@
                   'relevance', 'popularity', 'url',
                   'host', 'port', 'login', 'record_ts')
     extended_attrs = attributes
-    key = ('document_id', 'query_id')
+    key = ('document_id', 'document_id', 'query_id')
     tableName = 'results'
 
-    def fromDocument(document, qid, our_node_id, provider=None):
+    def fromDocument(document, qid, provider):
         stateDict = document.__dict__ # document.stateDict is wrong
         for key, value in stateDict.items():
             if key not in Result.attributes or value is None:
                 del stateDict[key]
-        if provider:
-            stateDict['login'], stateDict['node_id'], stateDict['host'], stateDict['port'] = provider
-        else:
-            stateDict['host'] = 'localhost'
-            stateDict['port'] = 0
-            stateDict['node_id'] = our_node_id # local node id
-            stateDict['login'] = NODE_LOGIN
+        stateDict['login'], stateDict['node_id'], stateDict['host'], stateDict['port'] = provider
         stateDict['query_id'] = qid
         return Result(**stateDict)
     fromDocument = staticmethod(fromDocument)

Modified: trunk/maay/p2pquerier.py
===================================================================
--- trunk/maay/p2pquerier.py	2005-11-25 16:48:46 UTC (rev 666)
+++ trunk/maay/p2pquerier.py	2005-11-25 16:51:59 UTC (rev 667)
@@ -312,15 +312,15 @@
                     document['url'] = os.path.basename(document['url'])
             # TODO: record answer in database if local is False
             # auc : to have them in Document with state == KNOWN
-            if not query.isKnown(document):
-                abstract = makeAbstract(document['text'], query.getWords())
-                document['text'] = untagText(removeSpace(abstract))
-                query.addMatch(document)
-                toSend.append(document)
-            else:
-                #FIXME: shouldn't we add all documents regardless
-                #       of duplicates, so as to add a new provider entry ?
-                print "we already know this doc !!!@~^#{"
+            #if not query.isKnown(document):
+            abstract = makeAbstract(document['text'], query.getWords())
+            document['text'] = untagText(removeSpace(abstract))
+            query.addMatch(document)
+            toSend.append(document)
+            ## else:
+##                 #FIXME: shouldn't we add all documents regardless
+##                 #       of duplicates, so as to add a new provider entry ?
+##                 print "we already know this doc !!!@~^#{"
 
         if query.sender != NODE_CONFIG.get_node_id():
             self.querier.registerNodeActivity(answer.provider[1])

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-25 16:48:46 UTC (rev 666)
+++ trunk/maay/querier.py	2005-11-25 16:51:59 UTC (rev 667)
@@ -248,8 +248,6 @@
 
     def _updateDownloadStatistics(self, document, words):
         cursor = self._cnx.cursor()
-        # what's this max(0, doc.count) below ??? it should be set initially
-        # at zero anyway ...
         document.download_count = max(0, document.download_count) + 1
         document.commit(cursor, update=True)
         db_document_id = document.db_document_id
@@ -375,14 +373,14 @@
         cursor.close()
         return providers
         
-    def pushDocuments(self, qid, documents, our_node_id, provider=None):
+    def pushDocuments(self, qid, documents, provider):
         """push <documents> into the temporary table built for
         <qid>
         """
         cursor = self._cnx.cursor()
         try:
             for document in documents:
-                res = Result.fromDocument(document, qid, our_node_id, provider)
+                res = Result.fromDocument(document, qid, provider)
                 res.commit(cursor, update=False)
             cursor.close()
             self._cnx.commit()

Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-25 16:48:46 UTC (rev 666)
+++ trunk/maay/rpc.py	2005-11-25 16:51:59 UTC (rev 667)
@@ -197,6 +197,6 @@
         except Exception, exc:
             import traceback
             traceback.print_exc()
-            return "Could not get %r, cause %s" % (doc_id, exc)
+            return ''
         return data
     

Modified: trunk/maay/test/test_dbentity.py
===================================================================
--- trunk/maay/test/test_dbentity.py	2005-11-25 16:48:46 UTC (rev 666)
+++ trunk/maay/test/test_dbentity.py	2005-11-25 16:51:59 UTC (rev 667)
@@ -79,26 +79,18 @@
     
 class ResultTC(unittest.TestCase):
 
-    def testBuildFromLocalDocument(self):
-        document = Document(document_id='foo', mime_type='application/pdf')
-        result = Result.fromDocument(document, 'qid')
-        self.assertEquals(result.document_id, 'foo')
-        self.assertEquals(result.query_id, 'qid')
-        self.assertEquals(result.host, 'localhost')
-        self.assertEquals(result.mime_type, 'application/pdf')
-        self.assertEquals(result.boundAttributes(), ['document_id', 'query_id',
-                                                     'mime_type', 'host', 'port'])
         
-    def testBuildFromDistantDocument(self):
+    def testBuildFromDocument(self):
         document = Document(document_id='foo', mime_type='application/pdf')
-        result = Result.fromDocument(document, 'qid', ('adim', 'IP', 'PORT'))
+        result = Result.fromDocument(document, 'qid', ('adim', 'NID', 'IP', 'PORT'))
         self.assertEquals(result.document_id, 'foo')
         self.assertEquals(result.mime_type, 'application/pdf')
+        self.assertEquals(result.node_id, 'NID')
         self.assertEquals(result.login, 'adim')
         self.assertEquals(result.host, 'IP')
         self.assertEquals(result.query_id, 'qid')
         self.assertEquals(result.port, 'PORT')
-        self.assertEquals(result.boundAttributes(), ['document_id', 'query_id', 'mime_type',
+        self.assertEquals(result.boundAttributes(), ['document_id', 'query_id', 'node_id', 'mime_type',
                                                      'host', 'port', 'login'])
 
 

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-25 16:48:46 UTC (rev 666)
+++ trunk/maay/webapplication.py	2005-11-25 16:51:59 UTC (rev 667)
@@ -46,6 +46,7 @@
 from maay.p2pquerier import P2pQuerier, P2pQuery
 from maay.dbentity import ScoredDocument, Document
 import maay.indexer as indexer
+from maay.localinfo import NODE_LOGIN
 
 def _is_valid_directory(directory):
     try:
@@ -403,7 +404,11 @@
         return d
 
     def gotDataBack(self, rpcFriendlyData, nodeConfig, filename):
-        fileData = rpcFriendlyData.data
+        if rpcFriendlyData:
+            fileData = rpcFriendlyData.data
+        else:
+            # this will trigger the errback in child_distantfile
+            raise Exception("File cannot be downloaded from this host")
         print " ... downloaded !"
         filepath = osp.join(self.download_dir, filename)
         f = file(filepath,'wb')
@@ -428,7 +433,7 @@
             print "[webapp] trying to donwload %r from %s:%s" % (filename, nextHost, nextPort)
             proxy = Proxy(str('http://%s:%s' % (nextHost, nextPort)))
             d = proxy.callRemote('downloadFile', docId, words)
-            d.addCallback(self.gotDataBack, filename)
+            d.addCallback(self.gotDataBack, nodeConfig, filename)
             d.addErrback(self.retryWithOtherProvider, nodeConfig, words, docId, filename)
             return d
         else:
@@ -498,13 +503,13 @@
         offset = self.query.offset
         if (offset + 15) < resultsCount:
             return tags.xml('<a href="javascript: browseResults(%s);">Next</a>' % (offset + 15))
-        return ''
+        return tags.xml('<span class="selectedCriterium">Next</span>')
         
     
     def render_previous(self, context, data):
         """computes 'Previous' link"""
         if self.query.offset <= 0:
-            return ''
+            return tags.xml('<span class="selectedCriterium">Previous</span>')
         offset = self.query.offset - 15
         return tags.xml('<a href="javascript: browseResults(%s);">Previous</a>' % (offset))
     
@@ -637,7 +642,8 @@
             self.p2pQuery = p2pQuery
             # purge old results
             self.querier.purgeOldResults()
-            self.querier.pushDocuments(self.qid, results, NODE_CONFIG.get_node_id(), provider=None)
+            provider = (NODE_LOGIN, NODE_CONFIG.get_node_id(), 'localhost', 0)
+            self.querier.pushDocuments(self.qid, results, provider)
             self.results = self.querier.getQueryResults(self.query)
             
     # XXX (refactoring): provide a common base class for LivePages
@@ -650,7 +656,7 @@
         
     def onNewResults(self, provider, results):
         results = [ScoredDocument(**params) for params in results]
-        self.querier.pushDocuments(self.qid, results, NODE_CONFIG.get_node_id(), provider)
+        self.querier.pushDocuments(self.qid, results, provider)
         results = self.querier.getQueryResults(self.query,
                                                onlyLocal=self.onlyLocal,
                                                onlyDistant=self.onlyDistant)



From aurelienc at berlios.de  Fri Nov 25 18:03:07 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Fri, 25 Nov 2005 18:03:07 +0100
Subject: [Maay-svncheckins] r668 - trunk/maay/data
Message-ID: <200511251703.jAPH37sw004366@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-25 18:03:06 +0100 (Fri, 25 Nov 2005)
New Revision: 668

Modified:
   trunk/maay/data/livefragment.html
Log:
Align prev/next to the right


Modified: trunk/maay/data/livefragment.html
===================================================================
--- trunk/maay/data/livefragment.html	2005-11-25 16:51:59 UTC (rev 667)
+++ trunk/maay/data/livefragment.html	2005-11-25 17:03:06 UTC (rev 668)
@@ -22,9 +22,7 @@
       </tr>
     </table>
     <br />
-  <center>
   <nevow:invisible nevow:macro="prevnext" />
-  </center>
   <table class="results" nevow:render="sequence" nevow:data="results" width="100%">
     <tr nevow:pattern="item" nevow:render="row">
       <td>
@@ -48,7 +46,5 @@
       </td>
     </tr>
   </table>
-  <center>
   <nevow:invisible nevow:macro="prevnext" />
-  </center>
 </div>



From adimasci at berlios.de  Fri Nov 25 19:06:07 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Fri, 25 Nov 2005 19:06:07 +0100
Subject: [Maay-svncheckins] r669 - trunk/maay
Message-ID: <200511251806.jAPI67A0030552@sheep.berlios.de>

Author: adimasci
Date: 2005-11-25 19:06:04 +0100 (Fri, 25 Nov 2005)
New Revision: 669

Modified:
   trunk/maay/configuration.py
Log:
fixed configuration saving on windows

Modified: trunk/maay/configuration.py
===================================================================
--- trunk/maay/configuration.py	2005-11-25 17:03:06 UTC (rev 668)
+++ trunk/maay/configuration.py	2005-11-25 18:06:04 UTC (rev 669)
@@ -343,11 +343,11 @@
 ##             os.makedirs(self.download_dir)
 
     def save(self):
-        # FIXME: since there may be several configuration files, which
-        # one do we choose. By default, we take the one in the current
-        # directory
+        # Save in the directory that will be loaded last
+        saveDirectory = self.get_writable_config_dirs()[-1]
+        filepath = os.path.join(saveDirectory, self.config_file)
         try:
-            fd = file(self.config_file, 'wb')
+            fd = file(filepath, 'wb')
             self.generate_config(stream=fd)
             fd.close()
         except IOError, e:



From aurelienc at berlios.de  Fri Nov 25 20:12:58 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Fri, 25 Nov 2005 20:12:58 +0100
Subject: [Maay-svncheckins] r670 - in trunk: . maay
Message-ID: <200511251912.jAPJCwlQ028547@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-25 20:12:52 +0100 (Fri, 25 Nov 2005)
New Revision: 670

Modified:
   trunk/ChangeLog
   trunk/ReleaseNotes.txt
   trunk/maay.iss
   trunk/maay/__init__.py
   trunk/setup.py
Log:
Bump version number to 0.3.0 and update Changelog


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2005-11-25 18:06:04 UTC (rev 669)
+++ trunk/ChangeLog	2005-11-25 19:12:52 UTC (rev 670)
@@ -1,3 +1,10 @@
+Maay-0.3.0 2005-11-25
+	* Ergonomic improvements
+	* Compute and use popularity and relevance scores
+	* Download files from other peers when the first ones fail
+	* Check maay version at startup time
+	* Lots of bug fixes
+	
 Maay-0.2.2 2005-11-21
 	* Use IP adress of presence server instead of domain name
 	* Threshold on document relevance and popularity to avoid negative
@@ -8,8 +15,6 @@
 	* Fix a communication bug when non-standard ports are used, and thus ...
 	* Is incompatible with prior versions (won't answer to queries from old version)
 
-	
-
 Maay-0.2.1 2005-11-16
         * Fixed bug #5647 caused by bad use of os.getlogin() preventing P2P
 	  queries from being processed on Windows

Modified: trunk/ReleaseNotes.txt
===================================================================
--- trunk/ReleaseNotes.txt	2005-11-25 18:06:04 UTC (rev 669)
+++ trunk/ReleaseNotes.txt	2005-11-25 19:12:52 UTC (rev 670)
@@ -1,4 +1,4 @@
-Release Notes for version 0.2.4
+Release Notes for version 0.3.0
 
 See README.txt for installation and quick start instructions. 
 

Modified: trunk/maay/__init__.py
===================================================================
--- trunk/maay/__init__.py	2005-11-25 18:06:04 UTC (rev 669)
+++ trunk/maay/__init__.py	2005-11-25 19:12:52 UTC (rev 670)
@@ -22,5 +22,5 @@
 """MAAY project
 """
 
-VERSION = '0.2.4'
+VERSION = '0.3.0'
 __revision__ = '$Id$'

Modified: trunk/maay.iss
===================================================================
--- trunk/maay.iss	2005-11-25 18:06:04 UTC (rev 669)
+++ trunk/maay.iss	2005-11-25 19:12:52 UTC (rev 670)
@@ -6,7 +6,7 @@
 
 [Setup]
 AppName=Maay
-AppVerName=Maay-0.2.4
+AppVerName=Maay-0.3.0
 DefaultDirName={pf}\Maay
 DefaultGroupName=Maay
 UninstallDisplayIcon={app}\maay_node.exe

Modified: trunk/setup.py
===================================================================
--- trunk/setup.py	2005-11-25 18:06:04 UTC (rev 669)
+++ trunk/setup.py	2005-11-25 19:12:52 UTC (rev 670)
@@ -23,7 +23,7 @@
 import sys
 from glob import glob
 
-version = '0.2.4' # This should be imported from the maay package
+version = '0.3.0' # This should be imported from the maay package
 author = "France Telecom R&D"
 author_email = "maay-dev at lists.berlios.de"
 copyright = "Copyright (c)2004-2005 France Telecom R&D"



From frederic.dangngoc at gmail.com  Wed Nov 23 15:31:59 2005
From: frederic.dangngoc at gmail.com (=?ISO-8859-1?Q?Fr=E9d=E9ric_Dang_Ngoc?=)
Date: Wed, 23 Nov 2005 15:31:59 +0100
Subject: [Maay-svncheckins] r624 - in trunk/maay: . data
In-Reply-To: <200511231215.jANCFbCU003108@sheep.berlios.de>
References: <200511231215.jANCFbCU003108@sheep.berlios.de>
Message-ID: <35cde7700511230631k3239f66dqae06873dffbb26bd@mail.gmail.com>

> NOTE: Frederic, The versioning checks seems to work here. Could you
>       please have a look and check that I did not break anything in
>       your stuff. If you need to fix a few things, please do it the
>       way I started to do things (using nevow templating system)
>

Hi Adrien,

I just tested the new version.
the versioning check does not work for me :
- http://127.0.0.1/version.js does not work (   solution: add
setattr(MaayPage, 'child_version.js',
static.File(get_path_of('version.js')))   in webapplication.py )
- <center onLoad="checkNewRelease();"> does not work. I think that
the attribute onLoad might only work on body tag.
I do not exactly what is the best way to include it using the templating system.

Fr?d?ric


From adimasci at berlios.de  Mon Nov 28 10:34:36 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Mon, 28 Nov 2005 10:34:36 +0100
Subject: [Maay-svncheckins] r671 - trunk
Message-ID: <200511280934.jAS9YaT7012020@sheep.berlios.de>

Author: adimasci
Date: 2005-11-28 10:34:35 +0100 (Mon, 28 Nov 2005)
New Revision: 671

Modified:
   trunk/maayservice.py
Log:
bring systray's links back to life

Modified: trunk/maayservice.py
===================================================================
--- trunk/maayservice.py	2005-11-25 19:12:52 UTC (rev 670)
+++ trunk/maayservice.py	2005-11-28 09:34:35 UTC (rev 671)
@@ -109,15 +109,15 @@
             win32gui.TrackPopupMenu(menu, win32con.TPM_LEFTALIGN, pos[0], pos[1], 0, self.hwnd, None)
             win32gui.PostMessage(self.hwnd, win32con.WM_NULL, 0, 0)
         elif lparam==win32con.WM_LBUTTONDBLCLK:
-            webbrowser.open("http://127.0.0.1:%s/" % self.node.nodeConfig.webserver_port, autoraise=1)
+            webbrowser.open("http://127.0.0.1:%s/" % self.node.NODE_CONFIG.webserver_port, autoraise=1)
         return 1
 
     def OnCommand(self, hwnd, msg, wparam, lparam):
         id = win32api.LOWORD(wparam)
         if id == Win32MaayTaskbar.SEARCH_MENU_ID:
-            webbrowser.open("http://127.0.0.1:%s/" % self.node.nodeConfig.webserver_port, autoraise=1)
+            webbrowser.open("http://127.0.0.1:%s/" % self.node.NODE_CONFIG.webserver_port, autoraise=1)
         elif id == Win32MaayTaskbar.INDEXATION_MENU_ID:
-            webbrowser.open("http://127.0.0.1:%s/indexation" % self.node.nodeConfig.webserver_port, autoraise=1)
+            webbrowser.open("http://127.0.0.1:%s/indexation" % self.node.NODE_CONFIG.webserver_port, autoraise=1)
         elif id == Win32MaayTaskbar.HOMEPAGE_MENU_ID:
             webbrowser.open("http://maay.netofpeers.net", autoraise=1)
 



From adimasci at berlios.de  Mon Nov 28 14:25:21 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Mon, 28 Nov 2005 14:25:21 +0100
Subject: [Maay-svncheckins] r674 - in trunk: . maay
Message-ID: <200511281325.jASDPLTT019489@sheep.berlios.de>

Author: adimasci
Date: 2005-11-28 14:25:16 +0100 (Mon, 28 Nov 2005)
New Revision: 674

Modified:
   trunk/ChangeLog
   trunk/ReleaseNotes.txt
   trunk/maay.iss
   trunk/maay/__init__.py
Log:
prepare for new upstream release

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2005-11-28 13:24:16 UTC (rev 673)
+++ trunk/ChangeLog	2005-11-28 13:25:16 UTC (rev 674)
@@ -1,3 +1,7 @@
+Maay-0.3.1 2005-11-28
+	* win32 bug fixes (systray, indexing)
+
+	
 Maay-0.3.0 2005-11-25
 	* Ergonomic improvements
 	* Compute and use popularity and relevance scores

Modified: trunk/ReleaseNotes.txt
===================================================================
--- trunk/ReleaseNotes.txt	2005-11-28 13:24:16 UTC (rev 673)
+++ trunk/ReleaseNotes.txt	2005-11-28 13:25:16 UTC (rev 674)
@@ -1,11 +1,9 @@
-Release Notes for version 0.3.0
+Release Notes for version 0.3.1
 
 See README.txt for installation and quick start instructions. 
 
 This release is beta-level software, which contains several bug fixes
-and improvements over 0.2.2. The 0.2.3 version was not released
-officially, and only contains a few bugfixes concerning the 
-windows services management.
+over 0.3.0.
 
 If you encounter any problem with the web interface (like 
 never ending requests, pages not updated), please notify us and

Modified: trunk/maay/__init__.py
===================================================================
--- trunk/maay/__init__.py	2005-11-28 13:24:16 UTC (rev 673)
+++ trunk/maay/__init__.py	2005-11-28 13:25:16 UTC (rev 674)
@@ -22,5 +22,5 @@
 """MAAY project
 """
 
-VERSION = '0.3.0'
+VERSION = '0.3.1'
 __revision__ = '$Id$'

Modified: trunk/maay.iss
===================================================================
--- trunk/maay.iss	2005-11-28 13:24:16 UTC (rev 673)
+++ trunk/maay.iss	2005-11-28 13:25:16 UTC (rev 674)
@@ -6,7 +6,7 @@
 
 [Setup]
 AppName=Maay
-AppVerName=Maay-0.3.0
+AppVerName=Maay-0.3.1
 DefaultDirName={pf}\Maay
 DefaultGroupName=Maay
 UninstallDisplayIcon={app}\maay_node.exe



From adimasci at berlios.de  Mon Nov 28 14:23:40 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Mon, 28 Nov 2005 14:23:40 +0100
Subject: [Maay-svncheckins] r672 - trunk/maay
Message-ID: <200511281323.jASDNeTk018809@sheep.berlios.de>

Author: adimasci
Date: 2005-11-28 14:23:37 +0100 (Mon, 28 Nov 2005)
New Revision: 672

Modified:
   trunk/maay/converter.py
Log:
fix indexation problem on windows. (use the high level stdlib's subprocess module)


Modified: trunk/maay/converter.py
===================================================================
--- trunk/maay/converter.py	2005-11-28 09:34:35 UTC (rev 671)
+++ trunk/maay/converter.py	2005-11-28 13:23:37 UTC (rev 672)
@@ -52,6 +52,7 @@
 import bz2
 import sys
 import shutil
+import traceback
 
 from maay.texttool import TextParser, MaayHTMLParser as HTMLParser, ParsingError
 
@@ -70,27 +71,15 @@
     '.patch': 'text/plain'
     })
 
-def win32_launcher(commandline):
-    startupInfo = win32process.STARTUPINFO()
-    startupInfo.dwFlags = win32process.DETACHED_PROCESS | win32process.STARTF_USESHOWWINDOW
-    startupInfo.wShowWindow = win32con.SW_HIDE
-    hProcess, hThread, dwProcessId, dwThreadId = \
-              win32process.CreateProcess(None, commandline, None,
-                                         None, 0, 0, None, None,
-                                         startupInfo)
-    while (win32process.GetExitCodeProcess(hProcess) == win32con.STILL_ACTIVE):
-        win32api.Sleep(2)
-    # FIXME: try to get the errcode
-    return 0
+try:
+    import subprocess
+    def launcher(cmd):
+        return subprocess.call(cmd, shell=True)
+except ImportError:
+    print "subprocess not available, fallback on os.system()"
+    def launcher(cmd):
+        return os.system(cmd)
 
-# Not use os.system for win32 system because it displays msdos command to launch
-# it
-if sys.platform == 'win32':
-    import win32api, win32con, win32process
-    launcher = win32_launcher
-else:
-    launcher = os.system
-
 class IndexationFailure(Exception):
     """raised when an indexation has failed"""
 
@@ -215,7 +204,8 @@
             try:
                 return parser.parseFile(outputFile, osp.basename(filepath),
                                     self.OUTPUT_ENCODING)
-            except Exception:
+            except Exception, exc:
+                traceback.print_exc()
                 raise IndexationFailure('Unable to index %r' % filepath)
                 
         finally:



From adimasci at berlios.de  Mon Nov 28 14:24:28 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Mon, 28 Nov 2005 14:24:28 +0100
Subject: [Maay-svncheckins] r673 - trunk/maay
Message-ID: <200511281324.jASDOS6E019279@sheep.berlios.de>

Author: adimasci
Date: 2005-11-28 14:24:16 +0100 (Mon, 28 Nov 2005)
New Revision: 673

Modified:
   trunk/maay/indexer.py
   trunk/maay/webapplication.py
Log:
add state information on "untouchedDocument()" callback

Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-28 13:23:37 UTC (rev 672)
+++ trunk/maay/indexer.py	2005-11-28 13:24:16 UTC (rev 673)
@@ -52,7 +52,7 @@
     def newDocumentIndexed(filename, state):
         """called by indexer when a document was just indexed"""
 
-    def documentUntouched(filename):
+    def documentUntouched(filename, state):
         """called when a document was left untouched"""
 
     def indexationCompleted():
@@ -162,7 +162,7 @@
             lastIdxTime, lastIdxState = self.getLastIndexationTimeAndState(filepath)
             if lastIdxState == state and lastIdxTime >= lastModificationTime:
                 for obs in self.observers:
-                    obs.documentUntouched(filepath)
+                    obs.documentUntouched(filepath, state)
                 print "%s didn't change since last indexation" % (safe_encode(filepath),)
                 return
             try:

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-28 13:23:37 UTC (rev 672)
+++ trunk/maay/webapplication.py	2005-11-28 13:24:16 UTC (rev 673)
@@ -216,7 +216,7 @@
         self.indexedDocuments += 1
         if state == Document.PRIVATE_STATE:
             self.privateDocuments += 1
-        else:
+        elif state == Document.PUBLISHED_STATE:
             self.publicDocuments += 1
         # refresh pages for each group of 10 indexed files
         if (self.indexedDocuments % 10) == 0:
@@ -228,8 +228,12 @@
                 # webpage.updatePrivateDocumentCount(self.privateDocuments)
                 # webpage.updatePublicDocumentCount(self.publicDocuments)
         
-    def documentUntouched(self, filename):
+    def documentUntouched(self, filename, state):
         self.untouchedDocuments += 1
+        if state == Document.PRIVATE_STATE:
+            self.privateDocuments += 1
+        elif state == Document.PUBLISHED_STATE:
+            self.publicDocuments += 1
         if (self.untouchedDocuments % 10) == 0:
             for webpage in self.clients.itervalues():
                 webpage.countersUpdated(self.untouchedDocuments,
@@ -248,6 +252,8 @@
         # reset counters after indexation is finished
         self.untouchedDocuments = 0
         self.indexedDocuments = 0
+        self.privateDocuments = 0
+        self.publicDocuments = 0
     
 class SearchForm(MaayPage):
     """default search form"""



From aurelienc at berlios.de  Mon Nov 28 15:17:06 2005
From: aurelienc at berlios.de (aurelienc at BerliOS)
Date: Mon, 28 Nov 2005 15:17:06 +0100
Subject: [Maay-svncheckins] r675 - trunk/maay
Message-ID: <200511281417.jASEH6Ee010569@sheep.berlios.de>

Author: aurelienc
Date: 2005-11-28 15:17:03 +0100 (Mon, 28 Nov 2005)
New Revision: 675

Modified:
   trunk/maay/converter.py
   trunk/maay/texttool.py
Log:
Fix pdf title construction


Modified: trunk/maay/converter.py
===================================================================
--- trunk/maay/converter.py	2005-11-28 13:25:16 UTC (rev 674)
+++ trunk/maay/converter.py	2005-11-28 14:17:03 UTC (rev 675)
@@ -230,6 +230,13 @@
     MIME_TYPES = ('application/pdf',)
     OUTPUT_ENCODING = 'UTF-8'
 
+    def extractWordsFromFile(self, filepath):
+        """Modify the title that we get from MaayHTMLParser
+        """
+        title, result, links, offset  = CommandBasedConverter.extractWordsFromFile(self, filepath)
+        return osp.basename(title)+'.pdf', result, links, offset
+        
+
 class PSConverter(CommandBasedConverter, RawTextConverter):
     COMMAND = 'ps2ascii "%(input)s" "%(output)s"'
     MIME_TYPES = ('application/postscript',)

Modified: trunk/maay/texttool.py
===================================================================
--- trunk/maay/texttool.py	2005-11-28 13:25:16 UTC (rev 674)
+++ trunk/maay/texttool.py	2005-11-28 14:17:03 UTC (rev 675)
@@ -213,10 +213,6 @@
         except HTMLParseError, exc:
             print "MaayHTMLParser parseString : Error parsing document: %s" % exc
         result = u'\n'.join(self.textbuf)
-        #XXX: wacky hack to get a correct title when we just processed
-        #     a file from PDFTOHTML
-        if self.title[-7:len(self.title)] == '.pdf-in':
-            self.title = u''
         return self.title, result, self.links, 0
 
         



From adimasci at berlios.de  Mon Nov 28 16:03:19 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Mon, 28 Nov 2005 16:03:19 +0100
Subject: [Maay-svncheckins] r676 - /
Message-ID: <200511281503.jASF3J3s019048@sheep.berlios.de>

Author: adimasci
Date: 2005-11-28 16:03:19 +0100 (Mon, 28 Nov 2005)
New Revision: 676

Added:
   maay-0.3.1/
Log:
0.3.1 release tag

Copied: maay-0.3.1 (from rev 675, trunk)



From adimasci at berlios.de  Mon Nov 28 16:07:37 2005
From: adimasci at berlios.de (adimasci at BerliOS)
Date: Mon, 28 Nov 2005 16:07:37 +0100
Subject: [Maay-svncheckins] r677 - maay-0.3.1
Message-ID: <200511281507.jASF7b35019613@sheep.berlios.de>

Author: adimasci
Date: 2005-11-28 16:07:37 +0100 (Mon, 28 Nov 2005)
New Revision: 677

Modified:
   maay-0.3.1/setup.py
Log:
prepared new release

Modified: maay-0.3.1/setup.py
===================================================================
--- maay-0.3.1/setup.py	2005-11-28 15:03:19 UTC (rev 676)
+++ maay-0.3.1/setup.py	2005-11-28 15:07:37 UTC (rev 677)
@@ -23,7 +23,7 @@
 import sys
 from glob import glob
 
-version = '0.3.0' # This should be imported from the maay package
+version = '0.3.1' # This should be imported from the maay package
 author = "France Telecom R&D"
 author_email = "maay-dev at lists.berlios.de"
 copyright = "Copyright (c)2004-2005 France Telecom R&D"



From dnf at berlios.de  Mon Nov 28 19:15:03 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Mon, 28 Nov 2005 19:15:03 +0100
Subject: [Maay-svncheckins] r679 - trunk/maay
Message-ID: <200511281815.jASIF3JF026817@sheep.berlios.de>

Author: dnf
Date: 2005-11-28 19:15:02 +0100 (Mon, 28 Nov 2005)
New Revision: 679

Modified:
   trunk/maay/node.py
   trunk/maay/rpc.py
Log:
- Periodical fetching of peers list from presenceserver every 30mn
- update peerlist when receiving a search request (remove comment)



Modified: trunk/maay/node.py
===================================================================
--- trunk/maay/node.py	2005-11-28 17:32:13 UTC (rev 678)
+++ trunk/maay/node.py	2005-11-28 18:15:02 UTC (rev 679)
@@ -38,7 +38,7 @@
 from twisted.cred.checkers import AllowAnonymousAccess, \
      ICredentialsChecker
 from twisted.cred.credentials import IAnonymous, IUsernamePassword
-from twisted.internet import reactor, defer
+from twisted.internet import reactor, defer, task
 from twisted.web import server
 from twisted.python import failure
 from nevow import inevow, appserver, guard
@@ -273,7 +273,19 @@
                           NODE_HOST,
                           NODE_PORT,
                           NODE_CONFIG.bandwidth)
+
+    # update peer list from presence server every 30 mn
+    notifyTask = task.LoopingCall(presenceclient.notify,
+                                  NODE_CONFIG.presence_host,
+                                  NODE_CONFIG.presence_port,
+                                  maayPortal.webQuerier,
+                                  NODE_ID,
+                                  NODE_HOST,
+                                  NODE_PORT,
+                                  NODE_CONFIG.bandwidth)
     
+    notifyTask.start(1800)
+
     rpcserver = server.Site(MaayRPCServer(maayPortal))
     reactor.listenTCP(NODE_CONFIG.webserver_port, website)
     reactor.listenTCP(NODE_CONFIG.rpcserver_port, rpcserver)

Modified: trunk/maay/rpc.py
===================================================================
--- trunk/maay/rpc.py	2005-11-28 17:32:13 UTC (rev 678)
+++ trunk/maay/rpc.py	2005-11-28 18:15:02 UTC (rev 679)
@@ -168,12 +168,12 @@
     ###### Peer stuff
 
     def xmlrpc_distributedQuery(self, queryDict):
-        """On node has sent a p2p query (P2pQuerier.sendQuery)
+        """One node has sent a p2p query (P2pQuerier.sendQuery)
         """
-        #print "MaayRPCServer distributedQuery : %s " % queryDict['words']
+        print "MaayRPCServer distributedQuery : %s " % queryDict['words']
         query = P2pQuery.fromDict(queryDict)
         querier = self._sessions[ANONYMOUS_AVATARID]
-        #querier.registerNode(query.sender, query.client_host, query.client_port)
+        querier.registerNode(query.sender, query.client_host, query.client_port)
         # schedule the query for later processing and return immediately
         # this enables the sender to query several nodes in a row
         reactor.callLater(.01, getP2pQuerier().receiveQuery, query)



From dnf at berlios.de  Tue Nov 29 14:44:26 2005
From: dnf at berlios.de (dnf at berlios.de)
Date: Tue, 29 Nov 2005 14:44:26 +0100
Subject: [Maay-svncheckins] r680 - in trunk/maay: . data
Message-ID: <200511291344.jATDiQ3R022978@sheep.berlios.de>

Author: dnf
Date: 2005-11-29 14:44:13 +0100 (Tue, 29 Nov 2005)
New Revision: 680

Modified:
   trunk/maay/data/skeleton.html
   trunk/maay/webapplication.py
Log:
Move the javascript include (http://maay.netofpeers.net/version.js) at the end of
the searchform.html page. So, the searchform page can be displayed even if
the javascript is not reachable.



Modified: trunk/maay/data/skeleton.html
===================================================================
--- trunk/maay/data/skeleton.html	2005-11-28 18:15:02 UTC (rev 679)
+++ trunk/maay/data/skeleton.html	2005-11-29 13:44:13 UTC (rev 680)
@@ -16,5 +16,6 @@
     </table>
     <nevow:invisible nevow:macro="body" />
     <nevow:invisble nevow:macro="footer" />
-  </body>  
+    <nevow:invisible nevow:render="custom_htmlfooter" />
+  </body>
 </html>

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-28 18:15:02 UTC (rev 679)
+++ trunk/maay/webapplication.py	2005-11-29 13:44:13 UTC (rev 680)
@@ -271,11 +271,15 @@
 
     def render_custom_htmlheader(self, context):
         return [
-            tags.script(type='text/javascript', src='http://maay.netofpeers.net/version.js'),
             tags.script(type='text/javascript', src=url.here.child('localversion.js')),
             tags.script(type='text/javascript', src=url.here.child('versionjs')),
             ]
 
+    def render_custom_htmlfooter(self, context):
+        return [
+            tags.script(type='text/javascript', src='http://maay.netofpeers.net/version.js'),
+            ]
+
     def render_onload(self, context):
         return 'checkNewRelease();'
 



From dnf at berlios.de  Tue Nov 29 15:51:34 2005
From: dnf at berlios.de (dnf at berlios.de)
Date: Tue, 29 Nov 2005 15:51:34 +0100
Subject: [Maay-svncheckins] r681 - in trunk/maay: . data
Message-ID: <200511291451.jATEpYK9029222@sheep.berlios.de>

Author: dnf
Date: 2005-11-29 15:51:26 +0100 (Tue, 29 Nov 2005)
New Revision: 681

Modified:
   trunk/maay/data/searchform.html
   trunk/maay/data/version.js
   trunk/maay/webapplication.py
Log:
fix bug of checkVersion that does not work on IE.
reason: IE get confused with variable with the same name than
elements in HTML document (newReleaseMessage)



Modified: trunk/maay/data/searchform.html
===================================================================
--- trunk/maay/data/searchform.html	2005-11-29 13:44:13 UTC (rev 680)
+++ trunk/maay/data/searchform.html	2005-11-29 14:51:26 UTC (rev 681)
@@ -10,7 +10,7 @@
           <td width="50%"></td>
           <td><input type="text" name="words" value="" /></td>
           <td><input type="submit" class="searchButton" value="search" /></td>
-          <td width="50%"><a href="/indexation" class="footlink">Manage&nbsp;Folders</a></td>
+          <td width="50%" align="left"><a href="/indexation" class="footlink">Manage&nbsp;Folders</a></td>
         </tr>
       </table>
     </form>

Modified: trunk/maay/data/version.js
===================================================================
--- trunk/maay/data/version.js	2005-11-29 13:44:13 UTC (rev 680)
+++ trunk/maay/data/version.js	2005-11-29 14:51:26 UTC (rev 681)
@@ -22,7 +22,7 @@
 	    }
 	}
     }
-    newReleaseMessage = document.getElementById("newReleaseMessage");
-    newReleaseMessage.innerHTML = 'Your version of MAAY is outdated. <a href="http://maay.netofpeers.net/wiki/index.php/Download"> Download the version ' + version + ' of MAAY !</a>'
+    divNewReleaseMessage = document.getElementById("newReleaseMessage");
+    divNewReleaseMessage.innerHTML = 'Your version of MAAY is outdated. <a href="http://maay.netofpeers.net/wiki/index.php/Download"> Download the version ' + version + ' of MAAY !</a>'
     return 1;
 }

Modified: trunk/maay/webapplication.py
===================================================================
--- trunk/maay/webapplication.py	2005-11-29 13:44:13 UTC (rev 680)
+++ trunk/maay/webapplication.py	2005-11-29 14:51:26 UTC (rev 681)
@@ -80,6 +80,9 @@
     def render_custom_htmlheader(self, context):
         return ''
 
+    def render_custom_htmlfooter(self, context):
+        return ''
+
     def render_onload(self, context):
         return ''
     



From dnf at berlios.de  Tue Nov 29 17:46:41 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Tue, 29 Nov 2005 17:46:41 +0100
Subject: [Maay-svncheckins] r682 - in trunk/maay: . data
Message-ID: <200511291646.jATGkf93025894@sheep.berlios.de>

Author: dnf
Date: 2005-11-29 17:46:40 +0100 (Tue, 29 Nov 2005)
New Revision: 682

Modified:
   trunk/maay/data/livefragment.html
   trunk/maay/querier.py
Log:
small fix: score of relevance and popularity for multi-keywords query (float cast).


Modified: trunk/maay/data/livefragment.html
===================================================================
--- trunk/maay/data/livefragment.html	2005-11-29 14:51:26 UTC (rev 681)
+++ trunk/maay/data/livefragment.html	2005-11-29 16:46:40 UTC (rev 682)
@@ -6,7 +6,7 @@
     <table class="resultOption" align="right">
       <tr>
         <td>
-          <b>Filter :</b>
+          <b>Filter:</b>
           <div nevow:render="localResultsDiv"/>(<span nevow:render="localcount" />) - 
           <div nevow:render="distantResultsDiv" />(<span nevow:render="distantcount" />) -
           <div nevow:render="allResultsDiv" />(<span nevow:render="totalcount" />)

Modified: trunk/maay/querier.py
===================================================================
--- trunk/maay/querier.py	2005-11-29 14:51:26 UTC (rev 681)
+++ trunk/maay/querier.py	2005-11-29 16:46:40 UTC (rev 682)
@@ -248,7 +248,7 @@
 
     def _updateDownloadStatistics(self, document, words):
         cursor = self._cnx.cursor()
-        document.download_count = max(0, document.download_count) + 1
+        document.download_count = max(0.0, document.download_count) + 1
         document.commit(cursor, update=True)
         db_document_id = document.db_document_id
         scores = {}
@@ -261,11 +261,11 @@
                                                       word=word)[0]
 
         for winfo in wordInfo.itervalues():
-            winfo.download_count += 1 / len(words)
+            winfo.download_count += 1.0 / len(words)
             winfo.commit(cursor, update=True)
 
         for word,score in scores.iteritems():
-            score.download_count = max(0, score.download_count) + 1.0 / len(words)
+            score.download_count = max(0.0, score.download_count) + 1.0 / len(words)
             winfo_downloads = wordInfo[word].download_count
             
             score.popularity = float(score.download_count) / winfo_downloads



From dnf at berlios.de  Tue Nov 29 17:50:11 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Tue, 29 Nov 2005 17:50:11 +0100
Subject: [Maay-svncheckins] r683 - trunk/maay
Message-ID: <200511291650.jATGoB9g026256@sheep.berlios.de>

Author: dnf
Date: 2005-11-29 17:50:11 +0100 (Tue, 29 Nov 2005)
New Revision: 683

Modified:
   trunk/maay/indexer.py
Log:
A UnicodeError may be raised and is not catched in the run loop.
Ugly fast patch (catch all exceptions).



Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-29 16:46:40 UTC (rev 682)
+++ trunk/maay/indexer.py	2005-11-29 16:50:11 UTC (rev 683)
@@ -194,7 +194,9 @@
             existingFiles.add(filename)
             try:
                 self.indexFile(filename, isPrivate)
-            except FileIndexationFailure, fif: # should be catch-all
+# FIXME: a UnicodeError may be raised and is not catched.
+#            except FileIndexationFailure, fif: # should be catch-all
+            except Exception, fif
                 print fif
                 continue
         return existingFiles



From dnf at berlios.de  Tue Nov 29 17:50:41 2005
From: dnf at berlios.de (dnf at BerliOS)
Date: Tue, 29 Nov 2005 17:50:41 +0100
Subject: [Maay-svncheckins] r684 - trunk/maay
Message-ID: <200511291650.jATGof8n026309@sheep.berlios.de>

Author: dnf
Date: 2005-11-29 17:50:40 +0100 (Tue, 29 Nov 2005)
New Revision: 684

Modified:
   trunk/maay/indexer.py
Log:
fix syntax.


Modified: trunk/maay/indexer.py
===================================================================
--- trunk/maay/indexer.py	2005-11-29 16:50:11 UTC (rev 683)
+++ trunk/maay/indexer.py	2005-11-29 16:50:40 UTC (rev 684)
@@ -196,7 +196,7 @@
                 self.indexFile(filename, isPrivate)
 # FIXME: a UnicodeError may be raised and is not catched.
 #            except FileIndexationFailure, fif: # should be catch-all
-            except Exception, fif
+            except Exception, fif:
                 print fif
                 continue
         return existingFiles



